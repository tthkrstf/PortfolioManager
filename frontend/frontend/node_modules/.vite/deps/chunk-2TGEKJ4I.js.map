{
  "version": 3,
  "sources": ["../../ag-grid-community/dist/package/main.esm.mjs"],
  "sourcesContent": ["// packages/ag-grid-community/src/localEventService.ts\r\nvar LocalEventService = class {\r\n  constructor() {\r\n    this.allSyncListeners = /* @__PURE__ */ new Map();\r\n    this.allAsyncListeners = /* @__PURE__ */ new Map();\r\n    this.globalSyncListeners = /* @__PURE__ */ new Set();\r\n    this.globalAsyncListeners = /* @__PURE__ */ new Set();\r\n    this.asyncFunctionsQueue = [];\r\n    this.scheduled = false;\r\n    // using an object performs better than a Set for the number of different events we have\r\n    this.firedEvents = {};\r\n  }\r\n  setFrameworkOverrides(frameworkOverrides) {\r\n    this.frameworkOverrides = frameworkOverrides;\r\n  }\r\n  getListeners(eventType, async, autoCreateListenerCollection) {\r\n    const listenerMap = async ? this.allAsyncListeners : this.allSyncListeners;\r\n    let listeners = listenerMap.get(eventType);\r\n    if (!listeners && autoCreateListenerCollection) {\r\n      listeners = /* @__PURE__ */ new Set();\r\n      listenerMap.set(eventType, listeners);\r\n    }\r\n    return listeners;\r\n  }\r\n  noRegisteredListenersExist() {\r\n    return this.allSyncListeners.size === 0 && this.allAsyncListeners.size === 0 && this.globalSyncListeners.size === 0 && this.globalAsyncListeners.size === 0;\r\n  }\r\n  addEventListener(eventType, listener, async = false) {\r\n    this.getListeners(eventType, async, true).add(listener);\r\n  }\r\n  removeEventListener(eventType, listener, async = false) {\r\n    const listeners = this.getListeners(eventType, async, false);\r\n    if (!listeners) {\r\n      return;\r\n    }\r\n    listeners.delete(listener);\r\n    if (listeners.size === 0) {\r\n      (async ? this.allAsyncListeners : this.allSyncListeners).delete(eventType);\r\n    }\r\n  }\r\n  addGlobalListener(listener, async = false) {\r\n    this.getGlobalListeners(async).add(listener);\r\n  }\r\n  removeGlobalListener(listener, async = false) {\r\n    this.getGlobalListeners(async).delete(listener);\r\n  }\r\n  dispatchEvent(event) {\r\n    this.dispatchToListeners(event, true);\r\n    this.dispatchToListeners(event, false);\r\n    this.firedEvents[event.type] = true;\r\n  }\r\n  dispatchEventOnce(event) {\r\n    if (!this.firedEvents[event.type]) {\r\n      this.dispatchEvent(event);\r\n    }\r\n  }\r\n  dispatchToListeners(event, async) {\r\n    const eventType = event.type;\r\n    if (async && \"event\" in event) {\r\n      const browserEvent = event.event;\r\n      if (browserEvent instanceof Event) {\r\n        event.eventPath = browserEvent.composedPath();\r\n      }\r\n    }\r\n    const { frameworkOverrides } = this;\r\n    const runCallback = (func) => {\r\n      const callback = frameworkOverrides ? () => frameworkOverrides.wrapIncoming(func) : func;\r\n      if (async) {\r\n        this.dispatchAsync(callback);\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    const originalListeners = this.getListeners(eventType, async, false);\r\n    if ((originalListeners?.size ?? 0) > 0) {\r\n      const listeners = new Set(originalListeners);\r\n      for (const listener of listeners) {\r\n        if (!originalListeners?.has(listener)) {\r\n          continue;\r\n        }\r\n        runCallback(() => listener(event));\r\n      }\r\n    }\r\n    const globalListenersSrc = this.getGlobalListeners(async);\r\n    if (globalListenersSrc.size > 0) {\r\n      const globalListeners = new Set(globalListenersSrc);\r\n      for (const listener of globalListeners) {\r\n        runCallback(() => listener(eventType, event));\r\n      }\r\n    }\r\n  }\r\n  getGlobalListeners(async) {\r\n    return async ? this.globalAsyncListeners : this.globalSyncListeners;\r\n  }\r\n  // this gets called inside the grid's thread, for each event that it\r\n  // wants to set async. the grid then batches the events into one setTimeout()\r\n  // because setTimeout() is an expensive operation. ideally we would have\r\n  // each event in it's own setTimeout(), but we batch for performance.\r\n  dispatchAsync(func) {\r\n    this.asyncFunctionsQueue.push(func);\r\n    if (!this.scheduled) {\r\n      const flush = () => {\r\n        window.setTimeout(this.flushAsyncQueue.bind(this), 0);\r\n      };\r\n      this.frameworkOverrides ? this.frameworkOverrides.wrapIncoming(flush) : flush();\r\n      this.scheduled = true;\r\n    }\r\n  }\r\n  // this happens in the next VM turn only, and empties the queue of events\r\n  flushAsyncQueue() {\r\n    this.scheduled = false;\r\n    const queueCopy = this.asyncFunctionsQueue.slice();\r\n    this.asyncFunctionsQueue = [];\r\n    queueCopy.forEach((func) => func());\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/misc/locale/localeUtils.ts\r\nfunction defaultLocaleTextFunc(_key, defaultValue) {\r\n  return defaultValue;\r\n}\r\nfunction _getLocaleTextFunc(localeSvc) {\r\n  return localeSvc?.getLocaleTextFunc() ?? defaultLocaleTextFunc;\r\n}\r\nfunction _translate(bean, localeValues, key, variableValues) {\r\n  const defaultValue = localeValues[key];\r\n  return bean.getLocaleTextFunc()(\r\n    key,\r\n    typeof defaultValue === \"function\" ? defaultValue(variableValues) : defaultValue,\r\n    variableValues\r\n  );\r\n}\r\n\r\n// packages/ag-grid-community/src/utils/generic.ts\r\nfunction _makeNull(value) {\r\n  if (value == null || value === \"\") {\r\n    return null;\r\n  }\r\n  return value;\r\n}\r\nfunction _exists(value) {\r\n  return value != null && value !== \"\";\r\n}\r\nfunction _missing(value) {\r\n  return !_exists(value);\r\n}\r\nfunction _toStringOrNull(value) {\r\n  return value != null && typeof value.toString === \"function\" ? value.toString() : null;\r\n}\r\nfunction _jsonEquals(val1, val2) {\r\n  const val1Json = val1 ? JSON.stringify(val1) : null;\r\n  const val2Json = val2 ? JSON.stringify(val2) : null;\r\n  return val1Json === val2Json;\r\n}\r\nfunction _defaultComparator(valueA, valueB, accentedCompare = false) {\r\n  const valueAMissing = valueA == null;\r\n  const valueBMissing = valueB == null;\r\n  if (valueA && valueA.toNumber) {\r\n    valueA = valueA.toNumber();\r\n  }\r\n  if (valueB && valueB.toNumber) {\r\n    valueB = valueB.toNumber();\r\n  }\r\n  if (valueAMissing && valueBMissing) {\r\n    return 0;\r\n  }\r\n  if (valueAMissing) {\r\n    return -1;\r\n  }\r\n  if (valueBMissing) {\r\n    return 1;\r\n  }\r\n  function doQuickCompare(a, b) {\r\n    return a > b ? 1 : a < b ? -1 : 0;\r\n  }\r\n  if (typeof valueA !== \"string\") {\r\n    return doQuickCompare(valueA, valueB);\r\n  }\r\n  if (!accentedCompare) {\r\n    return doQuickCompare(valueA, valueB);\r\n  }\r\n  try {\r\n    return valueA.localeCompare(valueB);\r\n  } catch (e) {\r\n    return doQuickCompare(valueA, valueB);\r\n  }\r\n}\r\n\r\n// packages/ag-grid-community/src/utils/object.ts\r\nvar SKIP_JS_BUILTINS = /* @__PURE__ */ new Set([\"__proto__\", \"constructor\", \"prototype\"]);\r\nfunction _iterateObject(object, callback) {\r\n  if (object == null) {\r\n    return;\r\n  }\r\n  if (Array.isArray(object)) {\r\n    for (let i = 0; i < object.length; i++) {\r\n      callback(i.toString(), object[i]);\r\n    }\r\n    return;\r\n  }\r\n  for (const key of Object.keys(object).filter((key2) => !SKIP_JS_BUILTINS.has(key2))) {\r\n    callback(key, object[key]);\r\n  }\r\n}\r\nfunction _mergeDeep(dest, source, copyUndefined = true, makeCopyOfSimpleObjects = false) {\r\n  if (!_exists(source)) {\r\n    return;\r\n  }\r\n  _iterateObject(source, (key, sourceValue) => {\r\n    let destValue = dest[key];\r\n    if (destValue === sourceValue) {\r\n      return;\r\n    }\r\n    if (makeCopyOfSimpleObjects) {\r\n      const objectIsDueToBeCopied = destValue == null && sourceValue != null;\r\n      if (objectIsDueToBeCopied) {\r\n        const doNotCopyAsSourceIsSimpleObject = typeof sourceValue === \"object\" && sourceValue.constructor === Object;\r\n        if (doNotCopyAsSourceIsSimpleObject) {\r\n          destValue = {};\r\n          dest[key] = destValue;\r\n        }\r\n      }\r\n    }\r\n    if (_isNonNullObject(sourceValue) && _isNonNullObject(destValue) && !Array.isArray(destValue)) {\r\n      _mergeDeep(destValue, sourceValue, copyUndefined, makeCopyOfSimpleObjects);\r\n    } else if (copyUndefined || sourceValue !== void 0) {\r\n      dest[key] = sourceValue;\r\n    }\r\n  });\r\n}\r\nfunction _getValueUsingField(data, field, fieldContainsDots) {\r\n  if (!field || !data) {\r\n    return;\r\n  }\r\n  if (!fieldContainsDots) {\r\n    return data[field];\r\n  }\r\n  const fields = field.split(\".\");\r\n  let currentObject = data;\r\n  for (let i = 0; i < fields.length; i++) {\r\n    if (currentObject == null) {\r\n      return void 0;\r\n    }\r\n    currentObject = currentObject[fields[i]];\r\n  }\r\n  return currentObject;\r\n}\r\nfunction _isNonNullObject(value) {\r\n  return typeof value === \"object\" && value !== null;\r\n}\r\n\r\n// packages/ag-grid-community/src/globalGridOptions.ts\r\nvar _GlobalGridOptions = class _GlobalGridOptions {\r\n  /**\r\n   * @param providedOptions\r\n   * @returns Shallow copy of the provided options with global options merged in.\r\n   */\r\n  static applyGlobalGridOptions(providedOptions) {\r\n    if (!_GlobalGridOptions.gridOptions) {\r\n      return { ...providedOptions };\r\n    }\r\n    let mergedGridOps = {};\r\n    _mergeDeep(mergedGridOps, _GlobalGridOptions.gridOptions, true, true);\r\n    if (_GlobalGridOptions.mergeStrategy === \"deep\") {\r\n      _mergeDeep(mergedGridOps, providedOptions, true, true);\r\n    } else {\r\n      mergedGridOps = { ...mergedGridOps, ...providedOptions };\r\n    }\r\n    if (_GlobalGridOptions.gridOptions.context) {\r\n      mergedGridOps.context = _GlobalGridOptions.gridOptions.context;\r\n    }\r\n    if (providedOptions.context) {\r\n      if (_GlobalGridOptions.mergeStrategy === \"deep\" && mergedGridOps.context) {\r\n        _mergeDeep(providedOptions.context, mergedGridOps.context, true, true);\r\n      }\r\n      mergedGridOps.context = providedOptions.context;\r\n    }\r\n    return mergedGridOps;\r\n  }\r\n};\r\n_GlobalGridOptions.gridOptions = void 0;\r\n_GlobalGridOptions.mergeStrategy = \"shallow\";\r\nvar GlobalGridOptions = _GlobalGridOptions;\r\nfunction provideGlobalGridOptions(gridOptions, mergeStrategy = \"shallow\") {\r\n  GlobalGridOptions.gridOptions = gridOptions;\r\n  GlobalGridOptions.mergeStrategy = mergeStrategy;\r\n}\r\nfunction _getGlobalGridOption(gridOption) {\r\n  return GlobalGridOptions.gridOptions?.[gridOption];\r\n}\r\n\r\n// packages/ag-grid-community/src/gridOptionsDefault.ts\r\nvar GRID_OPTION_DEFAULTS = {\r\n  suppressContextMenu: false,\r\n  preventDefaultOnContextMenu: false,\r\n  allowContextMenuWithControlKey: false,\r\n  suppressMenuHide: true,\r\n  enableBrowserTooltips: false,\r\n  tooltipTrigger: \"hover\",\r\n  tooltipShowDelay: 2e3,\r\n  tooltipHideDelay: 1e4,\r\n  tooltipMouseTrack: false,\r\n  tooltipShowMode: \"standard\",\r\n  tooltipInteraction: false,\r\n  copyHeadersToClipboard: false,\r\n  copyGroupHeadersToClipboard: false,\r\n  clipboardDelimiter: \"\t\",\r\n  suppressCopyRowsToClipboard: false,\r\n  suppressCopySingleCellRanges: false,\r\n  suppressLastEmptyLineOnPaste: false,\r\n  suppressClipboardPaste: false,\r\n  suppressClipboardApi: false,\r\n  suppressCutToClipboard: false,\r\n  maintainColumnOrder: false,\r\n  enableStrictPivotColumnOrder: false,\r\n  suppressFieldDotNotation: false,\r\n  allowDragFromColumnsToolPanel: false,\r\n  suppressMovableColumns: false,\r\n  suppressColumnMoveAnimation: false,\r\n  suppressMoveWhenColumnDragging: false,\r\n  suppressDragLeaveHidesColumns: false,\r\n  suppressRowGroupHidesColumns: false,\r\n  suppressAutoSize: false,\r\n  autoSizePadding: 20,\r\n  skipHeaderOnAutoSize: false,\r\n  singleClickEdit: false,\r\n  suppressClickEdit: false,\r\n  readOnlyEdit: false,\r\n  stopEditingWhenCellsLoseFocus: false,\r\n  enterNavigatesVertically: false,\r\n  enterNavigatesVerticallyAfterEdit: false,\r\n  enableCellEditingOnBackspace: false,\r\n  undoRedoCellEditing: false,\r\n  undoRedoCellEditingLimit: 10,\r\n  suppressCsvExport: false,\r\n  suppressExcelExport: false,\r\n  cacheQuickFilter: false,\r\n  includeHiddenColumnsInQuickFilter: false,\r\n  excludeChildrenWhenTreeDataFiltering: false,\r\n  enableAdvancedFilter: false,\r\n  includeHiddenColumnsInAdvancedFilter: false,\r\n  enableCharts: false,\r\n  masterDetail: false,\r\n  keepDetailRows: false,\r\n  keepDetailRowsCount: 10,\r\n  detailRowAutoHeight: false,\r\n  tabIndex: 0,\r\n  rowBuffer: 10,\r\n  valueCache: false,\r\n  valueCacheNeverExpires: false,\r\n  enableCellExpressions: false,\r\n  suppressTouch: false,\r\n  suppressFocusAfterRefresh: false,\r\n  suppressBrowserResizeObserver: false,\r\n  suppressPropertyNamesCheck: false,\r\n  suppressChangeDetection: false,\r\n  debug: false,\r\n  suppressLoadingOverlay: false,\r\n  suppressNoRowsOverlay: false,\r\n  pagination: false,\r\n  paginationPageSize: 100,\r\n  paginationPageSizeSelector: true,\r\n  paginationAutoPageSize: false,\r\n  paginateChildRows: false,\r\n  suppressPaginationPanel: false,\r\n  pivotMode: false,\r\n  pivotPanelShow: \"never\",\r\n  pivotDefaultExpanded: 0,\r\n  pivotSuppressAutoColumn: false,\r\n  suppressExpandablePivotGroups: false,\r\n  functionsReadOnly: false,\r\n  suppressAggFuncInHeader: false,\r\n  alwaysAggregateAtRootLevel: false,\r\n  aggregateOnlyChangedColumns: false,\r\n  suppressAggFilteredOnly: false,\r\n  removePivotHeaderRowWhenSingleValueColumn: false,\r\n  animateRows: true,\r\n  cellFlashDuration: 500,\r\n  cellFadeDuration: 1e3,\r\n  allowShowChangeAfterFilter: false,\r\n  domLayout: \"normal\",\r\n  ensureDomOrder: false,\r\n  enableRtl: false,\r\n  suppressColumnVirtualisation: false,\r\n  suppressMaxRenderedRowRestriction: false,\r\n  suppressRowVirtualisation: false,\r\n  rowDragManaged: false,\r\n  rowDragInsertDelay: 500,\r\n  suppressRowDrag: false,\r\n  suppressMoveWhenRowDragging: false,\r\n  rowDragEntireRow: false,\r\n  rowDragMultiRow: false,\r\n  embedFullWidthRows: false,\r\n  groupDisplayType: \"singleColumn\",\r\n  groupDefaultExpanded: 0,\r\n  groupMaintainOrder: false,\r\n  groupSelectsChildren: false,\r\n  groupSuppressBlankHeader: false,\r\n  groupSelectsFiltered: false,\r\n  showOpenedGroup: false,\r\n  groupRemoveSingleChildren: false,\r\n  groupRemoveLowestSingleChildren: false,\r\n  groupHideOpenParents: false,\r\n  groupAllowUnbalanced: false,\r\n  rowGroupPanelShow: \"never\",\r\n  suppressMakeColumnVisibleAfterUnGroup: false,\r\n  treeData: false,\r\n  rowGroupPanelSuppressSort: false,\r\n  suppressGroupRowsSticky: false,\r\n  rowModelType: \"clientSide\",\r\n  asyncTransactionWaitMillis: 50,\r\n  suppressModelUpdateAfterUpdateTransaction: false,\r\n  cacheOverflowSize: 1,\r\n  infiniteInitialRowCount: 1,\r\n  serverSideInitialRowCount: 1,\r\n  cacheBlockSize: 100,\r\n  maxBlocksInCache: -1,\r\n  maxConcurrentDatasourceRequests: 2,\r\n  blockLoadDebounceMillis: 0,\r\n  purgeClosedRowNodes: false,\r\n  serverSideSortAllLevels: false,\r\n  serverSideOnlyRefreshFilteredGroups: false,\r\n  serverSidePivotResultFieldSeparator: \"_\",\r\n  viewportRowModelPageSize: 5,\r\n  viewportRowModelBufferSize: 5,\r\n  alwaysShowHorizontalScroll: false,\r\n  alwaysShowVerticalScroll: false,\r\n  debounceVerticalScrollbar: false,\r\n  suppressHorizontalScroll: false,\r\n  suppressScrollOnNewData: false,\r\n  suppressScrollWhenPopupsAreOpen: false,\r\n  suppressAnimationFrame: false,\r\n  suppressMiddleClickScrolls: false,\r\n  suppressPreventDefaultOnMouseWheel: false,\r\n  rowMultiSelectWithClick: false,\r\n  suppressRowDeselection: false,\r\n  suppressRowClickSelection: false,\r\n  suppressCellFocus: false,\r\n  suppressHeaderFocus: false,\r\n  suppressMultiRangeSelection: false,\r\n  enableCellTextSelection: false,\r\n  enableRangeSelection: false,\r\n  enableRangeHandle: false,\r\n  enableFillHandle: false,\r\n  fillHandleDirection: \"xy\",\r\n  suppressClearOnFillReduction: false,\r\n  accentedSort: false,\r\n  unSortIcon: false,\r\n  suppressMultiSort: false,\r\n  alwaysMultiSort: false,\r\n  suppressMaintainUnsortedOrder: false,\r\n  suppressRowHoverHighlight: false,\r\n  suppressRowTransform: false,\r\n  columnHoverHighlight: false,\r\n  deltaSort: false,\r\n  enableGroupEdit: false,\r\n  groupLockGroupColumns: 0,\r\n  serverSideEnableClientSideSort: false,\r\n  suppressServerSideFullWidthLoadingRow: false,\r\n  pivotMaxGeneratedColumns: -1,\r\n  columnMenu: \"new\",\r\n  reactiveCustomComponents: true,\r\n  suppressSetFilterByDefault: false,\r\n  rowNumbers: false,\r\n  enableFilterHandlers: false\r\n};\r\n\r\n// packages/ag-grid-community/src/utils/aria.ts\r\nfunction _toggleAriaAttribute(element, attribute, value) {\r\n  if (value == null || typeof value === \"string\" && value == \"\") {\r\n    _removeAriaAttribute(element, attribute);\r\n  } else {\r\n    _setAriaAttribute(element, attribute, value);\r\n  }\r\n}\r\nfunction _setAriaAttribute(element, attribute, value) {\r\n  element.setAttribute(_ariaAttributeName(attribute), value.toString());\r\n}\r\nfunction _removeAriaAttribute(element, attribute) {\r\n  element.removeAttribute(_ariaAttributeName(attribute));\r\n}\r\nfunction _ariaAttributeName(attribute) {\r\n  return `aria-${attribute}`;\r\n}\r\nfunction _setAriaRole(element, role) {\r\n  if (role) {\r\n    element.setAttribute(\"role\", role);\r\n  } else {\r\n    element.removeAttribute(\"role\");\r\n  }\r\n}\r\nfunction _getAriaSortState(sortDirection) {\r\n  let sort;\r\n  if (sortDirection === \"asc\") {\r\n    sort = \"ascending\";\r\n  } else if (sortDirection === \"desc\") {\r\n    sort = \"descending\";\r\n  } else if (sortDirection === \"mixed\") {\r\n    sort = \"other\";\r\n  } else {\r\n    sort = \"none\";\r\n  }\r\n  return sort;\r\n}\r\nfunction _getAriaPosInSet(element) {\r\n  return parseInt(element.getAttribute(\"aria-posinset\"), 10);\r\n}\r\nfunction _getAriaLabel(element) {\r\n  return element.getAttribute(\"aria-label\");\r\n}\r\nfunction _setAriaLabel(element, label) {\r\n  _toggleAriaAttribute(element, \"label\", label);\r\n}\r\nfunction _setAriaLabelledBy(element, labelledBy) {\r\n  _toggleAriaAttribute(element, \"labelledby\", labelledBy);\r\n}\r\nfunction _setAriaDescribedBy(element, describedby) {\r\n  _toggleAriaAttribute(element, \"describedby\", describedby);\r\n}\r\nfunction _setAriaLive(element, live) {\r\n  _toggleAriaAttribute(element, \"live\", live);\r\n}\r\nfunction _setAriaAtomic(element, atomic) {\r\n  _toggleAriaAttribute(element, \"atomic\", atomic);\r\n}\r\nfunction _setAriaRelevant(element, relevant) {\r\n  _toggleAriaAttribute(element, \"relevant\", relevant);\r\n}\r\nfunction _setAriaInvalid(element, invalid) {\r\n  _toggleAriaAttribute(element, \"invalid\", invalid);\r\n}\r\nfunction _setAriaLevel(element, level) {\r\n  _toggleAriaAttribute(element, \"level\", level);\r\n}\r\nfunction _setAriaDisabled(element, disabled) {\r\n  _toggleAriaAttribute(element, \"disabled\", disabled);\r\n}\r\nfunction _setAriaHidden(element, hidden) {\r\n  _toggleAriaAttribute(element, \"hidden\", hidden);\r\n}\r\nfunction _setAriaActiveDescendant(element, descendantId) {\r\n  _toggleAriaAttribute(element, \"activedescendant\", descendantId);\r\n}\r\nfunction _setAriaExpanded(element, expanded) {\r\n  _setAriaAttribute(element, \"expanded\", expanded);\r\n}\r\nfunction _removeAriaExpanded(element) {\r\n  _removeAriaAttribute(element, \"expanded\");\r\n}\r\nfunction _setAriaSetSize(element, setsize) {\r\n  _setAriaAttribute(element, \"setsize\", setsize);\r\n}\r\nfunction _setAriaPosInSet(element, position) {\r\n  _setAriaAttribute(element, \"posinset\", position);\r\n}\r\nfunction _setAriaMultiSelectable(element, multiSelectable) {\r\n  _setAriaAttribute(element, \"multiselectable\", multiSelectable);\r\n}\r\nfunction _setAriaRowCount(element, rowCount) {\r\n  _setAriaAttribute(element, \"rowcount\", rowCount);\r\n}\r\nfunction _setAriaRowIndex(element, rowIndex) {\r\n  _setAriaAttribute(element, \"rowindex\", rowIndex);\r\n}\r\nfunction _setAriaRowSpan(element, spanCount) {\r\n  _setAriaAttribute(element, \"rowspan\", spanCount);\r\n}\r\nfunction _setAriaColCount(element, colCount) {\r\n  _setAriaAttribute(element, \"colcount\", colCount);\r\n}\r\nfunction _setAriaColIndex(element, colIndex) {\r\n  _setAriaAttribute(element, \"colindex\", colIndex);\r\n}\r\nfunction _setAriaColSpan(element, colSpan) {\r\n  _setAriaAttribute(element, \"colspan\", colSpan);\r\n}\r\nfunction _setAriaSort(element, sort) {\r\n  _setAriaAttribute(element, \"sort\", sort);\r\n}\r\nfunction _removeAriaSort(element) {\r\n  _removeAriaAttribute(element, \"sort\");\r\n}\r\nfunction _setAriaSelected(element, selected) {\r\n  _toggleAriaAttribute(element, \"selected\", selected);\r\n}\r\nfunction _setAriaChecked(element, checked) {\r\n  _setAriaAttribute(element, \"checked\", checked === void 0 ? \"mixed\" : checked);\r\n}\r\nfunction _setAriaControls(controllerElement, controlledId) {\r\n  _toggleAriaAttribute(controllerElement, \"controls\", controlledId);\r\n}\r\nfunction _setAriaControlsAndLabel(controllerElement, controlledElement) {\r\n  _setAriaControls(controllerElement, controlledElement.id);\r\n  _setAriaLabelledBy(controlledElement, controllerElement.id);\r\n}\r\nfunction _setAriaOwns(ownerElement, ownedId) {\r\n  _toggleAriaAttribute(ownerElement, \"owns\", ownedId);\r\n}\r\nfunction _setAriaHasPopup(element, hasPopup) {\r\n  _toggleAriaAttribute(element, \"haspopup\", hasPopup === false ? null : hasPopup);\r\n}\r\nfunction _getAriaCheckboxStateName(translate, state) {\r\n  return state === void 0 ? translate(\"ariaIndeterminate\", \"indeterminate\") : state === true ? translate(\"ariaChecked\", \"checked\") : translate(\"ariaUnchecked\", \"unchecked\");\r\n}\r\n\r\n// packages/ag-grid-community/src/utils/browser.ts\r\nvar isSafari;\r\nvar isFirefox;\r\nvar isMacOs;\r\nvar isIOS;\r\nvar invisibleScrollbar;\r\nvar browserScrollbarWidth;\r\nvar maxDivHeight;\r\nfunction _isBrowserSafari() {\r\n  if (isSafari === void 0) {\r\n    isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\n  }\r\n  return isSafari;\r\n}\r\nfunction _isBrowserFirefox() {\r\n  if (isFirefox === void 0) {\r\n    isFirefox = /(firefox)/i.test(navigator.userAgent);\r\n  }\r\n  return isFirefox;\r\n}\r\nfunction _isMacOsUserAgent() {\r\n  if (isMacOs === void 0) {\r\n    isMacOs = /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\r\n  }\r\n  return isMacOs;\r\n}\r\nfunction _isIOSUserAgent() {\r\n  if (isIOS === void 0) {\r\n    isIOS = /iPad|iPhone|iPod/.test(navigator.platform) || navigator.platform === \"MacIntel\" && navigator.maxTouchPoints > 1;\r\n  }\r\n  return isIOS;\r\n}\r\nfunction _getTabIndex(el) {\r\n  if (!el) {\r\n    return null;\r\n  }\r\n  const numberTabIndex = el.tabIndex;\r\n  const tabIndex = el.getAttribute(\"tabIndex\");\r\n  if (numberTabIndex === -1 && (tabIndex === null || tabIndex === \"\" && !_isBrowserFirefox())) {\r\n    return null;\r\n  }\r\n  return numberTabIndex.toString();\r\n}\r\nfunction _getMaxDivHeight() {\r\n  if (maxDivHeight !== void 0) {\r\n    return maxDivHeight;\r\n  }\r\n  if (!document.body) {\r\n    return -1;\r\n  }\r\n  let res = 1e6;\r\n  const testUpTo = _isBrowserFirefox() ? 6e6 : 1e9;\r\n  const div = document.createElement(\"div\");\r\n  document.body.appendChild(div);\r\n  while (true) {\r\n    const test = res * 2;\r\n    div.style.height = test + \"px\";\r\n    if (test > testUpTo || div.clientHeight !== test) {\r\n      break;\r\n    } else {\r\n      res = test;\r\n    }\r\n  }\r\n  document.body.removeChild(div);\r\n  maxDivHeight = res;\r\n  return res;\r\n}\r\nfunction _getScrollbarWidth() {\r\n  if (browserScrollbarWidth == null) {\r\n    initScrollbarWidthAndVisibility();\r\n  }\r\n  return browserScrollbarWidth;\r\n}\r\nfunction initScrollbarWidthAndVisibility() {\r\n  const body = document.body;\r\n  const div = document.createElement(\"div\");\r\n  div.style.width = div.style.height = \"100px\";\r\n  div.style.opacity = \"0\";\r\n  div.style.overflow = \"scroll\";\r\n  div.style.msOverflowStyle = \"scrollbar\";\r\n  div.style.position = \"absolute\";\r\n  body.appendChild(div);\r\n  let width = div.offsetWidth - div.clientWidth;\r\n  if (width === 0 && div.clientWidth === 0) {\r\n    width = null;\r\n  }\r\n  if (div.parentNode) {\r\n    div.parentNode.removeChild(div);\r\n  }\r\n  if (width != null) {\r\n    browserScrollbarWidth = width;\r\n    invisibleScrollbar = width === 0;\r\n  }\r\n}\r\nfunction _isInvisibleScrollbar() {\r\n  if (invisibleScrollbar == null) {\r\n    initScrollbarWidthAndVisibility();\r\n  }\r\n  return invisibleScrollbar;\r\n}\r\n\r\n// packages/ag-grid-community/src/utils/dom.ts\r\nfunction _radioCssClass(element, elementClass, otherElementClass) {\r\n  const parent = element.parentElement;\r\n  let sibling = parent && parent.firstChild;\r\n  while (sibling) {\r\n    if (elementClass) {\r\n      sibling.classList.toggle(elementClass, sibling === element);\r\n    }\r\n    if (otherElementClass) {\r\n      sibling.classList.toggle(otherElementClass, sibling !== element);\r\n    }\r\n    sibling = sibling.nextSibling;\r\n  }\r\n}\r\nvar FOCUSABLE_SELECTOR = \"[tabindex], input, select, button, textarea, [href]\";\r\nvar FOCUSABLE_EXCLUDE = \"[disabled], .ag-disabled:not(.ag-button), .ag-disabled *\";\r\nfunction _isFocusableFormField(element) {\r\n  const matches = Element.prototype.matches || Element.prototype.msMatchesSelector;\r\n  const inputSelector = \"input, select, button, textarea\";\r\n  const isFocusable = matches.call(element, inputSelector);\r\n  const isNotFocusable = matches.call(element, FOCUSABLE_EXCLUDE);\r\n  const isElementVisible = _isVisible(element);\r\n  const focusable = isFocusable && !isNotFocusable && isElementVisible;\r\n  return focusable;\r\n}\r\nfunction _setDisplayed(element, displayed, options = {}) {\r\n  const { skipAriaHidden } = options;\r\n  element.classList.toggle(\"ag-hidden\", !displayed);\r\n  if (!skipAriaHidden) {\r\n    _setAriaHidden(element, !displayed);\r\n  }\r\n}\r\nfunction _setVisible(element, visible, options = {}) {\r\n  const { skipAriaHidden } = options;\r\n  element.classList.toggle(\"ag-invisible\", !visible);\r\n  if (!skipAriaHidden) {\r\n    _setAriaHidden(element, !visible);\r\n  }\r\n}\r\nfunction _setDisabled(element, disabled) {\r\n  const attributeName = \"disabled\";\r\n  const addOrRemoveDisabledAttribute = disabled ? (e) => e.setAttribute(attributeName, \"\") : (e) => e.removeAttribute(attributeName);\r\n  addOrRemoveDisabledAttribute(element);\r\n  const inputs = element.querySelectorAll(\"input\") ?? [];\r\n  for (const input of inputs) {\r\n    addOrRemoveDisabledAttribute(input);\r\n  }\r\n}\r\nfunction _isElementChildOfClass(element, cls, maxNest) {\r\n  let counter = 0;\r\n  while (element) {\r\n    if (element.classList.contains(cls)) {\r\n      return true;\r\n    }\r\n    element = element.parentElement;\r\n    if (typeof maxNest == \"number\") {\r\n      if (++counter > maxNest) {\r\n        break;\r\n      }\r\n    } else if (element === maxNest) {\r\n      break;\r\n    }\r\n  }\r\n  return false;\r\n}\r\nfunction _getElementSize(el) {\r\n  const {\r\n    height,\r\n    width,\r\n    borderTopWidth,\r\n    borderRightWidth,\r\n    borderBottomWidth,\r\n    borderLeftWidth,\r\n    paddingTop,\r\n    paddingRight,\r\n    paddingBottom,\r\n    paddingLeft,\r\n    marginTop,\r\n    marginRight,\r\n    marginBottom,\r\n    marginLeft,\r\n    boxSizing\r\n  } = window.getComputedStyle(el);\r\n  return {\r\n    height: parseFloat(height || \"0\"),\r\n    width: parseFloat(width || \"0\"),\r\n    borderTopWidth: parseFloat(borderTopWidth || \"0\"),\r\n    borderRightWidth: parseFloat(borderRightWidth || \"0\"),\r\n    borderBottomWidth: parseFloat(borderBottomWidth || \"0\"),\r\n    borderLeftWidth: parseFloat(borderLeftWidth || \"0\"),\r\n    paddingTop: parseFloat(paddingTop || \"0\"),\r\n    paddingRight: parseFloat(paddingRight || \"0\"),\r\n    paddingBottom: parseFloat(paddingBottom || \"0\"),\r\n    paddingLeft: parseFloat(paddingLeft || \"0\"),\r\n    marginTop: parseFloat(marginTop || \"0\"),\r\n    marginRight: parseFloat(marginRight || \"0\"),\r\n    marginBottom: parseFloat(marginBottom || \"0\"),\r\n    marginLeft: parseFloat(marginLeft || \"0\"),\r\n    boxSizing\r\n  };\r\n}\r\nfunction _getInnerHeight(el) {\r\n  const size = _getElementSize(el);\r\n  if (size.boxSizing === \"border-box\") {\r\n    return size.height - size.paddingTop - size.paddingBottom;\r\n  }\r\n  return size.height;\r\n}\r\nfunction _getInnerWidth(el) {\r\n  const size = _getElementSize(el);\r\n  if (size.boxSizing === \"border-box\") {\r\n    return size.width - size.paddingLeft - size.paddingRight;\r\n  }\r\n  return size.width;\r\n}\r\nfunction _getAbsoluteHeight(el) {\r\n  const { height, marginBottom, marginTop } = _getElementSize(el);\r\n  return Math.floor(height + marginBottom + marginTop);\r\n}\r\nfunction _getAbsoluteWidth(el) {\r\n  const { width, marginLeft, marginRight } = _getElementSize(el);\r\n  return Math.floor(width + marginLeft + marginRight);\r\n}\r\nfunction _getElementRectWithOffset(el) {\r\n  const offsetElementRect = el.getBoundingClientRect();\r\n  const { borderTopWidth, borderLeftWidth, borderRightWidth, borderBottomWidth } = _getElementSize(el);\r\n  return {\r\n    top: offsetElementRect.top + (borderTopWidth || 0),\r\n    left: offsetElementRect.left + (borderLeftWidth || 0),\r\n    right: offsetElementRect.right + (borderRightWidth || 0),\r\n    bottom: offsetElementRect.bottom + (borderBottomWidth || 0)\r\n  };\r\n}\r\nfunction _getScrollLeft(element, rtl) {\r\n  let scrollLeft = element.scrollLeft;\r\n  if (rtl) {\r\n    scrollLeft = Math.abs(scrollLeft);\r\n  }\r\n  return scrollLeft;\r\n}\r\nfunction _setScrollLeft(element, value, rtl) {\r\n  if (rtl) {\r\n    value *= -1;\r\n  }\r\n  element.scrollLeft = value;\r\n}\r\nfunction _clearElement(el) {\r\n  while (el && el.firstChild) {\r\n    el.removeChild(el.firstChild);\r\n  }\r\n}\r\nfunction _removeFromParent(node) {\r\n  if (node && node.parentNode) {\r\n    node.parentNode.removeChild(node);\r\n  }\r\n}\r\nfunction _isInDOM(element) {\r\n  return !!element.offsetParent;\r\n}\r\nfunction _isVisible(element) {\r\n  const el = element;\r\n  if (el.checkVisibility) {\r\n    return el.checkVisibility({ checkVisibilityCSS: true });\r\n  }\r\n  const isHidden = !_isInDOM(element) || window.getComputedStyle(element).visibility !== \"visible\";\r\n  return !isHidden;\r\n}\r\nfunction _loadTemplate(template) {\r\n  const tempDiv = document.createElement(\"div\");\r\n  tempDiv.innerHTML = (template || \"\").trim();\r\n  return tempDiv.firstChild;\r\n}\r\nfunction _ensureDomOrder(eContainer, eChild, eChildBefore) {\r\n  if (eChildBefore && eChildBefore.nextSibling === eChild) {\r\n    return;\r\n  }\r\n  if (!eContainer.firstChild) {\r\n    eContainer.appendChild(eChild);\r\n  } else if (eChildBefore) {\r\n    if (eChildBefore.nextSibling) {\r\n      eContainer.insertBefore(eChild, eChildBefore.nextSibling);\r\n    } else {\r\n      eContainer.appendChild(eChild);\r\n    }\r\n  } else if (eContainer.firstChild && eContainer.firstChild !== eChild) {\r\n    eContainer.insertAdjacentElement(\"afterbegin\", eChild);\r\n  }\r\n}\r\nfunction _setDomChildOrder(eContainer, orderedChildren) {\r\n  for (let i = 0; i < orderedChildren.length; i++) {\r\n    const correctCellAtIndex = orderedChildren[i];\r\n    const actualCellAtIndex = eContainer.children[i];\r\n    if (actualCellAtIndex !== correctCellAtIndex) {\r\n      eContainer.insertBefore(correctCellAtIndex, actualCellAtIndex);\r\n    }\r\n  }\r\n}\r\nfunction _camelCaseToHyphenated(camelCase) {\r\n  return camelCase.replace(/[A-Z]/g, (s) => `-${s.toLocaleLowerCase()}`);\r\n}\r\nfunction _addStylesToElement(eElement, styles) {\r\n  if (!styles) {\r\n    return;\r\n  }\r\n  for (const key of Object.keys(styles)) {\r\n    const value = styles[key];\r\n    if (!key || !key.length || value == null) {\r\n      continue;\r\n    }\r\n    const parsedKey = _camelCaseToHyphenated(key);\r\n    const valueAsString = value.toString();\r\n    const parsedValue = valueAsString.replace(/\\s*!important/g, \"\");\r\n    const priority = parsedValue.length != valueAsString.length ? \"important\" : void 0;\r\n    eElement.style.setProperty(parsedKey, parsedValue, priority);\r\n  }\r\n}\r\nfunction _isElementOverflowingCallback(getElement2) {\r\n  return () => {\r\n    const element = getElement2();\r\n    if (!element) {\r\n      return true;\r\n    }\r\n    return _isHorizontalScrollShowing(element) || _isVerticalScrollShowing(element);\r\n  };\r\n}\r\nfunction _isHorizontalScrollShowing(element) {\r\n  return element.clientWidth < element.scrollWidth;\r\n}\r\nfunction _isVerticalScrollShowing(element) {\r\n  return element.clientHeight < element.scrollHeight;\r\n}\r\nfunction _setElementWidth(element, width) {\r\n  if (width === \"flex\") {\r\n    element.style.removeProperty(\"width\");\r\n    element.style.removeProperty(\"minWidth\");\r\n    element.style.removeProperty(\"maxWidth\");\r\n    element.style.flex = \"1 1 auto\";\r\n  } else {\r\n    _setFixedWidth(element, width);\r\n  }\r\n}\r\nfunction _setFixedWidth(element, width) {\r\n  width = _formatSize(width);\r\n  element.style.width = width;\r\n  element.style.maxWidth = width;\r\n  element.style.minWidth = width;\r\n}\r\nfunction _setFixedHeight(element, height) {\r\n  height = _formatSize(height);\r\n  element.style.height = height;\r\n  element.style.maxHeight = height;\r\n  element.style.minHeight = height;\r\n}\r\nfunction _formatSize(size) {\r\n  return typeof size === \"number\" ? `${size}px` : size;\r\n}\r\nfunction _isNodeOrElement(o) {\r\n  return o instanceof Node || o instanceof HTMLElement;\r\n}\r\nfunction _addOrRemoveAttribute(element, name, value) {\r\n  if (value == null || value === \"\") {\r\n    element.removeAttribute(name);\r\n  } else {\r\n    element.setAttribute(name, value.toString());\r\n  }\r\n}\r\nfunction _observeResize(beans, element, callback) {\r\n  const win = _getWindow(beans);\r\n  const ResizeObserverImpl = win.ResizeObserver;\r\n  const resizeObserver = ResizeObserverImpl ? new ResizeObserverImpl(callback) : null;\r\n  resizeObserver?.observe(element);\r\n  return () => resizeObserver?.disconnect();\r\n}\r\nfunction _getTextSelectionRanges(beans) {\r\n  const rootNode = _getRootNode(beans);\r\n  const selection = \"getSelection\" in rootNode ? rootNode.getSelection() : null;\r\n  const ranges = [];\r\n  for (let i = 0; i < (selection?.rangeCount ?? 0); i++) {\r\n    const range = selection?.getRangeAt(i);\r\n    if (range) {\r\n      ranges.push(range);\r\n    }\r\n  }\r\n  return { selection, ranges };\r\n}\r\nfunction _preserveRangesWhile(beans, fn) {\r\n  const enableCellTextSelection = beans.gos.get(\"enableCellTextSelection\");\r\n  if (!enableCellTextSelection) {\r\n    return fn();\r\n  }\r\n  if (!_isBrowserFirefox() && !_isBrowserSafari()) {\r\n    return fn();\r\n  }\r\n  const { selection, ranges } = _getTextSelectionRanges(beans);\r\n  fn();\r\n  selection?.removeAllRanges();\r\n  for (const range of ranges) {\r\n    selection?.addRange(range);\r\n  }\r\n}\r\nfunction _requestAnimationFrame(beans, callback) {\r\n  const win = _getWindow(beans);\r\n  if (win.requestAnimationFrame) {\r\n    win.requestAnimationFrame(callback);\r\n  } else if (win.webkitRequestAnimationFrame) {\r\n    win.webkitRequestAnimationFrame(callback);\r\n  } else {\r\n    win.setTimeout(callback, 0);\r\n  }\r\n}\r\nvar DataRefAttribute = \"data-ref\";\r\nvar whitespaceNode;\r\nfunction getWhitespaceNode() {\r\n  whitespaceNode ?? (whitespaceNode = document.createTextNode(\" \"));\r\n  return whitespaceNode.cloneNode();\r\n}\r\nfunction _createElement(params) {\r\n  const { attrs, children, cls, ref, role, tag } = params;\r\n  const element = document.createElement(tag);\r\n  if (cls) {\r\n    element.className = cls;\r\n  }\r\n  if (ref) {\r\n    element.setAttribute(DataRefAttribute, ref);\r\n  }\r\n  if (role) {\r\n    element.setAttribute(\"role\", role);\r\n  }\r\n  if (attrs) {\r\n    for (const key of Object.keys(attrs)) {\r\n      element.setAttribute(key, attrs[key]);\r\n    }\r\n  }\r\n  if (children) {\r\n    if (typeof children === \"string\") {\r\n      element.textContent = children;\r\n    } else {\r\n      let addFirstWhitespace = true;\r\n      for (const child of children) {\r\n        if (child) {\r\n          if (typeof child === \"string\") {\r\n            element.appendChild(document.createTextNode(child));\r\n            addFirstWhitespace = false;\r\n          } else if (typeof child === \"function\") {\r\n            element.appendChild(child());\r\n          } else {\r\n            if (addFirstWhitespace) {\r\n              element.appendChild(getWhitespaceNode());\r\n              addFirstWhitespace = false;\r\n            }\r\n            element.append(_createElement(child));\r\n            element.appendChild(getWhitespaceNode());\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return element;\r\n}\r\n\r\n// packages/ag-grid-community/src/utils/function.ts\r\nvar doOnceFlags = {};\r\nfunction _doOnce(func, key) {\r\n  if (doOnceFlags[key]) {\r\n    return;\r\n  }\r\n  func();\r\n  doOnceFlags[key] = true;\r\n}\r\nfunction _logIfDebug(gos, message, ...args) {\r\n  if (gos.get(\"debug\")) {\r\n    console.log(\"AG Grid: \" + message, ...args);\r\n  }\r\n}\r\nfunction _warnOnce(msg, ...args) {\r\n  _doOnce(() => console.warn(\"AG Grid: \" + msg, ...args), msg + args?.join(\"\"));\r\n}\r\nfunction _errorOnce(msg, ...args) {\r\n  _doOnce(() => console.error(\"AG Grid: \" + msg, ...args), msg + args?.join(\"\"));\r\n}\r\nvar batchedCallsSetTimeout = {\r\n  pending: false,\r\n  funcs: []\r\n};\r\nvar batchedCallsRaf = {\r\n  pending: false,\r\n  funcs: []\r\n};\r\nfunction _batchCall(func, mode = \"setTimeout\", beans) {\r\n  const batch = mode === \"raf\" ? batchedCallsRaf : batchedCallsSetTimeout;\r\n  batch.funcs.push(func);\r\n  if (batch.pending) {\r\n    return;\r\n  }\r\n  batch.pending = true;\r\n  const runBatch = () => {\r\n    const funcsCopy = batch.funcs.slice();\r\n    batch.funcs.length = 0;\r\n    batch.pending = false;\r\n    funcsCopy.forEach((func2) => func2());\r\n  };\r\n  if (mode === \"raf\") {\r\n    _requestAnimationFrame(beans, runBatch);\r\n  } else {\r\n    window.setTimeout(runBatch, 0);\r\n  }\r\n}\r\nfunction _debounce(bean, func, delay) {\r\n  let timeout;\r\n  return function(...args) {\r\n    const context = this;\r\n    window.clearTimeout(timeout);\r\n    timeout = window.setTimeout(function() {\r\n      if (bean.isAlive()) {\r\n        func.apply(context, args);\r\n      }\r\n    }, delay);\r\n  };\r\n}\r\nfunction _throttle(func, wait) {\r\n  let previousCall = 0;\r\n  return function(...args) {\r\n    const context = this;\r\n    const currentCall = Date.now();\r\n    if (currentCall - previousCall < wait) {\r\n      return;\r\n    }\r\n    previousCall = currentCall;\r\n    func.apply(context, args);\r\n  };\r\n}\r\nfunction _waitUntil(condition, callback, timeout = 100, timeoutMessage) {\r\n  const timeStamp = Date.now();\r\n  let interval = null;\r\n  let executed = false;\r\n  const internalCallback = () => {\r\n    const reachedTimeout = Date.now() - timeStamp > timeout;\r\n    if (condition() || reachedTimeout) {\r\n      callback();\r\n      executed = true;\r\n      if (interval != null) {\r\n        window.clearInterval(interval);\r\n        interval = null;\r\n      }\r\n      if (reachedTimeout && timeoutMessage) {\r\n        _warnOnce(timeoutMessage);\r\n      }\r\n    }\r\n  };\r\n  internalCallback();\r\n  if (!executed) {\r\n    interval = window.setInterval(internalCallback, 10);\r\n  }\r\n}\r\n\r\n// packages/ag-grid-community/src/baseUrl.ts\r\nvar BASE_URL = \"https://www.ag-grid.com\";\r\n\r\n// packages/ag-grid-community/src/version.ts\r\nvar VERSION = \"34.1.0\";\r\n\r\n// packages/ag-grid-community/src/validation/logging.ts\r\nvar MAX_URL_LENGTH = 2e3;\r\nvar MIN_PARAM_LENGTH = 100;\r\nvar VERSION_PARAM_NAME = \"_version_\";\r\nvar validation = null;\r\nvar baseDocLink = `${BASE_URL}/javascript-data-grid`;\r\nfunction provideValidationServiceLogger(logger) {\r\n  validation = logger;\r\n}\r\nfunction setValidationDocLink(docLink) {\r\n  baseDocLink = docLink;\r\n}\r\nfunction getErrorParts(id, args, defaultMessage) {\r\n  return validation?.getConsoleMessage(id, args) ?? [minifiedLog(id, args, defaultMessage)];\r\n}\r\nfunction getMsgOrDefault(logger, id, args, defaultMessage) {\r\n  logger(`error #${id}`, ...getErrorParts(id, args, defaultMessage));\r\n}\r\nfunction stringifyObject(inputObj) {\r\n  if (!inputObj)\r\n    return String(inputObj);\r\n  const object = {};\r\n  for (const prop of Object.keys(inputObj)) {\r\n    if (typeof inputObj[prop] !== \"object\" && typeof inputObj[prop] !== \"function\") {\r\n      object[prop] = inputObj[prop];\r\n    }\r\n  }\r\n  return JSON.stringify(object);\r\n}\r\nfunction stringifyValue(value) {\r\n  let output = value;\r\n  if (value instanceof Error) {\r\n    output = value.toString();\r\n  } else if (typeof value === \"object\") {\r\n    output = stringifyObject(value);\r\n  }\r\n  return output;\r\n}\r\nfunction toStringWithNullUndefined(str) {\r\n  return str === void 0 ? \"undefined\" : str === null ? \"null\" : str;\r\n}\r\nfunction getParamsUrl(baseUrl, params) {\r\n  return `${baseUrl}?${params.toString()}`;\r\n}\r\nfunction truncateUrl(baseUrl, params, maxLength) {\r\n  const sortedParams = Array.from(params.entries()).sort((a, b) => b[1].length - a[1].length);\r\n  let url = getParamsUrl(baseUrl, params);\r\n  for (const [key, value] of sortedParams) {\r\n    if (key === VERSION_PARAM_NAME) {\r\n      continue;\r\n    }\r\n    const excessLength = url.length - maxLength;\r\n    if (excessLength <= 0) {\r\n      break;\r\n    }\r\n    const ellipse = \"...\";\r\n    const truncateAmount = excessLength + ellipse.length;\r\n    const truncatedValue = value.length - truncateAmount > MIN_PARAM_LENGTH ? value.slice(0, value.length - truncateAmount) + ellipse : value.slice(0, MIN_PARAM_LENGTH) + ellipse;\r\n    params.set(key, truncatedValue);\r\n    url = getParamsUrl(baseUrl, params);\r\n  }\r\n  return url;\r\n}\r\nfunction getErrorLink(errorNum, args) {\r\n  const params = new URLSearchParams();\r\n  params.append(VERSION_PARAM_NAME, VERSION);\r\n  if (args) {\r\n    for (const key of Object.keys(args)) {\r\n      params.append(key, stringifyValue(args[key]));\r\n    }\r\n  }\r\n  const baseUrl = `${baseDocLink}/errors/${errorNum}`;\r\n  const url = getParamsUrl(baseUrl, params);\r\n  return url.length <= MAX_URL_LENGTH ? url : truncateUrl(baseUrl, params, MAX_URL_LENGTH);\r\n}\r\nvar minifiedLog = (errorNum, args, defaultMessage) => {\r\n  const errorLink = getErrorLink(errorNum, args);\r\n  return `${defaultMessage ? defaultMessage + \" \\n\" : \"\"}Visit ${errorLink}${defaultMessage ? \"\" : \" \\n  Alternatively register the ValidationModule to see the full message in the console.\"}`;\r\n};\r\nfunction _warn(...args) {\r\n  getMsgOrDefault(_warnOnce, args[0], args[1]);\r\n}\r\nfunction _error(...args) {\r\n  getMsgOrDefault(_errorOnce, args[0], args[1]);\r\n}\r\nfunction _logPreInitErr(id, args, defaultMessage) {\r\n  getMsgOrDefault(_errorOnce, id, args, defaultMessage);\r\n}\r\nfunction getErrMsg(defaultMessage, args) {\r\n  const id = args[0];\r\n  return `error #${id} ` + getErrorParts(id, args[1], defaultMessage).join(\" \");\r\n}\r\nfunction _errMsg(...args) {\r\n  return getErrMsg(void 0, args);\r\n}\r\nfunction _preInitErrMsg(...args) {\r\n  return getErrMsg(\"\\n\", args);\r\n}\r\n\r\n// packages/ag-grid-community/src/gridOptionsUtils.ts\r\nfunction isRowModelType(gos, rowModelType) {\r\n  return gos.get(\"rowModelType\") === rowModelType;\r\n}\r\nfunction _isClientSideRowModel(gos, rowModel) {\r\n  return isRowModelType(gos, \"clientSide\");\r\n}\r\nfunction _isServerSideRowModel(gos, rowModel) {\r\n  return isRowModelType(gos, \"serverSide\");\r\n}\r\nfunction _isDomLayout(gos, domLayout) {\r\n  return gos.get(\"domLayout\") === domLayout;\r\n}\r\nfunction _isRowSelection(gos) {\r\n  return _getRowSelectionMode(gos) !== void 0;\r\n}\r\nfunction _isGetRowHeightFunction(gos) {\r\n  return typeof gos.get(\"getRowHeight\") === \"function\";\r\n}\r\nfunction _shouldMaintainColumnOrder(gos, isPivotColumns) {\r\n  if (isPivotColumns) {\r\n    return !gos.get(\"enableStrictPivotColumnOrder\");\r\n  }\r\n  return gos.get(\"maintainColumnOrder\");\r\n}\r\nfunction _getRowHeightForNode(beans, rowNode, allowEstimate = false, defaultRowHeight) {\r\n  const { gos, environment } = beans;\r\n  if (defaultRowHeight == null) {\r\n    defaultRowHeight = environment.getDefaultRowHeight();\r\n  }\r\n  if (_isGetRowHeightFunction(gos)) {\r\n    if (allowEstimate) {\r\n      return { height: defaultRowHeight, estimated: true };\r\n    }\r\n    const params = {\r\n      node: rowNode,\r\n      data: rowNode.data\r\n    };\r\n    const height = gos.getCallback(\"getRowHeight\")(params);\r\n    if (isNumeric(height)) {\r\n      if (height === 0) {\r\n        _warn(23);\r\n      }\r\n      return { height: Math.max(1, height), estimated: false };\r\n    }\r\n  }\r\n  if (rowNode.detail && gos.get(\"masterDetail\")) {\r\n    return getMasterDetailRowHeight(gos);\r\n  }\r\n  const gridOptionsRowHeight = gos.get(\"rowHeight\");\r\n  const rowHeight = gridOptionsRowHeight && isNumeric(gridOptionsRowHeight) ? gridOptionsRowHeight : defaultRowHeight;\r\n  return { height: rowHeight, estimated: false };\r\n}\r\nfunction getMasterDetailRowHeight(gos) {\r\n  if (gos.get(\"detailRowAutoHeight\")) {\r\n    return { height: 1, estimated: false };\r\n  }\r\n  const defaultRowHeight = gos.get(\"detailRowHeight\");\r\n  if (isNumeric(defaultRowHeight)) {\r\n    return { height: defaultRowHeight, estimated: false };\r\n  }\r\n  return { height: 300, estimated: false };\r\n}\r\nfunction _getRowHeightAsNumber(beans) {\r\n  const { environment, gos } = beans;\r\n  const gridOptionsRowHeight = gos.get(\"rowHeight\");\r\n  if (!gridOptionsRowHeight || _missing(gridOptionsRowHeight)) {\r\n    return environment.getDefaultRowHeight();\r\n  }\r\n  const rowHeight = environment.refreshRowHeightVariable();\r\n  if (rowHeight !== -1) {\r\n    return rowHeight;\r\n  }\r\n  _warn(24);\r\n  return environment.getDefaultRowHeight();\r\n}\r\nfunction isNumeric(value) {\r\n  return !isNaN(value) && typeof value === \"number\" && isFinite(value);\r\n}\r\nfunction _getDomData(gos, element, key) {\r\n  const domData = element[gos.getDomDataKey()];\r\n  return domData ? domData[key] : void 0;\r\n}\r\nfunction _setDomData(gos, element, key, value) {\r\n  const domDataKey = gos.getDomDataKey();\r\n  let domData = element[domDataKey];\r\n  if (_missing(domData)) {\r\n    domData = {};\r\n    element[domDataKey] = domData;\r\n  }\r\n  domData[key] = value;\r\n}\r\nfunction _getDocument(beans) {\r\n  const { gos, eGridDiv } = beans;\r\n  let result = null;\r\n  const gridOptionsGetDocument = gos.get(\"getDocument\");\r\n  if (gridOptionsGetDocument && _exists(gridOptionsGetDocument)) {\r\n    result = gridOptionsGetDocument();\r\n  } else if (eGridDiv) {\r\n    result = eGridDiv.ownerDocument;\r\n  }\r\n  if (result && _exists(result)) {\r\n    return result;\r\n  }\r\n  return document;\r\n}\r\nfunction _getWindow(beans) {\r\n  const eDocument = _getDocument(beans);\r\n  return eDocument.defaultView || window;\r\n}\r\nfunction _getRootNode(beans) {\r\n  return beans.eGridDiv.getRootNode();\r\n}\r\nfunction _getActiveDomElement(beans) {\r\n  return _getRootNode(beans).activeElement;\r\n}\r\nfunction _getPageBody(beans) {\r\n  let rootNode = null;\r\n  let targetEl = null;\r\n  try {\r\n    rootNode = _getDocument(beans).fullscreenElement;\r\n  } catch (e) {\r\n  } finally {\r\n    if (!rootNode) {\r\n      rootNode = _getRootNode(beans);\r\n    }\r\n    const body = rootNode.querySelector(\"body\");\r\n    if (body) {\r\n      targetEl = body;\r\n    } else if (rootNode instanceof ShadowRoot) {\r\n      targetEl = rootNode;\r\n    } else if (rootNode instanceof Document) {\r\n      targetEl = rootNode?.documentElement;\r\n    } else {\r\n      targetEl = rootNode;\r\n    }\r\n  }\r\n  return targetEl;\r\n}\r\nfunction _getBodyWidth(beans) {\r\n  const body = _getPageBody(beans);\r\n  return body?.clientWidth ?? (window.innerWidth || -1);\r\n}\r\nfunction _getBodyHeight(beans) {\r\n  const body = _getPageBody(beans);\r\n  return body?.clientHeight ?? (window.innerHeight || -1);\r\n}\r\nfunction _anchorElementToMouseMoveEvent(element, mouseMoveEvent, beans) {\r\n  const eRect = element.getBoundingClientRect();\r\n  const height = eRect.height;\r\n  const browserWidth = _getBodyWidth(beans) - 2;\r\n  const browserHeight = _getBodyHeight(beans) - 2;\r\n  const offsetParent = element.offsetParent;\r\n  if (!offsetParent) {\r\n    return;\r\n  }\r\n  const offsetParentSize = _getElementRectWithOffset(element.offsetParent);\r\n  const { clientY, clientX } = mouseMoveEvent;\r\n  let top = clientY - offsetParentSize.top - height / 2;\r\n  let left = clientX - offsetParentSize.left - 10;\r\n  const eDocument = _getDocument(beans);\r\n  const win = eDocument.defaultView || window;\r\n  const windowScrollY = win.pageYOffset || eDocument.documentElement.scrollTop;\r\n  const windowScrollX = win.pageXOffset || eDocument.documentElement.scrollLeft;\r\n  if (browserWidth > 0 && left + element.clientWidth > browserWidth + windowScrollX) {\r\n    left = browserWidth + windowScrollX - element.clientWidth;\r\n  }\r\n  if (left < 0) {\r\n    left = 0;\r\n  }\r\n  if (browserHeight > 0 && top + element.clientHeight > browserHeight + windowScrollY) {\r\n    top = browserHeight + windowScrollY - element.clientHeight;\r\n  }\r\n  if (top < 0) {\r\n    top = 0;\r\n  }\r\n  element.style.left = `${left}px`;\r\n  element.style.top = `${top}px`;\r\n}\r\nfunction _isNothingFocused(beans) {\r\n  const activeEl = _getActiveDomElement(beans);\r\n  return activeEl === null || activeEl === _getDocument(beans).body;\r\n}\r\nfunction _isAnimateRows(gos) {\r\n  if (gos.get(\"ensureDomOrder\")) {\r\n    return false;\r\n  }\r\n  return gos.get(\"animateRows\");\r\n}\r\nfunction _isGroupRowsSticky(gos) {\r\n  if (gos.get(\"paginateChildRows\") || gos.get(\"groupHideOpenParents\") || _isDomLayout(gos, \"print\")) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\nfunction _isColumnsSortingCoupledToGroup(gos) {\r\n  const autoGroupColumnDef = gos.get(\"autoGroupColumnDef\");\r\n  return !autoGroupColumnDef?.comparator && !gos.get(\"treeData\");\r\n}\r\nfunction _getGroupAggFiltering(gos) {\r\n  const userValue = gos.get(\"groupAggFiltering\");\r\n  if (typeof userValue === \"function\") {\r\n    return gos.getCallback(\"groupAggFiltering\");\r\n  }\r\n  if (userValue === true) {\r\n    return () => true;\r\n  }\r\n  return void 0;\r\n}\r\nfunction _getGrandTotalRow(gos) {\r\n  return gos.get(\"grandTotalRow\");\r\n}\r\nfunction _getGroupTotalRowCallback(gos) {\r\n  const userValue = gos.get(\"groupTotalRow\");\r\n  if (typeof userValue === \"function\") {\r\n    return gos.getCallback(\"groupTotalRow\");\r\n  }\r\n  return () => userValue ?? void 0;\r\n}\r\nfunction _isGroupMultiAutoColumn(gos) {\r\n  const isHideOpenParents = !!gos.get(\"groupHideOpenParents\");\r\n  if (isHideOpenParents) {\r\n    return true;\r\n  }\r\n  return gos.get(\"groupDisplayType\") === \"multipleColumns\";\r\n}\r\nfunction _isGroupUseEntireRow(gos, pivotMode) {\r\n  if (pivotMode) {\r\n    return false;\r\n  }\r\n  return gos.get(\"groupDisplayType\") === \"groupRows\";\r\n}\r\nfunction _isFullWidthGroupRow(gos, node, pivotMode) {\r\n  return !!node.group && !node.footer && _isGroupUseEntireRow(gos, pivotMode);\r\n}\r\nfunction _getRowIdCallback(gos) {\r\n  const getRowId = gos.getCallback(\"getRowId\");\r\n  if (getRowId === void 0) {\r\n    return getRowId;\r\n  }\r\n  return (params) => {\r\n    let id = getRowId(params);\r\n    if (typeof id !== \"string\") {\r\n      _doOnce(() => _warn(25, { id }), \"getRowIdString\");\r\n      id = String(id);\r\n    }\r\n    return id;\r\n  };\r\n}\r\nfunction _canSkipShowingRowGroup(gos, node) {\r\n  const isSkippingGroups = gos.get(\"groupHideParentOfSingleChild\");\r\n  if (isSkippingGroups === true) {\r\n    return true;\r\n  }\r\n  if (isSkippingGroups === \"leafGroupsOnly\" && node.leafGroup) {\r\n    return true;\r\n  }\r\n  if (gos.get(\"groupRemoveSingleChildren\")) {\r\n    return true;\r\n  }\r\n  if (gos.get(\"groupRemoveLowestSingleChildren\") && node.leafGroup) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nfunction _getMaxConcurrentDatasourceRequests(gos) {\r\n  const res = gos.get(\"maxConcurrentDatasourceRequests\");\r\n  return res > 0 ? res : void 0;\r\n}\r\nfunction _shouldUpdateColVisibilityAfterGroup(gos, isGrouped) {\r\n  const preventVisibilityChanges = gos.get(\"suppressGroupChangesColumnVisibility\");\r\n  if (preventVisibilityChanges === true) {\r\n    return false;\r\n  }\r\n  if (isGrouped && preventVisibilityChanges === \"suppressHideOnGroup\") {\r\n    return false;\r\n  }\r\n  if (!isGrouped && preventVisibilityChanges === \"suppressShowOnUngroup\") {\r\n    return false;\r\n  }\r\n  const legacySuppressOnGroup = gos.get(\"suppressRowGroupHidesColumns\");\r\n  if (isGrouped && legacySuppressOnGroup === true) {\r\n    return false;\r\n  }\r\n  const legacySuppressOnUngroup = gos.get(\"suppressMakeColumnVisibleAfterUnGroup\");\r\n  if (!isGrouped && legacySuppressOnUngroup === true) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\nfunction _getCheckboxes(selection) {\r\n  return selection?.checkboxes ?? true;\r\n}\r\nfunction _getHeaderCheckbox(selection) {\r\n  return selection?.mode === \"multiRow\" && (selection.headerCheckbox ?? true);\r\n}\r\nfunction _getCheckboxLocation(rowSelection) {\r\n  if (typeof rowSelection !== \"object\") {\r\n    return void 0;\r\n  }\r\n  return rowSelection.checkboxLocation ?? \"selectionColumn\";\r\n}\r\nfunction _getHideDisabledCheckboxes(selection) {\r\n  return selection?.hideDisabledCheckboxes ?? false;\r\n}\r\nfunction _isUsingNewRowSelectionAPI(gos) {\r\n  const rowSelection = gos.get(\"rowSelection\");\r\n  return typeof rowSelection !== \"string\";\r\n}\r\nfunction _isUsingNewCellSelectionAPI(gos) {\r\n  return gos.get(\"cellSelection\") !== void 0;\r\n}\r\nfunction _getSuppressMultiRanges(gos) {\r\n  const selection = gos.get(\"cellSelection\");\r\n  const useNewAPI = selection !== void 0;\r\n  if (!useNewAPI) {\r\n    return gos.get(\"suppressMultiRangeSelection\");\r\n  }\r\n  return typeof selection !== \"boolean\" ? selection?.suppressMultiRanges ?? false : false;\r\n}\r\nfunction _isCellSelectionEnabled(gos) {\r\n  const selection = gos.get(\"cellSelection\");\r\n  const useNewAPI = selection !== void 0;\r\n  return useNewAPI ? !!selection : gos.get(\"enableRangeSelection\");\r\n}\r\nfunction _getFillHandle(gos) {\r\n  const selection = gos.get(\"cellSelection\");\r\n  const useNewAPI = selection !== void 0;\r\n  if (!useNewAPI) {\r\n    return {\r\n      mode: \"fill\",\r\n      setFillValue: gos.get(\"fillOperation\"),\r\n      direction: gos.get(\"fillHandleDirection\"),\r\n      suppressClearOnFillReduction: gos.get(\"suppressClearOnFillReduction\")\r\n    };\r\n  }\r\n  return typeof selection !== \"boolean\" && selection.handle?.mode === \"fill\" ? selection.handle : void 0;\r\n}\r\nfunction _getEnableClickSelection(gos) {\r\n  const selection = gos.get(\"rowSelection\") ?? \"single\";\r\n  if (typeof selection === \"string\") {\r\n    const suppressRowClickSelection = gos.get(\"suppressRowClickSelection\");\r\n    const suppressRowDeselection = gos.get(\"suppressRowDeselection\");\r\n    if (suppressRowClickSelection && suppressRowDeselection) {\r\n      return false;\r\n    } else if (suppressRowClickSelection) {\r\n      return \"enableDeselection\";\r\n    } else if (suppressRowDeselection) {\r\n      return \"enableSelection\";\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n  return selection.mode === \"singleRow\" || selection.mode === \"multiRow\" ? selection.enableClickSelection ?? false : false;\r\n}\r\nfunction _getEnableSelection(gos) {\r\n  const enableClickSelection = _getEnableClickSelection(gos);\r\n  return enableClickSelection === true || enableClickSelection === \"enableSelection\";\r\n}\r\nfunction _getEnableDeselection(gos) {\r\n  const enableClickSelection = _getEnableClickSelection(gos);\r\n  return enableClickSelection === true || enableClickSelection === \"enableDeselection\";\r\n}\r\nfunction _getIsRowSelectable(gos) {\r\n  const selection = gos.get(\"rowSelection\");\r\n  if (typeof selection === \"string\") {\r\n    return gos.get(\"isRowSelectable\");\r\n  }\r\n  return selection?.isRowSelectable;\r\n}\r\nfunction _getRowSelectionMode(arg) {\r\n  const selection = \"beanName\" in arg && arg.beanName === \"gos\" ? arg.get(\"rowSelection\") : arg.rowSelection;\r\n  if (typeof selection === \"string\") {\r\n    switch (selection) {\r\n      case \"multiple\":\r\n        return \"multiRow\";\r\n      case \"single\":\r\n        return \"singleRow\";\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n  switch (selection?.mode) {\r\n    case \"multiRow\":\r\n    case \"singleRow\":\r\n      return selection.mode;\r\n    default:\r\n      return;\r\n  }\r\n}\r\nfunction _isMultiRowSelection(arg) {\r\n  const mode = _getRowSelectionMode(arg);\r\n  return mode === \"multiRow\";\r\n}\r\nfunction _getEnableSelectionWithoutKeys(gos) {\r\n  const selection = gos.get(\"rowSelection\");\r\n  if (typeof selection === \"string\") {\r\n    return gos.get(\"rowMultiSelectWithClick\");\r\n  }\r\n  return selection?.enableSelectionWithoutKeys ?? false;\r\n}\r\nfunction _getGroupSelection(gos) {\r\n  const selection = gos.get(\"rowSelection\");\r\n  if (typeof selection === \"string\") {\r\n    const groupSelectsChildren = gos.get(\"groupSelectsChildren\");\r\n    const groupSelectsFiltered = gos.get(\"groupSelectsFiltered\");\r\n    if (groupSelectsChildren && groupSelectsFiltered) {\r\n      return \"filteredDescendants\";\r\n    } else if (groupSelectsChildren) {\r\n      return \"descendants\";\r\n    } else {\r\n      return \"self\";\r\n    }\r\n  }\r\n  return selection?.mode === \"multiRow\" ? selection.groupSelects : void 0;\r\n}\r\nfunction _getSelectAll(gos, defaultValue = true) {\r\n  const rowSelection = gos.get(\"rowSelection\");\r\n  if (typeof rowSelection !== \"object\") {\r\n    return defaultValue ? \"all\" : void 0;\r\n  }\r\n  return rowSelection.mode === \"multiRow\" ? rowSelection.selectAll : \"all\";\r\n}\r\nfunction _getGroupSelectsDescendants(gos) {\r\n  const groupSelection = _getGroupSelection(gos);\r\n  return groupSelection === \"descendants\" || groupSelection === \"filteredDescendants\";\r\n}\r\nfunction _getMasterSelects(gos) {\r\n  const rowSelection = gos.get(\"rowSelection\");\r\n  return typeof rowSelection === \"object\" && rowSelection.masterSelects || \"self\";\r\n}\r\nfunction _isSetFilterByDefault(gos) {\r\n  return gos.isModuleRegistered(\"SetFilter\") && !gos.get(\"suppressSetFilterByDefault\");\r\n}\r\nfunction _isLegacyMenuEnabled(gos) {\r\n  return gos.get(\"columnMenu\") === \"legacy\";\r\n}\r\nfunction _isColumnMenuAnchoringEnabled(gos) {\r\n  return !_isLegacyMenuEnabled(gos);\r\n}\r\nfunction _getCallbackForEvent(eventName) {\r\n  if (!eventName || eventName.length < 2) {\r\n    return eventName;\r\n  }\r\n  return \"on\" + eventName[0].toUpperCase() + eventName.substring(1);\r\n}\r\nfunction _combineAttributesAndGridOptions(gridOptions, component, gridOptionsKeys) {\r\n  if (typeof gridOptions !== \"object\") {\r\n    gridOptions = {};\r\n  }\r\n  const mergedOptions = { ...gridOptions };\r\n  gridOptionsKeys.forEach((key) => {\r\n    const value = component[key];\r\n    if (typeof value !== \"undefined\") {\r\n      mergedOptions[key] = value;\r\n    }\r\n  });\r\n  return mergedOptions;\r\n}\r\nfunction _processOnChange(changes, api) {\r\n  if (!changes) {\r\n    return;\r\n  }\r\n  const gridChanges = {};\r\n  let hasChanges = false;\r\n  Object.keys(changes).forEach((key) => {\r\n    gridChanges[key] = changes[key];\r\n    hasChanges = true;\r\n  });\r\n  if (!hasChanges) {\r\n    return;\r\n  }\r\n  const internalUpdateEvent = {\r\n    type: \"gridOptionsChanged\",\r\n    options: gridChanges\r\n  };\r\n  api.dispatchEvent(internalUpdateEvent);\r\n  const event = {\r\n    type: \"componentStateChanged\",\r\n    ...gridChanges\r\n  };\r\n  api.dispatchEvent(event);\r\n}\r\nfunction _addGridCommonParams(gos, params) {\r\n  return gos.addGridCommonParams(params);\r\n}\r\nfunction _getGroupingApproach(gos) {\r\n  if (gos.get(\"treeData\")) {\r\n    if (gos.get(\"treeDataParentIdField\")) {\r\n      return \"treeSelfRef\";\r\n    }\r\n    if (gos.get(\"treeDataChildrenField\")) {\r\n      return \"treeNested\";\r\n    }\r\n    return \"treePath\";\r\n  }\r\n  return \"group\";\r\n}\r\nfunction _getGridOption(providedGridOptions, gridOption) {\r\n  return providedGridOptions[gridOption] ?? providedGridOptions[`gridOptions`]?.[gridOption] ?? _getGlobalGridOption(gridOption) ?? GRID_OPTION_DEFAULTS[gridOption];\r\n}\r\n\r\n// packages/ag-grid-community/src/utils/event.ts\r\nvar AG_GRID_STOP_PROPAGATION = \"__ag_Grid_Stop_Propagation\";\r\nvar PASSIVE_EVENTS = [\"touchstart\", \"touchend\", \"touchmove\", \"touchcancel\", \"scroll\"];\r\nvar NON_PASSIVE_EVENTS = [\"wheel\"];\r\nvar supports = {};\r\nfunction _stopPropagationForAgGrid(event) {\r\n  event[AG_GRID_STOP_PROPAGATION] = true;\r\n}\r\nfunction _isStopPropagationForAgGrid(event) {\r\n  return event[AG_GRID_STOP_PROPAGATION] === true;\r\n}\r\nvar _isEventSupported = /* @__PURE__ */ (() => {\r\n  const tags = {\r\n    select: \"input\",\r\n    change: \"input\",\r\n    submit: \"form\",\r\n    reset: \"form\",\r\n    error: \"img\",\r\n    load: \"img\",\r\n    abort: \"img\"\r\n  };\r\n  const eventChecker = (eventName) => {\r\n    if (typeof supports[eventName] === \"boolean\") {\r\n      return supports[eventName];\r\n    }\r\n    const el = document.createElement(tags[eventName] || \"div\");\r\n    eventName = \"on\" + eventName;\r\n    return supports[eventName] = eventName in el;\r\n  };\r\n  return eventChecker;\r\n})();\r\nfunction _getCtrlForEventTarget(gos, eventTarget, type) {\r\n  let sourceElement = eventTarget;\r\n  while (sourceElement) {\r\n    const renderedComp = _getDomData(gos, sourceElement, type);\r\n    if (renderedComp) {\r\n      return renderedComp;\r\n    }\r\n    sourceElement = sourceElement.parentElement;\r\n  }\r\n  return null;\r\n}\r\nfunction _isElementInEventPath(element, event) {\r\n  if (!event || !element) {\r\n    return false;\r\n  }\r\n  return _getEventPath(event).indexOf(element) >= 0;\r\n}\r\nfunction _createEventPath(event) {\r\n  const res = [];\r\n  let pointer = event.target;\r\n  while (pointer) {\r\n    res.push(pointer);\r\n    pointer = pointer.parentElement;\r\n  }\r\n  return res;\r\n}\r\nfunction _getEventPath(event) {\r\n  const eventNoType = event;\r\n  if (eventNoType.path) {\r\n    return eventNoType.path;\r\n  }\r\n  if (eventNoType.composedPath) {\r\n    return eventNoType.composedPath();\r\n  }\r\n  return _createEventPath(eventNoType);\r\n}\r\nfunction _addSafePassiveEventListener(frameworkOverrides, eElement, event, listener) {\r\n  const passive = getPassiveStateForEvent(event);\r\n  let options;\r\n  if (passive != null) {\r\n    options = { passive };\r\n  }\r\n  if (frameworkOverrides && frameworkOverrides.addEventListener) {\r\n    frameworkOverrides.addEventListener(eElement, event, listener, options);\r\n  }\r\n}\r\nvar getPassiveStateForEvent = (event) => {\r\n  const isPassive = PASSIVE_EVENTS.includes(event);\r\n  const isNonPassive = NON_PASSIVE_EVENTS.includes(event);\r\n  if (isPassive) {\r\n    return true;\r\n  }\r\n  if (isNonPassive) {\r\n    return false;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/context/beanStub.ts\r\nvar BeanStub = class {\r\n  constructor() {\r\n    // not named context to allow children to use 'context' as a variable name\r\n    this.destroyFunctions = [];\r\n    this.destroyed = false;\r\n    // for vue 3 - prevents Vue from trying to make this (and obviously any sub classes) from being reactive\r\n    // prevents vue from creating proxies for created objects and prevents identity related issues\r\n    this.__v_skip = true;\r\n    this.propertyListenerId = 0;\r\n    // Enable multiple grid properties to be updated together by the user but only trigger shared logic once.\r\n    // Closely related to logic in GridOptionsUtils.ts _processOnChange\r\n    this.lastChangeSetIdLookup = {};\r\n    this.isAlive = () => !this.destroyed;\r\n  }\r\n  preWireBeans(beans) {\r\n    this.beans = beans;\r\n    this.stubContext = beans.context;\r\n    this.eventSvc = beans.eventSvc;\r\n    this.gos = beans.gos;\r\n  }\r\n  // this was a test constructor niall built, when active, it prints after 5 seconds all beans/components that are\r\n  // not destroyed. to use, create a new grid, then api.destroy() before 5 seconds. then anything that gets printed\r\n  // points to a bean or component that was not properly disposed of.\r\n  // constructor() {\r\n  //     setTimeout(()=> {\r\n  //         if (this.isAlive()) {\r\n  //             let prototype: any = Object.getPrototypeOf(this);\r\n  //             const constructor: any = prototype.constructor;\r\n  //             const constructorString = constructor.toString();\r\n  //             const beanName = constructorString.substring(9, constructorString.indexOf(\"(\"));\r\n  //             console.log('is alive ' + beanName);\r\n  //         }\r\n  //     }, 5000);\r\n  // }\r\n  destroy() {\r\n    const { destroyFunctions } = this;\r\n    for (let i = 0; i < destroyFunctions.length; i++) {\r\n      destroyFunctions[i]();\r\n    }\r\n    destroyFunctions.length = 0;\r\n    this.destroyed = true;\r\n    this.dispatchLocalEvent({ type: \"destroyed\" });\r\n  }\r\n  // The typing of AgEventListener<any, any, any> is not ideal, but it's the best we can do at the moment to enable\r\n  // eventSvc to have the best typing at the expense of BeanStub local events\r\n  /** Add a local event listener against this BeanStub */\r\n  addEventListener(eventType, listener, async) {\r\n    if (!this.localEventService) {\r\n      this.localEventService = new LocalEventService();\r\n    }\r\n    this.localEventService.addEventListener(eventType, listener, async);\r\n  }\r\n  /** Remove a local event listener from this BeanStub */\r\n  removeEventListener(eventType, listener, async) {\r\n    this.localEventService?.removeEventListener(eventType, listener, async);\r\n  }\r\n  dispatchLocalEvent(event) {\r\n    this.localEventService?.dispatchEvent(event);\r\n  }\r\n  addManagedElementListeners(object, handlers) {\r\n    return this._setupListeners(object, handlers);\r\n  }\r\n  addManagedEventListeners(handlers) {\r\n    return this._setupListeners(this.eventSvc, handlers);\r\n  }\r\n  addManagedListeners(object, handlers) {\r\n    return this._setupListeners(object, handlers);\r\n  }\r\n  _setupListeners(object, handlers) {\r\n    const destroyFuncs = [];\r\n    for (const k of Object.keys(handlers)) {\r\n      const handler = handlers[k];\r\n      if (handler) {\r\n        destroyFuncs.push(this._setupListener(object, k, handler));\r\n      }\r\n    }\r\n    return destroyFuncs;\r\n  }\r\n  _setupListener(object, event, listener) {\r\n    if (this.destroyed) {\r\n      return () => null;\r\n    }\r\n    let destroyFunc;\r\n    if (isAgEventEmitter(object)) {\r\n      object.__addEventListener(event, listener);\r\n      destroyFunc = () => {\r\n        object.__removeEventListener(event, listener);\r\n        return null;\r\n      };\r\n    } else {\r\n      if (object instanceof HTMLElement) {\r\n        _addSafePassiveEventListener(this.beans.frameworkOverrides, object, event, listener);\r\n      } else {\r\n        object.addEventListener(event, listener);\r\n      }\r\n      destroyFunc = () => {\r\n        object.removeEventListener(event, listener);\r\n        return null;\r\n      };\r\n    }\r\n    this.destroyFunctions.push(destroyFunc);\r\n    return () => {\r\n      destroyFunc();\r\n      this.destroyFunctions = this.destroyFunctions.filter((fn) => fn !== destroyFunc);\r\n      return null;\r\n    };\r\n  }\r\n  /**\r\n   * Setup a managed property listener for the given GridOption property.\r\n   * However, stores the destroy function in the beanStub so that if this bean\r\n   * is a component the destroy function will be called when the component is destroyed\r\n   * as opposed to being cleaned up only when the GridOptionsService is destroyed.\r\n   */\r\n  setupGridOptionListener(event, listener) {\r\n    const { gos } = this;\r\n    gos.addPropertyEventListener(event, listener);\r\n    const destroyFunc = () => {\r\n      gos.removePropertyEventListener(event, listener);\r\n      return null;\r\n    };\r\n    this.destroyFunctions.push(destroyFunc);\r\n    return () => {\r\n      destroyFunc();\r\n      this.destroyFunctions = this.destroyFunctions.filter((fn) => fn !== destroyFunc);\r\n      return null;\r\n    };\r\n  }\r\n  /**\r\n   * Setup a managed property listener for the given GridOption property.\r\n   * @param event GridOption property to listen to changes for.\r\n   * @param listener Listener to run when property value changes\r\n   */\r\n  addManagedPropertyListener(event, listener) {\r\n    if (this.destroyed) {\r\n      return () => null;\r\n    }\r\n    return this.setupGridOptionListener(event, listener);\r\n  }\r\n  /**\r\n   * Setup managed property listeners for the given set of GridOption properties.\r\n   * The listener will be run if any of the property changes but will only run once if\r\n   * multiple of the properties change within the same framework lifecycle event.\r\n   * Works on the basis that GridOptionsService updates all properties *before* any property change events are fired.\r\n   * @param events Array of GridOption properties to listen for changes too.\r\n   * @param listener Shared listener to run if any of the properties change\r\n   */\r\n  addManagedPropertyListeners(events, listener) {\r\n    if (this.destroyed) {\r\n      return;\r\n    }\r\n    const eventsKey = events.join(\"-\") + this.propertyListenerId++;\r\n    const wrappedListener = (event) => {\r\n      if (event.changeSet) {\r\n        if (event.changeSet && event.changeSet.id === this.lastChangeSetIdLookup[eventsKey]) {\r\n          return;\r\n        }\r\n        this.lastChangeSetIdLookup[eventsKey] = event.changeSet.id;\r\n      }\r\n      const propertiesChangeEvent = {\r\n        type: \"gridPropertyChanged\",\r\n        changeSet: event.changeSet,\r\n        source: event.source\r\n      };\r\n      listener(propertiesChangeEvent);\r\n    };\r\n    events.forEach((event) => this.setupGridOptionListener(event, wrappedListener));\r\n  }\r\n  getLocaleTextFunc() {\r\n    return _getLocaleTextFunc(this.beans.localeSvc);\r\n  }\r\n  addDestroyFunc(func) {\r\n    if (this.isAlive()) {\r\n      this.destroyFunctions.push(func);\r\n    } else {\r\n      func();\r\n    }\r\n  }\r\n  /** doesn't throw an error if `bean` is undefined */\r\n  createOptionalManagedBean(bean, context) {\r\n    return bean ? this.createManagedBean(bean, context) : void 0;\r\n  }\r\n  createManagedBean(bean, context) {\r\n    const res = this.createBean(bean, context);\r\n    this.addDestroyFunc(this.destroyBean.bind(this, bean, context));\r\n    return res;\r\n  }\r\n  createBean(bean, context, afterPreCreateCallback) {\r\n    return (context || this.stubContext).createBean(bean, afterPreCreateCallback);\r\n  }\r\n  /**\r\n   * Destroys a bean and returns undefined to support destruction and clean up in a single line.\r\n   * this.dateComp = this.context.destroyBean(this.dateComp);\r\n   */\r\n  destroyBean(bean, context) {\r\n    return (context || this.stubContext).destroyBean(bean);\r\n  }\r\n  /**\r\n   * Destroys an array of beans and returns an empty array to support destruction and clean up in a single line.\r\n   * this.dateComps = this.context.destroyBeans(this.dateComps);\r\n   */\r\n  destroyBeans(beans, context) {\r\n    return (context || this.stubContext).destroyBeans(beans);\r\n  }\r\n};\r\nfunction isAgEventEmitter(object) {\r\n  return object.__addEventListener !== void 0;\r\n}\r\n\r\n// packages/ag-grid-community/src/utils/string.ts\r\nvar reUnescapedHtml = /[&<>\"']/g;\r\nvar HTML_ESCAPES = {\r\n  \"&\": \"&amp;\",\r\n  \"<\": \"&lt;\",\r\n  \">\": \"&gt;\",\r\n  '\"': \"&quot;\",\r\n  \"'\": \"&#39;\"\r\n};\r\nfunction _toString(toEscape) {\r\n  return toEscape?.toString().toString() ?? null;\r\n}\r\nfunction _escapeString(toEscape) {\r\n  return _toString(toEscape)?.replace(reUnescapedHtml, (chr) => HTML_ESCAPES[chr]) ?? null;\r\n}\r\n\r\n// packages/ag-grid-community/src/entities/agColumn.ts\r\nvar COL_DEF_DEFAULTS = {\r\n  resizable: true,\r\n  sortable: true\r\n};\r\nvar instanceIdSequence = 0;\r\nfunction getNextColInstanceId() {\r\n  return instanceIdSequence++;\r\n}\r\nfunction isColumn(col) {\r\n  return col instanceof AgColumn;\r\n}\r\nvar AgColumn = class extends BeanStub {\r\n  constructor(colDef, userProvidedColDef, colId, primary) {\r\n    super();\r\n    this.colDef = colDef;\r\n    this.userProvidedColDef = userProvidedColDef;\r\n    this.colId = colId;\r\n    this.primary = primary;\r\n    this.isColumn = true;\r\n    // used by React (and possibly other frameworks) as key for rendering. also used to\r\n    // identify old vs new columns for destroying cols when no longer used.\r\n    this.instanceId = getNextColInstanceId();\r\n    // The measured height of this column's header when autoHeaderHeight is enabled\r\n    this.autoHeaderHeight = null;\r\n    this.moving = false;\r\n    this.resizing = false;\r\n    this.menuVisible = false;\r\n    this.lastLeftPinned = false;\r\n    this.firstRightPinned = false;\r\n    this.filterActive = false;\r\n    this.colEventSvc = new LocalEventService();\r\n    this.tooltipEnabled = false;\r\n    this.rowGroupActive = false;\r\n    this.pivotActive = false;\r\n    this.aggregationActive = false;\r\n    this.flex = null;\r\n    this.colIdSanitised = _escapeString(colId);\r\n  }\r\n  destroy() {\r\n    super.destroy();\r\n    this.beans.rowSpanSvc?.deregister(this);\r\n  }\r\n  getInstanceId() {\r\n    return this.instanceId;\r\n  }\r\n  setState() {\r\n    const {\r\n      colDef,\r\n      beans: { sortSvc, pinnedCols, colFlex }\r\n    } = this;\r\n    sortSvc?.initCol(this);\r\n    const hide = colDef.hide;\r\n    if (hide !== void 0) {\r\n      this.visible = !hide;\r\n    } else {\r\n      this.visible = !colDef.initialHide;\r\n    }\r\n    pinnedCols?.initCol(this);\r\n    colFlex?.initCol(this);\r\n  }\r\n  // gets called when user provides an alternative colDef, eg\r\n  setColDef(colDef, userProvidedColDef, source) {\r\n    const colSpanChanged = colDef.spanRows !== this.colDef.spanRows;\r\n    this.colDef = colDef;\r\n    this.userProvidedColDef = userProvidedColDef;\r\n    this.initMinAndMaxWidths();\r\n    this.initDotNotation();\r\n    this.initTooltip();\r\n    if (colSpanChanged) {\r\n      this.beans.rowSpanSvc?.deregister(this);\r\n      this.initRowSpan();\r\n    }\r\n    this.dispatchColEvent(\"colDefChanged\", source);\r\n  }\r\n  getUserProvidedColDef() {\r\n    return this.userProvidedColDef;\r\n  }\r\n  getParent() {\r\n    return this.parent;\r\n  }\r\n  getOriginalParent() {\r\n    return this.originalParent;\r\n  }\r\n  // this is done after constructor as it uses gridOptionsService\r\n  postConstruct() {\r\n    this.setState();\r\n    this.initMinAndMaxWidths();\r\n    this.resetActualWidth(\"gridInitializing\");\r\n    this.initDotNotation();\r\n    this.initTooltip();\r\n    this.initRowSpan();\r\n    this.addPivotListener();\r\n  }\r\n  initDotNotation() {\r\n    const {\r\n      gos,\r\n      colDef: { field, tooltipField }\r\n    } = this;\r\n    const suppressDotNotation = gos.get(\"suppressFieldDotNotation\");\r\n    this.fieldContainsDots = _exists(field) && field.indexOf(\".\") >= 0 && !suppressDotNotation;\r\n    this.tooltipFieldContainsDots = _exists(tooltipField) && tooltipField.indexOf(\".\") >= 0 && !suppressDotNotation;\r\n  }\r\n  initMinAndMaxWidths() {\r\n    const colDef = this.colDef;\r\n    this.minWidth = colDef.minWidth ?? this.beans.environment.getDefaultColumnMinWidth();\r\n    this.maxWidth = colDef.maxWidth ?? Number.MAX_SAFE_INTEGER;\r\n  }\r\n  initTooltip() {\r\n    this.beans.tooltipSvc?.initCol(this);\r\n  }\r\n  initRowSpan() {\r\n    if (this.colDef.spanRows) {\r\n      this.beans.rowSpanSvc?.register(this);\r\n    }\r\n  }\r\n  addPivotListener() {\r\n    const pivotColDefSvc = this.beans.pivotColDefSvc;\r\n    const pivotValueColumn = this.colDef.pivotValueColumn;\r\n    if (!pivotColDefSvc || !pivotValueColumn) {\r\n      return;\r\n    }\r\n    this.addManagedListeners(pivotValueColumn, {\r\n      colDefChanged: (evt) => {\r\n        const colDef = pivotColDefSvc.recreateColDef(this.colDef);\r\n        this.setColDef(colDef, colDef, evt.source);\r\n      }\r\n    });\r\n  }\r\n  resetActualWidth(source) {\r\n    const initialWidth = this.calculateColInitialWidth(this.colDef);\r\n    this.setActualWidth(initialWidth, source, true);\r\n  }\r\n  calculateColInitialWidth(colDef) {\r\n    let width;\r\n    const colDefWidth = colDef.width;\r\n    const colDefInitialWidth = colDef.initialWidth;\r\n    if (colDefWidth != null) {\r\n      width = colDefWidth;\r\n    } else if (colDefInitialWidth != null) {\r\n      width = colDefInitialWidth;\r\n    } else {\r\n      width = 200;\r\n    }\r\n    return Math.max(Math.min(width, this.maxWidth), this.minWidth);\r\n  }\r\n  isEmptyGroup() {\r\n    return false;\r\n  }\r\n  isRowGroupDisplayed(colId) {\r\n    return this.beans.showRowGroupCols?.isRowGroupDisplayed(this, colId) ?? false;\r\n  }\r\n  isPrimary() {\r\n    return this.primary;\r\n  }\r\n  isFilterAllowed() {\r\n    const filterDefined = !!this.colDef.filter;\r\n    return filterDefined;\r\n  }\r\n  isFieldContainsDots() {\r\n    return this.fieldContainsDots;\r\n  }\r\n  isTooltipEnabled() {\r\n    return this.tooltipEnabled;\r\n  }\r\n  isTooltipFieldContainsDots() {\r\n    return this.tooltipFieldContainsDots;\r\n  }\r\n  getHighlighted() {\r\n    return this.highlighted;\r\n  }\r\n  __addEventListener(eventType, listener) {\r\n    this.colEventSvc.addEventListener(eventType, listener);\r\n  }\r\n  __removeEventListener(eventType, listener) {\r\n    this.colEventSvc.removeEventListener(eventType, listener);\r\n  }\r\n  /**\r\n   * PUBLIC USE ONLY: for internal use within AG Grid use the `__addEventListener` and `__removeEventListener` methods.\r\n   */\r\n  addEventListener(eventType, userListener) {\r\n    this.frameworkEventListenerService = this.beans.frameworkOverrides.createLocalEventListenerWrapper?.(\r\n      this.frameworkEventListenerService,\r\n      this.colEventSvc\r\n    );\r\n    const listener = this.frameworkEventListenerService?.wrap(eventType, userListener) ?? userListener;\r\n    this.colEventSvc.addEventListener(eventType, listener);\r\n  }\r\n  /**\r\n   * PUBLIC USE ONLY: for internal use within AG Grid use the `__addEventListener` and `__removeEventListener` methods.\r\n   */\r\n  removeEventListener(eventType, userListener) {\r\n    const listener = this.frameworkEventListenerService?.unwrap(eventType, userListener) ?? userListener;\r\n    this.colEventSvc.removeEventListener(eventType, listener);\r\n  }\r\n  createColumnFunctionCallbackParams(rowNode) {\r\n    return _addGridCommonParams(this.gos, {\r\n      node: rowNode,\r\n      data: rowNode.data,\r\n      column: this,\r\n      colDef: this.colDef\r\n    });\r\n  }\r\n  isSuppressNavigable(rowNode) {\r\n    return this.beans.cellNavigation?.isSuppressNavigable(this, rowNode) ?? false;\r\n  }\r\n  isCellEditable(rowNode) {\r\n    return this.beans.editSvc?.isCellEditable({ rowNode, column: this }) ?? false;\r\n  }\r\n  isSuppressFillHandle() {\r\n    return !!this.colDef.suppressFillHandle;\r\n  }\r\n  isAutoHeight() {\r\n    return !!this.colDef.autoHeight;\r\n  }\r\n  isAutoHeaderHeight() {\r\n    return !!this.colDef.autoHeaderHeight;\r\n  }\r\n  isRowDrag(rowNode) {\r\n    return this.isColumnFunc(rowNode, this.colDef.rowDrag);\r\n  }\r\n  isDndSource(rowNode) {\r\n    return this.isColumnFunc(rowNode, this.colDef.dndSource);\r\n  }\r\n  isCellCheckboxSelection(rowNode) {\r\n    return this.beans.selectionSvc?.isCellCheckboxSelection(this, rowNode) ?? false;\r\n  }\r\n  isSuppressPaste(rowNode) {\r\n    return this.isColumnFunc(rowNode, this.colDef?.suppressPaste ?? null);\r\n  }\r\n  isResizable() {\r\n    return !!this.getColDefValue(\"resizable\");\r\n  }\r\n  /** Get value from ColDef or default if it exists. */\r\n  getColDefValue(key) {\r\n    return this.colDef[key] ?? COL_DEF_DEFAULTS[key];\r\n  }\r\n  isColumnFunc(rowNode, value) {\r\n    if (typeof value === \"boolean\") {\r\n      return value;\r\n    }\r\n    if (typeof value === \"function\") {\r\n      const params = this.createColumnFunctionCallbackParams(rowNode);\r\n      const editableFunc = value;\r\n      return editableFunc(params);\r\n    }\r\n    return false;\r\n  }\r\n  createColumnEvent(type, source) {\r\n    return _addGridCommonParams(this.gos, {\r\n      type,\r\n      column: this,\r\n      columns: [this],\r\n      source\r\n    });\r\n  }\r\n  isMoving() {\r\n    return this.moving;\r\n  }\r\n  getSort() {\r\n    return this.sort;\r\n  }\r\n  isSortable() {\r\n    return !!this.getColDefValue(\"sortable\");\r\n  }\r\n  /** @deprecated v32 use col.getSort() === 'asc */\r\n  isSortAscending() {\r\n    return this.sort === \"asc\";\r\n  }\r\n  /** @deprecated v32 use col.getSort() === 'desc */\r\n  isSortDescending() {\r\n    return this.sort === \"desc\";\r\n  }\r\n  /** @deprecated v32 use col.getSort() === undefined */\r\n  isSortNone() {\r\n    return _missing(this.sort);\r\n  }\r\n  /** @deprecated v32 use col.getSort() !== undefined */\r\n  isSorting() {\r\n    return _exists(this.sort);\r\n  }\r\n  getSortIndex() {\r\n    return this.sortIndex;\r\n  }\r\n  isMenuVisible() {\r\n    return this.menuVisible;\r\n  }\r\n  getAggFunc() {\r\n    return this.aggFunc;\r\n  }\r\n  getLeft() {\r\n    return this.left;\r\n  }\r\n  getOldLeft() {\r\n    return this.oldLeft;\r\n  }\r\n  getRight() {\r\n    return this.left + this.actualWidth;\r\n  }\r\n  setLeft(left, source) {\r\n    this.oldLeft = this.left;\r\n    if (this.left !== left) {\r\n      this.left = left;\r\n      this.dispatchColEvent(\"leftChanged\", source);\r\n    }\r\n  }\r\n  isFilterActive() {\r\n    return this.filterActive;\r\n  }\r\n  /** @deprecated v33 Use `api.isColumnHovered(column)` instead. */\r\n  isHovered() {\r\n    _warn(261);\r\n    return !!this.beans.colHover?.isHovered(this);\r\n  }\r\n  setFirstRightPinned(firstRightPinned, source) {\r\n    if (this.firstRightPinned !== firstRightPinned) {\r\n      this.firstRightPinned = firstRightPinned;\r\n      this.dispatchColEvent(\"firstRightPinnedChanged\", source);\r\n    }\r\n  }\r\n  setLastLeftPinned(lastLeftPinned, source) {\r\n    if (this.lastLeftPinned !== lastLeftPinned) {\r\n      this.lastLeftPinned = lastLeftPinned;\r\n      this.dispatchColEvent(\"lastLeftPinnedChanged\", source);\r\n    }\r\n  }\r\n  isFirstRightPinned() {\r\n    return this.firstRightPinned;\r\n  }\r\n  isLastLeftPinned() {\r\n    return this.lastLeftPinned;\r\n  }\r\n  isPinned() {\r\n    return this.pinned === \"left\" || this.pinned === \"right\";\r\n  }\r\n  isPinnedLeft() {\r\n    return this.pinned === \"left\";\r\n  }\r\n  isPinnedRight() {\r\n    return this.pinned === \"right\";\r\n  }\r\n  getPinned() {\r\n    return this.pinned;\r\n  }\r\n  setVisible(visible, source) {\r\n    const newValue = visible === true;\r\n    if (this.visible !== newValue) {\r\n      this.visible = newValue;\r\n      this.dispatchColEvent(\"visibleChanged\", source);\r\n    }\r\n    this.dispatchStateUpdatedEvent(\"hide\");\r\n  }\r\n  isVisible() {\r\n    return this.visible;\r\n  }\r\n  isSpanHeaderHeight() {\r\n    const colDef = this.getColDef();\r\n    return !colDef.suppressSpanHeaderHeight;\r\n  }\r\n  /**\r\n   * Returns the first parent that is not a padding group.\r\n   */\r\n  getFirstRealParent() {\r\n    let parent = this.getOriginalParent();\r\n    while (parent && parent.isPadding()) {\r\n      parent = parent.getOriginalParent();\r\n    }\r\n    return parent;\r\n  }\r\n  getColumnGroupPaddingInfo() {\r\n    let parent = this.getParent();\r\n    if (!parent || !parent.isPadding()) {\r\n      return { numberOfParents: 0, isSpanningTotal: false };\r\n    }\r\n    const numberOfParents = parent.getPaddingLevel() + 1;\r\n    let isSpanningTotal = true;\r\n    while (parent) {\r\n      if (!parent.isPadding()) {\r\n        isSpanningTotal = false;\r\n        break;\r\n      }\r\n      parent = parent.getParent();\r\n    }\r\n    return { numberOfParents, isSpanningTotal };\r\n  }\r\n  getColDef() {\r\n    return this.colDef;\r\n  }\r\n  getDefinition() {\r\n    return this.colDef;\r\n  }\r\n  getColumnGroupShow() {\r\n    return this.colDef.columnGroupShow;\r\n  }\r\n  getColId() {\r\n    return this.colId;\r\n  }\r\n  getId() {\r\n    return this.colId;\r\n  }\r\n  getUniqueId() {\r\n    return this.colId;\r\n  }\r\n  getActualWidth() {\r\n    return this.actualWidth;\r\n  }\r\n  getAutoHeaderHeight() {\r\n    return this.autoHeaderHeight;\r\n  }\r\n  /** Returns true if the header height has changed */\r\n  setAutoHeaderHeight(height) {\r\n    const changed = height !== this.autoHeaderHeight;\r\n    this.autoHeaderHeight = height;\r\n    return changed;\r\n  }\r\n  createBaseColDefParams(rowNode) {\r\n    const params = _addGridCommonParams(this.gos, {\r\n      node: rowNode,\r\n      data: rowNode.data,\r\n      colDef: this.colDef,\r\n      column: this\r\n    });\r\n    return params;\r\n  }\r\n  getColSpan(rowNode) {\r\n    if (_missing(this.colDef.colSpan)) {\r\n      return 1;\r\n    }\r\n    const params = this.createBaseColDefParams(rowNode);\r\n    const colSpan = this.colDef.colSpan(params);\r\n    return Math.max(colSpan, 1);\r\n  }\r\n  getRowSpan(rowNode) {\r\n    if (_missing(this.colDef.rowSpan)) {\r\n      return 1;\r\n    }\r\n    const params = this.createBaseColDefParams(rowNode);\r\n    const rowSpan = this.colDef.rowSpan(params);\r\n    return Math.max(rowSpan, 1);\r\n  }\r\n  setActualWidth(actualWidth, source, silent = false) {\r\n    actualWidth = Math.max(actualWidth, this.minWidth);\r\n    actualWidth = Math.min(actualWidth, this.maxWidth);\r\n    if (this.actualWidth !== actualWidth) {\r\n      this.actualWidth = actualWidth;\r\n      if (this.flex != null && source !== \"flex\" && source !== \"gridInitializing\") {\r\n        this.flex = null;\r\n      }\r\n      if (!silent) {\r\n        this.fireColumnWidthChangedEvent(source);\r\n      }\r\n    }\r\n    this.dispatchStateUpdatedEvent(\"width\");\r\n  }\r\n  fireColumnWidthChangedEvent(source) {\r\n    this.dispatchColEvent(\"widthChanged\", source);\r\n  }\r\n  isGreaterThanMax(width) {\r\n    return width > this.maxWidth;\r\n  }\r\n  getMinWidth() {\r\n    return this.minWidth;\r\n  }\r\n  getMaxWidth() {\r\n    return this.maxWidth;\r\n  }\r\n  getFlex() {\r\n    return this.flex;\r\n  }\r\n  isRowGroupActive() {\r\n    return this.rowGroupActive;\r\n  }\r\n  isPivotActive() {\r\n    return this.pivotActive;\r\n  }\r\n  isAnyFunctionActive() {\r\n    return this.isPivotActive() || this.isRowGroupActive() || this.isValueActive();\r\n  }\r\n  isAnyFunctionAllowed() {\r\n    return this.isAllowPivot() || this.isAllowRowGroup() || this.isAllowValue();\r\n  }\r\n  isValueActive() {\r\n    return this.aggregationActive;\r\n  }\r\n  isAllowPivot() {\r\n    return this.colDef.enablePivot === true;\r\n  }\r\n  isAllowValue() {\r\n    return this.colDef.enableValue === true;\r\n  }\r\n  isAllowRowGroup() {\r\n    return this.colDef.enableRowGroup === true;\r\n  }\r\n  dispatchColEvent(type, source, additionalEventAttributes) {\r\n    const colEvent = this.createColumnEvent(type, source);\r\n    if (additionalEventAttributes) {\r\n      _mergeDeep(colEvent, additionalEventAttributes);\r\n    }\r\n    this.colEventSvc.dispatchEvent(colEvent);\r\n  }\r\n  dispatchStateUpdatedEvent(key) {\r\n    this.colEventSvc.dispatchEvent({\r\n      type: \"columnStateUpdated\",\r\n      key\r\n    });\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/entities/agProvidedColumnGroup.ts\r\nfunction isProvidedColumnGroup(col) {\r\n  return col instanceof AgProvidedColumnGroup;\r\n}\r\nvar AgProvidedColumnGroup = class extends BeanStub {\r\n  constructor(colGroupDef, groupId, padding, level) {\r\n    super();\r\n    this.colGroupDef = colGroupDef;\r\n    this.groupId = groupId;\r\n    this.padding = padding;\r\n    this.level = level;\r\n    this.isColumn = false;\r\n    this.expandable = false;\r\n    // used by React (and possibly other frameworks) as key for rendering. also used to\r\n    // identify old vs new columns for destroying cols when no longer used.\r\n    this.instanceId = getNextColInstanceId();\r\n    this.expandableListenerRemoveCallback = null;\r\n    this.expanded = !!colGroupDef?.openByDefault;\r\n  }\r\n  destroy() {\r\n    if (this.expandableListenerRemoveCallback) {\r\n      this.reset(null, void 0);\r\n    }\r\n    super.destroy();\r\n  }\r\n  reset(colGroupDef, level) {\r\n    this.colGroupDef = colGroupDef;\r\n    this.level = level;\r\n    this.originalParent = null;\r\n    if (this.expandableListenerRemoveCallback) {\r\n      this.expandableListenerRemoveCallback();\r\n    }\r\n    this.children = void 0;\r\n    this.expandable = void 0;\r\n  }\r\n  getInstanceId() {\r\n    return this.instanceId;\r\n  }\r\n  getOriginalParent() {\r\n    return this.originalParent;\r\n  }\r\n  getLevel() {\r\n    return this.level;\r\n  }\r\n  isVisible() {\r\n    if (this.children) {\r\n      return this.children.some((child) => child.isVisible());\r\n    }\r\n    return false;\r\n  }\r\n  isPadding() {\r\n    return this.padding;\r\n  }\r\n  setExpanded(expanded) {\r\n    this.expanded = expanded === void 0 ? false : expanded;\r\n    this.dispatchLocalEvent({ type: \"expandedChanged\" });\r\n  }\r\n  isExpandable() {\r\n    return this.expandable;\r\n  }\r\n  isExpanded() {\r\n    return this.expanded;\r\n  }\r\n  getGroupId() {\r\n    return this.groupId;\r\n  }\r\n  getId() {\r\n    return this.getGroupId();\r\n  }\r\n  setChildren(children) {\r\n    this.children = children;\r\n  }\r\n  getChildren() {\r\n    return this.children;\r\n  }\r\n  getColGroupDef() {\r\n    return this.colGroupDef;\r\n  }\r\n  getLeafColumns() {\r\n    const result = [];\r\n    this.addLeafColumns(result);\r\n    return result;\r\n  }\r\n  forEachLeafColumn(callback) {\r\n    if (!this.children) {\r\n      return;\r\n    }\r\n    for (const child of this.children) {\r\n      if (isColumn(child)) {\r\n        callback(child);\r\n      } else if (isProvidedColumnGroup(child)) {\r\n        child.forEachLeafColumn(callback);\r\n      }\r\n    }\r\n  }\r\n  addLeafColumns(leafColumns) {\r\n    if (!this.children) {\r\n      return;\r\n    }\r\n    this.children.forEach((child) => {\r\n      if (isColumn(child)) {\r\n        leafColumns.push(child);\r\n      } else if (isProvidedColumnGroup(child)) {\r\n        child.addLeafColumns(leafColumns);\r\n      }\r\n    });\r\n  }\r\n  getColumnGroupShow() {\r\n    const colGroupDef = this.colGroupDef;\r\n    if (!colGroupDef) {\r\n      return;\r\n    }\r\n    return colGroupDef.columnGroupShow;\r\n  }\r\n  // need to check that this group has at least one col showing when both expanded and contracted.\r\n  // if not, then we don't allow expanding and contracting on this group\r\n  setupExpandable() {\r\n    this.setExpandable();\r\n    if (this.expandableListenerRemoveCallback) {\r\n      this.expandableListenerRemoveCallback();\r\n    }\r\n    const listener = this.onColumnVisibilityChanged.bind(this);\r\n    this.getLeafColumns().forEach((col) => col.__addEventListener(\"visibleChanged\", listener));\r\n    this.expandableListenerRemoveCallback = () => {\r\n      this.getLeafColumns().forEach((col) => col.__removeEventListener(\"visibleChanged\", listener));\r\n      this.expandableListenerRemoveCallback = null;\r\n    };\r\n  }\r\n  setExpandable() {\r\n    if (this.isPadding()) {\r\n      return;\r\n    }\r\n    let atLeastOneShowingWhenOpen = false;\r\n    let atLeastOneShowingWhenClosed = false;\r\n    let atLeastOneChangeable = false;\r\n    const children = this.findChildrenRemovingPadding();\r\n    for (let i = 0, j = children.length; i < j; i++) {\r\n      const abstractColumn = children[i];\r\n      if (!abstractColumn.isVisible()) {\r\n        continue;\r\n      }\r\n      const headerGroupShow = abstractColumn.getColumnGroupShow();\r\n      if (headerGroupShow === \"open\") {\r\n        atLeastOneShowingWhenOpen = true;\r\n        atLeastOneChangeable = true;\r\n      } else if (headerGroupShow === \"closed\") {\r\n        atLeastOneShowingWhenClosed = true;\r\n        atLeastOneChangeable = true;\r\n      } else {\r\n        atLeastOneShowingWhenOpen = true;\r\n        atLeastOneShowingWhenClosed = true;\r\n      }\r\n    }\r\n    const expandable = atLeastOneShowingWhenOpen && atLeastOneShowingWhenClosed && atLeastOneChangeable;\r\n    if (this.expandable !== expandable) {\r\n      this.expandable = expandable;\r\n      this.dispatchLocalEvent({ type: \"expandableChanged\" });\r\n    }\r\n  }\r\n  findChildrenRemovingPadding() {\r\n    const res = [];\r\n    const process = (items) => {\r\n      items.forEach((item) => {\r\n        const skipBecausePadding = isProvidedColumnGroup(item) && item.isPadding();\r\n        if (skipBecausePadding) {\r\n          process(item.children);\r\n        } else {\r\n          res.push(item);\r\n        }\r\n      });\r\n    };\r\n    process(this.children);\r\n    return res;\r\n  }\r\n  onColumnVisibilityChanged() {\r\n    this.setExpandable();\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/entities/defaultColumnTypes.ts\r\nvar DefaultColumnTypes = {\r\n  numericColumn: {\r\n    headerClass: \"ag-right-aligned-header\",\r\n    cellClass: \"ag-right-aligned-cell\"\r\n  },\r\n  rightAligned: {\r\n    headerClass: \"ag-right-aligned-header\",\r\n    cellClass: \"ag-right-aligned-cell\"\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/columns/columnGroups/columnGroupUtils.ts\r\nfunction createMergedColGroupDef(beans, colGroupDef, groupId) {\r\n  const colGroupDefMerged = {};\r\n  const gos = beans.gos;\r\n  Object.assign(colGroupDefMerged, gos.get(\"defaultColGroupDef\"));\r\n  Object.assign(colGroupDefMerged, colGroupDef);\r\n  gos.validateColDef(colGroupDefMerged, groupId);\r\n  return colGroupDefMerged;\r\n}\r\n\r\n// packages/ag-grid-community/src/columns/columnKeyCreator.ts\r\nvar ColumnKeyCreator = class {\r\n  constructor() {\r\n    this.existingKeys = {};\r\n  }\r\n  addExistingKeys(keys) {\r\n    for (let i = 0; i < keys.length; i++) {\r\n      this.existingKeys[keys[i]] = true;\r\n    }\r\n  }\r\n  getUniqueKey(colId, colField) {\r\n    colId = _toStringOrNull(colId);\r\n    let count = 0;\r\n    while (true) {\r\n      let idToTry = colId ?? colField;\r\n      if (idToTry) {\r\n        if (count !== 0) {\r\n          idToTry += \"_\" + count;\r\n        }\r\n      } else {\r\n        idToTry = count;\r\n      }\r\n      if (!this.existingKeys[idToTry]) {\r\n        const usedId = String(idToTry);\r\n        if (colId && count > 0) {\r\n          _warn(273, { providedId: colId, usedId });\r\n        }\r\n        this.existingKeys[usedId] = true;\r\n        return usedId;\r\n      }\r\n      count++;\r\n    }\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/utils/array.ts\r\nvar _EmptyArray = Object.freeze([]);\r\nfunction _last(arr) {\r\n  if (!arr?.length) {\r\n    return;\r\n  }\r\n  return arr[arr.length - 1];\r\n}\r\nfunction _areEqual(a, b, comparator) {\r\n  if (a == null && b == null) {\r\n    return true;\r\n  }\r\n  return a != null && b != null && a.length === b.length && a.every((value, index) => comparator ? comparator(value, b[index]) : b[index] === value);\r\n}\r\nfunction _forAll(array, callback) {\r\n  if (!array) {\r\n    return;\r\n  }\r\n  for (const value of array) {\r\n    callback(value);\r\n  }\r\n}\r\nfunction _removeFromArray(array, object) {\r\n  const index = array.indexOf(object);\r\n  if (index >= 0) {\r\n    array.splice(index, 1);\r\n  }\r\n}\r\nfunction _moveInArray(array, objectsToMove, toIndex) {\r\n  for (let i = 0; i < objectsToMove.length; i++) {\r\n    _removeFromArray(array, objectsToMove[i]);\r\n  }\r\n  for (let i = objectsToMove.length - 1; i >= 0; i--) {\r\n    array.splice(toIndex, 0, objectsToMove[i]);\r\n  }\r\n}\r\nfunction _flatten(arrays) {\r\n  return [].concat.apply([], arrays);\r\n}\r\n\r\n// packages/ag-grid-community/src/columns/columnUtils.ts\r\nvar GROUP_AUTO_COLUMN_ID = \"ag-Grid-AutoColumn\";\r\nvar SELECTION_COLUMN_ID = \"ag-Grid-SelectionColumn\";\r\nvar ROW_NUMBERS_COLUMN_ID = \"ag-Grid-RowNumbersColumn\";\r\nfunction _getColumnsFromTree(rootColumns) {\r\n  const result = [];\r\n  const recursiveFindColumns = (childColumns) => {\r\n    for (let i = 0; i < childColumns.length; i++) {\r\n      const child = childColumns[i];\r\n      if (isColumn(child)) {\r\n        result.push(child);\r\n      } else if (isProvidedColumnGroup(child)) {\r\n        recursiveFindColumns(child.getChildren());\r\n      }\r\n    }\r\n  };\r\n  recursiveFindColumns(rootColumns);\r\n  return result;\r\n}\r\nfunction getWidthOfColsInList(columnList) {\r\n  return columnList.reduce((width, col) => width + col.getActualWidth(), 0);\r\n}\r\nfunction _destroyColumnTree(beans, oldTree, newTree) {\r\n  const oldObjectsById = {};\r\n  if (!oldTree) {\r\n    return;\r\n  }\r\n  depthFirstOriginalTreeSearch(null, oldTree, (child) => {\r\n    oldObjectsById[child.getInstanceId()] = child;\r\n  });\r\n  if (newTree) {\r\n    depthFirstOriginalTreeSearch(null, newTree, (child) => {\r\n      oldObjectsById[child.getInstanceId()] = null;\r\n    });\r\n  }\r\n  const colsToDestroy = Object.values(oldObjectsById).filter((item) => item != null);\r\n  beans.context.destroyBeans(colsToDestroy);\r\n}\r\nfunction isColumnGroupAutoCol(col) {\r\n  const colId = col.getId();\r\n  return colId.startsWith(GROUP_AUTO_COLUMN_ID);\r\n}\r\nfunction isColumnSelectionCol(col) {\r\n  const id = typeof col === \"string\" ? col : \"getColId\" in col ? col.getColId() : col.colId;\r\n  return id?.startsWith(SELECTION_COLUMN_ID) ?? false;\r\n}\r\nfunction isRowNumberCol(col) {\r\n  const id = typeof col === \"string\" ? col : \"getColId\" in col ? col.getColId() : col.colId;\r\n  return id?.startsWith(ROW_NUMBERS_COLUMN_ID) ?? false;\r\n}\r\nfunction isSpecialCol(col) {\r\n  return isColumnSelectionCol(col) || isRowNumberCol(col);\r\n}\r\nfunction convertColumnTypes(type) {\r\n  let typeKeys = [];\r\n  if (type instanceof Array) {\r\n    typeKeys = type;\r\n  } else if (typeof type === \"string\") {\r\n    typeKeys = type.split(\",\");\r\n  }\r\n  return typeKeys;\r\n}\r\nfunction _areColIdsEqual(colsA, colsB) {\r\n  return _areEqual(colsA, colsB, (a, b) => a.getColId() === b.getColId());\r\n}\r\nfunction _updateColsMap(cols) {\r\n  cols.map = {};\r\n  cols.list.forEach((col) => cols.map[col.getId()] = col);\r\n}\r\nfunction _convertColumnEventSourceType(source) {\r\n  return source === \"gridOptionsUpdated\" ? \"gridOptionsChanged\" : source;\r\n}\r\nfunction _columnsMatch(column, key) {\r\n  const columnMatches = column === key;\r\n  const colDefMatches = column.getColDef() === key;\r\n  const idMatches = column.getColId() == key;\r\n  return columnMatches || colDefMatches || idMatches;\r\n}\r\nvar getValueFactory = (stateItem, defaultState) => (key1, key2) => {\r\n  const obj = {\r\n    value1: void 0,\r\n    value2: void 0\r\n  };\r\n  let calculated = false;\r\n  if (stateItem) {\r\n    if (stateItem[key1] !== void 0) {\r\n      obj.value1 = stateItem[key1];\r\n      calculated = true;\r\n    }\r\n    if (_exists(key2) && stateItem[key2] !== void 0) {\r\n      obj.value2 = stateItem[key2];\r\n      calculated = true;\r\n    }\r\n  }\r\n  if (!calculated && defaultState) {\r\n    if (defaultState[key1] !== void 0) {\r\n      obj.value1 = defaultState[key1];\r\n    }\r\n    if (_exists(key2) && defaultState[key2] !== void 0) {\r\n      obj.value2 = defaultState[key2];\r\n    }\r\n  }\r\n  return obj;\r\n};\r\n\r\n// packages/ag-grid-community/src/columns/columnFactoryUtils.ts\r\nfunction _createColumnTreeWithIds(beans, defs = null, primaryColumns, existingTree, source) {\r\n  const { existingCols, existingGroups } = extractExistingTreeData(existingTree);\r\n  const colIdMap = new Map(existingCols.map((col) => [col.getId(), col]));\r\n  const colGroupIdMap = new Map(existingGroups.map((group) => [group.getId(), group]));\r\n  let maxDepth = 0;\r\n  const recursivelyProcessColDef = (def, level) => {\r\n    maxDepth = Math.max(maxDepth, level);\r\n    if (isColumnGroupDef(def)) {\r\n      if (!beans.colGroupSvc) {\r\n        return null;\r\n      }\r\n      const groupId = def.groupId;\r\n      const group = colGroupIdMap.get(groupId);\r\n      const colGroupDef = createMergedColGroupDef(beans, def, groupId);\r\n      const newGroup = new AgProvidedColumnGroup(colGroupDef, groupId, false, level);\r\n      beans.context.createBean(newGroup);\r\n      if (group) {\r\n        newGroup.setExpanded(group.isExpanded());\r\n      }\r\n      newGroup.setChildren(def.children.map((child) => recursivelyProcessColDef(child, level + 1)));\r\n      return newGroup;\r\n    }\r\n    const colId = def.colId;\r\n    let column = colIdMap.get(colId);\r\n    const colDefMerged = _addColumnDefaultAndTypes(beans, def, column?.getColId() ?? colId);\r\n    if (!column) {\r\n      column = new AgColumn(colDefMerged, def, colId, primaryColumns);\r\n      beans.context.createBean(column);\r\n    } else {\r\n      column.setColDef(colDefMerged, def, source);\r\n      _updateColumnState(beans, column, colDefMerged, source);\r\n    }\r\n    beans.dataTypeSvc?.addColumnListeners(column);\r\n    return column;\r\n  };\r\n  const root = defs?.map((def) => recursivelyProcessColDef(def, 0)) ?? [];\r\n  let counter = 0;\r\n  const keyCreator = {\r\n    getUniqueKey: (_colId, _field) => String(++counter)\r\n  };\r\n  const columnTree = beans.colGroupSvc ? beans.colGroupSvc.balanceColumnTree(root, 0, maxDepth, keyCreator) : root;\r\n  const depthFirstCallback = (child, parent) => {\r\n    if (isProvidedColumnGroup(child)) {\r\n      child.setupExpandable();\r\n    }\r\n    child.originalParent = parent;\r\n  };\r\n  depthFirstOriginalTreeSearch(null, columnTree, depthFirstCallback);\r\n  return {\r\n    columnTree,\r\n    treeDepth: maxDepth\r\n  };\r\n}\r\nfunction _createColumnTree(beans, defs = null, primaryColumns, existingTree, source) {\r\n  const columnKeyCreator = new ColumnKeyCreator();\r\n  const { existingCols, existingGroups, existingColKeys } = extractExistingTreeData(existingTree);\r\n  columnKeyCreator.addExistingKeys(existingColKeys);\r\n  const unbalancedTree = _recursivelyCreateColumns(\r\n    beans,\r\n    defs,\r\n    0,\r\n    primaryColumns,\r\n    existingCols,\r\n    columnKeyCreator,\r\n    existingGroups,\r\n    source\r\n  );\r\n  const { colGroupSvc } = beans;\r\n  const treeDepth = colGroupSvc?.findMaxDepth(unbalancedTree, 0) ?? 0;\r\n  const columnTree = colGroupSvc ? colGroupSvc.balanceColumnTree(unbalancedTree, 0, treeDepth, columnKeyCreator) : unbalancedTree;\r\n  const depthFirstCallback = (child, parent) => {\r\n    if (isProvidedColumnGroup(child)) {\r\n      child.setupExpandable();\r\n    }\r\n    child.originalParent = parent;\r\n  };\r\n  depthFirstOriginalTreeSearch(null, columnTree, depthFirstCallback);\r\n  return {\r\n    columnTree,\r\n    treeDepth\r\n  };\r\n}\r\nfunction extractExistingTreeData(existingTree) {\r\n  const existingCols = [];\r\n  const existingGroups = [];\r\n  const existingColKeys = [];\r\n  if (existingTree) {\r\n    depthFirstOriginalTreeSearch(null, existingTree, (item) => {\r\n      if (isProvidedColumnGroup(item)) {\r\n        const group = item;\r\n        existingGroups.push(group);\r\n      } else {\r\n        const col = item;\r\n        existingColKeys.push(col.getId());\r\n        existingCols.push(col);\r\n      }\r\n    });\r\n  }\r\n  return { existingCols, existingGroups, existingColKeys };\r\n}\r\nfunction _recursivelyCreateColumns(beans, defs, level, primaryColumns, existingColsCopy, columnKeyCreator, existingGroups, source) {\r\n  if (!defs)\r\n    return [];\r\n  const { colGroupSvc } = beans;\r\n  const result = new Array(defs.length);\r\n  for (let i = 0; i < result.length; i++) {\r\n    const def = defs[i];\r\n    if (colGroupSvc && isColumnGroupDef(def)) {\r\n      result[i] = colGroupSvc.createProvidedColumnGroup(\r\n        primaryColumns,\r\n        def,\r\n        level,\r\n        existingColsCopy,\r\n        columnKeyCreator,\r\n        existingGroups,\r\n        source\r\n      );\r\n    } else {\r\n      result[i] = createColumn(beans, primaryColumns, def, existingColsCopy, columnKeyCreator, source);\r\n    }\r\n  }\r\n  return result;\r\n}\r\nfunction createColumn(beans, primaryColumns, colDef, existingColsCopy, columnKeyCreator, source) {\r\n  const existingColAndIndex = findExistingColumn(colDef, existingColsCopy);\r\n  if (existingColAndIndex) {\r\n    existingColsCopy?.splice(existingColAndIndex.idx, 1);\r\n  }\r\n  let column = existingColAndIndex?.column;\r\n  if (!column) {\r\n    const colId = columnKeyCreator.getUniqueKey(colDef.colId, colDef.field);\r\n    const colDefMerged = _addColumnDefaultAndTypes(beans, colDef, colId);\r\n    column = new AgColumn(colDefMerged, colDef, colId, primaryColumns);\r\n    beans.context.createBean(column);\r\n  } else {\r\n    const colDefMerged = _addColumnDefaultAndTypes(beans, colDef, column.getColId());\r\n    column.setColDef(colDefMerged, colDef, source);\r\n    _updateColumnState(beans, column, colDefMerged, source);\r\n  }\r\n  beans.dataTypeSvc?.addColumnListeners(column);\r\n  return column;\r\n}\r\nfunction updateSomeColumnState(beans, column, hide, sort, sortIndex, pinned, flex, source) {\r\n  const { sortSvc, pinnedCols, colFlex } = beans;\r\n  if (hide !== void 0) {\r\n    column.setVisible(!hide, source);\r\n  }\r\n  if (sortSvc) {\r\n    sortSvc.updateColSort(column, sort, source);\r\n    if (sortIndex !== void 0) {\r\n      sortSvc.setColSortIndex(column, sortIndex);\r\n    }\r\n  }\r\n  if (pinned !== void 0) {\r\n    pinnedCols?.setColPinned(column, pinned);\r\n  }\r\n  if (flex !== void 0) {\r\n    colFlex?.setColFlex(column, flex);\r\n  }\r\n}\r\nfunction _updateColumnState(beans, column, colDef, source) {\r\n  updateSomeColumnState(\r\n    beans,\r\n    column,\r\n    colDef.hide,\r\n    colDef.sort,\r\n    colDef.sortIndex,\r\n    colDef.pinned,\r\n    colDef.flex,\r\n    source\r\n  );\r\n  const colFlex = column.getFlex();\r\n  if (colFlex != null && colFlex > 0) {\r\n    return;\r\n  }\r\n  if (colDef.width != null) {\r\n    column.setActualWidth(colDef.width, source);\r\n  } else {\r\n    const widthBeforeUpdate = column.getActualWidth();\r\n    column.setActualWidth(widthBeforeUpdate, source);\r\n  }\r\n}\r\nfunction findExistingColumn(newColDef, existingColsCopy) {\r\n  if (!existingColsCopy)\r\n    return void 0;\r\n  for (let i = 0; i < existingColsCopy.length; i++) {\r\n    const def = existingColsCopy[i].getUserProvidedColDef();\r\n    if (!def)\r\n      continue;\r\n    const newHasId = newColDef.colId != null;\r\n    if (newHasId) {\r\n      if (existingColsCopy[i].getId() === newColDef.colId) {\r\n        return { idx: i, column: existingColsCopy[i] };\r\n      }\r\n      continue;\r\n    }\r\n    const newHasField = newColDef.field != null;\r\n    if (newHasField) {\r\n      if (def.field === newColDef.field) {\r\n        return { idx: i, column: existingColsCopy[i] };\r\n      }\r\n      continue;\r\n    }\r\n    if (def === newColDef) {\r\n      return { idx: i, column: existingColsCopy[i] };\r\n    }\r\n  }\r\n  return void 0;\r\n}\r\nfunction _addColumnDefaultAndTypes(beans, colDef, colId, isAutoCol) {\r\n  const { gos, dataTypeSvc } = beans;\r\n  const res = {};\r\n  const defaultColDef = gos.get(\"defaultColDef\");\r\n  _mergeDeep(res, defaultColDef, false, true);\r\n  const columnType = updateColDefAndGetColumnType(beans, res, colDef, colId);\r\n  if (columnType) {\r\n    assignColumnTypes(beans, columnType, res);\r\n  }\r\n  const cellDataType = res.cellDataType;\r\n  _mergeDeep(res, colDef, false, true);\r\n  if (cellDataType !== void 0) {\r\n    res.cellDataType = cellDataType;\r\n  }\r\n  const autoGroupColDef = gos.get(\"autoGroupColumnDef\");\r\n  const isSortingCoupled = _isColumnsSortingCoupledToGroup(gos);\r\n  if (colDef.rowGroup && autoGroupColDef && isSortingCoupled) {\r\n    _mergeDeep(\r\n      res,\r\n      { sort: autoGroupColDef.sort, initialSort: autoGroupColDef.initialSort },\r\n      false,\r\n      true\r\n    );\r\n  }\r\n  if (dataTypeSvc) {\r\n    dataTypeSvc.postProcess(res);\r\n    dataTypeSvc.validateColDef(res);\r\n  }\r\n  gos.validateColDef(res, colId, isAutoCol);\r\n  return res;\r\n}\r\nfunction updateColDefAndGetColumnType(beans, colDef, userColDef, colId) {\r\n  const dataTypeDefinitionColumnType = beans.dataTypeSvc?.updateColDefAndGetColumnType(colDef, userColDef, colId);\r\n  const columnTypes = userColDef.type ?? dataTypeDefinitionColumnType ?? colDef.type;\r\n  colDef.type = columnTypes;\r\n  return columnTypes ? convertColumnTypes(columnTypes) : void 0;\r\n}\r\nfunction assignColumnTypes(beans, typeKeys, colDefMerged) {\r\n  if (!typeKeys.length) {\r\n    return;\r\n  }\r\n  const allColumnTypes = Object.assign({}, DefaultColumnTypes);\r\n  const userTypes = beans.gos.get(\"columnTypes\") || {};\r\n  for (const key of Object.keys(userTypes)) {\r\n    const value = userTypes[key];\r\n    if (key in allColumnTypes) {\r\n      _warn(34, { key });\r\n    } else {\r\n      const colType = value;\r\n      if (colType.type) {\r\n        _warn(35);\r\n      }\r\n      allColumnTypes[key] = value;\r\n    }\r\n  }\r\n  typeKeys.forEach((t) => {\r\n    const typeColDef = allColumnTypes[t.trim()];\r\n    if (typeColDef) {\r\n      _mergeDeep(colDefMerged, typeColDef, false, true);\r\n    } else {\r\n      _warn(36, { t });\r\n    }\r\n  });\r\n}\r\nfunction isColumnGroupDef(abstractColDef) {\r\n  return abstractColDef.children !== void 0;\r\n}\r\nfunction depthFirstOriginalTreeSearch(parent, tree, callback) {\r\n  if (!tree) {\r\n    return;\r\n  }\r\n  for (let i = 0; i < tree.length; i++) {\r\n    const child = tree[i];\r\n    if (isProvidedColumnGroup(child)) {\r\n      depthFirstOriginalTreeSearch(child, child.getChildren(), callback);\r\n    }\r\n    callback(child, parent);\r\n  }\r\n}\r\n\r\n// packages/ag-grid-community/src/columnMove/columnMoveUtils.ts\r\nfunction placeLockedColumns(cols, gos) {\r\n  const left = [];\r\n  const normal = [];\r\n  const right = [];\r\n  cols.forEach((col) => {\r\n    const position = col.getColDef().lockPosition;\r\n    if (position === \"right\") {\r\n      right.push(col);\r\n    } else if (position === \"left\" || position === true) {\r\n      left.push(col);\r\n    } else {\r\n      normal.push(col);\r\n    }\r\n  });\r\n  const isRtl = gos.get(\"enableRtl\");\r\n  if (isRtl) {\r\n    return [...right, ...normal, ...left];\r\n  }\r\n  return [...left, ...normal, ...right];\r\n}\r\nfunction doesMovePassMarryChildren(allColumnsCopy, gridBalancedTree) {\r\n  let rulePassed = true;\r\n  depthFirstOriginalTreeSearch(null, gridBalancedTree, (child) => {\r\n    if (!isProvidedColumnGroup(child)) {\r\n      return;\r\n    }\r\n    const columnGroup = child;\r\n    const colGroupDef = columnGroup.getColGroupDef();\r\n    const marryChildren = colGroupDef && colGroupDef.marryChildren;\r\n    if (!marryChildren) {\r\n      return;\r\n    }\r\n    const newIndexes = [];\r\n    columnGroup.getLeafColumns().forEach((col) => {\r\n      const newColIndex = allColumnsCopy.indexOf(col);\r\n      newIndexes.push(newColIndex);\r\n    });\r\n    const maxIndex = Math.max.apply(Math, newIndexes);\r\n    const minIndex = Math.min.apply(Math, newIndexes);\r\n    const spread = maxIndex - minIndex;\r\n    const maxSpread = columnGroup.getLeafColumns().length - 1;\r\n    if (spread > maxSpread) {\r\n      rulePassed = false;\r\n    }\r\n  });\r\n  return rulePassed;\r\n}\r\n\r\n// packages/ag-grid-community/src/columns/columnEventUtils.ts\r\nfunction getCommonValue(cols, valueGetter) {\r\n  if (!cols || cols.length == 0) {\r\n    return void 0;\r\n  }\r\n  const firstValue = valueGetter(cols[0]);\r\n  for (let i = 1; i < cols.length; i++) {\r\n    if (firstValue !== valueGetter(cols[i])) {\r\n      return void 0;\r\n    }\r\n  }\r\n  return firstValue;\r\n}\r\nfunction dispatchColumnPinnedEvent(eventSvc, changedColumns, source) {\r\n  if (!changedColumns.length) {\r\n    return;\r\n  }\r\n  const column = changedColumns.length === 1 ? changedColumns[0] : null;\r\n  const pinned = getCommonValue(changedColumns, (col) => col.getPinned());\r\n  eventSvc.dispatchEvent({\r\n    type: \"columnPinned\",\r\n    // mistake in typing, 'undefined' should be allowed, as 'null' means 'not pinned'\r\n    pinned: pinned != null ? pinned : null,\r\n    columns: changedColumns,\r\n    column,\r\n    source\r\n  });\r\n}\r\nfunction dispatchColumnVisibleEvent(eventSvc, changedColumns, source) {\r\n  if (!changedColumns.length) {\r\n    return;\r\n  }\r\n  const column = changedColumns.length === 1 ? changedColumns[0] : null;\r\n  const visible = getCommonValue(changedColumns, (col) => col.isVisible());\r\n  eventSvc.dispatchEvent({\r\n    type: \"columnVisible\",\r\n    visible,\r\n    columns: changedColumns,\r\n    column,\r\n    source\r\n  });\r\n}\r\nfunction dispatchColumnChangedEvent(eventSvc, type, columns, source) {\r\n  eventSvc.dispatchEvent({\r\n    type,\r\n    columns,\r\n    column: columns && columns.length == 1 ? columns[0] : null,\r\n    source\r\n  });\r\n}\r\nfunction dispatchColumnResizedEvent(eventSvc, columns, finished, source, flexColumns = null) {\r\n  if (columns?.length) {\r\n    eventSvc.dispatchEvent({\r\n      type: \"columnResized\",\r\n      columns,\r\n      column: columns.length === 1 ? columns[0] : null,\r\n      flexColumns,\r\n      finished,\r\n      source\r\n    });\r\n  }\r\n}\r\n\r\n// packages/ag-grid-community/src/columns/columnStateUtils.ts\r\nfunction _applyColumnState(beans, params, source) {\r\n  const {\r\n    colModel,\r\n    rowGroupColsSvc,\r\n    pivotColsSvc,\r\n    autoColSvc,\r\n    selectionColSvc,\r\n    colAnimation,\r\n    visibleCols,\r\n    pivotResultCols,\r\n    environment,\r\n    valueColsSvc,\r\n    eventSvc,\r\n    gos\r\n  } = beans;\r\n  const providedCols = colModel.getColDefCols() ?? [];\r\n  const selectionCols = selectionColSvc?.getColumns();\r\n  if (!providedCols?.length && !selectionCols?.length) {\r\n    return false;\r\n  }\r\n  if (params?.state && !params.state.forEach) {\r\n    _warn(32);\r\n    return false;\r\n  }\r\n  const syncColumnWithStateItem = (column, stateItem, rowGroupIndexes, pivotIndexes, autoCol) => {\r\n    if (!column) {\r\n      return;\r\n    }\r\n    const getValue = getValueFactory(stateItem, params.defaultState);\r\n    const flex = getValue(\"flex\").value1;\r\n    updateSomeColumnState(\r\n      beans,\r\n      column,\r\n      getValue(\"hide\").value1,\r\n      getValue(\"sort\").value1,\r\n      getValue(\"sortIndex\").value1,\r\n      getValue(\"pinned\").value1,\r\n      flex,\r\n      source\r\n    );\r\n    if (flex == null) {\r\n      const width = getValue(\"width\").value1;\r\n      if (width != null) {\r\n        const minColWidth = column.getColDef().minWidth ?? environment.getDefaultColumnMinWidth();\r\n        if (minColWidth != null && width >= minColWidth) {\r\n          column.setActualWidth(width, source);\r\n        }\r\n      }\r\n    }\r\n    if (autoCol || !column.isPrimary()) {\r\n      return;\r\n    }\r\n    valueColsSvc?.syncColumnWithState(column, source, getValue);\r\n    rowGroupColsSvc?.syncColumnWithState(column, source, getValue, rowGroupIndexes);\r\n    pivotColsSvc?.syncColumnWithState(column, source, getValue, pivotIndexes);\r\n  };\r\n  const applyStates = (states, existingColumns, getById2) => {\r\n    const dispatchEventsFunc = _compareColumnStatesAndDispatchEvents(beans, source);\r\n    const columnsWithNoState = existingColumns.slice();\r\n    const rowGroupIndexes = {};\r\n    const pivotIndexes = {};\r\n    const autoColStates = [];\r\n    const selectionColStates = [];\r\n    const unmatchedAndAutoStates2 = [];\r\n    let unmatchedCount2 = 0;\r\n    const previousRowGroupCols = rowGroupColsSvc?.columns.slice() ?? [];\r\n    const previousPivotCols = pivotColsSvc?.columns.slice() ?? [];\r\n    states.forEach((state) => {\r\n      const colId = state.colId;\r\n      const isAutoGroupColumn = colId.startsWith(GROUP_AUTO_COLUMN_ID);\r\n      if (isAutoGroupColumn) {\r\n        autoColStates.push(state);\r\n        unmatchedAndAutoStates2.push(state);\r\n        return;\r\n      }\r\n      if (isColumnSelectionCol(colId)) {\r\n        selectionColStates.push(state);\r\n        unmatchedAndAutoStates2.push(state);\r\n        return;\r\n      }\r\n      const column = getById2(colId);\r\n      if (!column) {\r\n        unmatchedAndAutoStates2.push(state);\r\n        unmatchedCount2 += 1;\r\n      } else {\r\n        syncColumnWithStateItem(column, state, rowGroupIndexes, pivotIndexes, false);\r\n        _removeFromArray(columnsWithNoState, column);\r\n      }\r\n    });\r\n    const applyDefaultsFunc = (col) => syncColumnWithStateItem(col, null, rowGroupIndexes, pivotIndexes, false);\r\n    columnsWithNoState.forEach(applyDefaultsFunc);\r\n    rowGroupColsSvc?.sortColumns(comparatorByIndex.bind(rowGroupColsSvc, rowGroupIndexes, previousRowGroupCols));\r\n    pivotColsSvc?.sortColumns(comparatorByIndex.bind(pivotColsSvc, pivotIndexes, previousPivotCols));\r\n    colModel.refreshCols(false);\r\n    const syncColStates = (getCol, colStates, columns = []) => {\r\n      colStates.forEach((stateItem) => {\r\n        const col = getCol(stateItem.colId);\r\n        _removeFromArray(columns, col);\r\n        syncColumnWithStateItem(col, stateItem, null, null, true);\r\n      });\r\n      columns.forEach(applyDefaultsFunc);\r\n    };\r\n    syncColStates(\r\n      (colId) => autoColSvc?.getColumn(colId) ?? null,\r\n      autoColStates,\r\n      autoColSvc?.getColumns()?.slice()\r\n    );\r\n    syncColStates(\r\n      (colId) => selectionColSvc?.getColumn(colId) ?? null,\r\n      selectionColStates,\r\n      selectionColSvc?.getColumns()?.slice()\r\n    );\r\n    orderLiveColsLikeState(params, colModel, gos);\r\n    visibleCols.refresh(source);\r\n    eventSvc.dispatchEvent({\r\n      type: \"columnEverythingChanged\",\r\n      source\r\n    });\r\n    dispatchEventsFunc();\r\n    return { unmatchedAndAutoStates: unmatchedAndAutoStates2, unmatchedCount: unmatchedCount2 };\r\n  };\r\n  colAnimation?.start();\r\n  let { unmatchedAndAutoStates, unmatchedCount } = applyStates(\r\n    params.state || [],\r\n    providedCols,\r\n    (id) => colModel.getColDefCol(id)\r\n  );\r\n  if (unmatchedAndAutoStates.length > 0 || _exists(params.defaultState)) {\r\n    const pivotResultColsList = pivotResultCols?.getPivotResultCols()?.list ?? [];\r\n    unmatchedCount = applyStates(\r\n      unmatchedAndAutoStates,\r\n      pivotResultColsList,\r\n      (id) => pivotResultCols?.getPivotResultCol(id) ?? null\r\n    ).unmatchedCount;\r\n  }\r\n  colAnimation?.finish();\r\n  return unmatchedCount === 0;\r\n}\r\nfunction _resetColumnState(beans, source) {\r\n  const { colModel, autoColSvc, selectionColSvc, eventSvc, gos } = beans;\r\n  const primaryCols = colModel.getColDefCols();\r\n  if (!primaryCols?.length) {\r\n    return;\r\n  }\r\n  const primaryColumnTree = colModel.getColDefColTree();\r\n  const primaryColumns = _getColumnsFromTree(primaryColumnTree);\r\n  const columnStates = [];\r\n  let letRowGroupIndex = 1e3;\r\n  let letPivotIndex = 1e3;\r\n  const addColState = (col) => {\r\n    const stateItem = getColumnStateFromColDef(col);\r\n    if (_missing(stateItem.rowGroupIndex) && stateItem.rowGroup) {\r\n      stateItem.rowGroupIndex = letRowGroupIndex++;\r\n    }\r\n    if (_missing(stateItem.pivotIndex) && stateItem.pivot) {\r\n      stateItem.pivotIndex = letPivotIndex++;\r\n    }\r\n    columnStates.push(stateItem);\r\n  };\r\n  autoColSvc?.getColumns()?.forEach(addColState);\r\n  selectionColSvc?.getColumns()?.forEach(addColState);\r\n  primaryColumns?.forEach(addColState);\r\n  _applyColumnState(beans, { state: columnStates }, source);\r\n  const autoCols = autoColSvc?.getColumns() ?? [];\r\n  const selectionCols = selectionColSvc?.getColumns() ?? [];\r\n  const orderedCols = [...selectionCols, ...autoCols, ...primaryCols];\r\n  const orderedColState = orderedCols.map((col) => ({ colId: col.colId }));\r\n  _applyColumnState(beans, { state: orderedColState, applyOrder: true }, source);\r\n  eventSvc.dispatchEvent(_addGridCommonParams(gos, { type: \"columnsReset\", source }));\r\n}\r\nfunction _compareColumnStatesAndDispatchEvents(beans, source) {\r\n  const { rowGroupColsSvc, pivotColsSvc, valueColsSvc, colModel, sortSvc, eventSvc } = beans;\r\n  const startState = {\r\n    rowGroupColumns: rowGroupColsSvc?.columns.slice() ?? [],\r\n    pivotColumns: pivotColsSvc?.columns.slice() ?? [],\r\n    valueColumns: valueColsSvc?.columns.slice() ?? []\r\n  };\r\n  const columnStateBefore = _getColumnState(beans);\r\n  const columnStateBeforeMap = {};\r\n  columnStateBefore.forEach((col) => {\r\n    columnStateBeforeMap[col.colId] = col;\r\n  });\r\n  return () => {\r\n    const dispatchWhenListsDifferent = (eventType, colsBefore, colsAfter, idMapper) => {\r\n      const beforeList = colsBefore.map(idMapper);\r\n      const afterList = colsAfter.map(idMapper);\r\n      const unchanged = _areEqual(beforeList, afterList);\r\n      if (unchanged) {\r\n        return;\r\n      }\r\n      const changes = new Set(colsBefore);\r\n      colsAfter.forEach((id) => {\r\n        if (!changes.delete(id)) {\r\n          changes.add(id);\r\n        }\r\n      });\r\n      const changesArr = [...changes];\r\n      eventSvc.dispatchEvent({\r\n        type: eventType,\r\n        columns: changesArr,\r\n        column: changesArr.length === 1 ? changesArr[0] : null,\r\n        source\r\n      });\r\n    };\r\n    const getChangedColumns = (changedPredicate) => {\r\n      const changedColumns2 = [];\r\n      colModel.forAllCols((column) => {\r\n        const colStateBefore = columnStateBeforeMap[column.getColId()];\r\n        if (colStateBefore && changedPredicate(colStateBefore, column)) {\r\n          changedColumns2.push(column);\r\n        }\r\n      });\r\n      return changedColumns2;\r\n    };\r\n    const columnIdMapper = (c) => c.getColId();\r\n    dispatchWhenListsDifferent(\r\n      \"columnRowGroupChanged\",\r\n      startState.rowGroupColumns,\r\n      rowGroupColsSvc?.columns ?? [],\r\n      columnIdMapper\r\n    );\r\n    dispatchWhenListsDifferent(\r\n      \"columnPivotChanged\",\r\n      startState.pivotColumns,\r\n      pivotColsSvc?.columns ?? [],\r\n      columnIdMapper\r\n    );\r\n    const valueChangePredicate = (cs, c) => {\r\n      const oldActive = cs.aggFunc != null;\r\n      const activeChanged = oldActive != c.isValueActive();\r\n      const aggFuncChanged = oldActive && cs.aggFunc != c.getAggFunc();\r\n      return activeChanged || aggFuncChanged;\r\n    };\r\n    const changedValues = getChangedColumns(valueChangePredicate);\r\n    if (changedValues.length > 0) {\r\n      dispatchColumnChangedEvent(eventSvc, \"columnValueChanged\", changedValues, source);\r\n    }\r\n    const resizeChangePredicate = (cs, c) => cs.width != c.getActualWidth();\r\n    dispatchColumnResizedEvent(eventSvc, getChangedColumns(resizeChangePredicate), true, source);\r\n    const pinnedChangePredicate = (cs, c) => cs.pinned != c.getPinned();\r\n    dispatchColumnPinnedEvent(eventSvc, getChangedColumns(pinnedChangePredicate), source);\r\n    const visibilityChangePredicate = (cs, c) => cs.hide == c.isVisible();\r\n    dispatchColumnVisibleEvent(eventSvc, getChangedColumns(visibilityChangePredicate), source);\r\n    const sortChangePredicate = (cs, c) => cs.sort != c.getSort() || cs.sortIndex != c.getSortIndex();\r\n    const changedColumns = getChangedColumns(sortChangePredicate);\r\n    if (changedColumns.length > 0) {\r\n      sortSvc?.dispatchSortChangedEvents(source, changedColumns);\r\n    }\r\n    const colStateAfter = _getColumnState(beans);\r\n    normaliseColumnMovedEventForColumnState(columnStateBefore, colStateAfter, source, colModel, eventSvc);\r\n  };\r\n}\r\nfunction _getColumnState(beans) {\r\n  const { colModel, rowGroupColsSvc, pivotColsSvc } = beans;\r\n  const primaryCols = colModel.getColDefCols();\r\n  if (_missing(primaryCols) || !colModel.isAlive()) {\r\n    return [];\r\n  }\r\n  const rowGroupColumns = rowGroupColsSvc?.columns;\r\n  const pivotColumns = pivotColsSvc?.columns;\r\n  const res = [];\r\n  const createStateItemFromColumn = (column) => {\r\n    const rowGroupIndex = column.isRowGroupActive() && rowGroupColumns ? rowGroupColumns.indexOf(column) : null;\r\n    const pivotIndex = column.isPivotActive() && pivotColumns ? pivotColumns.indexOf(column) : null;\r\n    const aggFunc = column.isValueActive() ? column.getAggFunc() : null;\r\n    const sort = column.getSort() != null ? column.getSort() : null;\r\n    const sortIndex = column.getSortIndex() != null ? column.getSortIndex() : null;\r\n    res.push({\r\n      colId: column.getColId(),\r\n      width: column.getActualWidth(),\r\n      hide: !column.isVisible(),\r\n      pinned: column.getPinned(),\r\n      sort,\r\n      sortIndex,\r\n      aggFunc,\r\n      rowGroup: column.isRowGroupActive(),\r\n      rowGroupIndex,\r\n      pivot: column.isPivotActive(),\r\n      pivotIndex,\r\n      flex: column.getFlex() ?? null\r\n    });\r\n  };\r\n  colModel.forAllCols((col) => createStateItemFromColumn(col));\r\n  const colIdToGridIndexMap = new Map(\r\n    colModel.getCols().map((col, index) => [col.getColId(), index])\r\n  );\r\n  res.sort((itemA, itemB) => {\r\n    const posA = colIdToGridIndexMap.has(itemA.colId) ? colIdToGridIndexMap.get(itemA.colId) : -1;\r\n    const posB = colIdToGridIndexMap.has(itemB.colId) ? colIdToGridIndexMap.get(itemB.colId) : -1;\r\n    return posA - posB;\r\n  });\r\n  return res;\r\n}\r\nfunction getColumnStateFromColDef(column) {\r\n  const getValueOrNull = (a, b) => a != null ? a : b != null ? b : null;\r\n  const colDef = column.getColDef();\r\n  const sort = getValueOrNull(colDef.sort, colDef.initialSort);\r\n  const sortIndex = getValueOrNull(colDef.sortIndex, colDef.initialSortIndex);\r\n  const hide = getValueOrNull(colDef.hide, colDef.initialHide);\r\n  const pinned = getValueOrNull(colDef.pinned, colDef.initialPinned);\r\n  const width = getValueOrNull(colDef.width, colDef.initialWidth);\r\n  const flex = getValueOrNull(colDef.flex, colDef.initialFlex);\r\n  let rowGroupIndex = getValueOrNull(colDef.rowGroupIndex, colDef.initialRowGroupIndex);\r\n  let rowGroup = getValueOrNull(colDef.rowGroup, colDef.initialRowGroup);\r\n  if (rowGroupIndex == null && (rowGroup == null || rowGroup == false)) {\r\n    rowGroupIndex = null;\r\n    rowGroup = null;\r\n  }\r\n  let pivotIndex = getValueOrNull(colDef.pivotIndex, colDef.initialPivotIndex);\r\n  let pivot = getValueOrNull(colDef.pivot, colDef.initialPivot);\r\n  if (pivotIndex == null && (pivot == null || pivot == false)) {\r\n    pivotIndex = null;\r\n    pivot = null;\r\n  }\r\n  const aggFunc = getValueOrNull(colDef.aggFunc, colDef.initialAggFunc);\r\n  return {\r\n    colId: column.getColId(),\r\n    sort,\r\n    sortIndex,\r\n    hide,\r\n    pinned,\r\n    width,\r\n    flex,\r\n    rowGroup,\r\n    rowGroupIndex,\r\n    pivot,\r\n    pivotIndex,\r\n    aggFunc\r\n  };\r\n}\r\nfunction orderLiveColsLikeState(params, colModel, gos) {\r\n  if (!params.applyOrder || !params.state) {\r\n    return;\r\n  }\r\n  const colIds = [];\r\n  params.state.forEach((item) => {\r\n    if (item.colId != null) {\r\n      colIds.push(item.colId);\r\n    }\r\n  });\r\n  sortColsLikeKeys(colModel.cols, colIds, colModel, gos);\r\n}\r\nfunction sortColsLikeKeys(cols, colIds, colModel, gos) {\r\n  if (cols == null) {\r\n    return;\r\n  }\r\n  let newOrder = [];\r\n  const processedColIds = {};\r\n  colIds.forEach((colId) => {\r\n    if (processedColIds[colId]) {\r\n      return;\r\n    }\r\n    const col = cols.map[colId];\r\n    if (col) {\r\n      newOrder.push(col);\r\n      processedColIds[colId] = true;\r\n    }\r\n  });\r\n  let autoGroupInsertIndex = 0;\r\n  cols.list.forEach((col) => {\r\n    const colId = col.getColId();\r\n    const alreadyProcessed = processedColIds[colId] != null;\r\n    if (alreadyProcessed) {\r\n      return;\r\n    }\r\n    const isAutoGroupCol = colId.startsWith(GROUP_AUTO_COLUMN_ID);\r\n    if (isAutoGroupCol) {\r\n      newOrder.splice(autoGroupInsertIndex++, 0, col);\r\n    } else {\r\n      newOrder.push(col);\r\n    }\r\n  });\r\n  newOrder = placeLockedColumns(newOrder, gos);\r\n  if (!doesMovePassMarryChildren(newOrder, colModel.getColTree())) {\r\n    _warn(39);\r\n    return;\r\n  }\r\n  cols.list = newOrder;\r\n}\r\nfunction normaliseColumnMovedEventForColumnState(colStateBefore, colStateAfter, source, colModel, eventSvc) {\r\n  const colStateAfterMapped = {};\r\n  colStateAfter.forEach((s) => colStateAfterMapped[s.colId] = s);\r\n  const colsIntersectIds = {};\r\n  colStateBefore.forEach((s) => {\r\n    if (colStateAfterMapped[s.colId]) {\r\n      colsIntersectIds[s.colId] = true;\r\n    }\r\n  });\r\n  const beforeFiltered = colStateBefore.filter((c) => colsIntersectIds[c.colId]);\r\n  const afterFiltered = colStateAfter.filter((c) => colsIntersectIds[c.colId]);\r\n  const movedColumns = [];\r\n  afterFiltered.forEach((csAfter, index) => {\r\n    const csBefore = beforeFiltered && beforeFiltered[index];\r\n    if (csBefore && csBefore.colId !== csAfter.colId) {\r\n      const gridCol = colModel.getCol(csBefore.colId);\r\n      if (gridCol) {\r\n        movedColumns.push(gridCol);\r\n      }\r\n    }\r\n  });\r\n  if (!movedColumns.length) {\r\n    return;\r\n  }\r\n  eventSvc.dispatchEvent({\r\n    type: \"columnMoved\",\r\n    columns: movedColumns,\r\n    column: movedColumns.length === 1 ? movedColumns[0] : null,\r\n    finished: true,\r\n    source\r\n  });\r\n}\r\nvar comparatorByIndex = (indexes, oldList, colA, colB) => {\r\n  const indexA = indexes[colA.getId()];\r\n  const indexB = indexes[colB.getId()];\r\n  const aHasIndex = indexA != null;\r\n  const bHasIndex = indexB != null;\r\n  if (aHasIndex && bHasIndex) {\r\n    return indexA - indexB;\r\n  }\r\n  if (aHasIndex) {\r\n    return -1;\r\n  }\r\n  if (bHasIndex) {\r\n    return 1;\r\n  }\r\n  const oldIndexA = oldList.indexOf(colA);\r\n  const oldIndexB = oldList.indexOf(colB);\r\n  const aHasOldIndex = oldIndexA >= 0;\r\n  const bHasOldIndex = oldIndexB >= 0;\r\n  if (aHasOldIndex && bHasOldIndex) {\r\n    return oldIndexA - oldIndexB;\r\n  }\r\n  if (aHasOldIndex) {\r\n    return -1;\r\n  }\r\n  return 1;\r\n};\r\n\r\n// packages/ag-grid-community/src/columns/columnModel.ts\r\nvar ColumnModel = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"colModel\";\r\n    // if pivotMode is on, however pivot results are NOT shown if no pivot columns are set\r\n    this.pivotMode = false;\r\n    this.ready = false;\r\n    this.changeEventsDispatching = false;\r\n  }\r\n  postConstruct() {\r\n    this.pivotMode = this.gos.get(\"pivotMode\");\r\n    this.addManagedPropertyListeners(\r\n      [\r\n        \"groupDisplayType\",\r\n        \"treeData\",\r\n        \"treeDataDisplayType\",\r\n        \"groupHideOpenParents\",\r\n        \"rowNumbers\",\r\n        \"hidePaddedHeaderRows\"\r\n      ],\r\n      (event) => this.refreshAll(_convertColumnEventSourceType(event.source))\r\n    );\r\n    this.addManagedPropertyListeners(\r\n      [\"defaultColDef\", \"defaultColGroupDef\", \"columnTypes\", \"suppressFieldDotNotation\"],\r\n      this.recreateColumnDefs.bind(this)\r\n    );\r\n    this.addManagedPropertyListener(\r\n      \"pivotMode\",\r\n      (event) => this.setPivotMode(this.gos.get(\"pivotMode\"), _convertColumnEventSourceType(event.source))\r\n    );\r\n  }\r\n  // called from SyncService, when grid has finished initialising\r\n  createColsFromColDefs(source) {\r\n    const { beans } = this;\r\n    const { valueCache, colAutosize, rowGroupColsSvc, pivotColsSvc, valueColsSvc, visibleCols, eventSvc } = beans;\r\n    const dispatchEventsFunc = this.colDefs ? _compareColumnStatesAndDispatchEvents(beans, source) : void 0;\r\n    valueCache?.expire();\r\n    const oldCols = this.colDefCols?.list;\r\n    const oldTree = this.colDefCols?.tree;\r\n    const newTree = _createColumnTree(beans, this.colDefs, true, oldTree, source);\r\n    _destroyColumnTree(beans, this.colDefCols?.tree, newTree.columnTree);\r\n    const tree = newTree.columnTree;\r\n    const treeDepth = newTree.treeDepth;\r\n    const list = _getColumnsFromTree(tree);\r\n    const map = {};\r\n    list.forEach((col) => map[col.getId()] = col);\r\n    this.colDefCols = { tree, treeDepth, list, map };\r\n    rowGroupColsSvc?.extractCols(source, oldCols);\r\n    pivotColsSvc?.extractCols(source, oldCols);\r\n    valueColsSvc?.extractCols(source, oldCols);\r\n    this.ready = true;\r\n    this.refreshCols(true);\r\n    visibleCols.refresh(source);\r\n    eventSvc.dispatchEvent({\r\n      type: \"columnEverythingChanged\",\r\n      source\r\n    });\r\n    if (dispatchEventsFunc) {\r\n      this.changeEventsDispatching = true;\r\n      dispatchEventsFunc();\r\n      this.changeEventsDispatching = false;\r\n    }\r\n    eventSvc.dispatchEvent({\r\n      type: \"newColumnsLoaded\",\r\n      source\r\n    });\r\n    if (source === \"gridInitializing\") {\r\n      colAutosize?.applyAutosizeStrategy();\r\n    }\r\n  }\r\n  // called from: buildAutoGroupColumns (events 'groupDisplayType', 'treeData', 'treeDataDisplayType', 'groupHideOpenParents')\r\n  // createColsFromColDefs (recreateColumnDefs, setColumnsDefs),\r\n  // setPivotMode, applyColumnState,\r\n  // functionColsService.setPrimaryColList, functionColsService.updatePrimaryColList,\r\n  // pivotResultCols.setPivotResultCols\r\n  refreshCols(newColDefs) {\r\n    if (!this.colDefCols) {\r\n      return;\r\n    }\r\n    const prevColTree = this.cols?.tree;\r\n    this.saveColOrder();\r\n    const {\r\n      autoColSvc,\r\n      selectionColSvc,\r\n      rowNumbersSvc,\r\n      quickFilter,\r\n      pivotResultCols,\r\n      showRowGroupCols,\r\n      rowAutoHeight,\r\n      visibleCols,\r\n      colViewport,\r\n      eventSvc\r\n    } = this.beans;\r\n    const cols = this.selectCols(pivotResultCols, this.colDefCols);\r\n    this.createColumnsForService([autoColSvc, selectionColSvc, rowNumbersSvc], cols);\r\n    const shouldSortNewColDefs = _shouldMaintainColumnOrder(this.gos, this.showingPivotResult);\r\n    if (!newColDefs || shouldSortNewColDefs) {\r\n      this.restoreColOrder(cols);\r\n    }\r\n    this.positionLockedCols(cols);\r\n    showRowGroupCols?.refresh();\r\n    quickFilter?.refreshCols();\r\n    this.setColSpanActive();\r\n    rowAutoHeight?.setAutoHeightActive(cols);\r\n    visibleCols.clear();\r\n    colViewport.clear();\r\n    const dispatchChangedEvent = !_areEqual(prevColTree, this.cols.tree);\r\n    if (dispatchChangedEvent) {\r\n      eventSvc.dispatchEvent({\r\n        type: \"gridColumnsChanged\"\r\n      });\r\n    }\r\n  }\r\n  createColumnsForService(services, cols) {\r\n    for (const service of services) {\r\n      if (!service) {\r\n        continue;\r\n      }\r\n      service.createColumns(cols, (updateOrder) => {\r\n        this.lastOrder = updateOrder(this.lastOrder);\r\n        this.lastPivotOrder = updateOrder(this.lastPivotOrder);\r\n      });\r\n      service.addColumns(cols);\r\n    }\r\n  }\r\n  selectCols(pivotResultColsSvc, colDefCols) {\r\n    const pivotResultCols = pivotResultColsSvc?.getPivotResultCols() ?? null;\r\n    this.showingPivotResult = pivotResultCols != null;\r\n    const { map, list, tree, treeDepth } = pivotResultCols ?? colDefCols;\r\n    this.cols = {\r\n      list: list.slice(),\r\n      map: { ...map },\r\n      tree: tree.slice(),\r\n      treeDepth\r\n    };\r\n    if (pivotResultCols) {\r\n      const hasSameColumns = pivotResultCols.list.some((col) => this.cols?.map[col.getColId()] !== void 0);\r\n      if (!hasSameColumns) {\r\n        this.lastPivotOrder = null;\r\n      }\r\n    }\r\n    return this.cols;\r\n  }\r\n  getColsToShow() {\r\n    if (!this.cols) {\r\n      return [];\r\n    }\r\n    const { valueColsSvc, selectionColSvc, gos } = this.beans;\r\n    const showAutoGroupAndValuesOnly = this.isPivotMode() && !this.showingPivotResult;\r\n    const showSelectionColumn = selectionColSvc?.isSelectionColumnEnabled();\r\n    const showRowNumbers = gos.get(\"rowNumbers\");\r\n    const valueColumns = valueColsSvc?.columns;\r\n    const res = this.cols.list.filter((col) => {\r\n      const isAutoGroupCol = isColumnGroupAutoCol(col);\r\n      if (showAutoGroupAndValuesOnly) {\r\n        const isValueCol = valueColumns?.includes(col);\r\n        return isAutoGroupCol || isValueCol || showSelectionColumn && isColumnSelectionCol(col) || showRowNumbers && isRowNumberCol(col);\r\n      } else {\r\n        return isAutoGroupCol || col.isVisible();\r\n      }\r\n    });\r\n    return res;\r\n  }\r\n  // on events 'groupDisplayType', 'treeData', 'treeDataDisplayType', 'groupHideOpenParents'\r\n  refreshAll(source) {\r\n    if (!this.ready) {\r\n      return;\r\n    }\r\n    this.refreshCols(false);\r\n    this.beans.visibleCols.refresh(source);\r\n  }\r\n  setColsVisible(keys, visible = false, source) {\r\n    _applyColumnState(\r\n      this.beans,\r\n      {\r\n        state: keys.map((key) => ({\r\n          colId: typeof key === \"string\" ? key : key.getColId(),\r\n          hide: !visible\r\n        }))\r\n      },\r\n      source\r\n    );\r\n  }\r\n  /**\r\n   * Restores provided columns order to the previous order in this.lastPivotOrder / this.lastOrder\r\n   * If columns are not in the last order:\r\n   *  - Check column groups, and apply column after the last column in the lowest shared group\r\n   *  - If no sibling is found, apply the column at the end of the cols\r\n   */\r\n  restoreColOrder(cols) {\r\n    const lastOrder = this.showingPivotResult ? this.lastPivotOrder : this.lastOrder;\r\n    if (!lastOrder) {\r\n      return;\r\n    }\r\n    const preservedOrder = lastOrder.filter((col) => cols.map[col.getId()] != null);\r\n    if (preservedOrder.length === 0) {\r\n      return;\r\n    }\r\n    if (preservedOrder.length === cols.list.length) {\r\n      cols.list = preservedOrder;\r\n      return;\r\n    }\r\n    const hasSiblings = (col) => {\r\n      const ancestor = col.getOriginalParent();\r\n      if (!ancestor) {\r\n        return false;\r\n      }\r\n      const children = ancestor.getChildren();\r\n      if (children.length > 1) {\r\n        return true;\r\n      }\r\n      return hasSiblings(ancestor);\r\n    };\r\n    if (!preservedOrder.some((col) => hasSiblings(col))) {\r\n      const preservedOrderSet = new Set(preservedOrder);\r\n      for (const col of cols.list) {\r\n        if (!preservedOrderSet.has(col)) {\r\n          preservedOrder.push(col);\r\n        }\r\n      }\r\n      cols.list = preservedOrder;\r\n      return;\r\n    }\r\n    const colPositionMap = /* @__PURE__ */ new Map();\r\n    for (let i = 0; i < preservedOrder.length; i++) {\r\n      const col = preservedOrder[i];\r\n      colPositionMap.set(col, i);\r\n    }\r\n    const additionalCols = cols.list.filter((col) => !colPositionMap.has(col));\r\n    if (additionalCols.length === 0) {\r\n      cols.list = preservedOrder;\r\n      return;\r\n    }\r\n    const getPreviousSibling = (col, group) => {\r\n      const parent = group ? group.getOriginalParent() : col.getOriginalParent();\r\n      if (!parent) {\r\n        return null;\r\n      }\r\n      let highestIdx = null;\r\n      let highestSibling = null;\r\n      for (const child of parent.getChildren()) {\r\n        if (child === group || child === col) {\r\n          continue;\r\n        }\r\n        if (child instanceof AgColumn) {\r\n          const colIdx = colPositionMap.get(child);\r\n          if (colIdx == null) {\r\n            continue;\r\n          }\r\n          if (highestIdx == null || highestIdx < colIdx) {\r\n            highestIdx = colIdx;\r\n            highestSibling = child;\r\n          }\r\n          continue;\r\n        }\r\n        child.forEachLeafColumn((leafCol) => {\r\n          const colIdx = colPositionMap.get(leafCol);\r\n          if (colIdx == null) {\r\n            return;\r\n          }\r\n          if (highestIdx == null || highestIdx < colIdx) {\r\n            highestIdx = colIdx;\r\n            highestSibling = leafCol;\r\n          }\r\n        });\r\n      }\r\n      if (highestSibling == null) {\r\n        return getPreviousSibling(col, parent);\r\n      }\r\n      return highestSibling;\r\n    };\r\n    const noSiblingsAvailable = [];\r\n    const previousSiblingPosMap = /* @__PURE__ */ new Map();\r\n    for (const col of additionalCols) {\r\n      const prevSiblingIdx = getPreviousSibling(col, null);\r\n      if (prevSiblingIdx == null) {\r\n        noSiblingsAvailable.push(col);\r\n        continue;\r\n      }\r\n      const prev = previousSiblingPosMap.get(prevSiblingIdx);\r\n      if (prev === void 0) {\r\n        previousSiblingPosMap.set(prevSiblingIdx, col);\r\n      } else if (Array.isArray(prev)) {\r\n        prev.push(col);\r\n      } else {\r\n        previousSiblingPosMap.set(prevSiblingIdx, [prev, col]);\r\n      }\r\n    }\r\n    const result = new Array(cols.list.length);\r\n    let resultPointer = result.length - 1;\r\n    for (let i = noSiblingsAvailable.length - 1; i >= 0; i--) {\r\n      result[resultPointer--] = noSiblingsAvailable[i];\r\n    }\r\n    for (let i = preservedOrder.length - 1; i >= 0; i--) {\r\n      const nextCol = preservedOrder[i];\r\n      const extraCols = previousSiblingPosMap.get(nextCol);\r\n      if (extraCols) {\r\n        if (Array.isArray(extraCols)) {\r\n          for (let x = extraCols.length - 1; x >= 0; x--) {\r\n            const col = extraCols[x];\r\n            result[resultPointer--] = col;\r\n          }\r\n        } else {\r\n          result[resultPointer--] = extraCols;\r\n        }\r\n      }\r\n      result[resultPointer--] = nextCol;\r\n    }\r\n    cols.list = result;\r\n  }\r\n  positionLockedCols(cols) {\r\n    cols.list = placeLockedColumns(cols.list, this.gos);\r\n  }\r\n  saveColOrder() {\r\n    if (this.showingPivotResult) {\r\n      this.lastPivotOrder = this.cols?.list ?? null;\r\n    } else {\r\n      this.lastOrder = this.cols?.list ?? null;\r\n    }\r\n  }\r\n  getColumnDefs() {\r\n    return this.colDefCols ? this.beans.colDefFactory?.getColumnDefs(\r\n      this.colDefCols.list,\r\n      this.showingPivotResult,\r\n      this.lastOrder,\r\n      this.cols?.list ?? []\r\n    ) : void 0;\r\n  }\r\n  setColSpanActive() {\r\n    this.colSpanActive = !!this.cols?.list.some((col) => col.getColDef().colSpan != null);\r\n  }\r\n  isPivotMode() {\r\n    return this.pivotMode;\r\n  }\r\n  setPivotMode(pivotMode, source) {\r\n    if (pivotMode === this.pivotMode) {\r\n      return;\r\n    }\r\n    this.pivotMode = pivotMode;\r\n    if (!this.ready) {\r\n      return;\r\n    }\r\n    this.refreshCols(false);\r\n    const { visibleCols, eventSvc } = this.beans;\r\n    visibleCols.refresh(source);\r\n    eventSvc.dispatchEvent({\r\n      type: \"columnPivotModeChanged\"\r\n    });\r\n  }\r\n  // + clientSideRowModel\r\n  isPivotActive() {\r\n    const pivotColumns = this.beans.pivotColsSvc?.columns;\r\n    return this.pivotMode && !!pivotColumns?.length;\r\n  }\r\n  // called when dataTypes change\r\n  recreateColumnDefs(e) {\r\n    if (!this.cols) {\r\n      return;\r\n    }\r\n    this.beans.autoColSvc?.updateColumns(e);\r\n    const source = _convertColumnEventSourceType(e.source);\r\n    this.createColsFromColDefs(source);\r\n  }\r\n  setColumnDefs(columnDefs, source) {\r\n    this.colDefs = columnDefs;\r\n    this.createColsFromColDefs(source);\r\n  }\r\n  destroy() {\r\n    _destroyColumnTree(this.beans, this.colDefCols?.tree);\r\n    super.destroy();\r\n  }\r\n  getColTree() {\r\n    return this.cols?.tree ?? [];\r\n  }\r\n  // + columnSelectPanel\r\n  getColDefColTree() {\r\n    return this.colDefCols?.tree ?? [];\r\n  }\r\n  // + clientSideRowController -> sorting, building quick filter text\r\n  // + headerRenderer -> sorting (clearing icon)\r\n  getColDefCols() {\r\n    return this.colDefCols?.list ?? null;\r\n  }\r\n  // + moveColumnController\r\n  getCols() {\r\n    return this.cols?.list ?? [];\r\n  }\r\n  forAllCols(callback) {\r\n    const { pivotResultCols, autoColSvc, selectionColSvc } = this.beans;\r\n    _forAll(this.colDefCols?.list, callback);\r\n    _forAll(autoColSvc?.columns?.list, callback);\r\n    _forAll(selectionColSvc?.columns?.list, callback);\r\n    _forAll(pivotResultCols?.getPivotResultCols()?.list, callback);\r\n  }\r\n  getColsForKeys(keys) {\r\n    if (!keys) {\r\n      return [];\r\n    }\r\n    return keys.map((key) => this.getCol(key)).filter((col) => col != null);\r\n  }\r\n  getColDefCol(key) {\r\n    if (!this.colDefCols?.list) {\r\n      return null;\r\n    }\r\n    return this.getColFromCollection(key, this.colDefCols);\r\n  }\r\n  getCol(key) {\r\n    if (key == null) {\r\n      return null;\r\n    }\r\n    return this.getColFromCollection(key, this.cols);\r\n  }\r\n  /**\r\n   * Get column exclusively by ID.\r\n   *\r\n   * Note getCol/getColFromCollection have poor performance when col has been removed.\r\n   */\r\n  getColById(key) {\r\n    return this.cols?.map[key] ?? null;\r\n  }\r\n  getColFromCollection(key, cols) {\r\n    if (cols == null) {\r\n      return null;\r\n    }\r\n    const { map, list } = cols;\r\n    if (typeof key == \"string\" && map[key]) {\r\n      return map[key];\r\n    }\r\n    for (let i = 0; i < list.length; i++) {\r\n      if (_columnsMatch(list[i], key)) {\r\n        return list[i];\r\n      }\r\n    }\r\n    return this.beans.autoColSvc?.getColumn(key) ?? this.beans.selectionColSvc?.getColumn(key) ?? null;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/columns/baseColsService.ts\r\nvar BaseColsService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.dispatchColumnChangedEvent = dispatchColumnChangedEvent;\r\n    this.columns = [];\r\n    this.columnIndexMap = {};\r\n    this.updateIndexMap = () => {\r\n      this.columnIndexMap = {};\r\n      this.columns.forEach((col, index) => this.columnIndexMap[col.getId()] = index);\r\n    };\r\n  }\r\n  wireBeans(beans) {\r\n    this.colModel = beans.colModel;\r\n    this.aggFuncSvc = beans.aggFuncSvc;\r\n    this.visibleCols = beans.visibleCols;\r\n  }\r\n  sortColumns(compareFn) {\r\n    this.columns.sort(compareFn);\r\n    this.updateIndexMap();\r\n  }\r\n  setColumns(colKeys, source) {\r\n    this.setColList(colKeys, this.columns, this.eventName, true, true, this.columnProcessors.set, source);\r\n  }\r\n  addColumns(colKeys, source) {\r\n    this.updateColList(colKeys, this.columns, true, true, this.columnProcessors.add, this.eventName, source);\r\n  }\r\n  removeColumns(colKeys, source) {\r\n    this.updateColList(colKeys, this.columns, false, true, this.columnProcessors.remove, this.eventName, source);\r\n  }\r\n  getColumnIndex(colId) {\r\n    return this.columnIndexMap[colId];\r\n  }\r\n  setColList(colKeys = [], masterList, eventName, detectOrderChange, autoGroupsNeedBuilding, columnCallback, source) {\r\n    const gridColumns = this.colModel.getCols();\r\n    if (!gridColumns || gridColumns.length === 0) {\r\n      return;\r\n    }\r\n    const changes = /* @__PURE__ */ new Map();\r\n    masterList.forEach((col, idx) => changes.set(col, idx));\r\n    masterList.length = 0;\r\n    if (_exists(colKeys)) {\r\n      colKeys.forEach((key) => {\r\n        const column = this.colModel.getColDefCol(key);\r\n        if (column) {\r\n          masterList.push(column);\r\n        }\r\n      });\r\n    }\r\n    masterList.forEach((col, idx) => {\r\n      const oldIndex = changes.get(col);\r\n      if (oldIndex === void 0) {\r\n        changes.set(col, 0);\r\n        return;\r\n      }\r\n      if (detectOrderChange && oldIndex !== idx) {\r\n        return;\r\n      }\r\n      changes.delete(col);\r\n    });\r\n    this.updateIndexMap();\r\n    const primaryCols = this.colModel.getColDefCols();\r\n    (primaryCols || []).forEach((column) => {\r\n      const added = masterList.indexOf(column) >= 0;\r\n      columnCallback(column, added, source);\r\n    });\r\n    autoGroupsNeedBuilding && this.colModel.refreshCols(false);\r\n    this.visibleCols.refresh(source);\r\n    this.dispatchColumnChangedEvent(this.eventSvc, eventName, [...changes.keys()], source);\r\n  }\r\n  updateColList(keys = [], masterList, actionIsAdd, autoGroupsNeedBuilding, columnCallback, eventType, source) {\r\n    if (!keys || keys.length === 0) {\r\n      return;\r\n    }\r\n    let atLeastOne = false;\r\n    const updatedCols = /* @__PURE__ */ new Set();\r\n    keys.forEach((key) => {\r\n      if (!key) {\r\n        return;\r\n      }\r\n      const columnToAdd = this.colModel.getColDefCol(key);\r\n      if (!columnToAdd) {\r\n        return;\r\n      }\r\n      updatedCols.add(columnToAdd);\r\n      if (actionIsAdd) {\r\n        if (masterList.indexOf(columnToAdd) >= 0) {\r\n          return;\r\n        }\r\n        masterList.push(columnToAdd);\r\n      } else {\r\n        const currentIndex = masterList.indexOf(columnToAdd);\r\n        if (currentIndex < 0) {\r\n          return;\r\n        }\r\n        for (let i = currentIndex + 1; i < masterList.length; i++) {\r\n          updatedCols.add(masterList[i]);\r\n        }\r\n        _removeFromArray(masterList, columnToAdd);\r\n      }\r\n      columnCallback(columnToAdd, actionIsAdd, source);\r\n      atLeastOne = true;\r\n    });\r\n    if (!atLeastOne) {\r\n      return;\r\n    }\r\n    this.updateIndexMap();\r\n    if (autoGroupsNeedBuilding) {\r\n      this.colModel.refreshCols(false);\r\n    }\r\n    this.visibleCols.refresh(source);\r\n    const eventColumns = Array.from(updatedCols);\r\n    this.eventSvc.dispatchEvent({\r\n      type: eventType,\r\n      columns: eventColumns,\r\n      column: eventColumns.length === 1 ? eventColumns[0] : null,\r\n      source\r\n    });\r\n  }\r\n  extractCols(source, oldProvidedCols = []) {\r\n    const previousCols = this.columns;\r\n    const colsWithIndex = [];\r\n    const colsWithValue = [];\r\n    const { setFlagFunc, getIndexFunc, getInitialIndexFunc, getValueFunc, getInitialValueFunc } = this.columnExtractors;\r\n    const primaryCols = this.colModel.getColDefCols() || [];\r\n    primaryCols.forEach((col) => {\r\n      const colIsNew = oldProvidedCols.indexOf(col) < 0;\r\n      const colDef = col.getColDef();\r\n      const value = getValueFunc(colDef);\r\n      const initialValue = getInitialValueFunc(colDef);\r\n      const index = getIndexFunc(colDef);\r\n      const initialIndex = getInitialIndexFunc(colDef);\r\n      let include;\r\n      const valuePresent = value !== void 0;\r\n      const indexPresent = index !== void 0;\r\n      const initialValuePresent = initialValue !== void 0;\r\n      const initialIndexPresent = initialIndex !== void 0;\r\n      if (valuePresent) {\r\n        include = value;\r\n      } else if (indexPresent) {\r\n        if (index === null) {\r\n          include = false;\r\n        } else {\r\n          include = index >= 0;\r\n        }\r\n      } else {\r\n        if (colIsNew) {\r\n          if (initialValuePresent) {\r\n            include = initialValue;\r\n          } else if (initialIndexPresent) {\r\n            include = initialIndex != null && initialIndex >= 0;\r\n          } else {\r\n            include = false;\r\n          }\r\n        } else {\r\n          include = previousCols.indexOf(col) >= 0;\r\n        }\r\n      }\r\n      if (include) {\r\n        const useIndex = colIsNew ? index != null || initialIndex != null : index != null;\r\n        useIndex ? colsWithIndex.push(col) : colsWithValue.push(col);\r\n      }\r\n    });\r\n    const getIndexForCol = (col) => {\r\n      const index = getIndexFunc(col.getColDef());\r\n      const defaultIndex = getInitialIndexFunc(col.getColDef());\r\n      return index != null ? index : defaultIndex;\r\n    };\r\n    colsWithIndex.sort((colA, colB) => {\r\n      const indexA = getIndexForCol(colA);\r\n      const indexB = getIndexForCol(colB);\r\n      if (indexA === indexB) {\r\n        return 0;\r\n      }\r\n      if (indexA < indexB) {\r\n        return -1;\r\n      }\r\n      return 1;\r\n    });\r\n    const res = [].concat(colsWithIndex);\r\n    previousCols.forEach((col) => {\r\n      if (colsWithValue.indexOf(col) >= 0) {\r\n        res.push(col);\r\n      }\r\n    });\r\n    colsWithValue.forEach((col) => {\r\n      if (res.indexOf(col) < 0) {\r\n        res.push(col);\r\n      }\r\n    });\r\n    previousCols.forEach((col) => {\r\n      if (res.indexOf(col) < 0) {\r\n        setFlagFunc(col, false, source);\r\n      }\r\n    });\r\n    res.forEach((col) => {\r\n      if (previousCols.indexOf(col) < 0) {\r\n        setFlagFunc(col, true, source);\r\n      }\r\n    });\r\n    this.columns = res;\r\n    this.updateIndexMap();\r\n    return this.columns;\r\n  }\r\n  restoreColumnOrder(columnStateAccumulator, incomingColumnState) {\r\n    const colList = this.columns;\r\n    const primaryCols = this.colModel.getColDefCols();\r\n    if (!colList.length || !primaryCols) {\r\n      return columnStateAccumulator;\r\n    }\r\n    const updatedColIdArray = Object.keys(incomingColumnState);\r\n    const updatedColIds = new Set(updatedColIdArray);\r\n    const newColIds = new Set(updatedColIdArray);\r\n    const allColIds = new Set(\r\n      colList.map((column) => {\r\n        const colId = column.getColId();\r\n        newColIds.delete(colId);\r\n        return colId;\r\n      }).concat(updatedColIdArray)\r\n    );\r\n    const colIdsInOriginalOrder = [];\r\n    const originalOrderMap = {};\r\n    let orderIndex = 0;\r\n    for (let i = 0; i < primaryCols.length; i++) {\r\n      const colId = primaryCols[i].getColId();\r\n      if (allColIds.has(colId)) {\r\n        colIdsInOriginalOrder.push(colId);\r\n        originalOrderMap[colId] = orderIndex++;\r\n      }\r\n    }\r\n    let index = 1e3;\r\n    let hasAddedNewCols = false;\r\n    let lastIndex = 0;\r\n    const enableProp = this.columnOrdering.enableProp;\r\n    const initialEnableProp = this.columnOrdering.initialEnableProp;\r\n    const indexProp = this.columnOrdering.indexProp;\r\n    const initialIndexProp = this.columnOrdering.initialIndexProp;\r\n    const processPrecedingNewCols = (colId) => {\r\n      const originalOrderIndex = originalOrderMap[colId];\r\n      for (let i = lastIndex; i < originalOrderIndex; i++) {\r\n        const newColId = colIdsInOriginalOrder[i];\r\n        if (newColIds.has(newColId)) {\r\n          incomingColumnState[newColId][indexProp] = index++;\r\n          newColIds.delete(newColId);\r\n        }\r\n      }\r\n      lastIndex = originalOrderIndex;\r\n    };\r\n    colList.forEach((column) => {\r\n      const colId = column.getColId();\r\n      if (updatedColIds.has(colId)) {\r\n        processPrecedingNewCols(colId);\r\n        incomingColumnState[colId][indexProp] = index++;\r\n      } else {\r\n        const colDef = column.getColDef();\r\n        const missingIndex = colDef[indexProp] === null || colDef[indexProp] === void 0 && colDef[initialIndexProp] == null;\r\n        if (missingIndex) {\r\n          if (!hasAddedNewCols) {\r\n            const propEnabled = colDef[enableProp] || colDef[enableProp] === void 0 && colDef[initialEnableProp];\r\n            if (propEnabled) {\r\n              processPrecedingNewCols(colId);\r\n            } else {\r\n              newColIds.forEach((newColId) => {\r\n                incomingColumnState[newColId][indexProp] = index + originalOrderMap[newColId];\r\n              });\r\n              index += colIdsInOriginalOrder.length;\r\n              hasAddedNewCols = true;\r\n            }\r\n          }\r\n          if (!columnStateAccumulator[colId]) {\r\n            columnStateAccumulator[colId] = { colId };\r\n          }\r\n          columnStateAccumulator[colId][indexProp] = index++;\r\n        }\r\n      }\r\n    });\r\n    return columnStateAccumulator;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/columns/groupInstanceIdCreator.ts\r\nvar GroupInstanceIdCreator = class {\r\n  constructor() {\r\n    // this map contains keys to numbers, so we remember what the last call was\r\n    this.existingIds = {};\r\n  }\r\n  getInstanceIdForKey(key) {\r\n    const lastResult = this.existingIds[key];\r\n    let result;\r\n    if (typeof lastResult !== \"number\") {\r\n      result = 0;\r\n    } else {\r\n      result = lastResult + 1;\r\n    }\r\n    this.existingIds[key] = result;\r\n    return result;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/components/emptyBean.ts\r\nvar EmptyBean = class extends BeanStub {\r\n};\r\nfunction setupCompBean(ctrl, ctx, compBean) {\r\n  if (compBean) {\r\n    ctrl.addDestroyFunc(() => ctx.destroyBean(compBean));\r\n  }\r\n  return compBean ?? ctrl;\r\n}\r\n\r\n// packages/ag-grid-community/src/rendering/cssClassManager.ts\r\nvar CssClassManager = class {\r\n  constructor(getGui) {\r\n    // to minimise DOM hits, we only apply CSS classes if they have changed. as adding a CSS class that is already\r\n    // there, or removing one that wasn't present, all takes CPU.\r\n    this.cssClassStates = {};\r\n    this.getGui = getGui;\r\n  }\r\n  toggleCss(className, addOrRemove) {\r\n    if (!className) {\r\n      return;\r\n    }\r\n    if (className.indexOf(\" \") >= 0) {\r\n      const list = (className || \"\").split(\" \");\r\n      if (list.length > 1) {\r\n        list.forEach((cls) => this.toggleCss(cls, addOrRemove));\r\n        return;\r\n      }\r\n    }\r\n    const updateNeeded = this.cssClassStates[className] !== addOrRemove;\r\n    if (updateNeeded && className.length) {\r\n      this.getGui()?.classList.toggle(className, addOrRemove);\r\n      this.cssClassStates[className] = addOrRemove;\r\n    }\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/widgets/component.ts\r\nvar compIdSequence = 0;\r\nvar RefPlaceholder = null;\r\nvar Component = class extends BeanStub {\r\n  constructor(templateOrParams, componentSelectors) {\r\n    super();\r\n    this.suppressDataRefValidation = false;\r\n    // if false, then CSS class \"ag-hidden\" is applied, which sets \"display: none\"\r\n    this.displayed = true;\r\n    // if false, then CSS class \"ag-invisible\" is applied, which sets \"visibility: hidden\"\r\n    this.visible = true;\r\n    // unique id for this row component. this is used for getting a reference to the HTML dom.\r\n    // we cannot use the RowNode id as this is not unique (due to animation, old rows can be lying\r\n    // around as we create a new rowComp instance for the same row node).\r\n    this.compId = compIdSequence++;\r\n    this.cssManager = new CssClassManager(() => this.eGui);\r\n    this.componentSelectors = new Map((componentSelectors ?? []).map((comp) => [comp.selector, comp]));\r\n    if (templateOrParams) {\r\n      this.setTemplate(templateOrParams);\r\n    }\r\n  }\r\n  preConstruct() {\r\n    this.wireTemplate(this.getGui());\r\n    const debugId = \"component-\" + Object.getPrototypeOf(this)?.constructor?.name;\r\n    this.css?.forEach((css) => this.beans.environment.addGlobalCSS(css, debugId));\r\n  }\r\n  wireTemplate(element, paramsMap) {\r\n    if (element && this.gos) {\r\n      this.applyElementsToComponent(element);\r\n      this.createChildComponentsFromTags(element, paramsMap);\r\n    }\r\n  }\r\n  getCompId() {\r\n    return this.compId;\r\n  }\r\n  getDataRefAttribute(element) {\r\n    if (element.getAttribute) {\r\n      return element.getAttribute(DataRefAttribute);\r\n    }\r\n    return null;\r\n  }\r\n  applyElementsToComponent(element, elementRef, paramsMap, newComponent = null) {\r\n    if (elementRef === void 0) {\r\n      elementRef = this.getDataRefAttribute(element);\r\n    }\r\n    if (elementRef) {\r\n      const current = this[elementRef];\r\n      if (current === RefPlaceholder) {\r\n        this[elementRef] = newComponent ?? element;\r\n      } else {\r\n        const usedAsParamRef = paramsMap && paramsMap[elementRef];\r\n        if (!this.suppressDataRefValidation && !usedAsParamRef) {\r\n          throw new Error(`data-ref: ${elementRef} on ${this.constructor.name} with ${current}`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // for registered components only, eg creates AgCheckbox instance from ag-checkbox HTML tag\r\n  createChildComponentsFromTags(parentNode, paramsMap) {\r\n    const childNodeList = [];\r\n    for (const childNode of parentNode.childNodes ?? []) {\r\n      childNodeList.push(childNode);\r\n    }\r\n    childNodeList.forEach((childNode) => {\r\n      if (!(childNode instanceof HTMLElement)) {\r\n        return;\r\n      }\r\n      const childComp = this.createComponentFromElement(\r\n        childNode,\r\n        (childComp2) => {\r\n          const childGui = childComp2.getGui();\r\n          if (childGui) {\r\n            for (const attr of childNode.attributes ?? []) {\r\n              childGui.setAttribute(attr.name, attr.value);\r\n            }\r\n          }\r\n        },\r\n        paramsMap\r\n      );\r\n      if (childComp) {\r\n        if (childComp.addItems && childNode.children.length) {\r\n          this.createChildComponentsFromTags(childNode, paramsMap);\r\n          const items = Array.prototype.slice.call(childNode.children);\r\n          childComp.addItems(items);\r\n        }\r\n        this.swapComponentForNode(childComp, parentNode, childNode);\r\n      } else if (childNode.childNodes) {\r\n        this.createChildComponentsFromTags(childNode, paramsMap);\r\n      }\r\n    });\r\n  }\r\n  createComponentFromElement(element, afterPreCreateCallback, paramsMap) {\r\n    const key = element.nodeName;\r\n    const elementRef = this.getDataRefAttribute(element);\r\n    const isAgGridComponent = key.indexOf(\"AG-\") === 0;\r\n    const componentSelector = isAgGridComponent ? this.componentSelectors.get(key) : null;\r\n    let newComponent = null;\r\n    if (componentSelector) {\r\n      const componentParams = paramsMap && elementRef ? paramsMap[elementRef] : void 0;\r\n      newComponent = new componentSelector.component(componentParams);\r\n      newComponent.setParentComponent(this);\r\n      this.createBean(newComponent, null, afterPreCreateCallback);\r\n    } else if (isAgGridComponent) {\r\n      throw new Error(`selector: ${key}`);\r\n    }\r\n    this.applyElementsToComponent(element, elementRef, paramsMap, newComponent);\r\n    return newComponent;\r\n  }\r\n  swapComponentForNode(newComponent, parentNode, childNode) {\r\n    const eComponent = newComponent.getGui();\r\n    parentNode.replaceChild(eComponent, childNode);\r\n    parentNode.insertBefore(document.createComment(childNode.nodeName), eComponent);\r\n    this.addDestroyFunc(this.destroyBean.bind(this, newComponent));\r\n  }\r\n  activateTabIndex(elements) {\r\n    const tabIndex = this.gos.get(\"tabIndex\");\r\n    if (!elements) {\r\n      elements = [];\r\n    }\r\n    if (!elements.length) {\r\n      elements.push(this.getGui());\r\n    }\r\n    elements.forEach((el) => el.setAttribute(\"tabindex\", tabIndex.toString()));\r\n  }\r\n  setTemplate(templateOrParams, componentSelectors, paramsMap) {\r\n    let eGui;\r\n    if (typeof templateOrParams === \"string\" || templateOrParams == null) {\r\n      eGui = _loadTemplate(templateOrParams);\r\n    } else {\r\n      eGui = _createElement(templateOrParams);\r\n    }\r\n    this.setTemplateFromElement(eGui, componentSelectors, paramsMap);\r\n  }\r\n  setTemplateFromElement(element, components, paramsMap, suppressDataRefValidation = false) {\r\n    this.eGui = element;\r\n    this.suppressDataRefValidation = suppressDataRefValidation;\r\n    if (components) {\r\n      for (let i = 0; i < components.length; i++) {\r\n        const component = components[i];\r\n        this.componentSelectors.set(component.selector, component);\r\n      }\r\n    }\r\n    this.wireTemplate(element, paramsMap);\r\n  }\r\n  getGui() {\r\n    return this.eGui;\r\n  }\r\n  getFocusableElement() {\r\n    return this.eGui;\r\n  }\r\n  getAriaElement() {\r\n    return this.getFocusableElement();\r\n  }\r\n  setParentComponent(component) {\r\n    this.parentComponent = component;\r\n  }\r\n  getParentComponent() {\r\n    return this.parentComponent;\r\n  }\r\n  // this method is for older code, that wants to provide the gui element,\r\n  // it is not intended for this to be in ag-Stack\r\n  setGui(eGui) {\r\n    this.eGui = eGui;\r\n  }\r\n  queryForHtmlElement(cssSelector) {\r\n    return this.eGui.querySelector(cssSelector);\r\n  }\r\n  getContainerAndElement(newChild, container) {\r\n    let parent = container;\r\n    if (newChild == null) {\r\n      return null;\r\n    }\r\n    if (!parent) {\r\n      parent = this.eGui;\r\n    }\r\n    if (_isNodeOrElement(newChild)) {\r\n      return {\r\n        element: newChild,\r\n        parent\r\n      };\r\n    }\r\n    return {\r\n      element: newChild.getGui(),\r\n      parent\r\n    };\r\n  }\r\n  prependChild(newChild, container) {\r\n    const { element, parent } = this.getContainerAndElement(newChild, container) || {};\r\n    if (!element || !parent) {\r\n      return;\r\n    }\r\n    parent.insertAdjacentElement(\"afterbegin\", element);\r\n  }\r\n  appendChild(newChild, container) {\r\n    const { element, parent } = this.getContainerAndElement(newChild, container) || {};\r\n    if (!element || !parent) {\r\n      return;\r\n    }\r\n    parent.appendChild(element);\r\n  }\r\n  isDisplayed() {\r\n    return this.displayed;\r\n  }\r\n  setVisible(visible, options = {}) {\r\n    if (visible !== this.visible) {\r\n      this.visible = visible;\r\n      const { skipAriaHidden } = options;\r\n      _setVisible(this.eGui, visible, { skipAriaHidden });\r\n    }\r\n  }\r\n  setDisplayed(displayed, options = {}) {\r\n    if (displayed !== this.displayed) {\r\n      this.displayed = displayed;\r\n      const { skipAriaHidden } = options;\r\n      _setDisplayed(this.eGui, displayed, { skipAriaHidden });\r\n      const event = {\r\n        type: \"displayChanged\",\r\n        visible: this.displayed\r\n      };\r\n      this.dispatchLocalEvent(event);\r\n    }\r\n  }\r\n  destroy() {\r\n    if (this.parentComponent) {\r\n      this.parentComponent = void 0;\r\n    }\r\n    super.destroy();\r\n  }\r\n  addGuiEventListener(event, listener, options) {\r\n    this.eGui.addEventListener(event, listener, options);\r\n    this.addDestroyFunc(() => this.eGui.removeEventListener(event, listener));\r\n  }\r\n  addCss(className) {\r\n    this.cssManager.toggleCss(className, true);\r\n  }\r\n  removeCss(className) {\r\n    this.cssManager.toggleCss(className, false);\r\n  }\r\n  toggleCss(className, addOrRemove) {\r\n    this.cssManager.toggleCss(className, addOrRemove);\r\n  }\r\n  registerCSS(css) {\r\n    this.css || (this.css = []);\r\n    this.css.push(css);\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/interfaces/iFilter.ts\r\nfunction isColumnFilterComp(filter) {\r\n  return typeof filter === \"object\" && !!filter.component;\r\n}\r\n\r\n// packages/ag-grid-community/src/utils/promise.ts\r\nfunction _isPromise(fn) {\r\n  if (typeof fn.then === \"function\") {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nvar AgPromise = class _AgPromise {\r\n  constructor(callback) {\r\n    this.status = 0 /* IN_PROGRESS */;\r\n    this.resolution = null;\r\n    this.waiters = [];\r\n    callback(\r\n      (value) => this.onDone(value),\r\n      (params) => this.onReject(params)\r\n    );\r\n  }\r\n  static all(promises) {\r\n    return promises.length ? new _AgPromise((resolve) => {\r\n      let remainingToResolve = promises.length;\r\n      const combinedValues = new Array(remainingToResolve);\r\n      promises.forEach((promise, index) => {\r\n        promise.then((value) => {\r\n          combinedValues[index] = value;\r\n          remainingToResolve--;\r\n          if (remainingToResolve === 0) {\r\n            resolve(combinedValues);\r\n          }\r\n        });\r\n      });\r\n    }) : _AgPromise.resolve();\r\n  }\r\n  static resolve(value = null) {\r\n    return new _AgPromise((resolve) => resolve(value));\r\n  }\r\n  then(func) {\r\n    return new _AgPromise((resolve) => {\r\n      if (this.status === 1 /* RESOLVED */) {\r\n        resolve(func(this.resolution));\r\n      } else {\r\n        this.waiters.push((value) => resolve(func(value)));\r\n      }\r\n    });\r\n  }\r\n  onDone(value) {\r\n    this.status = 1 /* RESOLVED */;\r\n    this.resolution = value;\r\n    this.waiters.forEach((waiter) => waiter(value));\r\n  }\r\n  onReject(_) {\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/components/framework/userComponentFactory.ts\r\nfunction doesImplementIComponent(candidate) {\r\n  if (!candidate) {\r\n    return false;\r\n  }\r\n  return candidate.prototype && \"getGui\" in candidate.prototype;\r\n}\r\nfunction _getUserCompKeys(frameworkOverrides, defObject, type, params) {\r\n  const { name } = type;\r\n  let compName;\r\n  let jsComp;\r\n  let fwComp;\r\n  let paramsFromSelector;\r\n  let popupFromSelector;\r\n  let popupPositionFromSelector;\r\n  if (defObject) {\r\n    const defObjectAny = defObject;\r\n    const selectorFunc = defObjectAny[name + \"Selector\"];\r\n    const selectorRes = selectorFunc ? selectorFunc(params) : null;\r\n    const assignComp = (providedJsComp) => {\r\n      if (typeof providedJsComp === \"string\") {\r\n        compName = providedJsComp;\r\n      } else if (providedJsComp != null && providedJsComp !== true) {\r\n        const isFwkComp = frameworkOverrides.isFrameworkComponent(providedJsComp);\r\n        if (isFwkComp) {\r\n          fwComp = providedJsComp;\r\n        } else {\r\n          jsComp = providedJsComp;\r\n        }\r\n      }\r\n    };\r\n    if (selectorRes) {\r\n      assignComp(selectorRes.component);\r\n      paramsFromSelector = selectorRes.params;\r\n      popupFromSelector = selectorRes.popup;\r\n      popupPositionFromSelector = selectorRes.popupPosition;\r\n    } else {\r\n      assignComp(defObjectAny[name]);\r\n    }\r\n  }\r\n  return { compName, jsComp, fwComp, paramsFromSelector, popupFromSelector, popupPositionFromSelector };\r\n}\r\nvar UserComponentFactory = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"userCompFactory\";\r\n  }\r\n  wireBeans(beans) {\r\n    this.agCompUtils = beans.agCompUtils;\r\n    this.registry = beans.registry;\r\n    this.frameworkCompWrapper = beans.frameworkCompWrapper;\r\n    this.gridOptions = beans.gridOptions;\r\n  }\r\n  getCompDetailsFromGridOptions(type, defaultName, params, mandatory = false) {\r\n    return this.getCompDetails(this.gridOptions, type, defaultName, params, mandatory);\r\n  }\r\n  getCompDetails(defObject, type, defaultName, params, mandatory = false) {\r\n    const { name, cellRenderer } = type;\r\n    let { compName, jsComp, fwComp, paramsFromSelector, popupFromSelector, popupPositionFromSelector } = _getUserCompKeys(this.beans.frameworkOverrides, defObject, type, params);\r\n    let defaultCompParams;\r\n    let defaultCompProcessParams;\r\n    const lookupFromRegistry = (key) => {\r\n      const item = this.registry.getUserComponent(name, key);\r\n      if (item) {\r\n        jsComp = !item.componentFromFramework ? item.component : void 0;\r\n        fwComp = item.componentFromFramework ? item.component : void 0;\r\n        defaultCompParams = item.params;\r\n        defaultCompProcessParams = item.processParams;\r\n      }\r\n    };\r\n    if (compName != null) {\r\n      lookupFromRegistry(compName);\r\n    }\r\n    if (jsComp == null && fwComp == null && defaultName != null) {\r\n      lookupFromRegistry(defaultName);\r\n    }\r\n    if (jsComp && cellRenderer && !doesImplementIComponent(jsComp)) {\r\n      jsComp = this.agCompUtils?.adaptFunction(type, jsComp);\r\n    }\r\n    if (!jsComp && !fwComp) {\r\n      const { validation: validation2 } = this.beans;\r\n      if (mandatory && (compName !== defaultName || !defaultName)) {\r\n        if (compName) {\r\n          if (!validation2?.isProvidedUserComp(compName)) {\r\n            _error(50, { compName });\r\n          }\r\n        } else {\r\n          if (defaultName) {\r\n            if (!validation2) {\r\n              _error(260, {\r\n                ...this.gos.getModuleErrorParams(),\r\n                propName: name,\r\n                compName: defaultName\r\n              });\r\n            }\r\n          } else {\r\n            _error(216, { name });\r\n          }\r\n        }\r\n      } else if (defaultName && !validation2) {\r\n        _error(146, { comp: defaultName });\r\n      }\r\n      return;\r\n    }\r\n    const paramsMerged = this.mergeParams(\r\n      defObject,\r\n      type,\r\n      params,\r\n      paramsFromSelector,\r\n      defaultCompParams,\r\n      defaultCompProcessParams\r\n    );\r\n    const componentFromFramework = jsComp == null;\r\n    const componentClass = jsComp ?? fwComp;\r\n    return {\r\n      componentFromFramework,\r\n      componentClass,\r\n      params: paramsMerged,\r\n      type,\r\n      popupFromSelector,\r\n      popupPositionFromSelector,\r\n      newAgStackInstance: () => this.newAgStackInstance(componentClass, componentFromFramework, paramsMerged, type)\r\n    };\r\n  }\r\n  newAgStackInstance(ComponentClass, componentFromFramework, params, type) {\r\n    const jsComponent = !componentFromFramework;\r\n    let instance;\r\n    if (jsComponent) {\r\n      instance = new ComponentClass();\r\n    } else {\r\n      instance = this.frameworkCompWrapper.wrap(\r\n        ComponentClass,\r\n        type.mandatoryMethods,\r\n        type.optionalMethods,\r\n        type\r\n      );\r\n    }\r\n    this.createBean(instance);\r\n    const deferredInit = instance.init?.(params);\r\n    if (deferredInit == null) {\r\n      return AgPromise.resolve(instance);\r\n    }\r\n    return deferredInit.then(() => instance);\r\n  }\r\n  /**\r\n   * merges params with application provided params\r\n   * used by Floating Filter\r\n   */\r\n  mergeParams(defObject, type, paramsFromGrid, paramsFromSelector = null, defaultCompParams, defaultCompProcessParams) {\r\n    const params = { ...paramsFromGrid, ...defaultCompParams };\r\n    const defObjectAny = defObject;\r\n    const userParams = defObjectAny && defObjectAny[type.name + \"Params\"];\r\n    if (typeof userParams === \"function\") {\r\n      const userParamsFromFunc = userParams(paramsFromGrid);\r\n      _mergeDeep(params, userParamsFromFunc);\r\n    } else if (typeof userParams === \"object\") {\r\n      _mergeDeep(params, userParams);\r\n    }\r\n    _mergeDeep(params, paramsFromSelector);\r\n    return defaultCompProcessParams ? defaultCompProcessParams(params) : params;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/components/framework/userCompUtils.ts\r\nvar DateComponent = {\r\n  name: \"dateComponent\",\r\n  mandatoryMethods: [\"getDate\", \"setDate\"],\r\n  optionalMethods: [\"afterGuiAttached\", \"setInputPlaceholder\", \"setInputAriaLabel\", \"setDisabled\", \"refresh\"]\r\n};\r\nvar DragAndDropImageComponent = {\r\n  name: \"dragAndDropImageComponent\",\r\n  mandatoryMethods: [\"setIcon\", \"setLabel\"]\r\n};\r\nvar HeaderComponent = { name: \"headerComponent\", optionalMethods: [\"refresh\"] };\r\nvar InnerHeaderComponent = { name: \"innerHeaderComponent\" };\r\nvar InnerHeaderGroupComponent = { name: \"innerHeaderGroupComponent\" };\r\nvar HeaderGroupComponent = { name: \"headerGroupComponent\" };\r\nvar InnerCellRendererComponent = {\r\n  name: \"innerRenderer\",\r\n  cellRenderer: true,\r\n  optionalMethods: [\"afterGuiAttached\"]\r\n};\r\nvar CellRendererComponent = {\r\n  name: \"cellRenderer\",\r\n  optionalMethods: [\"refresh\", \"afterGuiAttached\"],\r\n  cellRenderer: true\r\n};\r\nvar EditorRendererComponent = {\r\n  name: \"cellRenderer\",\r\n  optionalMethods: [\"refresh\", \"afterGuiAttached\"]\r\n};\r\nvar LoadingCellRendererComponent = { name: \"loadingCellRenderer\", cellRenderer: true };\r\nvar CellEditorComponent = {\r\n  name: \"cellEditor\",\r\n  mandatoryMethods: [\"getValue\"],\r\n  optionalMethods: [\r\n    \"isPopup\",\r\n    \"isCancelBeforeStart\",\r\n    \"isCancelAfterEnd\",\r\n    \"getPopupPosition\",\r\n    \"focusIn\",\r\n    \"focusOut\",\r\n    \"afterGuiAttached\",\r\n    \"refresh\"\r\n  ]\r\n};\r\nvar LoadingOverlayComponent = { name: \"loadingOverlayComponent\", optionalMethods: [\"refresh\"] };\r\nvar NoRowsOverlayComponent = { name: \"noRowsOverlayComponent\", optionalMethods: [\"refresh\"] };\r\nvar TooltipComponent = { name: \"tooltipComponent\" };\r\nvar FilterComponent = {\r\n  name: \"filter\",\r\n  mandatoryMethods: [\"isFilterActive\", \"doesFilterPass\", \"getModel\", \"setModel\"],\r\n  optionalMethods: [\r\n    \"afterGuiAttached\",\r\n    \"afterGuiDetached\",\r\n    \"onNewRowsLoaded\",\r\n    \"getModelAsString\",\r\n    \"onFloatingFilterChanged\",\r\n    \"onAnyFilterChanged\",\r\n    \"refresh\"\r\n  ]\r\n};\r\nvar FloatingFilterComponent = {\r\n  name: \"floatingFilterComponent\",\r\n  mandatoryMethods: [\"onParentModelChanged\"],\r\n  optionalMethods: [\"afterGuiAttached\", \"refresh\"]\r\n};\r\nvar FullWidth = {\r\n  name: \"fullWidthCellRenderer\",\r\n  optionalMethods: [\"refresh\", \"afterGuiAttached\"],\r\n  cellRenderer: true\r\n};\r\nvar FullWidthLoading = { name: \"loadingCellRenderer\", cellRenderer: true };\r\nvar FullWidthGroup = {\r\n  name: \"groupRowRenderer\",\r\n  optionalMethods: [\"afterGuiAttached\"],\r\n  cellRenderer: true\r\n};\r\nvar FullWidthDetail = { name: \"detailCellRenderer\", optionalMethods: [\"refresh\"], cellRenderer: true };\r\nfunction _getDragAndDropImageCompDetails(userCompFactory, params) {\r\n  return userCompFactory.getCompDetailsFromGridOptions(DragAndDropImageComponent, \"agDragAndDropImage\", params, true);\r\n}\r\nfunction _getInnerCellRendererDetails(userCompFactory, def, params) {\r\n  return userCompFactory.getCompDetails(def, InnerCellRendererComponent, void 0, params);\r\n}\r\nfunction _getHeaderCompDetails(userCompFactory, colDef, params) {\r\n  return userCompFactory.getCompDetails(colDef, HeaderComponent, \"agColumnHeader\", params);\r\n}\r\nfunction _getInnerHeaderCompDetails(userCompFactory, headerCompParams, params) {\r\n  return userCompFactory.getCompDetails(headerCompParams, InnerHeaderComponent, void 0, params);\r\n}\r\nfunction _getHeaderGroupCompDetails(userCompFactory, params) {\r\n  const colGroupDef = params.columnGroup.getColGroupDef();\r\n  return userCompFactory.getCompDetails(colGroupDef, HeaderGroupComponent, \"agColumnGroupHeader\", params);\r\n}\r\nfunction _getInnerHeaderGroupCompDetails(userCompFactory, headerGroupCompParams, params) {\r\n  return userCompFactory.getCompDetails(headerGroupCompParams, InnerHeaderGroupComponent, void 0, params);\r\n}\r\nfunction _getFullWidthCellRendererDetails(userCompFactory, params) {\r\n  return userCompFactory.getCompDetailsFromGridOptions(FullWidth, void 0, params, true);\r\n}\r\nfunction _getFullWidthLoadingCellRendererDetails(userCompFactory, params) {\r\n  return userCompFactory.getCompDetailsFromGridOptions(FullWidthLoading, \"agLoadingCellRenderer\", params, true);\r\n}\r\nfunction _getFullWidthGroupCellRendererDetails(userCompFactory, params) {\r\n  return userCompFactory.getCompDetailsFromGridOptions(FullWidthGroup, \"agGroupRowRenderer\", params, true);\r\n}\r\nfunction _getFullWidthDetailCellRendererDetails(userCompFactory, params) {\r\n  return userCompFactory.getCompDetailsFromGridOptions(FullWidthDetail, \"agDetailCellRenderer\", params, true);\r\n}\r\nfunction _getCellRendererDetails(userCompFactory, def, params) {\r\n  return userCompFactory.getCompDetails(def, CellRendererComponent, void 0, params);\r\n}\r\nfunction _getEditorRendererDetails(userCompFactory, def, params) {\r\n  return userCompFactory.getCompDetails(\r\n    def,\r\n    EditorRendererComponent,\r\n    void 0,\r\n    params\r\n  );\r\n}\r\nfunction _getLoadingCellRendererDetails(userCompFactory, def, params) {\r\n  return userCompFactory.getCompDetails(def, LoadingCellRendererComponent, \"agSkeletonCellRenderer\", params, true);\r\n}\r\nfunction _getCellEditorDetails(userCompFactory, def, params) {\r\n  return userCompFactory.getCompDetails(def, CellEditorComponent, \"agCellEditor\", params, true);\r\n}\r\nfunction _getFilterDetails(userCompFactory, def, params, defaultFilter) {\r\n  const filter = def.filter;\r\n  if (isColumnFilterComp(filter)) {\r\n    def = {\r\n      filter: filter.component,\r\n      filterParams: def.filterParams\r\n    };\r\n  }\r\n  return userCompFactory.getCompDetails(def, FilterComponent, defaultFilter, params, true);\r\n}\r\nfunction _getDateCompDetails(userCompFactory, def, params) {\r\n  return userCompFactory.getCompDetails(def, DateComponent, \"agDateInput\", params, true);\r\n}\r\nfunction _getLoadingOverlayCompDetails(userCompFactory, params) {\r\n  return userCompFactory.getCompDetailsFromGridOptions(LoadingOverlayComponent, \"agLoadingOverlay\", params, true);\r\n}\r\nfunction _getNoRowsOverlayCompDetails(userCompFactory, params) {\r\n  return userCompFactory.getCompDetailsFromGridOptions(NoRowsOverlayComponent, \"agNoRowsOverlay\", params, true);\r\n}\r\nfunction _getTooltipCompDetails(userCompFactory, params) {\r\n  return userCompFactory.getCompDetails(params.colDef, TooltipComponent, \"agTooltipComponent\", params, true);\r\n}\r\nfunction _getFloatingFilterCompDetails(userCompFactory, def, params, defaultFloatingFilter) {\r\n  return userCompFactory.getCompDetails(def, FloatingFilterComponent, defaultFloatingFilter, params);\r\n}\r\nfunction _getFilterCompKeys(frameworkOverrides, def) {\r\n  return _getUserCompKeys(frameworkOverrides, def, FilterComponent);\r\n}\r\nfunction _mergeFilterParamsWithApplicationProvidedParams(userCompFactory, defObject, paramsFromGrid) {\r\n  return userCompFactory.mergeParams(defObject, FilterComponent, paramsFromGrid);\r\n}\r\n\r\n// packages/ag-grid-community/src/components/framework/unwrapUserComp.ts\r\nfunction _unwrapUserComp(comp) {\r\n  const compAsAny = comp;\r\n  const isProxy = compAsAny != null && compAsAny.getFrameworkComponentInstance != null;\r\n  return isProxy ? compAsAny.getFrameworkComponentInstance() : comp;\r\n}\r\n\r\n// packages/ag-grid-community/src/modules/moduleRegistry.ts\r\nvar allRegisteredModules = /* @__PURE__ */ new Set();\r\nvar globalModulesMap = {};\r\nvar gridModulesMap = {};\r\nvar currentModuleVersion;\r\nvar userHasRegistered = false;\r\nvar areGridScopedModules = false;\r\nvar isUmd = false;\r\nfunction isValidModuleVersion(module) {\r\n  const [moduleMajor, moduleMinor] = module.version.split(\".\") || [];\r\n  const [currentModuleMajor, currentModuleMinor] = currentModuleVersion.split(\".\") || [];\r\n  return moduleMajor === currentModuleMajor && moduleMinor === currentModuleMinor;\r\n}\r\nfunction runVersionChecks(module) {\r\n  if (!currentModuleVersion) {\r\n    currentModuleVersion = module.version;\r\n  }\r\n  const errorMsg = (details) => `You are using incompatible versions of AG Grid modules. Major and minor versions should always match across modules. ${details} Please update all modules to the same version.`;\r\n  if (!module.version) {\r\n    _errorOnce(errorMsg(`'${module.moduleName}' is incompatible.`));\r\n  } else if (!isValidModuleVersion(module)) {\r\n    _errorOnce(\r\n      errorMsg(\r\n        `'${module.moduleName}' is version ${module.version} but the other modules are version ${currentModuleVersion}.`\r\n      )\r\n    );\r\n  }\r\n  if (module.validate) {\r\n    const result = module.validate();\r\n    if (!result.isValid) {\r\n      const errorResult = result;\r\n      _errorOnce(`${errorResult.message}`);\r\n    }\r\n  }\r\n}\r\nfunction _registerModule(module, gridId, isInternalRegistration = false) {\r\n  if (!isInternalRegistration) {\r\n    userHasRegistered = true;\r\n  }\r\n  runVersionChecks(module);\r\n  const rowModels = module.rowModels ?? [\"all\"];\r\n  allRegisteredModules.add(module);\r\n  let moduleStore;\r\n  if (gridId !== void 0) {\r\n    areGridScopedModules = true;\r\n    if (gridModulesMap[gridId] === void 0) {\r\n      gridModulesMap[gridId] = {};\r\n    }\r\n    moduleStore = gridModulesMap[gridId];\r\n  } else {\r\n    moduleStore = globalModulesMap;\r\n  }\r\n  rowModels.forEach((rowModel) => {\r\n    if (moduleStore[rowModel] === void 0) {\r\n      moduleStore[rowModel] = {};\r\n    }\r\n    moduleStore[rowModel][module.moduleName] = module;\r\n  });\r\n  if (module.dependsOn) {\r\n    module.dependsOn.forEach((dependency) => _registerModule(dependency, gridId, isInternalRegistration));\r\n  }\r\n}\r\nfunction _unRegisterGridModules(gridId) {\r\n  delete gridModulesMap[gridId];\r\n}\r\nfunction _isModuleRegistered(moduleName, gridId, rowModel) {\r\n  const isRegisteredForRowModel = (model) => !!globalModulesMap[model]?.[moduleName] || !!gridModulesMap[gridId]?.[model]?.[moduleName];\r\n  return isRegisteredForRowModel(rowModel) || isRegisteredForRowModel(\"all\");\r\n}\r\nfunction _areModulesGridScoped() {\r\n  return areGridScopedModules;\r\n}\r\nfunction _getRegisteredModules(gridId, rowModel) {\r\n  const gridModules = gridModulesMap[gridId] ?? {};\r\n  return [\r\n    ...Object.values(globalModulesMap[\"all\"] ?? {}),\r\n    ...Object.values(gridModules[\"all\"] ?? {}),\r\n    ...Object.values(globalModulesMap[rowModel] ?? {}),\r\n    ...Object.values(gridModules[rowModel] ?? {})\r\n  ];\r\n}\r\nfunction _getAllRegisteredModules() {\r\n  return new Set(allRegisteredModules);\r\n}\r\nfunction _getGridRegisteredModules(gridId, rowModel) {\r\n  const gridModules = gridModulesMap[gridId] ?? {};\r\n  return [...Object.values(gridModules[\"all\"] ?? {}), ...Object.values(gridModules[rowModel] ?? {})];\r\n}\r\nfunction _hasUserRegistered() {\r\n  return userHasRegistered;\r\n}\r\nfunction _isUmd() {\r\n  return isUmd;\r\n}\r\nfunction _setUmd() {\r\n  isUmd = true;\r\n}\r\nvar ModuleRegistry = class {\r\n  /**\r\n   * @deprecated v33 Use `registerModules([module])` instead.\r\n   */\r\n  static register(module) {\r\n    _registerModule(module, void 0);\r\n  }\r\n  /**\r\n   * Globally register the given modules for all grids.\r\n   * @param modules - modules to register\r\n   */\r\n  static registerModules(modules) {\r\n    modules.forEach((module) => _registerModule(module, void 0));\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/context/genericContext.ts\r\nvar GenericContext = class {\r\n  constructor(params) {\r\n    this.beans = {};\r\n    this.createdBeans = [];\r\n    this.destroyed = false;\r\n    if (!params || !params.beanClasses) {\r\n      return;\r\n    }\r\n    this.beanDestroyComparator = params.beanDestroyComparator;\r\n    this.init(params);\r\n  }\r\n  init(params) {\r\n    for (const beanName of Object.keys(params.providedBeanInstances)) {\r\n      this.beans[beanName] = params.providedBeanInstances[beanName];\r\n    }\r\n    params.beanClasses.forEach((BeanClass) => {\r\n      const instance = new BeanClass();\r\n      if (instance.beanName) {\r\n        this.beans[instance.beanName] = instance;\r\n      } else {\r\n        console.error(`Bean ${BeanClass.name} is missing beanName`);\r\n      }\r\n      this.createdBeans.push(instance);\r\n    });\r\n    params.derivedBeans?.forEach((beanFunc) => {\r\n      const { beanName, bean } = beanFunc(this);\r\n      this.beans[beanName] = bean;\r\n      this.createdBeans.push(bean);\r\n    });\r\n    if (params.beanInitComparator) {\r\n      this.createdBeans.sort(params.beanInitComparator);\r\n    }\r\n    this.initBeans(this.createdBeans);\r\n  }\r\n  getBeanInstances() {\r\n    return Object.values(this.beans);\r\n  }\r\n  createBean(bean, afterPreCreateCallback) {\r\n    this.initBeans([bean], afterPreCreateCallback);\r\n    return bean;\r\n  }\r\n  initBeans(beanInstances, afterPreCreateCallback) {\r\n    beanInstances.forEach((instance) => {\r\n      instance.preWireBeans?.(this.beans);\r\n      instance.wireBeans?.(this.beans);\r\n    });\r\n    beanInstances.forEach((instance) => instance.preConstruct?.());\r\n    if (afterPreCreateCallback) {\r\n      beanInstances.forEach(afterPreCreateCallback);\r\n    }\r\n    beanInstances.forEach((instance) => instance.postConstruct?.());\r\n  }\r\n  getBeans() {\r\n    return this.beans;\r\n  }\r\n  getBean(name) {\r\n    return this.beans[name];\r\n  }\r\n  destroy() {\r\n    if (this.destroyed) {\r\n      return;\r\n    }\r\n    this.destroyed = true;\r\n    const beanInstances = this.getBeanInstances();\r\n    if (this.beanDestroyComparator) {\r\n      beanInstances.sort(this.beanDestroyComparator);\r\n    }\r\n    this.destroyBeans(beanInstances);\r\n    this.beans = {};\r\n    this.createdBeans = [];\r\n  }\r\n  /**\r\n   * Destroys a bean and returns undefined to support destruction and clean up in a single line.\r\n   * this.dateComp = this.context.destroyBean(this.dateComp);\r\n   */\r\n  destroyBean(bean) {\r\n    bean?.destroy?.();\r\n  }\r\n  /**\r\n   * Destroys an array of beans and returns an empty array to support destruction and clean up in a single line.\r\n   * this.dateComps = this.context.destroyBeans(this.dateComps);\r\n   */\r\n  destroyBeans(beans) {\r\n    if (beans) {\r\n      for (let i = 0; i < beans.length; i++) {\r\n        this.destroyBean(beans[i]);\r\n      }\r\n    }\r\n    return [];\r\n  }\r\n  isDestroyed() {\r\n    return this.destroyed;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/context/context.ts\r\nfunction isComponentMetaFunc(componentMeta) {\r\n  return typeof componentMeta === \"object\" && !!componentMeta.getComp;\r\n}\r\nvar Context = class extends GenericContext {\r\n  init(params) {\r\n    this.gridId = params.gridId;\r\n    this.beans.context = this;\r\n    this.destroyCallback = params.destroyCallback;\r\n    super.init(params);\r\n  }\r\n  destroy() {\r\n    super.destroy();\r\n    _unRegisterGridModules(this.gridId);\r\n    this.destroyCallback?.();\r\n  }\r\n  getGridId() {\r\n    return this.gridId;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/edit/editModelService.ts\r\nvar EditModelService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"editModelSvc\";\r\n    this.edits = /* @__PURE__ */ new Map();\r\n    this.cellValidations = new EditCellValidationModel();\r\n    this.rowValidations = new EditRowValidationModel();\r\n    // during some operations, we want to always return false from `hasEdits`\r\n    this.suspendEdits = false;\r\n  }\r\n  suspend(suspend) {\r\n    this.suspendEdits = suspend;\r\n  }\r\n  removeEdits({ rowNode, column }) {\r\n    if (!this.hasEdits({ rowNode }) || !rowNode) {\r\n      return;\r\n    }\r\n    const editRow = this.getEditRow(rowNode);\r\n    if (column) {\r\n      editRow.delete(column);\r\n    } else {\r\n      editRow.clear();\r\n    }\r\n    if (editRow.size === 0) {\r\n      this.edits.delete(rowNode);\r\n    }\r\n  }\r\n  getEditRow(rowNode, params = {}) {\r\n    if (this.suspendEdits) {\r\n      return void 0;\r\n    }\r\n    if (this.edits.size === 0) {\r\n      return void 0;\r\n    }\r\n    const edits = rowNode && this.edits.get(rowNode);\r\n    if (edits) {\r\n      return edits;\r\n    }\r\n    if (params.checkSiblings) {\r\n      const pinnedSibling = rowNode.pinnedSibling;\r\n      if (pinnedSibling) {\r\n        return this.getEditRow(pinnedSibling);\r\n      }\r\n    }\r\n    return void 0;\r\n  }\r\n  getEditRowDataValue(rowNode, { checkSiblings } = {}) {\r\n    if (this.edits.size === 0) {\r\n      return rowNode.data;\r\n    }\r\n    const editRow = this.getEditRow(rowNode);\r\n    const pinnedSibling = rowNode.pinnedSibling;\r\n    const siblingRow = checkSiblings && pinnedSibling && this.getEditRow(pinnedSibling);\r\n    if (!editRow && !siblingRow) {\r\n      return rowNode.data;\r\n    }\r\n    const data = Object.assign({}, rowNode.data);\r\n    const applyEdits = (edits, data2) => edits.forEach(({ pendingValue }, column) => {\r\n      if (pendingValue !== UNEDITED) {\r\n        data2[column.getColId()] = pendingValue;\r\n      }\r\n    });\r\n    if (editRow) {\r\n      applyEdits(editRow, data);\r\n    }\r\n    if (siblingRow) {\r\n      applyEdits(siblingRow, data);\r\n    }\r\n    return data;\r\n  }\r\n  getEdit(position, copy) {\r\n    const edit = this._getEdit(position);\r\n    return copy && edit ? { ...edit } : edit;\r\n  }\r\n  _getEdit(position) {\r\n    if (this.suspendEdits) {\r\n      return void 0;\r\n    }\r\n    if (this.edits.size === 0) {\r\n      return void 0;\r\n    }\r\n    return position.rowNode && position.column && this.getEditRow(position.rowNode)?.get(position.column);\r\n  }\r\n  getEditMap(copy = true) {\r\n    if (this.suspendEdits || this.edits.size === 0) {\r\n      return /* @__PURE__ */ new Map();\r\n    }\r\n    if (!copy) {\r\n      return this.edits;\r\n    }\r\n    const map = /* @__PURE__ */ new Map();\r\n    this.edits.forEach((editRow, rowNode) => map.set(rowNode, new Map(editRow)));\r\n    return map;\r\n  }\r\n  setEditMap(newEdits) {\r\n    this.edits.clear();\r\n    newEdits.forEach((editRow, rowNode) => {\r\n      const newRow = /* @__PURE__ */ new Map();\r\n      editRow.forEach(\r\n        (cellData, column) => (\r\n          // Ensure we copy the cell data to avoid reference issues\r\n          newRow.set(column, { ...cellData })\r\n        )\r\n      );\r\n      this.edits.set(rowNode, newRow);\r\n    });\r\n  }\r\n  setEdit(position, edit) {\r\n    (this.edits.size === 0 || !this.edits.has(position.rowNode)) && this.edits.set(position.rowNode, /* @__PURE__ */ new Map());\r\n    const currentEdit = { ...this._getEdit(position), ...edit };\r\n    this.getEditRow(position.rowNode).set(position.column, currentEdit);\r\n    return currentEdit;\r\n  }\r\n  clearEditValue(position) {\r\n    const { rowNode, column } = position;\r\n    if (rowNode) {\r\n      if (column) {\r\n        const edit = this._getEdit(position);\r\n        if (edit) {\r\n          edit.editorValue = void 0;\r\n          edit.pendingValue = edit.sourceValue;\r\n          edit.state = \"changed\";\r\n        }\r\n      } else {\r\n        this.getEditRow(rowNode)?.forEach((cellData) => {\r\n          cellData.editorValue = void 0;\r\n          cellData.pendingValue = cellData.sourceValue;\r\n          cellData.state = \"changed\";\r\n        });\r\n      }\r\n    }\r\n  }\r\n  getState(position) {\r\n    if (this.suspendEdits) {\r\n      return void 0;\r\n    }\r\n    return this.getEdit(position)?.state;\r\n  }\r\n  getEditPositions(editMap) {\r\n    if (this.suspendEdits || (editMap ?? this.edits).size === 0) {\r\n      return [];\r\n    }\r\n    const positions = [];\r\n    (editMap ?? this.edits).forEach((editRow, rowNode) => {\r\n      for (const column of editRow.keys()) {\r\n        positions.push({\r\n          rowNode,\r\n          column,\r\n          ...editRow.get(column)\r\n        });\r\n      }\r\n    });\r\n    return positions;\r\n  }\r\n  hasRowEdits(rowNode, params) {\r\n    if (this.suspendEdits) {\r\n      return false;\r\n    }\r\n    if (this.edits.size === 0) {\r\n      return false;\r\n    }\r\n    const rowEdits = this.getEditRow(rowNode, params);\r\n    return !!rowEdits;\r\n  }\r\n  hasEdits(position = {}, params = {}) {\r\n    if (this.suspendEdits) {\r\n      return false;\r\n    }\r\n    if (this.edits.size === 0) {\r\n      return false;\r\n    }\r\n    const { rowNode, column } = position;\r\n    const { withOpenEditor } = params;\r\n    if (rowNode) {\r\n      const rowEdits = this.getEditRow(rowNode, params);\r\n      if (!rowEdits) {\r\n        return false;\r\n      }\r\n      if (column) {\r\n        if (withOpenEditor) {\r\n          return this.getEdit(position)?.state === \"editing\";\r\n        }\r\n        return rowEdits.has(column) ?? false;\r\n      }\r\n      if (rowEdits.size !== 0) {\r\n        if (withOpenEditor) {\r\n          return Array.from(rowEdits.values()).some(({ state }) => state === \"editing\");\r\n        }\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n    if (withOpenEditor) {\r\n      return this.getEditPositions().some(({ state }) => state === \"editing\");\r\n    }\r\n    return this.edits.size > 0;\r\n  }\r\n  start(position) {\r\n    const map = this.getEditRow(position.rowNode) ?? /* @__PURE__ */ new Map();\r\n    const { rowNode, column } = position;\r\n    if (column && !map.has(column)) {\r\n      map.set(column, {\r\n        editorValue: void 0,\r\n        pendingValue: UNEDITED,\r\n        sourceValue: this.beans.valueSvc.getValue(column, rowNode, true, \"api\"),\r\n        state: \"editing\"\r\n      });\r\n    }\r\n    this.edits.set(rowNode, map);\r\n  }\r\n  stop(position) {\r\n    if (!this.hasEdits(position)) {\r\n      return;\r\n    }\r\n    if (position) {\r\n      this.removeEdits(position);\r\n    } else {\r\n      this.clear();\r\n    }\r\n    return;\r\n  }\r\n  clear() {\r\n    for (const pendingRowEdits of this.edits.values()) {\r\n      pendingRowEdits.clear();\r\n    }\r\n    this.edits.clear();\r\n  }\r\n  getCellValidationModel() {\r\n    return this.cellValidations;\r\n  }\r\n  getRowValidationModel() {\r\n    return this.rowValidations;\r\n  }\r\n  setCellValidationModel(model) {\r\n    this.cellValidations = model;\r\n  }\r\n  setRowValidationModel(model) {\r\n    this.rowValidations = model;\r\n  }\r\n  destroy() {\r\n    super.destroy();\r\n    this.clear();\r\n  }\r\n};\r\nvar EditCellValidationModel = class {\r\n  constructor() {\r\n    this.cellValidations = /* @__PURE__ */ new Map();\r\n  }\r\n  getCellValidation(position) {\r\n    const { rowNode, column } = position || {};\r\n    return this.cellValidations?.get(rowNode)?.get(column);\r\n  }\r\n  hasCellValidation(position) {\r\n    if (!position || !position.rowNode || !position.column) {\r\n      return this.cellValidations.size > 0;\r\n    }\r\n    return !!this.getCellValidation(position);\r\n  }\r\n  setCellValidation(position, validation2) {\r\n    const { rowNode, column } = position;\r\n    if (!this.cellValidations.has(rowNode)) {\r\n      this.cellValidations.set(rowNode, /* @__PURE__ */ new Map());\r\n    }\r\n    this.cellValidations.get(rowNode).set(column, validation2);\r\n  }\r\n  clearCellValidation(position) {\r\n    const { rowNode, column } = position;\r\n    this.cellValidations.get(rowNode)?.delete(column);\r\n  }\r\n  setCellValidationMap(validationMap) {\r\n    this.cellValidations = validationMap;\r\n  }\r\n  getCellValidationMap() {\r\n    return this.cellValidations;\r\n  }\r\n  clearCellValidationMap() {\r\n    this.cellValidations.clear();\r\n  }\r\n};\r\nvar EditRowValidationModel = class {\r\n  constructor() {\r\n    this.rowValidations = /* @__PURE__ */ new Map();\r\n  }\r\n  getRowValidation(position) {\r\n    const { rowNode } = position || {};\r\n    return this.rowValidations.get(rowNode);\r\n  }\r\n  hasRowValidation(position) {\r\n    if (!position || !position.rowNode) {\r\n      return this.rowValidations.size > 0;\r\n    }\r\n    return !!this.getRowValidation(position);\r\n  }\r\n  setRowValidation({ rowNode }, rowValidation) {\r\n    this.rowValidations.set(rowNode, rowValidation);\r\n  }\r\n  clearRowValidation({ rowNode }) {\r\n    this.rowValidations.delete(rowNode);\r\n  }\r\n  setRowValidationMap(validationMap) {\r\n    this.rowValidations = validationMap;\r\n  }\r\n  getRowValidationMap() {\r\n    return this.rowValidations;\r\n  }\r\n  clearRowValidationMap() {\r\n    this.rowValidations.clear();\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/entities/positionUtils.ts\r\nfunction _createCellId(cellPosition) {\r\n  const { rowIndex, rowPinned, column } = cellPosition;\r\n  return `${rowIndex}.${rowPinned == null ? \"null\" : rowPinned}.${column.getId()}`;\r\n}\r\nfunction _areCellsEqual(cellA, cellB) {\r\n  const colsMatch = cellA.column === cellB.column;\r\n  const floatingMatch = cellA.rowPinned === cellB.rowPinned;\r\n  const indexMatch = cellA.rowIndex === cellB.rowIndex;\r\n  return colsMatch && floatingMatch && indexMatch;\r\n}\r\nfunction _isRowBefore(rowA, rowB) {\r\n  switch (rowA.rowPinned) {\r\n    case \"top\":\r\n      if (rowB.rowPinned !== \"top\") {\r\n        return true;\r\n      }\r\n      break;\r\n    case \"bottom\":\r\n      if (rowB.rowPinned !== \"bottom\") {\r\n        return false;\r\n      }\r\n      break;\r\n    default:\r\n      if (_exists(rowB.rowPinned)) {\r\n        return rowB.rowPinned !== \"top\";\r\n      }\r\n      break;\r\n  }\r\n  return rowA.rowIndex < rowB.rowIndex;\r\n}\r\nfunction _isSameRow(rowA, rowB) {\r\n  if (!rowA && !rowB) {\r\n    return true;\r\n  }\r\n  if (rowA && !rowB || !rowA && rowB) {\r\n    return false;\r\n  }\r\n  return rowA.rowIndex === rowB.rowIndex && rowA.rowPinned == rowB.rowPinned;\r\n}\r\nfunction _getFirstRow(beans) {\r\n  let rowIndex = 0;\r\n  let rowPinned;\r\n  const { pinnedRowModel, rowModel, pageBounds } = beans;\r\n  if (pinnedRowModel?.getPinnedTopRowCount()) {\r\n    rowPinned = \"top\";\r\n  } else if (rowModel.getRowCount()) {\r\n    rowPinned = null;\r\n    rowIndex = pageBounds.getFirstRow();\r\n  } else if (pinnedRowModel?.getPinnedBottomRowCount()) {\r\n    rowPinned = \"bottom\";\r\n  }\r\n  return rowPinned === void 0 ? null : { rowIndex, rowPinned };\r\n}\r\nfunction _getLastRow(beans) {\r\n  let rowIndex;\r\n  let rowPinned = null;\r\n  const { pinnedRowModel, pageBounds } = beans;\r\n  const pinnedBottomCount = pinnedRowModel?.getPinnedBottomRowCount();\r\n  const pinnedTopCount = pinnedRowModel?.getPinnedTopRowCount();\r\n  if (pinnedBottomCount) {\r\n    rowPinned = \"bottom\";\r\n    rowIndex = pinnedBottomCount - 1;\r\n  } else if (beans.rowModel.getRowCount()) {\r\n    rowPinned = null;\r\n    rowIndex = pageBounds.getLastRow();\r\n  } else if (pinnedTopCount) {\r\n    rowPinned = \"top\";\r\n    rowIndex = pinnedTopCount - 1;\r\n  }\r\n  return rowIndex === void 0 ? null : { rowIndex, rowPinned };\r\n}\r\nfunction _getRowNode(beans, gridRow) {\r\n  switch (gridRow.rowPinned) {\r\n    case \"top\":\r\n      return beans.pinnedRowModel?.getPinnedTopRow(gridRow.rowIndex);\r\n    case \"bottom\":\r\n      return beans.pinnedRowModel?.getPinnedBottomRow(gridRow.rowIndex);\r\n    default:\r\n      return beans.rowModel.getRow(gridRow.rowIndex);\r\n  }\r\n}\r\nfunction _getCellByPosition(beans, cellPosition) {\r\n  const spannedCellCtrl = beans.spannedRowRenderer?.getCellByPosition(cellPosition);\r\n  if (spannedCellCtrl) {\r\n    return spannedCellCtrl;\r\n  }\r\n  const rowCtrl = beans.rowRenderer.getRowByPosition(cellPosition);\r\n  if (!rowCtrl) {\r\n    return null;\r\n  }\r\n  return rowCtrl.getCellCtrl(cellPosition.column);\r\n}\r\nfunction _getRowById(beans, rowId, rowPinned) {\r\n  const { rowModel: rm, pinnedRowModel: prm } = beans;\r\n  let node;\r\n  node ?? (node = rm?.getRowNode(rowId));\r\n  if (rowPinned) {\r\n    node ?? (node = prm?.getPinnedRowById(rowId, rowPinned));\r\n  } else {\r\n    node ?? (node = prm?.getPinnedRowById(rowId, \"top\"));\r\n    node ?? (node = prm?.getPinnedRowById(rowId, \"bottom\"));\r\n  }\r\n  return node;\r\n}\r\nfunction _getRowAbove(beans, rowPosition) {\r\n  const { rowIndex: index, rowPinned: pinned } = rowPosition;\r\n  const { pageBounds, pinnedRowModel, rowModel } = beans;\r\n  if (index === 0) {\r\n    if (pinned === \"top\") {\r\n      return null;\r\n    }\r\n    if (pinned === \"bottom\" && rowModel.isRowsToRender()) {\r\n      return { rowIndex: pageBounds.getLastRow(), rowPinned: null };\r\n    }\r\n    return pinnedRowModel?.isRowsToRender(\"top\") ? { rowIndex: pinnedRowModel.getPinnedTopRowCount() - 1, rowPinned: \"top\" } : null;\r\n  }\r\n  const rowNode = pinned ? void 0 : rowModel.getRow(index);\r\n  return getNextStickyPosition(beans, rowNode, true) ?? { rowIndex: index - 1, rowPinned: pinned };\r\n}\r\nfunction _getRowBelow(beans, rowPosition) {\r\n  const { rowIndex: index, rowPinned: pinned } = rowPosition;\r\n  const { pageBounds, pinnedRowModel, rowModel } = beans;\r\n  if (isLastRowInContainer(beans, rowPosition)) {\r\n    if (pinned === \"bottom\") {\r\n      return null;\r\n    }\r\n    if (pinned === \"top\" && rowModel.isRowsToRender()) {\r\n      return { rowIndex: pageBounds.getFirstRow(), rowPinned: null };\r\n    }\r\n    return pinnedRowModel?.isRowsToRender(\"bottom\") ? { rowIndex: 0, rowPinned: \"bottom\" } : null;\r\n  }\r\n  const rowNode = pinned ? void 0 : rowModel.getRow(index);\r\n  return getNextStickyPosition(beans, rowNode) ?? { rowIndex: index + 1, rowPinned: pinned };\r\n}\r\nfunction getNextStickyPosition(beans, rowNode, up = false) {\r\n  const { gos, rowRenderer } = beans;\r\n  if (!rowNode?.sticky || !_isGroupRowsSticky(gos)) {\r\n    return;\r\n  }\r\n  const stickyTopCtrls = rowRenderer.getStickyTopRowCtrls();\r\n  const stickyBottomCtrls = rowRenderer.getStickyBottomRowCtrls();\r\n  const isStickyTop = !stickyBottomCtrls.some((ctrl) => ctrl.rowNode.rowIndex === rowNode.rowIndex);\r\n  const stickyRowCtrls = isStickyTop ? stickyTopCtrls : stickyBottomCtrls;\r\n  const increment = (up ? -1 : 1) * (isStickyTop ? -1 : 1);\r\n  let nextCtrl;\r\n  for (let i = 0; i < stickyRowCtrls.length; i++) {\r\n    if (stickyRowCtrls[i].rowNode.rowIndex === rowNode.rowIndex) {\r\n      nextCtrl = stickyRowCtrls[i + increment];\r\n      break;\r\n    }\r\n  }\r\n  return nextCtrl ? { rowIndex: nextCtrl.rowNode.rowIndex, rowPinned: null } : void 0;\r\n}\r\nfunction isLastRowInContainer(beans, rowPosition) {\r\n  const { rowPinned, rowIndex } = rowPosition;\r\n  const { pinnedRowModel, pageBounds } = beans;\r\n  if (rowPinned === \"top\") {\r\n    const lastTopIndex = (pinnedRowModel?.getPinnedTopRowCount() ?? 0) - 1;\r\n    return lastTopIndex <= rowIndex;\r\n  }\r\n  if (rowPinned === \"bottom\") {\r\n    const lastBottomIndex = (pinnedRowModel?.getPinnedBottomRowCount() ?? 0) - 1;\r\n    return lastBottomIndex <= rowIndex;\r\n  }\r\n  const lastBodyIndex = pageBounds.getLastRow();\r\n  return lastBodyIndex <= rowIndex;\r\n}\r\n\r\n// packages/ag-grid-community/src/edit/utils/controllers.ts\r\nfunction _getRowCtrl(beans, inputs = {}) {\r\n  const { rowIndex, rowId, rowCtrl, rowPinned } = inputs;\r\n  if (rowCtrl) {\r\n    return rowCtrl;\r\n  }\r\n  const { rowModel, rowRenderer } = beans;\r\n  let { rowNode } = inputs;\r\n  if (!rowNode) {\r\n    if (rowId) {\r\n      rowNode = _getRowById(beans, rowId, rowPinned);\r\n    } else if (rowIndex != null) {\r\n      rowNode = rowModel.getRow(rowIndex);\r\n    }\r\n  }\r\n  return rowRenderer.getRowCtrls(rowNode ? [rowNode] : [])?.[0];\r\n}\r\nfunction _getCellCtrl(beans, inputs = {}) {\r\n  const { cellCtrl, colId, columnId, column } = inputs;\r\n  if (cellCtrl) {\r\n    return cellCtrl;\r\n  }\r\n  const actualColumn = beans.colModel.getCol(colId ?? columnId ?? _getColId(column));\r\n  const rowCtrl = inputs.rowCtrl ?? _getRowCtrl(beans, inputs);\r\n  const result = rowCtrl?.getCellCtrl(actualColumn) ?? void 0;\r\n  if (result) {\r\n    return result;\r\n  }\r\n  const rowNode = inputs.rowNode ?? rowCtrl?.rowNode;\r\n  if (rowNode) {\r\n    return beans.rowRenderer.getCellCtrls([rowNode], [actualColumn])?.[0];\r\n  }\r\n  return void 0;\r\n}\r\nfunction _stopEditing(beans) {\r\n  const { editSvc } = beans;\r\n  if (editSvc?.isBatchEditing()) {\r\n    _destroyEditors(beans);\r\n  } else {\r\n    editSvc?.stopEditing(void 0, { source: \"api\" });\r\n  }\r\n}\r\nfunction _addStopEditingWhenGridLosesFocus(bean, beans, viewports) {\r\n  const { gos, popupSvc } = beans;\r\n  if (!gos.get(\"stopEditingWhenCellsLoseFocus\")) {\r\n    return;\r\n  }\r\n  const focusOutListener = (event) => {\r\n    const elementWithFocus = event.relatedTarget;\r\n    if (_getTabIndex(elementWithFocus) === null) {\r\n      _stopEditing(beans);\r\n      return;\r\n    }\r\n    let clickInsideGrid = (\r\n      // see if click came from inside the viewports\r\n      viewports.some((viewport) => viewport.contains(elementWithFocus)) && // and also that it's not from a detail grid\r\n      _isElementInThisGrid(gos, elementWithFocus)\r\n    );\r\n    if (!clickInsideGrid) {\r\n      clickInsideGrid = !!popupSvc && (popupSvc.getActivePopups().some((popup) => popup.contains(elementWithFocus)) || popupSvc.isElementWithinCustomPopup(elementWithFocus));\r\n    }\r\n    if (!clickInsideGrid) {\r\n      _stopEditing(beans);\r\n    }\r\n  };\r\n  viewports.forEach((viewport) => bean.addManagedElementListeners(viewport, { focusout: focusOutListener }));\r\n}\r\nfunction _getColId(column) {\r\n  if (!column) {\r\n    return void 0;\r\n  }\r\n  if (typeof column === \"string\") {\r\n    return column;\r\n  }\r\n  return column.getColId();\r\n}\r\n\r\n// packages/ag-grid-community/src/edit/utils/editors.ts\r\nvar UNEDITED = Symbol(\"unedited\");\r\nfunction getCellEditorInstanceMap(beans, params = {}) {\r\n  const res = [];\r\n  const ctrls = beans.rowRenderer.getCellCtrls(params.rowNodes, params.columns);\r\n  for (const ctrl of ctrls) {\r\n    const cellEditor = ctrl.comp?.getCellEditor();\r\n    if (cellEditor) {\r\n      res.push({\r\n        ctrl,\r\n        editor: _unwrapUserComp(cellEditor)\r\n      });\r\n    }\r\n  }\r\n  return res;\r\n}\r\nvar getCellEditorInstances = (beans, params = {}) => getCellEditorInstanceMap(beans, params).map((res) => res.editor);\r\nfunction _setupEditors(beans, editingCells, position, key, event, cellStartedEdit) {\r\n  if (editingCells.length === 0 && position?.rowNode && position?.column) {\r\n    _setupEditor(beans, position, { key, event, cellStartedEdit });\r\n  }\r\n  const { valueSvc, editSvc, editModelSvc } = beans;\r\n  const { rowNode, column } = position ?? {};\r\n  for (const cellPosition of editingCells) {\r\n    const { rowNode: cellRowNode, column: cellColumn } = cellPosition;\r\n    const curCellCtrl = _getCellCtrl(beans, cellPosition);\r\n    if (!curCellCtrl) {\r\n      if (cellRowNode && cellColumn) {\r\n        const oldValue = valueSvc.getValue(cellColumn, cellRowNode, void 0, \"api\");\r\n        const isNewValueCell = position?.rowNode === cellRowNode && position?.column === cellColumn;\r\n        const cellStartValue = isNewValueCell && key || void 0;\r\n        const newValue = cellStartValue ?? editSvc?.getCellDataValue(cellPosition, false) ?? valueSvc.getValueForDisplay(cellColumn, cellRowNode)?.value ?? oldValue ?? UNEDITED;\r\n        editModelSvc?.setEdit(cellPosition, {\r\n          pendingValue: newValue,\r\n          sourceValue: oldValue,\r\n          state: \"editing\"\r\n        });\r\n      }\r\n      continue;\r\n    }\r\n    const shouldStartEditing = cellStartedEdit && rowNode === curCellCtrl.rowNode && curCellCtrl.column === column;\r\n    _setupEditor(\r\n      beans,\r\n      { rowNode, column: curCellCtrl.column },\r\n      {\r\n        key: shouldStartEditing ? key : null,\r\n        event: shouldStartEditing ? event : null,\r\n        cellStartedEdit: shouldStartEditing\r\n      }\r\n    );\r\n  }\r\n  return;\r\n}\r\nfunction _sourceAndPendingDiffer({\r\n  pendingValue,\r\n  sourceValue\r\n}) {\r\n  if (pendingValue === UNEDITED) {\r\n    pendingValue = sourceValue;\r\n  }\r\n  return pendingValue !== sourceValue;\r\n}\r\nfunction _setupEditor(beans, position, params) {\r\n  const { key, event, cellStartedEdit, silent } = params ?? {};\r\n  const cellCtrl = _getCellCtrl(beans, position);\r\n  const editorComp = cellCtrl?.comp?.getCellEditor();\r\n  const editorParams = _createEditorParams(beans, position, key, cellStartedEdit);\r\n  const previousEdit = beans.editModelSvc?.getEdit(position);\r\n  let newValue = key?.length === 1 ? key : editorParams.value;\r\n  if (newValue === void 0) {\r\n    newValue = previousEdit?.sourceValue;\r\n  }\r\n  beans.editModelSvc?.setEdit(position, {\r\n    editorValue: newValue,\r\n    state: \"editing\"\r\n  });\r\n  if (editorComp) {\r\n    editorComp.refresh?.(editorParams);\r\n    return;\r\n  }\r\n  const colDef = position.column.getColDef();\r\n  const compDetails = _getCellEditorDetails(beans.userCompFactory, colDef, editorParams);\r\n  const popup = compDetails?.popupFromSelector != null ? compDetails.popupFromSelector : !!colDef.cellEditorPopup;\r\n  const popupLocation = compDetails?.popupPositionFromSelector != null ? compDetails.popupPositionFromSelector : colDef.cellEditorPopupPosition;\r\n  checkAndPreventDefault(compDetails.params, event);\r\n  if (cellCtrl) {\r\n    cellCtrl.editCompDetails = compDetails;\r\n    cellCtrl.comp?.setEditDetails(compDetails, popup, popupLocation, beans.gos.get(\"reactiveCustomComponents\"));\r\n    cellCtrl?.rowCtrl?.refreshRow({ suppressFlash: true });\r\n    if (!silent) {\r\n      beans.editSvc?.dispatchCellEvent(position, event, \"cellEditingStarted\");\r\n    }\r\n  }\r\n  return;\r\n}\r\nfunction _valueFromEditor(cellEditor) {\r\n  const noValueResult = { editorValueExists: false };\r\n  const validationErrors = cellEditor.getValidationErrors?.();\r\n  if ((validationErrors?.length ?? 0) > 0) {\r\n    return noValueResult;\r\n  }\r\n  const editorValue = cellEditor.getValue();\r\n  return {\r\n    editorValue,\r\n    editorValueExists: true\r\n  };\r\n}\r\nfunction _createEditorParams(beans, position, key, cellStartedEdit) {\r\n  const { valueSvc, gos, editSvc } = beans;\r\n  const cellCtrl = _getCellCtrl(beans, position);\r\n  const rowIndex = position.rowNode?.rowIndex ?? void 0;\r\n  const batchEdit = editSvc?.isBatchEditing();\r\n  const agColumn = beans.colModel.getCol(position.column.getId());\r\n  const { rowNode, column } = position;\r\n  const editor = cellCtrl.comp?.getCellEditor();\r\n  const initialNewValue = editSvc?.getCellDataValue(position, false) ?? (editor ? _valueFromEditor(editor)?.editorValue : void 0);\r\n  const value = initialNewValue === UNEDITED ? valueSvc.getValueForDisplay(agColumn, rowNode)?.value : initialNewValue;\r\n  return _addGridCommonParams(gos, {\r\n    value,\r\n    eventKey: key ?? null,\r\n    column,\r\n    colDef: column.getColDef(),\r\n    rowIndex,\r\n    node: rowNode,\r\n    data: rowNode.data,\r\n    cellStartedEdit: cellStartedEdit ?? false,\r\n    onKeyDown: cellCtrl?.onKeyDown.bind(cellCtrl),\r\n    stopEditing: (suppressNavigateAfterEdit) => {\r\n      editSvc.stopEditing(position, { source: batchEdit ? \"ui\" : \"api\", suppressNavigateAfterEdit });\r\n      _destroyEditor(beans, position);\r\n    },\r\n    eGridCell: cellCtrl?.eGui,\r\n    parseValue: (newValue) => valueSvc.parseValue(agColumn, rowNode, newValue, cellCtrl?.value),\r\n    formatValue: cellCtrl?.formatValue.bind(cellCtrl),\r\n    validate: () => {\r\n      editSvc?.validateEdit();\r\n    }\r\n  });\r\n}\r\nfunction _purgeUnchangedEdits(beans, includeEditing) {\r\n  const { editModelSvc } = beans;\r\n  editModelSvc?.getEditMap().forEach((editRow, rowNode) => {\r\n    editRow.forEach((edit, column) => {\r\n      if (!includeEditing && (edit.state === \"editing\" || edit.pendingValue === UNEDITED)) {\r\n        return;\r\n      }\r\n      if (!_sourceAndPendingDiffer(edit) && (edit.state !== \"editing\" || includeEditing)) {\r\n        editModelSvc?.removeEdits({ rowNode, column });\r\n      }\r\n    });\r\n  });\r\n}\r\nfunction _refreshEditorOnColDefChanged(beans, cellCtrl) {\r\n  const editor = cellCtrl.comp?.getCellEditor();\r\n  if (!editor?.refresh) {\r\n    return;\r\n  }\r\n  const { eventKey, cellStartedEdit } = cellCtrl.editCompDetails.params;\r\n  const { column } = cellCtrl;\r\n  const editorParams = _createEditorParams(beans, cellCtrl, eventKey, cellStartedEdit);\r\n  const colDef = column.getColDef();\r\n  const compDetails = _getCellEditorDetails(beans.userCompFactory, colDef, editorParams);\r\n  editor.refresh(checkAndPreventDefault(compDetails.params, eventKey));\r\n}\r\nfunction checkAndPreventDefault(params, event) {\r\n  if (event instanceof KeyboardEvent && params.column.getColDef().cellEditor === \"agNumberCellEditor\") {\r\n    params.suppressPreventDefault = [\"-\", \"+\", \".\", \"e\"].includes(event?.key ?? \"\") || params.suppressPreventDefault;\r\n  } else {\r\n    event?.preventDefault?.();\r\n  }\r\n  return params;\r\n}\r\nfunction _syncFromEditors(beans, persist) {\r\n  beans.editModelSvc?.getEditPositions().forEach((cellId) => {\r\n    const cellCtrl = _getCellCtrl(beans, cellId);\r\n    if (!cellCtrl) {\r\n      return;\r\n    }\r\n    const editor = cellCtrl.comp.getCellEditor();\r\n    if (!editor) {\r\n      return;\r\n    }\r\n    const { editorValue, editorValueExists } = _valueFromEditor(editor);\r\n    _syncFromEditor(beans, cellId, persist, editorValue, void 0, !editorValueExists);\r\n  });\r\n}\r\nfunction _syncFromEditor(beans, position, persist, editorValue, _source, valueSameAsSource) {\r\n  const { editModelSvc, valueSvc } = beans;\r\n  if (!editModelSvc) {\r\n    return;\r\n  }\r\n  const { rowNode, column } = position;\r\n  if (!(rowNode && column)) {\r\n    return;\r\n  }\r\n  const cellCtrl = _getCellCtrl(beans, position);\r\n  const hasEditor = !!cellCtrl?.comp?.getCellEditor();\r\n  let edit = editModelSvc.getEdit(position, true);\r\n  if (!edit?.sourceValue) {\r\n    edit = editModelSvc.setEdit(position, {\r\n      sourceValue: valueSvc.getValue(column, rowNode, void 0, \"api\"),\r\n      pendingValue: UNEDITED,\r\n      state: hasEditor ? \"editing\" : \"changed\"\r\n    });\r\n  }\r\n  editModelSvc.setEdit(position, {\r\n    editorValue: valueSameAsSource ? edit.sourceValue : editorValue,\r\n    state: hasEditor ? \"editing\" : \"changed\"\r\n  });\r\n  if (persist) {\r\n    _persistEditorValue(beans, position);\r\n  }\r\n}\r\nfunction _persistEditorValue(beans, position) {\r\n  const { editModelSvc } = beans;\r\n  const edit = editModelSvc?.getEdit(position, true);\r\n  editModelSvc?.setEdit(position, {\r\n    pendingValue: edit?.editorValue\r\n  });\r\n}\r\nfunction _destroyEditors(beans, edits, params) {\r\n  if (!edits) {\r\n    edits = beans.editModelSvc?.getEditPositions();\r\n  }\r\n  edits.forEach((cellPosition) => _destroyEditor(beans, cellPosition, params));\r\n}\r\nfunction _destroyEditor(beans, position, params) {\r\n  const { editSvc, editModelSvc } = beans;\r\n  const { rowNode, column } = position;\r\n  const cellCtrl = _getCellCtrl(beans, position);\r\n  if (!cellCtrl) {\r\n    if (editModelSvc?.hasEdits(position) && rowNode && column) {\r\n      editModelSvc?.setEdit(position, { state: \"changed\" });\r\n    }\r\n    return;\r\n  }\r\n  const { comp } = cellCtrl;\r\n  if (comp && !comp.getCellEditor()) {\r\n    return;\r\n  }\r\n  const errorMessages = comp?.getCellEditor()?.getValidationErrors?.();\r\n  const cellValidationModel = editModelSvc?.getCellValidationModel();\r\n  if (errorMessages?.length) {\r\n    cellValidationModel?.setCellValidation(position, { errorMessages });\r\n  } else {\r\n    cellValidationModel?.clearCellValidation(position);\r\n  }\r\n  if (editModelSvc?.getEdit(position)) {\r\n    editModelSvc?.setEdit(position, { state: \"changed\" });\r\n  }\r\n  comp?.setEditDetails();\r\n  comp?.refreshEditStyles(false, false);\r\n  cellCtrl?.refreshCell({ force: true, suppressFlash: true });\r\n  const latest = editModelSvc?.getEdit(position);\r\n  if (latest?.state === \"changed\" && !params?.silent) {\r\n    editSvc?.dispatchCellEvent(position, params?.event, \"cellEditingStopped\", {\r\n      valueChanged: _sourceAndPendingDiffer(latest),\r\n      newValue: latest?.pendingValue,\r\n      oldValue: latest?.sourceValue\r\n    });\r\n  }\r\n}\r\nfunction _populateModelValidationErrors(beans) {\r\n  const mappedEditors = getCellEditorInstanceMap(beans);\r\n  const cellValidationModel = new EditCellValidationModel();\r\n  const { ariaAnnounce, localeSvc, editModelSvc, gos } = beans;\r\n  const includeRows = gos.get(\"editType\") === \"fullRow\";\r\n  const translate = _getLocaleTextFunc(localeSvc);\r\n  const ariaValidationErrorPrefix = translate(\"ariaValidationErrorPrefix\", \"Cell Editor Validation\");\r\n  for (const mappedEditor of mappedEditors) {\r\n    const { ctrl, editor } = mappedEditor;\r\n    const { rowNode, column } = ctrl;\r\n    const errorMessages = editor.getValidationErrors?.() ?? [];\r\n    const el = editor.getValidationElement?.(false) || !editor.isPopup?.() && ctrl.eGui;\r\n    if (el) {\r\n      const isInvalid = errorMessages != null && errorMessages.length > 0;\r\n      const invalidMessage = isInvalid ? errorMessages.join(\". \") : \"\";\r\n      _setAriaInvalid(el, isInvalid);\r\n      if (isInvalid) {\r\n        ariaAnnounce.announceValue(`${ariaValidationErrorPrefix} ${errorMessages}`, \"editorValidation\");\r\n      }\r\n      if (el instanceof HTMLInputElement) {\r\n        el.setCustomValidity(invalidMessage);\r\n      } else {\r\n        el.classList.toggle(\"invalid\", isInvalid);\r\n      }\r\n    }\r\n    if (errorMessages?.length > 0) {\r\n      cellValidationModel.setCellValidation(\r\n        {\r\n          rowNode,\r\n          column\r\n        },\r\n        {\r\n          errorMessages\r\n        }\r\n      );\r\n    }\r\n  }\r\n  _syncFromEditors(beans, false);\r\n  editModelSvc?.setCellValidationModel(cellValidationModel);\r\n  const rowCtrlSet = /* @__PURE__ */ new Set();\r\n  for (const { ctrl } of mappedEditors) {\r\n    rowCtrlSet.add(ctrl.rowCtrl);\r\n  }\r\n  if (includeRows) {\r\n    const rowValidations = _generateRowValidationErrors(beans);\r\n    editModelSvc?.setRowValidationModel(rowValidations);\r\n  }\r\n  for (const rowCtrl of rowCtrlSet.values()) {\r\n    rowCtrl.rowEditStyleFeature?.applyRowStyles();\r\n    for (const cellCtrl of rowCtrl.getAllCellCtrls()) {\r\n      cellCtrl.tooltipFeature?.refreshTooltip(true);\r\n      cellCtrl.editorTooltipFeature?.refreshTooltip(true);\r\n      cellCtrl.editStyleFeature?.applyCellStyles?.();\r\n    }\r\n  }\r\n}\r\nvar _generateRowValidationErrors = (beans) => {\r\n  const rowValidationModel = new EditRowValidationModel();\r\n  const getFullRowEditValidationErrors = beans.gos.get(\"getFullRowEditValidationErrors\");\r\n  const editMap = beans.editModelSvc?.getEditMap();\r\n  if (!editMap) {\r\n    return rowValidationModel;\r\n  }\r\n  for (const rowNode of editMap.keys()) {\r\n    const rowEditMap = editMap.get(rowNode);\r\n    if (!rowEditMap) {\r\n      continue;\r\n    }\r\n    const editorsState = [];\r\n    const { rowIndex, rowPinned } = rowNode;\r\n    for (const column of rowEditMap.keys()) {\r\n      const editValue = rowEditMap.get(column);\r\n      if (!editValue) {\r\n        continue;\r\n      }\r\n      const { editorValue, pendingValue, sourceValue } = editValue;\r\n      const newValue = editorValue ?? (pendingValue === UNEDITED ? void 0 : pendingValue) ?? sourceValue;\r\n      editorsState.push({\r\n        column,\r\n        colId: column.getColId(),\r\n        rowIndex,\r\n        rowPinned,\r\n        oldValue: sourceValue,\r\n        newValue\r\n      });\r\n    }\r\n    const errorMessages = getFullRowEditValidationErrors?.({ editorsState }) ?? [];\r\n    if (errorMessages.length > 0) {\r\n      rowValidationModel.setRowValidation(\r\n        {\r\n          rowNode\r\n        },\r\n        { errorMessages }\r\n      );\r\n    }\r\n  }\r\n  return rowValidationModel;\r\n};\r\nfunction _validateEdit(beans) {\r\n  _populateModelValidationErrors(beans);\r\n  const map = beans.editModelSvc?.getCellValidationModel().getCellValidationMap();\r\n  if (!map) {\r\n    return null;\r\n  }\r\n  const validations = [];\r\n  map.forEach((rowValidations, rowNode) => {\r\n    rowValidations.forEach(({ errorMessages }, column) => {\r\n      validations.push({\r\n        column,\r\n        rowIndex: rowNode.rowIndex,\r\n        rowPinned: rowNode.rowPinned,\r\n        messages: errorMessages ?? null\r\n      });\r\n    });\r\n  });\r\n  return validations;\r\n}\r\n\r\n// packages/ag-grid-community/src/headerRendering/cells/cssClassApplier.ts\r\nvar CSS_FIRST_COLUMN = \"ag-column-first\";\r\nvar CSS_LAST_COLUMN = \"ag-column-last\";\r\nfunction _getHeaderClassesFromColDef(abstractColDef, gos, column, columnGroup) {\r\n  if (_missing(abstractColDef)) {\r\n    return [];\r\n  }\r\n  return getColumnClassesFromCollDef(abstractColDef.headerClass, abstractColDef, gos, column, columnGroup);\r\n}\r\nfunction _getToolPanelClassesFromColDef(abstractColDef, gos, column, columnGroup) {\r\n  if (_missing(abstractColDef)) {\r\n    return [];\r\n  }\r\n  return getColumnClassesFromCollDef(abstractColDef.toolPanelClass, abstractColDef, gos, column, columnGroup);\r\n}\r\nfunction refreshFirstAndLastStyles(comp, column, presentedColsService) {\r\n  comp.toggleCss(CSS_FIRST_COLUMN, presentedColsService.isColAtEdge(column, \"first\"));\r\n  comp.toggleCss(CSS_LAST_COLUMN, presentedColsService.isColAtEdge(column, \"last\"));\r\n}\r\nfunction getClassParams(abstractColDef, gos, column, columnGroup) {\r\n  return _addGridCommonParams(gos, {\r\n    // bad naming, as colDef here can be a group or a column,\r\n    // however most people won't appreciate the difference,\r\n    // so keeping it as colDef to avoid confusion.\r\n    colDef: abstractColDef,\r\n    column,\r\n    columnGroup\r\n  });\r\n}\r\nfunction getColumnClassesFromCollDef(classesOrFunc, abstractColDef, gos, column, columnGroup) {\r\n  if (_missing(classesOrFunc)) {\r\n    return [];\r\n  }\r\n  let classToUse;\r\n  if (typeof classesOrFunc === \"function\") {\r\n    const params = getClassParams(abstractColDef, gos, column, columnGroup);\r\n    classToUse = classesOrFunc(params);\r\n  } else {\r\n    classToUse = classesOrFunc;\r\n  }\r\n  if (typeof classToUse === \"string\") {\r\n    return [classToUse];\r\n  }\r\n  if (Array.isArray(classToUse)) {\r\n    return [...classToUse];\r\n  }\r\n  return [];\r\n}\r\n\r\n// packages/ag-grid-community/src/pinnedRowModel/pinnedRowUtils.ts\r\nfunction _isManualPinnedRow(rowNode) {\r\n  return !!(rowNode.rowPinned && rowNode.pinnedSibling);\r\n}\r\nfunction _getNodesInRangeForSelection(rowModel, float, start, end) {\r\n  const isTop = float === \"top\";\r\n  if (!start) {\r\n    return _getNodesInRangeForSelection(\r\n      rowModel,\r\n      float,\r\n      isTop ? rowModel.getPinnedTopRow(0) : rowModel.getPinnedBottomRow(0),\r\n      end\r\n    );\r\n  }\r\n  if (!end) {\r\n    const count = isTop ? rowModel.getPinnedTopRowCount() : rowModel.getPinnedBottomRowCount();\r\n    return _getNodesInRangeForSelection(\r\n      rowModel,\r\n      float,\r\n      start,\r\n      isTop ? rowModel.getPinnedTopRow(count - 1) : rowModel.getPinnedBottomRow(count - 1)\r\n    );\r\n  }\r\n  let started = false;\r\n  let finished = false;\r\n  const range = [];\r\n  rowModel.forEachPinnedRow(float, (node) => {\r\n    if (node === start && !started) {\r\n      started = true;\r\n      range.push(node);\r\n      return;\r\n    }\r\n    if (started && node === end) {\r\n      finished = true;\r\n      range.push(node);\r\n      return;\r\n    }\r\n    if (started && !finished) {\r\n      range.push(node);\r\n    }\r\n  });\r\n  return range;\r\n}\r\n\r\n// packages/ag-grid-community/src/constants/keyCode.ts\r\nvar KeyCode = {\r\n  BACKSPACE: \"Backspace\",\r\n  TAB: \"Tab\",\r\n  ENTER: \"Enter\",\r\n  ESCAPE: \"Escape\",\r\n  SPACE: \" \",\r\n  LEFT: \"ArrowLeft\",\r\n  UP: \"ArrowUp\",\r\n  RIGHT: \"ArrowRight\",\r\n  DOWN: \"ArrowDown\",\r\n  DELETE: \"Delete\",\r\n  F2: \"F2\",\r\n  PAGE_UP: \"PageUp\",\r\n  PAGE_DOWN: \"PageDown\",\r\n  PAGE_HOME: \"Home\",\r\n  PAGE_END: \"End\",\r\n  // these should be used with `event.code` instead of `event.key`\r\n  // as `event.key` changes when non-latin keyboards are used\r\n  A: \"KeyA\",\r\n  C: \"KeyC\",\r\n  D: \"KeyD\",\r\n  V: \"KeyV\",\r\n  X: \"KeyX\",\r\n  Y: \"KeyY\",\r\n  Z: \"KeyZ\"\r\n};\r\n\r\n// packages/ag-grid-community/src/utils/focus.ts\r\nvar keyboardModeActive = false;\r\nvar instanceCount = 0;\r\nfunction addKeyboardModeEvents(doc) {\r\n  if (instanceCount > 0) {\r\n    return;\r\n  }\r\n  doc.addEventListener(\"keydown\", toggleKeyboardMode);\r\n  doc.addEventListener(\"mousedown\", toggleKeyboardMode);\r\n}\r\nfunction removeKeyboardModeEvents(doc) {\r\n  if (instanceCount > 0)\r\n    return;\r\n  doc.removeEventListener(\"keydown\", toggleKeyboardMode);\r\n  doc.removeEventListener(\"mousedown\", toggleKeyboardMode);\r\n}\r\nfunction toggleKeyboardMode(event) {\r\n  const isKeyboardActive = keyboardModeActive;\r\n  const isKeyboardEvent = event.type === \"keydown\";\r\n  if (isKeyboardEvent) {\r\n    if (event.ctrlKey || event.metaKey || event.altKey) {\r\n      return;\r\n    }\r\n  }\r\n  if (isKeyboardActive === isKeyboardEvent) {\r\n    return;\r\n  }\r\n  keyboardModeActive = isKeyboardEvent;\r\n}\r\nfunction _registerKeyboardFocusEvents(beans) {\r\n  const eDocument = _getDocument(beans);\r\n  addKeyboardModeEvents(eDocument);\r\n  instanceCount++;\r\n  return () => {\r\n    instanceCount--;\r\n    removeKeyboardModeEvents(eDocument);\r\n  };\r\n}\r\nfunction _isKeyboardMode() {\r\n  return keyboardModeActive;\r\n}\r\nfunction _addFocusableContainerListener(beans, comp, eGui) {\r\n  comp.addManagedElementListeners(eGui, {\r\n    keydown: (e) => {\r\n      if (!e.defaultPrevented && e.key === KeyCode.TAB) {\r\n        const backwards = e.shiftKey;\r\n        if (!_findNextFocusableElement(beans, eGui, false, backwards)) {\r\n          if (_focusNextGridCoreContainer(beans, backwards)) {\r\n            e.preventDefault();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  });\r\n}\r\nfunction _findFocusableElements(rootNode, exclude, onlyUnmanaged = false) {\r\n  const focusableString = FOCUSABLE_SELECTOR;\r\n  let excludeString = FOCUSABLE_EXCLUDE;\r\n  if (exclude) {\r\n    excludeString += \", \" + exclude;\r\n  }\r\n  if (onlyUnmanaged) {\r\n    excludeString += ', [tabindex=\"-1\"]';\r\n  }\r\n  const nodes = Array.prototype.slice.apply(rootNode.querySelectorAll(focusableString)).filter((node) => {\r\n    return _isVisible(node);\r\n  });\r\n  const excludeNodes = Array.prototype.slice.apply(rootNode.querySelectorAll(excludeString));\r\n  if (!excludeNodes.length) {\r\n    return nodes;\r\n  }\r\n  const diff = (a, b) => a.filter((element) => b.indexOf(element) === -1);\r\n  return diff(nodes, excludeNodes);\r\n}\r\nfunction _focusInto(rootNode, up = false, onlyUnmanaged = false, excludeTabGuards = false) {\r\n  const focusableElements = _findFocusableElements(\r\n    rootNode,\r\n    excludeTabGuards ? \".ag-tab-guard\" : null,\r\n    onlyUnmanaged\r\n  );\r\n  const toFocus = up ? _last(focusableElements) : focusableElements[0];\r\n  if (toFocus) {\r\n    toFocus.focus({ preventScroll: true });\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nfunction _findNextFocusableElement(beans, rootNode, onlyManaged, backwards) {\r\n  const focusable = _findFocusableElements(rootNode, onlyManaged ? ':not([tabindex=\"-1\"])' : null);\r\n  const activeEl = _getActiveDomElement(beans);\r\n  let currentIndex;\r\n  if (onlyManaged) {\r\n    currentIndex = focusable.findIndex((el) => el.contains(activeEl));\r\n  } else {\r\n    currentIndex = focusable.indexOf(activeEl);\r\n  }\r\n  const nextIndex = currentIndex + (backwards ? -1 : 1);\r\n  if (nextIndex < 0 || nextIndex >= focusable.length) {\r\n    return null;\r\n  }\r\n  return focusable[nextIndex];\r\n}\r\nfunction _findTabbableParent(node, limit = 5) {\r\n  let counter = 0;\r\n  while (node && _getTabIndex(node) === null && ++counter <= limit) {\r\n    node = node.parentElement;\r\n  }\r\n  if (_getTabIndex(node) === null) {\r\n    return null;\r\n  }\r\n  return node;\r\n}\r\nfunction _focusGridInnerElement(beans, fromBottom) {\r\n  return beans.ctrlsSvc.get(\"gridCtrl\").focusInnerElement(fromBottom);\r\n}\r\nfunction _isHeaderFocusSuppressed(beans) {\r\n  return beans.gos.get(\"suppressHeaderFocus\") || !!beans.overlays?.isExclusive();\r\n}\r\nfunction _isCellFocusSuppressed(beans) {\r\n  return beans.gos.get(\"suppressCellFocus\") || !!beans.overlays?.isExclusive();\r\n}\r\nfunction _focusNextGridCoreContainer(beans, backwards, forceOut = false) {\r\n  const gridCtrl = beans.ctrlsSvc.get(\"gridCtrl\");\r\n  if (!forceOut && gridCtrl.focusNextInnerContainer(backwards)) {\r\n    return true;\r\n  }\r\n  if (forceOut || !backwards && !gridCtrl.isDetailGrid()) {\r\n    gridCtrl.forceFocusOutOfContainer(backwards);\r\n  }\r\n  return false;\r\n}\r\n\r\n// packages/ag-grid-community/src/rendering/cell/cellEvent.ts\r\nfunction _createCellEvent(beans, domEvent, eventType, { rowNode, column }, value) {\r\n  const event = _addGridCommonParams(beans.gos, {\r\n    type: eventType,\r\n    node: rowNode,\r\n    data: rowNode.data,\r\n    value,\r\n    column,\r\n    colDef: column.getColDef(),\r\n    rowPinned: rowNode.rowPinned,\r\n    event: domEvent,\r\n    rowIndex: rowNode.rowIndex\r\n  });\r\n  return event;\r\n}\r\n\r\n// packages/ag-grid-community/src/rendering/cell/cellKeyboardListenerFeature.ts\r\nfunction _isDeleteKey(key, alwaysReturnFalseOnBackspace = false) {\r\n  if (key === KeyCode.DELETE) {\r\n    return true;\r\n  }\r\n  if (!alwaysReturnFalseOnBackspace && key === KeyCode.BACKSPACE) {\r\n    return _isMacOsUserAgent();\r\n  }\r\n  return false;\r\n}\r\nvar CellKeyboardListenerFeature = class extends BeanStub {\r\n  constructor(cellCtrl, beans, rowNode, rowCtrl) {\r\n    super();\r\n    this.cellCtrl = cellCtrl;\r\n    this.rowNode = rowNode;\r\n    this.rowCtrl = rowCtrl;\r\n    this.beans = beans;\r\n  }\r\n  init() {\r\n    this.eGui = this.cellCtrl.eGui;\r\n  }\r\n  onKeyDown(event) {\r\n    const key = event.key;\r\n    switch (key) {\r\n      case KeyCode.ENTER:\r\n        this.onEnterKeyDown(event);\r\n        break;\r\n      case KeyCode.F2:\r\n        this.onF2KeyDown(event);\r\n        break;\r\n      case KeyCode.ESCAPE:\r\n        this.onEscapeKeyDown(event);\r\n        break;\r\n      case KeyCode.TAB:\r\n        this.onTabKeyDown(event);\r\n        break;\r\n      case KeyCode.BACKSPACE:\r\n      case KeyCode.DELETE:\r\n        this.onBackspaceOrDeleteKeyDown(key, event);\r\n        break;\r\n      case KeyCode.DOWN:\r\n      case KeyCode.UP:\r\n      case KeyCode.RIGHT:\r\n      case KeyCode.LEFT:\r\n        this.onNavigationKeyDown(event, key);\r\n        break;\r\n    }\r\n  }\r\n  onNavigationKeyDown(event, key) {\r\n    const { cellCtrl, beans } = this;\r\n    if (beans.editSvc?.isEditing(cellCtrl, { withOpenEditor: true })) {\r\n      return;\r\n    }\r\n    if (event.shiftKey && cellCtrl.isRangeSelectionEnabled()) {\r\n      this.onShiftRangeSelect(event);\r\n    } else {\r\n      const currentCellPosition = cellCtrl.getFocusedCellPosition();\r\n      beans.navigation?.navigateToNextCell(event, key, currentCellPosition, true);\r\n    }\r\n    event.preventDefault();\r\n  }\r\n  onShiftRangeSelect(event) {\r\n    const { rangeSvc, navigation } = this.beans;\r\n    if (!rangeSvc) {\r\n      return;\r\n    }\r\n    const endCell = rangeSvc.extendLatestRangeInDirection(event);\r\n    if (!endCell) {\r\n      return;\r\n    }\r\n    if (event.key === KeyCode.LEFT || event.key === KeyCode.RIGHT) {\r\n      navigation?.ensureColumnVisible(endCell.column);\r\n    } else {\r\n      navigation?.ensureRowVisible(endCell.rowIndex);\r\n    }\r\n  }\r\n  onTabKeyDown(event) {\r\n    this.beans.navigation?.onTabKeyDown(this.cellCtrl, event);\r\n  }\r\n  onBackspaceOrDeleteKeyDown(key, event) {\r\n    const { cellCtrl, beans, rowNode } = this;\r\n    const { gos, rangeSvc, eventSvc, editSvc } = beans;\r\n    eventSvc.dispatchEvent({ type: \"keyShortcutChangedCellStart\" });\r\n    if (_isDeleteKey(key, gos.get(\"enableCellEditingOnBackspace\")) && !editSvc?.isEditing(cellCtrl, { withOpenEditor: true })) {\r\n      if (rangeSvc && _isCellSelectionEnabled(gos)) {\r\n        rangeSvc.clearCellRangeCellValues({ dispatchWrapperEvents: true, wrapperEventSource: \"deleteKey\" });\r\n      } else if (cellCtrl.isCellEditable()) {\r\n        const { column } = cellCtrl;\r\n        const emptyValue = this.beans.valueSvc.getDeleteValue(column, rowNode);\r\n        rowNode.setDataValue(column, emptyValue, \"cellClear\");\r\n      }\r\n    } else if (!editSvc?.isEditing(cellCtrl, { withOpenEditor: true })) {\r\n      beans.editSvc?.startEditing(cellCtrl, { startedEdit: true, event });\r\n    }\r\n    eventSvc.dispatchEvent({ type: \"keyShortcutChangedCellEnd\" });\r\n  }\r\n  onEnterKeyDown(event) {\r\n    const { cellCtrl, beans } = this;\r\n    const { editSvc, navigation } = beans;\r\n    const cellEditing = editSvc?.isEditing(cellCtrl);\r\n    const rowNode = cellCtrl.rowNode;\r\n    const rowEditing = editSvc?.isRowEditing(rowNode);\r\n    const startEditingAction = (cellCtrl2) => {\r\n      const started = editSvc?.startEditing(cellCtrl2, {\r\n        startedEdit: true,\r\n        event\r\n      });\r\n      if (started) {\r\n        event.preventDefault();\r\n      }\r\n    };\r\n    if (cellEditing || rowEditing) {\r\n      if (this.isCtrlEnter(event)) {\r\n        editSvc?.applyBulkEdit(cellCtrl, beans?.rangeSvc?.getCellRanges() || []);\r\n        return;\r\n      }\r\n      _populateModelValidationErrors(beans);\r\n      if (editSvc?.checkNavWithValidation(void 0, event) === \"block-stop\") {\r\n        return;\r\n      }\r\n      if (editSvc?.isEditing(cellCtrl, { withOpenEditor: true })) {\r\n        editSvc?.stopEditing(cellCtrl, {\r\n          event\r\n        });\r\n      } else if (rowEditing && !cellCtrl.isCellEditable()) {\r\n        editSvc?.stopEditing({ rowNode }, { event });\r\n      } else {\r\n        startEditingAction(cellCtrl);\r\n      }\r\n    } else {\r\n      if (beans.gos.get(\"enterNavigatesVertically\")) {\r\n        const key = event.shiftKey ? KeyCode.UP : KeyCode.DOWN;\r\n        navigation?.navigateToNextCell(null, key, cellCtrl.cellPosition, false);\r\n      } else {\r\n        if (editSvc?.hasValidationErrors()) {\r\n          return;\r\n        }\r\n        if (editSvc?.hasValidationErrors(cellCtrl)) {\r\n          editSvc.revertSingleCellEdit(cellCtrl, true);\r\n        }\r\n        startEditingAction(cellCtrl);\r\n      }\r\n    }\r\n  }\r\n  isCtrlEnter(e) {\r\n    return (e.ctrlKey || e.metaKey) && e.key === KeyCode.ENTER;\r\n  }\r\n  onF2KeyDown(event) {\r\n    const {\r\n      cellCtrl,\r\n      beans: { editSvc }\r\n    } = this;\r\n    const editing = editSvc?.isEditing();\r\n    if (editing) {\r\n      _populateModelValidationErrors(this.beans);\r\n      if (editSvc?.checkNavWithValidation(void 0, event) === \"block-stop\") {\r\n        return;\r\n      }\r\n    }\r\n    editSvc?.startEditing(cellCtrl, { startedEdit: true, event });\r\n  }\r\n  onEscapeKeyDown(event) {\r\n    const {\r\n      cellCtrl,\r\n      beans: { editSvc }\r\n    } = this;\r\n    if (editSvc?.checkNavWithValidation(cellCtrl, event) === \"block-stop\") {\r\n      editSvc.revertSingleCellEdit(cellCtrl);\r\n    }\r\n    editSvc?.stopEditing(cellCtrl, {\r\n      event,\r\n      cancel: true\r\n    });\r\n  }\r\n  processCharacter(event) {\r\n    const eventTarget = event.target;\r\n    const eventOnChildComponent = eventTarget !== this.eGui;\r\n    const {\r\n      beans: { editSvc },\r\n      cellCtrl\r\n    } = this;\r\n    if (eventOnChildComponent) {\r\n      return;\r\n    }\r\n    if (editSvc?.isEditing(cellCtrl, { withOpenEditor: true })) {\r\n      return;\r\n    }\r\n    const key = event.key;\r\n    if (key === KeyCode.SPACE) {\r\n      this.onSpaceKeyDown(event);\r\n    } else if (editSvc?.isCellEditable(cellCtrl, \"ui\")) {\r\n      if (editSvc?.hasValidationErrors() && !editSvc?.hasValidationErrors(cellCtrl)) {\r\n        return;\r\n      }\r\n      editSvc?.startEditing(cellCtrl, { startedEdit: true, event, source: \"api\" });\r\n      const compDetails = cellCtrl.editCompDetails;\r\n      const shouldPreventDefault = !compDetails?.params?.suppressPreventDefault;\r\n      if (shouldPreventDefault) {\r\n        event.preventDefault();\r\n      }\r\n    }\r\n  }\r\n  onSpaceKeyDown(event) {\r\n    const { gos, editSvc } = this.beans;\r\n    const { rowNode } = this.cellCtrl;\r\n    if (!editSvc?.isEditing(this.cellCtrl, { withOpenEditor: true }) && _isRowSelection(gos)) {\r\n      this.beans.selectionSvc?.handleSelectionEvent(event, rowNode, \"spaceKey\");\r\n    }\r\n    event.preventDefault();\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/utils/mouse.ts\r\nfunction _areEventsNear(e1, e2, pixelCount) {\r\n  if (pixelCount === 0) {\r\n    return false;\r\n  }\r\n  const diffX = Math.abs(e1.clientX - e2.clientX);\r\n  const diffY = Math.abs(e1.clientY - e2.clientY);\r\n  return Math.max(diffX, diffY) <= pixelCount;\r\n}\r\nfunction _interpretAsRightClick({ gos }, event) {\r\n  return event.button === 2 || event.ctrlKey && gos.get(\"allowContextMenuWithControlKey\");\r\n}\r\n\r\n// packages/ag-grid-community/src/rendering/cell/cellMouseListenerFeature.ts\r\nvar CellMouseListenerFeature = class extends BeanStub {\r\n  constructor(cellCtrl, beans, column) {\r\n    super();\r\n    this.cellCtrl = cellCtrl;\r\n    this.column = column;\r\n    this.beans = beans;\r\n  }\r\n  onMouseEvent(eventName, mouseEvent) {\r\n    if (_isStopPropagationForAgGrid(mouseEvent)) {\r\n      return;\r\n    }\r\n    switch (eventName) {\r\n      case \"click\":\r\n        this.onCellClicked(mouseEvent);\r\n        break;\r\n      case \"mousedown\":\r\n      case \"touchstart\":\r\n        this.onMouseDown(mouseEvent);\r\n        break;\r\n      case \"dblclick\":\r\n        this.onCellDoubleClicked(mouseEvent);\r\n        break;\r\n      case \"mouseout\":\r\n        this.onMouseOut(mouseEvent);\r\n        break;\r\n      case \"mouseover\":\r\n        this.onMouseOver(mouseEvent);\r\n        break;\r\n    }\r\n  }\r\n  onCellClicked(event) {\r\n    if (this.beans.touchSvc?.handleCellDoubleClick(this, event)) {\r\n      return;\r\n    }\r\n    const { eventSvc, rangeSvc, editSvc, editModelSvc, frameworkOverrides } = this.beans;\r\n    const isMultiKey = event.ctrlKey || event.metaKey;\r\n    const { cellCtrl } = this;\r\n    const { column, cellPosition } = cellCtrl;\r\n    if (rangeSvc && isMultiKey) {\r\n      if (rangeSvc.getCellRangeCount(cellPosition) > 1) {\r\n        rangeSvc.intersectLastRange(true);\r\n      }\r\n    }\r\n    const cellClickedEvent = cellCtrl.createEvent(event, \"cellClicked\");\r\n    eventSvc.dispatchEvent(cellClickedEvent);\r\n    const colDef = column.getColDef();\r\n    if (colDef.onCellClicked) {\r\n      window.setTimeout(() => {\r\n        frameworkOverrides.wrapOutgoing(() => {\r\n          colDef.onCellClicked(cellClickedEvent);\r\n        });\r\n      }, 0);\r\n    }\r\n    if (editModelSvc?.getState(cellCtrl) !== \"editing\") {\r\n      const editing = editSvc?.isEditing();\r\n      const cellValidations = editModelSvc?.getCellValidationModel().getCellValidationMap().size ?? 0;\r\n      const rowValidations = editModelSvc?.getRowValidationModel().getRowValidationMap().size ?? 0;\r\n      if (editing && (cellValidations > 0 || rowValidations > 0)) {\r\n        return;\r\n      }\r\n      if (editSvc?.shouldStartEditing(cellCtrl, event)) {\r\n        editSvc?.startEditing(cellCtrl, { event });\r\n      } else if (editSvc?.shouldStopEditing(cellCtrl, event)) {\r\n        editSvc?.stopEditing(cellCtrl);\r\n      }\r\n    }\r\n  }\r\n  onCellDoubleClicked(event) {\r\n    const { column, beans, cellCtrl } = this;\r\n    const { eventSvc, frameworkOverrides, editSvc, editModelSvc } = beans;\r\n    const colDef = column.getColDef();\r\n    const cellDoubleClickedEvent = cellCtrl.createEvent(event, \"cellDoubleClicked\");\r\n    eventSvc.dispatchEvent(cellDoubleClickedEvent);\r\n    if (typeof colDef.onCellDoubleClicked === \"function\") {\r\n      window.setTimeout(() => {\r\n        frameworkOverrides.wrapOutgoing(() => {\r\n          colDef.onCellDoubleClicked(cellDoubleClickedEvent);\r\n        });\r\n      }, 0);\r\n    }\r\n    if (editSvc?.shouldStartEditing(this.cellCtrl, event) && this.beans.editModelSvc?.getState(this.cellCtrl) !== \"editing\") {\r\n      const editing = editSvc?.isEditing();\r\n      const cellValidations = editModelSvc?.getCellValidationModel().getCellValidationMap().size ?? 0;\r\n      const rowValidations = editModelSvc?.getRowValidationModel().getRowValidationMap().size ?? 0;\r\n      if (editing && (cellValidations > 0 || rowValidations > 0)) {\r\n        return;\r\n      }\r\n      editSvc?.startEditing(cellCtrl, { event });\r\n    }\r\n  }\r\n  onMouseDown(mouseEvent) {\r\n    const { ctrlKey, metaKey, shiftKey } = mouseEvent;\r\n    const target = mouseEvent.target;\r\n    const { cellCtrl, beans } = this;\r\n    const { eventSvc, rangeSvc, rowNumbersSvc, focusSvc, gos, editSvc } = beans;\r\n    if (this.isRightClickInExistingRange(mouseEvent)) {\r\n      return;\r\n    }\r\n    const hasRanges = rangeSvc && !rangeSvc.isEmpty();\r\n    const containsWidget = this.containsWidget(target);\r\n    const { cellPosition, column } = cellCtrl;\r\n    const isRowNumberColumn = isRowNumberCol(column);\r\n    if (rowNumbersSvc && isRowNumberColumn && !rowNumbersSvc.handleMouseDownOnCell(cellPosition, mouseEvent)) {\r\n      if (rangeSvc) {\r\n        mouseEvent.preventDefault();\r\n      }\r\n      mouseEvent.stopImmediatePropagation();\r\n      return;\r\n    }\r\n    if (!shiftKey || !hasRanges) {\r\n      const editing = editSvc?.isEditing(cellCtrl);\r\n      const isEnableCellTextSelection = gos.get(\"enableCellTextSelection\");\r\n      const shouldFocus = isEnableCellTextSelection && mouseEvent.defaultPrevented;\r\n      const forceBrowserFocus = (_isBrowserSafari() || shouldFocus) && !editing && !_isFocusableFormField(target) && !containsWidget;\r\n      cellCtrl.focusCell(forceBrowserFocus, mouseEvent);\r\n    }\r\n    if (shiftKey && hasRanges && !focusSvc.isCellFocused(cellPosition)) {\r\n      mouseEvent.preventDefault();\r\n      const focusedCell = focusSvc.getFocusedCell();\r\n      if (focusedCell) {\r\n        const { column: column2, rowIndex, rowPinned } = focusedCell;\r\n        if (editSvc?.isEditing(focusedCell)) {\r\n          editSvc?.stopEditing(focusedCell);\r\n        }\r\n        focusSvc.setFocusedCell({\r\n          column: column2,\r\n          rowIndex,\r\n          rowPinned,\r\n          forceBrowserFocus: true,\r\n          preventScrollOnBrowserFocus: true,\r\n          sourceEvent: mouseEvent\r\n        });\r\n      }\r\n    }\r\n    if (containsWidget) {\r\n      return;\r\n    }\r\n    if (rangeSvc) {\r\n      if (isRowNumberColumn) {\r\n        mouseEvent.preventDefault();\r\n      }\r\n      const hasRightClickedOnRowNumber = _interpretAsRightClick(this.beans, mouseEvent) && isRowNumberColumn;\r\n      if (shiftKey) {\r\n        rangeSvc.extendLatestRangeToCell(cellPosition);\r\n      } else if (!hasRightClickedOnRowNumber) {\r\n        const isMultiKey = ctrlKey || metaKey;\r\n        rangeSvc.setRangeToCell(cellPosition, isMultiKey);\r\n      }\r\n    }\r\n    eventSvc.dispatchEvent(this.cellCtrl.createEvent(mouseEvent, \"cellMouseDown\"));\r\n  }\r\n  isRightClickInExistingRange(mouseEvent) {\r\n    const { rangeSvc } = this.beans;\r\n    if (rangeSvc) {\r\n      const cellInRange = rangeSvc.isCellInAnyRange(this.cellCtrl.cellPosition);\r\n      const isRightClick = _interpretAsRightClick(this.beans, mouseEvent);\r\n      if (cellInRange && isRightClick) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  containsWidget(target) {\r\n    return _isElementChildOfClass(target, \"ag-selection-checkbox\", 3) || _isElementChildOfClass(target, \"ag-drag-handle\", 3);\r\n  }\r\n  onMouseOut(mouseEvent) {\r\n    if (this.mouseStayingInsideCell(mouseEvent)) {\r\n      return;\r\n    }\r\n    const { eventSvc, colHover } = this.beans;\r\n    eventSvc.dispatchEvent(this.cellCtrl.createEvent(mouseEvent, \"cellMouseOut\"));\r\n    colHover?.clearMouseOver();\r\n  }\r\n  onMouseOver(mouseEvent) {\r\n    if (this.mouseStayingInsideCell(mouseEvent)) {\r\n      return;\r\n    }\r\n    const { eventSvc, colHover } = this.beans;\r\n    eventSvc.dispatchEvent(this.cellCtrl.createEvent(mouseEvent, \"cellMouseOver\"));\r\n    colHover?.setMouseOver([this.column]);\r\n  }\r\n  mouseStayingInsideCell(e) {\r\n    if (!e.target || !e.relatedTarget) {\r\n      return false;\r\n    }\r\n    const eCell = this.cellCtrl.eGui;\r\n    const cellContainsTarget = eCell.contains(e.target);\r\n    const cellContainsRelatedTarget = eCell.contains(e.relatedTarget);\r\n    return cellContainsTarget && cellContainsRelatedTarget;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/rendering/cell/cellPositionFeature.ts\r\nvar CellPositionFeature = class extends BeanStub {\r\n  constructor(cellCtrl, beans) {\r\n    super();\r\n    this.cellCtrl = cellCtrl;\r\n    this.beans = beans;\r\n    this.column = cellCtrl.column;\r\n    this.rowNode = cellCtrl.rowNode;\r\n  }\r\n  setupRowSpan() {\r\n    this.rowSpan = this.column.getRowSpan(this.rowNode);\r\n    this.addManagedListeners(this.beans.eventSvc, { newColumnsLoaded: () => this.onNewColumnsLoaded() });\r\n  }\r\n  init() {\r\n    this.eSetLeft = this.cellCtrl.getRootElement();\r\n    this.eContent = this.cellCtrl.eGui;\r\n    const cellSpan = this.cellCtrl.getCellSpan();\r\n    if (!cellSpan) {\r\n      this.setupColSpan();\r\n      this.setupRowSpan();\r\n    }\r\n    this.onLeftChanged();\r\n    this.onWidthChanged();\r\n    if (!cellSpan) {\r\n      this._legacyApplyRowSpan();\r\n    }\r\n    if (cellSpan) {\r\n      const refreshSpanHeight = this.refreshSpanHeight.bind(this, cellSpan);\r\n      refreshSpanHeight();\r\n      this.addManagedListeners(this.beans.eventSvc, {\r\n        paginationChanged: refreshSpanHeight,\r\n        recalculateRowBounds: refreshSpanHeight,\r\n        pinnedHeightChanged: refreshSpanHeight\r\n      });\r\n    }\r\n  }\r\n  refreshSpanHeight(cellSpan) {\r\n    const spanHeight = cellSpan.getCellHeight();\r\n    if (spanHeight != null) {\r\n      this.eContent.style.height = `${spanHeight}px`;\r\n    }\r\n  }\r\n  onNewColumnsLoaded() {\r\n    const rowSpan = this.column.getRowSpan(this.rowNode);\r\n    if (this.rowSpan === rowSpan) {\r\n      return;\r\n    }\r\n    this.rowSpan = rowSpan;\r\n    this._legacyApplyRowSpan(true);\r\n  }\r\n  onDisplayColumnsChanged() {\r\n    const colsSpanning = this.getColSpanningList();\r\n    if (!_areEqual(this.colsSpanning, colsSpanning)) {\r\n      this.colsSpanning = colsSpanning;\r\n      this.onWidthChanged();\r\n      this.onLeftChanged();\r\n    }\r\n  }\r\n  setupColSpan() {\r\n    if (this.column.getColDef().colSpan == null) {\r\n      return;\r\n    }\r\n    this.colsSpanning = this.getColSpanningList();\r\n    this.addManagedListeners(this.beans.eventSvc, {\r\n      // because we are col spanning, a reorder of the cols can change what cols we are spanning over\r\n      displayedColumnsChanged: this.onDisplayColumnsChanged.bind(this),\r\n      // because we are spanning over multiple cols, we check for width any time any cols width changes.\r\n      // this is expensive - really we should be explicitly checking only the cols we are spanning over\r\n      // instead of every col, however it would be tricky code to track the cols we are spanning over, so\r\n      // because hardly anyone will be using colSpan, am favouring this easier way for more maintainable code.\r\n      displayedColumnsWidthChanged: this.onWidthChanged.bind(this)\r\n    });\r\n  }\r\n  onWidthChanged() {\r\n    if (!this.eContent) {\r\n      return;\r\n    }\r\n    const width = this.getCellWidth();\r\n    this.eContent.style.width = `${width}px`;\r\n  }\r\n  getCellWidth() {\r\n    if (!this.colsSpanning) {\r\n      return this.column.getActualWidth();\r\n    }\r\n    return this.colsSpanning.reduce((width, col) => width + col.getActualWidth(), 0);\r\n  }\r\n  getColSpanningList() {\r\n    const { column, rowNode } = this;\r\n    const colSpan = column.getColSpan(rowNode);\r\n    const colsSpanning = [];\r\n    if (colSpan === 1) {\r\n      colsSpanning.push(column);\r\n    } else {\r\n      let pointer = column;\r\n      const pinned = column.getPinned();\r\n      for (let i = 0; pointer && i < colSpan; i++) {\r\n        colsSpanning.push(pointer);\r\n        pointer = this.beans.visibleCols.getColAfter(pointer);\r\n        if (!pointer || _missing(pointer)) {\r\n          break;\r\n        }\r\n        if (pinned !== pointer.getPinned()) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return colsSpanning;\r\n  }\r\n  onLeftChanged() {\r\n    if (!this.eSetLeft) {\r\n      return;\r\n    }\r\n    const left = this.modifyLeftForPrintLayout(this.getCellLeft());\r\n    this.eSetLeft.style.left = left + \"px\";\r\n  }\r\n  getCellLeft() {\r\n    let mostLeftCol;\r\n    if (this.beans.gos.get(\"enableRtl\") && this.colsSpanning) {\r\n      mostLeftCol = _last(this.colsSpanning);\r\n    } else {\r\n      mostLeftCol = this.column;\r\n    }\r\n    return mostLeftCol.getLeft();\r\n  }\r\n  modifyLeftForPrintLayout(leftPosition) {\r\n    if (!this.cellCtrl.printLayout || this.column.getPinned() === \"left\") {\r\n      return leftPosition;\r\n    }\r\n    const { visibleCols } = this.beans;\r\n    const leftWidth = visibleCols.getColsLeftWidth();\r\n    if (this.column.getPinned() === \"right\") {\r\n      const bodyWidth = visibleCols.bodyWidth;\r\n      return leftWidth + bodyWidth + (leftPosition || 0);\r\n    }\r\n    return leftWidth + (leftPosition || 0);\r\n  }\r\n  _legacyApplyRowSpan(force) {\r\n    if (this.rowSpan === 1 && !force) {\r\n      return;\r\n    }\r\n    const singleRowHeight = _getRowHeightAsNumber(this.beans);\r\n    const totalRowHeight = singleRowHeight * this.rowSpan;\r\n    this.eContent.style.height = `${totalRowHeight}px`;\r\n    this.eContent.style.zIndex = \"1\";\r\n  }\r\n  // overriding to make public, as we don't dispose this bean via context\r\n  destroy() {\r\n    super.destroy();\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/rendering/cell/cellCtrl.ts\r\nvar CSS_CELL = \"ag-cell\";\r\nvar CSS_AUTO_HEIGHT = \"ag-cell-auto-height\";\r\nvar CSS_NORMAL_HEIGHT = \"ag-cell-normal-height\";\r\nvar CSS_CELL_FOCUS = \"ag-cell-focus\";\r\nvar CSS_CELL_FIRST_RIGHT_PINNED = \"ag-cell-first-right-pinned\";\r\nvar CSS_CELL_LAST_LEFT_PINNED = \"ag-cell-last-left-pinned\";\r\nvar CSS_CELL_NOT_INLINE_EDITING = \"ag-cell-not-inline-editing\";\r\nvar CSS_CELL_WRAP_TEXT = \"ag-cell-wrap-text\";\r\nvar DOM_DATA_KEY_CELL_CTRL = \"cellCtrl\";\r\nfunction _getCellCtrlForEventTarget(gos, eventTarget) {\r\n  return _getCtrlForEventTarget(gos, eventTarget, DOM_DATA_KEY_CELL_CTRL);\r\n}\r\nvar instanceIdSequence2 = 0;\r\nvar CellCtrl = class extends BeanStub {\r\n  constructor(column, rowNode, beans, rowCtrl) {\r\n    super();\r\n    this.column = column;\r\n    this.rowNode = rowNode;\r\n    this.rowCtrl = rowCtrl;\r\n    this.rangeFeature = void 0;\r\n    this.rowResizeFeature = void 0;\r\n    this.positionFeature = void 0;\r\n    this.customStyleFeature = void 0;\r\n    this.editStyleFeature = void 0;\r\n    this.mouseListener = void 0;\r\n    this.keyboardListener = void 0;\r\n    this.suppressRefreshCell = false;\r\n    this.onCompAttachedFuncs = [];\r\n    this.onEditorAttachedFuncs = [];\r\n    this.focusEventWhileNotReady = null;\r\n    // if cell has been focused, check if it's focused when destroyed\r\n    this.hasBeenFocused = false;\r\n    this.hasEdit = false;\r\n    this.tooltipFeature = void 0;\r\n    this.editorTooltipFeature = void 0;\r\n    this.beans = beans;\r\n    this.gos = beans.gos;\r\n    this.editSvc = beans.editSvc;\r\n    this.hasEdit = !!beans.editSvc;\r\n    const { colId } = column;\r\n    this.instanceId = colId + \"-\" + instanceIdSequence2++;\r\n    this.createCellPosition();\r\n    this.updateAndFormatValue(false);\r\n  }\r\n  addFeatures() {\r\n    const { beans } = this;\r\n    this.positionFeature = new CellPositionFeature(this, beans);\r\n    this.customStyleFeature = beans.cellStyles?.createCellCustomStyleFeature(this, beans);\r\n    this.editStyleFeature = beans.editSvc?.createCellStyleFeature(this, beans);\r\n    this.mouseListener = new CellMouseListenerFeature(this, beans, this.column);\r\n    this.keyboardListener = new CellKeyboardListenerFeature(this, beans, this.rowNode, this.rowCtrl);\r\n    this.enableTooltipFeature();\r\n    const { rangeSvc } = beans;\r\n    const cellSelectionEnabled = rangeSvc && _isCellSelectionEnabled(beans.gos);\r\n    if (cellSelectionEnabled) {\r\n      this.rangeFeature = rangeSvc.createCellRangeFeature(beans, this);\r\n    }\r\n    if (isRowNumberCol(this.column)) {\r\n      this.rowResizeFeature = this.beans.rowNumbersSvc.createRowNumbersRowResizerFeature(beans, this);\r\n    }\r\n  }\r\n  isCellSpanning() {\r\n    return false;\r\n  }\r\n  getCellSpan() {\r\n    return void 0;\r\n  }\r\n  removeFeatures() {\r\n    const context = this.beans.context;\r\n    this.positionFeature = context.destroyBean(this.positionFeature);\r\n    this.editorTooltipFeature = context.destroyBean(this.editorTooltipFeature);\r\n    this.customStyleFeature = context.destroyBean(this.customStyleFeature);\r\n    this.editStyleFeature = context.destroyBean(this.editStyleFeature);\r\n    this.mouseListener = context.destroyBean(this.mouseListener);\r\n    this.keyboardListener = context.destroyBean(this.keyboardListener);\r\n    this.rangeFeature = context.destroyBean(this.rangeFeature);\r\n    this.rowResizeFeature = context.destroyBean(this.rowResizeFeature);\r\n    this.disableTooltipFeature();\r\n  }\r\n  enableTooltipFeature(value, shouldDisplayTooltip) {\r\n    this.tooltipFeature = this.beans.tooltipSvc?.enableCellTooltipFeature(this, value, shouldDisplayTooltip);\r\n  }\r\n  disableTooltipFeature() {\r\n    this.tooltipFeature = this.beans.context.destroyBean(this.tooltipFeature);\r\n  }\r\n  enableEditorTooltipFeature(editor) {\r\n    if (this.editorTooltipFeature) {\r\n      this.disableEditorTooltipFeature();\r\n    }\r\n    this.editorTooltipFeature = this.beans.tooltipSvc?.setupCellEditorTooltip(this, editor);\r\n    _populateModelValidationErrors(this.beans);\r\n  }\r\n  disableEditorTooltipFeature() {\r\n    this.editorTooltipFeature = this.beans.context.destroyBean(this.editorTooltipFeature);\r\n  }\r\n  setComp(comp, eCell, _eWrapper, eCellWrapper, printLayout, startEditing, compBean) {\r\n    this.comp = comp;\r\n    this.eGui = eCell;\r\n    this.printLayout = printLayout;\r\n    compBean ?? (compBean = this);\r\n    this.addDomData(compBean);\r\n    this.addFeatures();\r\n    compBean.addDestroyFunc(() => this.removeFeatures());\r\n    this.onSuppressCellFocusChanged(this.beans.gos.get(\"suppressCellFocus\"));\r\n    this.setupFocus();\r\n    this.applyStaticCssClasses();\r\n    this.setWrapText();\r\n    this.onFirstRightPinnedChanged();\r\n    this.onLastLeftPinnedChanged();\r\n    this.onColumnHover();\r\n    this.setupControlComps();\r\n    this.setupAutoHeight(eCellWrapper, compBean);\r\n    this.refreshFirstAndLastStyles();\r\n    this.refreshAriaColIndex();\r\n    this.positionFeature?.init();\r\n    this.customStyleFeature?.setComp(comp);\r\n    this.editStyleFeature?.setComp(comp);\r\n    this.tooltipFeature?.refreshTooltip();\r\n    this.keyboardListener?.init();\r\n    this.rangeFeature?.setComp(comp);\r\n    this.rowResizeFeature?.refreshRowResizer();\r\n    if (startEditing && this.isCellEditable()) {\r\n      this.editSvc?.startEditing(this, { startedEdit: true, source: \"api\" });\r\n    } else {\r\n      this.showValue(false, true);\r\n    }\r\n    if (this.onCompAttachedFuncs.length) {\r\n      this.onCompAttachedFuncs.forEach((func) => func());\r\n      this.onCompAttachedFuncs = [];\r\n    }\r\n  }\r\n  setupAutoHeight(eCellWrapper, compBean) {\r\n    this.isAutoHeight = this.beans.rowAutoHeight?.setupCellAutoHeight(this, eCellWrapper, compBean) ?? false;\r\n  }\r\n  getCellAriaRole() {\r\n    return this.column.getColDef().cellAriaRole ?? \"gridcell\";\r\n  }\r\n  isCellRenderer() {\r\n    const colDef = this.column.getColDef();\r\n    return colDef.cellRenderer != null || colDef.cellRendererSelector != null;\r\n  }\r\n  getValueToDisplay() {\r\n    return this.valueFormatted ?? this.value;\r\n  }\r\n  getDeferLoadingCellRenderer() {\r\n    const { beans, column } = this;\r\n    const { userCompFactory, ctrlsSvc, eventSvc } = beans;\r\n    const colDef = column.getColDef();\r\n    const params = this.createCellRendererParams();\r\n    params.deferRender = true;\r\n    const loadingDetails = _getLoadingCellRendererDetails(userCompFactory, colDef, params);\r\n    if (ctrlsSvc.getGridBodyCtrl()?.scrollFeature?.isScrolling()) {\r\n      let resolver;\r\n      const onReady = new AgPromise((resolve) => {\r\n        resolver = resolve;\r\n      });\r\n      this.addManagedListeners(eventSvc, {\r\n        bodyScrollEnd: () => resolver()\r\n      });\r\n      return { loadingComp: loadingDetails, onReady };\r\n    }\r\n    return { loadingComp: loadingDetails, onReady: AgPromise.resolve() };\r\n  }\r\n  showValue(forceNewCellRendererInstance, skipRangeHandleRefresh) {\r\n    const { beans, column, rowNode, rangeFeature } = this;\r\n    const { userCompFactory } = beans;\r\n    let valueToDisplay = this.getValueToDisplay();\r\n    let compDetails;\r\n    const isSsrmLoading = rowNode.stub && rowNode.groupData?.[column.getId()] == null;\r\n    const colDef = column.getColDef();\r\n    if (isSsrmLoading || this.isCellRenderer()) {\r\n      const params = this.createCellRendererParams();\r\n      if (!isSsrmLoading || isRowNumberCol(column)) {\r\n        compDetails = _getCellRendererDetails(userCompFactory, colDef, params);\r\n      } else {\r\n        compDetails = _getLoadingCellRendererDetails(userCompFactory, colDef, params);\r\n      }\r\n    }\r\n    if (!compDetails && !isSsrmLoading && beans.findSvc?.isMatch(rowNode, column)) {\r\n      const params = this.createCellRendererParams();\r\n      compDetails = _getCellRendererDetails(\r\n        userCompFactory,\r\n        { ...column.getColDef(), cellRenderer: \"agFindCellRenderer\" },\r\n        params\r\n      );\r\n    }\r\n    if (this.hasEdit && this.editSvc.isBatchEditing() && this.editSvc.isRowEditing(rowNode, { checkSiblings: true })) {\r\n      const result = this.editSvc.prepDetailsDuringBatch(this, { compDetails, valueToDisplay });\r\n      if (result) {\r\n        if (result.compDetails) {\r\n          compDetails = result.compDetails;\r\n        } else if (result.valueToDisplay) {\r\n          valueToDisplay = result.valueToDisplay;\r\n        }\r\n      }\r\n    }\r\n    this.comp.setRenderDetails(compDetails, valueToDisplay, forceNewCellRendererInstance);\r\n    if (!skipRangeHandleRefresh && rangeFeature) {\r\n      _requestAnimationFrame(beans, () => rangeFeature?.refreshHandle());\r\n    }\r\n    this.rowResizeFeature?.refreshRowResizer();\r\n  }\r\n  setupControlComps() {\r\n    const colDef = this.column.getColDef();\r\n    this.includeSelection = this.isIncludeControl(this.isCheckboxSelection(colDef), true);\r\n    this.includeRowDrag = this.isIncludeControl(colDef.rowDrag);\r\n    this.includeDndSource = this.isIncludeControl(colDef.dndSource);\r\n    this.comp.setIncludeSelection(this.includeSelection);\r\n    this.comp.setIncludeDndSource(this.includeDndSource);\r\n    this.comp.setIncludeRowDrag(this.includeRowDrag);\r\n  }\r\n  isForceWrapper() {\r\n    return this.beans.gos.get(\"enableCellTextSelection\") || this.column.isAutoHeight();\r\n  }\r\n  /**\r\n   * Wrapper providing general conditions under which control elements (e.g. checkboxes and drag handles)\r\n   * are rendered for a particular cell.\r\n   * @param value Whether to render the control in the specific context of the caller\r\n   * @param allowManuallyPinned Whether manually pinned rows are permitted this form of control element\r\n   */\r\n  // eslint-disable-next-line @typescript-eslint/ban-types\r\n  isIncludeControl(value, allowManuallyPinned = false) {\r\n    const rowUnpinned = this.rowNode.rowPinned == null;\r\n    return (rowUnpinned || allowManuallyPinned && _isManualPinnedRow(this.rowNode)) && !!value;\r\n  }\r\n  isCheckboxSelection(colDef) {\r\n    const { rowSelection, groupDisplayType } = this.beans.gridOptions;\r\n    const checkboxLocation = _getCheckboxLocation(rowSelection);\r\n    const isSelectionColumn = isColumnSelectionCol(this.column);\r\n    if (groupDisplayType === \"custom\" && checkboxLocation !== \"selectionColumn\" && isSelectionColumn) {\r\n      return false;\r\n    }\r\n    return colDef.checkboxSelection || isSelectionColumn && typeof rowSelection === \"object\" && _getCheckboxes(rowSelection);\r\n  }\r\n  refreshShouldDestroy() {\r\n    const colDef = this.column.getColDef();\r\n    const selectionChanged = this.includeSelection != this.isIncludeControl(this.isCheckboxSelection(colDef), true);\r\n    const rowDragChanged = this.includeRowDrag != this.isIncludeControl(colDef.rowDrag);\r\n    const dndSourceChanged = this.includeDndSource != this.isIncludeControl(colDef.dndSource);\r\n    const autoHeightChanged = this.isAutoHeight != this.column.isAutoHeight();\r\n    return selectionChanged || rowDragChanged || dndSourceChanged || autoHeightChanged;\r\n  }\r\n  onPopupEditorClosed() {\r\n    const { editSvc } = this.beans;\r\n    if (!editSvc?.isEditing(this, { withOpenEditor: true })) {\r\n      return;\r\n    }\r\n    editSvc?.stopEditing(this, { source: editSvc?.isBatchEditing() ? \"ui\" : \"api\" });\r\n  }\r\n  /**\r\n   * Ends the Cell Editing\r\n   * @param cancel `True` if the edit process is being canceled.\r\n   * @returns `True` if the value of the `GridCell` has been updated, otherwise `False`.\r\n   */\r\n  stopEditing(cancel = false) {\r\n    const { editSvc } = this.beans;\r\n    return editSvc?.stopEditing(this, { cancel, source: editSvc?.isBatchEditing() ? \"ui\" : \"api\" }) ?? false;\r\n  }\r\n  createCellRendererParams() {\r\n    const {\r\n      value,\r\n      valueFormatted,\r\n      column,\r\n      rowNode,\r\n      comp,\r\n      eGui,\r\n      beans: { valueSvc, gos, editSvc }\r\n    } = this;\r\n    const res = _addGridCommonParams(gos, {\r\n      value,\r\n      valueFormatted,\r\n      getValue: () => valueSvc.getValueForDisplay(column, rowNode).value,\r\n      setValue: (value2) => editSvc?.setDataValue({ rowNode, column }, value2) || valueSvc.setValue(rowNode, column, value2),\r\n      formatValue: this.formatValue.bind(this),\r\n      data: rowNode.data,\r\n      node: rowNode,\r\n      pinned: column.getPinned(),\r\n      colDef: column.getColDef(),\r\n      column,\r\n      refreshCell: this.refreshCell.bind(this),\r\n      eGridCell: eGui,\r\n      eParentOfValue: comp.getParentOfValue(),\r\n      registerRowDragger: (rowDraggerElement, dragStartPixels, value2, suppressVisibilityChange) => this.registerRowDragger(rowDraggerElement, dragStartPixels, suppressVisibilityChange),\r\n      setTooltip: (value2, shouldDisplayTooltip) => {\r\n        gos.assertModuleRegistered(\"Tooltip\", 3);\r\n        if (this.tooltipFeature) {\r\n          this.disableTooltipFeature();\r\n        }\r\n        this.enableTooltipFeature(value2, shouldDisplayTooltip);\r\n        this.tooltipFeature?.refreshTooltip();\r\n      }\r\n    });\r\n    return res;\r\n  }\r\n  onCellChanged(event) {\r\n    const eventImpactsThisCell = event.column === this.column;\r\n    if (eventImpactsThisCell) {\r\n      this.refreshCell({});\r\n    }\r\n  }\r\n  refreshOrDestroyCell(params) {\r\n    if (this.refreshShouldDestroy()) {\r\n      this.rowCtrl?.recreateCell(this);\r\n    } else {\r\n      this.refreshCell(params);\r\n    }\r\n  }\r\n  // + stop editing {force: true, suppressFlash: true}\r\n  // + event cellChanged {}\r\n  // + cellRenderer.params.refresh() {} -> method passes 'as is' to the cellRenderer, so params could be anything\r\n  // + rowCtrl: event dataChanged {suppressFlash: !update, newData: !update}\r\n  // + rowCtrl: api refreshCells() {animate: true/false}\r\n  // + rowRenderer: api softRefreshView() {}\r\n  refreshCell({ force, suppressFlash, newData } = {}) {\r\n    if (this.suppressRefreshCell) {\r\n      return;\r\n    }\r\n    const colDef = this.column.getColDef();\r\n    const noValueProvided = colDef.field == null && colDef.valueGetter == null && colDef.showRowGroup == null;\r\n    const forceRefresh = force || noValueProvided || newData;\r\n    const isCellCompReady = !!this.comp;\r\n    const valuesDifferent = this.updateAndFormatValue(isCellCompReady);\r\n    const dataNeedsUpdating = forceRefresh || valuesDifferent;\r\n    if (!isCellCompReady) {\r\n      return;\r\n    }\r\n    if (dataNeedsUpdating) {\r\n      this.showValue(!!newData, false);\r\n      const processingFilterChange = this.beans.filterManager?.isSuppressFlashingCellsBecauseFiltering();\r\n      const flashCell = !suppressFlash && !processingFilterChange && colDef.enableCellChangeFlash;\r\n      if (flashCell) {\r\n        this.beans.cellFlashSvc?.flashCell(this);\r\n      }\r\n      this.editStyleFeature?.applyCellStyles?.();\r\n      this.customStyleFeature?.applyUserStyles();\r\n      this.customStyleFeature?.applyClassesFromColDef();\r\n    }\r\n    this.tooltipFeature?.refreshTooltip();\r\n    this.customStyleFeature?.applyCellClassRules();\r\n  }\r\n  isCellEditable() {\r\n    return this.column.isCellEditable(this.rowNode);\r\n  }\r\n  formatValue(value) {\r\n    return this.callValueFormatter(value) ?? value;\r\n  }\r\n  callValueFormatter(value) {\r\n    return this.beans.valueSvc.formatValue(this.column, this.rowNode, value);\r\n  }\r\n  updateAndFormatValue(compareValues) {\r\n    const oldValue = this.value;\r\n    const oldValueFormatted = this.valueFormatted;\r\n    const { value, valueFormatted } = this.beans.valueSvc.getValueForDisplay(this.column, this.rowNode, true);\r\n    this.value = value;\r\n    this.valueFormatted = valueFormatted;\r\n    if (compareValues) {\r\n      return !this.valuesAreEqual(oldValue, this.value) || this.valueFormatted != oldValueFormatted;\r\n    }\r\n    return true;\r\n  }\r\n  valuesAreEqual(val1, val2) {\r\n    const colDef = this.column.getColDef();\r\n    return colDef.equals ? colDef.equals(val1, val2) : val1 === val2;\r\n  }\r\n  addDomData(compBean) {\r\n    const element = this.eGui;\r\n    _setDomData(this.beans.gos, element, DOM_DATA_KEY_CELL_CTRL, this);\r\n    compBean.addDestroyFunc(() => _setDomData(this.beans.gos, element, DOM_DATA_KEY_CELL_CTRL, null));\r\n  }\r\n  createEvent(domEvent, eventType) {\r\n    const { rowNode, column, value, beans } = this;\r\n    return _createCellEvent(beans, domEvent, eventType, { rowNode, column }, value);\r\n  }\r\n  processCharacter(event) {\r\n    this.keyboardListener?.processCharacter(event);\r\n  }\r\n  onKeyDown(event) {\r\n    this.keyboardListener?.onKeyDown(event);\r\n  }\r\n  onMouseEvent(eventName, mouseEvent) {\r\n    this.mouseListener?.onMouseEvent(eventName, mouseEvent);\r\n  }\r\n  getColSpanningList() {\r\n    return this.positionFeature?.getColSpanningList() ?? [];\r\n  }\r\n  onLeftChanged() {\r\n    if (!this.comp) {\r\n      return;\r\n    }\r\n    this.positionFeature?.onLeftChanged();\r\n  }\r\n  onDisplayedColumnsChanged() {\r\n    if (!this.eGui) {\r\n      return;\r\n    }\r\n    this.refreshAriaColIndex();\r\n    this.refreshFirstAndLastStyles();\r\n  }\r\n  refreshFirstAndLastStyles() {\r\n    const { comp, column, beans } = this;\r\n    refreshFirstAndLastStyles(comp, column, beans.visibleCols);\r\n  }\r\n  refreshAriaColIndex() {\r\n    const colIdx = this.beans.visibleCols.getAriaColIndex(this.column);\r\n    _setAriaColIndex(this.eGui, colIdx);\r\n  }\r\n  onWidthChanged() {\r\n    return this.positionFeature?.onWidthChanged();\r\n  }\r\n  getRowPosition() {\r\n    const { rowIndex, rowPinned } = this.cellPosition;\r\n    return {\r\n      rowIndex,\r\n      rowPinned\r\n    };\r\n  }\r\n  updateRangeBordersIfRangeCount() {\r\n    if (!this.comp) {\r\n      return;\r\n    }\r\n    this.rangeFeature?.updateRangeBordersIfRangeCount();\r\n  }\r\n  onCellSelectionChanged() {\r\n    if (!this.comp) {\r\n      return;\r\n    }\r\n    this.rangeFeature?.onCellSelectionChanged();\r\n  }\r\n  isRangeSelectionEnabled() {\r\n    return this.rangeFeature != null;\r\n  }\r\n  focusCell(forceBrowserFocus = false, sourceEvent) {\r\n    const allowedTarget = this.editSvc?.allowedFocusTargetOnValidation(this);\r\n    if (allowedTarget && allowedTarget !== this) {\r\n      return;\r\n    }\r\n    this.beans.focusSvc.setFocusedCell({\r\n      ...this.getFocusedCellPosition(),\r\n      forceBrowserFocus,\r\n      sourceEvent\r\n    });\r\n  }\r\n  /**\r\n   * Restores focus to the cell, if it should have it\r\n   * @param waitForRender if the cell has just setComp, it may not be rendered yet, so we wait for the next render\r\n   */\r\n  restoreFocus(waitForRender = false) {\r\n    const {\r\n      beans: { editSvc, focusSvc },\r\n      comp\r\n    } = this;\r\n    if (!comp || editSvc?.isEditing(this) || !this.isCellFocused() || !focusSvc.shouldTakeFocus()) {\r\n      return;\r\n    }\r\n    const focus = () => {\r\n      if (!this.isAlive()) {\r\n        return;\r\n      }\r\n      const focusableElement = comp.getFocusableElement();\r\n      if (this.isCellFocused()) {\r\n        focusableElement.focus({ preventScroll: true });\r\n      }\r\n    };\r\n    if (waitForRender) {\r\n      setTimeout(focus, 0);\r\n      return;\r\n    }\r\n    focus();\r\n  }\r\n  onRowIndexChanged() {\r\n    this.createCellPosition();\r\n    this.onCellFocused();\r\n    this.restoreFocus();\r\n    this.rangeFeature?.onCellSelectionChanged();\r\n    this.rowResizeFeature?.refreshRowResizer();\r\n  }\r\n  onSuppressCellFocusChanged(suppressCellFocus) {\r\n    const element = this.eGui;\r\n    if (!element) {\r\n      return;\r\n    }\r\n    if (isRowNumberCol(this.column)) {\r\n      suppressCellFocus = true;\r\n    }\r\n    _addOrRemoveAttribute(element, \"tabindex\", suppressCellFocus ? void 0 : -1);\r\n  }\r\n  onFirstRightPinnedChanged() {\r\n    if (!this.comp) {\r\n      return;\r\n    }\r\n    const firstRightPinned = this.column.isFirstRightPinned();\r\n    this.comp.toggleCss(CSS_CELL_FIRST_RIGHT_PINNED, firstRightPinned);\r\n  }\r\n  onLastLeftPinnedChanged() {\r\n    if (!this.comp) {\r\n      return;\r\n    }\r\n    const lastLeftPinned = this.column.isLastLeftPinned();\r\n    this.comp.toggleCss(CSS_CELL_LAST_LEFT_PINNED, lastLeftPinned);\r\n  }\r\n  /**\r\n   * Returns whether cell is focused by the focusSvc, overridden by spannedCellCtrl\r\n   */\r\n  checkCellFocused() {\r\n    return this.beans.focusSvc.isCellFocused(this.cellPosition);\r\n  }\r\n  isCellFocused() {\r\n    const isFocused = this.checkCellFocused();\r\n    this.hasBeenFocused || (this.hasBeenFocused = isFocused);\r\n    return isFocused;\r\n  }\r\n  setupFocus() {\r\n    this.restoreFocus(true);\r\n    this.onCellFocused(this.focusEventWhileNotReady ?? void 0);\r\n  }\r\n  onCellFocused(event) {\r\n    const { beans } = this;\r\n    if (_isCellFocusSuppressed(beans)) {\r\n      return;\r\n    }\r\n    if (!this.comp) {\r\n      if (event) {\r\n        this.focusEventWhileNotReady = event;\r\n      }\r\n      return;\r\n    }\r\n    const cellFocused = this.isCellFocused();\r\n    const editing = beans.editSvc?.isEditing(this) ?? false;\r\n    this.comp.toggleCss(CSS_CELL_FOCUS, cellFocused);\r\n    if (cellFocused && event && event.forceBrowserFocus) {\r\n      let focusEl = this.comp.getFocusableElement();\r\n      if (editing) {\r\n        const focusableEls = _findFocusableElements(focusEl, null, true);\r\n        if (focusableEls.length) {\r\n          focusEl = focusableEls[0];\r\n        }\r\n      }\r\n      focusEl.focus({ preventScroll: !!event.preventScrollOnBrowserFocus });\r\n    }\r\n    if (cellFocused) {\r\n      this.rowCtrl.announceDescription();\r\n    }\r\n  }\r\n  createCellPosition() {\r\n    const { rowIndex, rowPinned } = this.rowNode;\r\n    this.cellPosition = {\r\n      rowIndex,\r\n      rowPinned: _makeNull(rowPinned),\r\n      column: this.column\r\n    };\r\n  }\r\n  // CSS Classes that only get applied once, they never change\r\n  applyStaticCssClasses() {\r\n    const { comp } = this;\r\n    comp.toggleCss(CSS_CELL, true);\r\n    comp.toggleCss(CSS_CELL_NOT_INLINE_EDITING, true);\r\n    const autoHeight = this.column.isAutoHeight() == true;\r\n    comp.toggleCss(CSS_AUTO_HEIGHT, autoHeight);\r\n    comp.toggleCss(CSS_NORMAL_HEIGHT, !autoHeight);\r\n  }\r\n  onColumnHover() {\r\n    this.beans.colHover?.onCellColumnHover(this.column, this.comp);\r\n  }\r\n  onColDefChanged() {\r\n    if (!this.comp) {\r\n      return;\r\n    }\r\n    if (this.column.isTooltipEnabled()) {\r\n      this.disableTooltipFeature();\r\n      this.enableTooltipFeature();\r\n    } else {\r\n      this.disableTooltipFeature();\r\n    }\r\n    this.setWrapText();\r\n    if (this.editSvc?.isEditing(this)) {\r\n      this.editSvc?.handleColDefChanged(this);\r\n    } else {\r\n      this.refreshOrDestroyCell({ force: true, suppressFlash: true });\r\n    }\r\n  }\r\n  setWrapText() {\r\n    const value = this.column.getColDef().wrapText == true;\r\n    this.comp.toggleCss(CSS_CELL_WRAP_TEXT, value);\r\n  }\r\n  dispatchCellContextMenuEvent(event) {\r\n    const colDef = this.column.getColDef();\r\n    const cellContextMenuEvent = this.createEvent(event, \"cellContextMenu\");\r\n    const { beans } = this;\r\n    beans.eventSvc.dispatchEvent(cellContextMenuEvent);\r\n    if (colDef.onCellContextMenu) {\r\n      window.setTimeout(() => {\r\n        beans.frameworkOverrides.wrapOutgoing(() => {\r\n          colDef.onCellContextMenu(cellContextMenuEvent);\r\n        });\r\n      }, 0);\r\n    }\r\n  }\r\n  getCellRenderer() {\r\n    return this.comp?.getCellRenderer() ?? null;\r\n  }\r\n  destroy() {\r\n    this.onCompAttachedFuncs = [];\r\n    this.onEditorAttachedFuncs = [];\r\n    if (this.isCellFocused() && this.hasBrowserFocus()) {\r\n      this.beans.focusSvc.attemptToRecoverFocus();\r\n    }\r\n    super.destroy();\r\n  }\r\n  hasBrowserFocus() {\r\n    return this.eGui?.contains(_getActiveDomElement(this.beans)) ?? false;\r\n  }\r\n  createSelectionCheckbox() {\r\n    const cbSelectionComponent = this.beans.selectionSvc?.createCheckboxSelectionComponent();\r\n    if (!cbSelectionComponent) {\r\n      return void 0;\r\n    }\r\n    this.beans.context.createBean(cbSelectionComponent);\r\n    cbSelectionComponent.init({ rowNode: this.rowNode, column: this.column });\r\n    return cbSelectionComponent;\r\n  }\r\n  createDndSource() {\r\n    const dndSourceComp = this.beans.registry.createDynamicBean(\r\n      \"dndSourceComp\",\r\n      false,\r\n      this.rowNode,\r\n      this.column,\r\n      this.eGui\r\n    );\r\n    if (dndSourceComp) {\r\n      this.beans.context.createBean(dndSourceComp);\r\n    }\r\n    return dndSourceComp;\r\n  }\r\n  registerRowDragger(customElement, dragStartPixels, suppressVisibilityChange) {\r\n    if (this.customRowDragComp) {\r\n      this.customRowDragComp.setDragElement(customElement, dragStartPixels);\r\n      return;\r\n    }\r\n    const newComp = this.createRowDragComp(customElement, dragStartPixels, suppressVisibilityChange);\r\n    if (newComp) {\r\n      this.customRowDragComp = newComp;\r\n      this.addDestroyFunc(() => {\r\n        this.beans.context.destroyBean(newComp);\r\n        this.customRowDragComp = null;\r\n      });\r\n    }\r\n  }\r\n  createRowDragComp(customElement, dragStartPixels, suppressVisibilityChange) {\r\n    const rowDragComp = this.beans.rowDragSvc?.createRowDragCompForCell(\r\n      this.rowNode,\r\n      this.column,\r\n      () => this.value,\r\n      customElement,\r\n      dragStartPixels,\r\n      suppressVisibilityChange\r\n    );\r\n    if (!rowDragComp) {\r\n      return void 0;\r\n    }\r\n    this.beans.context.createBean(rowDragComp);\r\n    return rowDragComp;\r\n  }\r\n  cellEditorAttached() {\r\n    this.onEditorAttachedFuncs.forEach((func) => func());\r\n    this.onEditorAttachedFuncs = [];\r\n  }\r\n  setFocusedCellPosition(_cellPosition) {\r\n  }\r\n  getFocusedCellPosition() {\r\n    return this.cellPosition;\r\n  }\r\n  // used by spannedCellCtrl\r\n  refreshAriaRowIndex() {\r\n  }\r\n  /**\r\n   * Returns the root element of the cell, could be a span container rather than the cell element.\r\n   * @returns The root element of the cell.\r\n   */\r\n  getRootElement() {\r\n    return this.eGui;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/gridBodyComp/mouseEventUtils.ts\r\nvar GRID_DOM_KEY = \"__ag_grid_instance\";\r\nfunction _stampTopLevelGridCompWithGridInstance(gos, eGridDiv) {\r\n  eGridDiv[GRID_DOM_KEY] = gos.gridInstanceId;\r\n}\r\nfunction _isEventFromThisGrid(gos, event) {\r\n  const res = _isElementInThisGrid(gos, event.target);\r\n  return res;\r\n}\r\nfunction _isElementInThisGrid(gos, element) {\r\n  let pointer = element;\r\n  while (pointer) {\r\n    const instanceId = pointer[GRID_DOM_KEY];\r\n    if (_exists(instanceId)) {\r\n      const eventFromThisGrid = instanceId === gos.gridInstanceId;\r\n      return eventFromThisGrid;\r\n    }\r\n    pointer = pointer.parentElement;\r\n  }\r\n  return false;\r\n}\r\nfunction _getCellPositionForEvent(gos, event) {\r\n  return _getCellCtrlForEventTarget(gos, event.target)?.getFocusedCellPosition() ?? null;\r\n}\r\nfunction _getNormalisedMousePosition(beans, event) {\r\n  const gridPanelHasScrolls = _isDomLayout(beans.gos, \"normal\");\r\n  const e = event;\r\n  let x;\r\n  let y;\r\n  if (e.clientX != null || e.clientY != null) {\r\n    x = e.clientX;\r\n    y = e.clientY;\r\n  } else {\r\n    x = e.x;\r\n    y = e.y;\r\n  }\r\n  const { pageFirstPixel } = beans.pageBounds.getCurrentPagePixelRange();\r\n  y += pageFirstPixel;\r\n  if (gridPanelHasScrolls) {\r\n    const scrollFeature = beans.ctrlsSvc.getScrollFeature();\r\n    const vRange = scrollFeature.getVScrollPosition();\r\n    const hRange = scrollFeature.getHScrollPosition();\r\n    x += hRange.left;\r\n    y += vRange.top;\r\n  }\r\n  return { x, y };\r\n}\r\n\r\n// packages/ag-grid-community/src/dragAndDrop/dragAndDropService.ts\r\nvar DragSourceType = /* @__PURE__ */ ((DragSourceType2) => {\r\n  DragSourceType2[DragSourceType2[\"ToolPanel\"] = 0] = \"ToolPanel\";\r\n  DragSourceType2[DragSourceType2[\"HeaderCell\"] = 1] = \"HeaderCell\";\r\n  DragSourceType2[DragSourceType2[\"RowDrag\"] = 2] = \"RowDrag\";\r\n  DragSourceType2[DragSourceType2[\"ChartPanel\"] = 3] = \"ChartPanel\";\r\n  DragSourceType2[DragSourceType2[\"AdvancedFilterBuilder\"] = 4] = \"AdvancedFilterBuilder\";\r\n  return DragSourceType2;\r\n})(DragSourceType || {});\r\nvar DragAndDropService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"dragAndDrop\";\r\n    this.dragSourceAndParamsList = [];\r\n    this.dropTargets = [];\r\n  }\r\n  wireBeans(beans) {\r\n    this.ctrlsSvc = beans.ctrlsSvc;\r\n    this.dragSvc = beans.dragSvc;\r\n    this.environment = beans.environment;\r\n    this.userCompFactory = beans.userCompFactory;\r\n  }\r\n  addDragSource(dragSource, allowTouch = false) {\r\n    const params = {\r\n      eElement: dragSource.eElement,\r\n      dragStartPixels: dragSource.dragStartPixels,\r\n      onDragStart: this.onDragStart.bind(this, dragSource),\r\n      onDragStop: this.onDragStop.bind(this),\r\n      onDragging: this.onDragging.bind(this),\r\n      onDragCancel: this.onDragCancel.bind(this),\r\n      includeTouch: allowTouch\r\n    };\r\n    this.dragSourceAndParamsList.push({ params, dragSource });\r\n    this.dragSvc.addDragSource(params);\r\n  }\r\n  getDragAndDropImageComponent() {\r\n    const { dragAndDropImageComp } = this;\r\n    if (!dragAndDropImageComp || !dragAndDropImageComp.comp) {\r\n      return null;\r\n    }\r\n    return dragAndDropImageComp.comp;\r\n  }\r\n  removeDragSource(dragSource) {\r\n    const { dragSourceAndParamsList, dragSvc } = this;\r\n    const sourceAndParams = dragSourceAndParamsList.find((item) => item.dragSource === dragSource);\r\n    if (sourceAndParams) {\r\n      dragSvc.removeDragSource(sourceAndParams.params);\r\n      _removeFromArray(dragSourceAndParamsList, sourceAndParams);\r\n    }\r\n  }\r\n  destroy() {\r\n    const { dragSourceAndParamsList, dragSvc, dropTargets } = this;\r\n    dragSourceAndParamsList.forEach((sourceAndParams) => dragSvc.removeDragSource(sourceAndParams.params));\r\n    dragSourceAndParamsList.length = 0;\r\n    dropTargets.length = 0;\r\n    this.clearDragAndDropProperties();\r\n    super.destroy();\r\n  }\r\n  nudge() {\r\n    if (this.dragging) {\r\n      this.onDragging(this.eventLastTime, true);\r\n    }\r\n  }\r\n  onDragStart(dragSource, mouseEvent) {\r\n    this.dragging = true;\r\n    this.dragSource = dragSource;\r\n    this.eventLastTime = mouseEvent;\r\n    this.dragItem = dragSource.getDragItem();\r\n    dragSource.onDragStarted?.();\r\n    this.createDragAndDropImageComponent();\r\n  }\r\n  onDragStop(mouseEvent) {\r\n    this.dragSource?.onDragStopped?.();\r\n    const { lastDropTarget } = this;\r\n    if (lastDropTarget?.onDragStop) {\r\n      const draggingEvent = this.createDropTargetEvent(lastDropTarget, mouseEvent, null, null, false);\r\n      lastDropTarget.onDragStop(draggingEvent);\r\n    }\r\n    this.clearDragAndDropProperties();\r\n  }\r\n  onDragCancel() {\r\n    const { dragSource, lastDropTarget } = this;\r\n    dragSource?.onDragCancelled?.();\r\n    if (lastDropTarget?.onDragCancel) {\r\n      lastDropTarget.onDragCancel(\r\n        this.createDropTargetEvent(lastDropTarget, this.eventLastTime, null, null, false)\r\n      );\r\n    }\r\n    this.clearDragAndDropProperties();\r\n  }\r\n  clearDragAndDropProperties() {\r\n    this.eventLastTime = null;\r\n    this.dragging = false;\r\n    this.lastDropTarget = void 0;\r\n    this.dragItem = null;\r\n    this.dragSource = null;\r\n    this.removeDragAndDropImageComponent();\r\n  }\r\n  onDragging(mouseEvent, fromNudge = false) {\r\n    const hDirection = this.getHorizontalDirection(mouseEvent);\r\n    const vDirection = this.getVerticalDirection(mouseEvent);\r\n    this.eventLastTime = mouseEvent;\r\n    this.positionDragAndDropImageComp(mouseEvent);\r\n    const validDropTargets = this.dropTargets.filter((target) => this.isMouseOnDropTarget(mouseEvent, target));\r\n    const dropTarget = this.findCurrentDropTarget(mouseEvent, validDropTargets);\r\n    const { lastDropTarget, dragSource, dragAndDropImageComp, dragItem } = this;\r\n    if (dropTarget !== lastDropTarget) {\r\n      this.leaveLastTargetIfExists(mouseEvent, hDirection, vDirection, fromNudge);\r\n      if (lastDropTarget !== null && dropTarget === null) {\r\n        dragSource?.onGridExit?.(dragItem);\r\n      }\r\n      if (lastDropTarget === null && dropTarget !== null) {\r\n        dragSource?.onGridEnter?.(dragItem);\r\n      }\r\n      this.enterDragTargetIfExists(dropTarget, mouseEvent, hDirection, vDirection, fromNudge);\r\n      if (dropTarget && dragAndDropImageComp) {\r\n        const { comp, promise } = dragAndDropImageComp;\r\n        if (comp) {\r\n          comp.setIcon(dropTarget.getIconName ? dropTarget.getIconName() : null, false);\r\n        } else {\r\n          promise.then((resolvedComponent) => {\r\n            if (resolvedComponent) {\r\n              resolvedComponent.setIcon(dropTarget.getIconName ? dropTarget.getIconName() : null, false);\r\n            }\r\n          });\r\n        }\r\n      }\r\n      this.lastDropTarget = dropTarget;\r\n    } else if (dropTarget && dropTarget.onDragging) {\r\n      const draggingEvent = this.createDropTargetEvent(dropTarget, mouseEvent, hDirection, vDirection, fromNudge);\r\n      dropTarget.onDragging(draggingEvent);\r\n    }\r\n  }\r\n  getAllContainersFromDropTarget(dropTarget) {\r\n    const secondaryContainers = dropTarget.getSecondaryContainers ? dropTarget.getSecondaryContainers() : null;\r\n    const containers = [[dropTarget.getContainer()]];\r\n    return secondaryContainers ? containers.concat(secondaryContainers) : containers;\r\n  }\r\n  // checks if the mouse is on the drop target. it checks eContainer and eSecondaryContainers\r\n  isMouseOnDropTarget(mouseEvent, dropTarget) {\r\n    const allContainersFromDropTarget = this.getAllContainersFromDropTarget(dropTarget);\r\n    let mouseOverTarget = false;\r\n    const allContainersIntersect = (mouseEvent2, containers) => {\r\n      for (const container of containers) {\r\n        const { width, height, left, right, top, bottom } = container.getBoundingClientRect();\r\n        if (width === 0 || height === 0) {\r\n          return false;\r\n        }\r\n        const horizontalFit = mouseEvent2.clientX >= left && mouseEvent2.clientX < right;\r\n        const verticalFit = mouseEvent2.clientY >= top && mouseEvent2.clientY < bottom;\r\n        if (!horizontalFit || !verticalFit) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    };\r\n    for (const currentContainers of allContainersFromDropTarget) {\r\n      if (allContainersIntersect(mouseEvent, currentContainers)) {\r\n        mouseOverTarget = true;\r\n        break;\r\n      }\r\n    }\r\n    const { eElement, type } = this.dragSource;\r\n    if (dropTarget.targetContainsSource && !dropTarget.getContainer().contains(eElement)) {\r\n      return false;\r\n    }\r\n    return mouseOverTarget && dropTarget.isInterestedIn(type, eElement);\r\n  }\r\n  findCurrentDropTarget(mouseEvent, validDropTargets) {\r\n    const len = validDropTargets.length;\r\n    if (len === 0) {\r\n      return null;\r\n    }\r\n    if (len === 1) {\r\n      return validDropTargets[0];\r\n    }\r\n    const rootNode = _getRootNode(this.beans);\r\n    const elementStack = rootNode.elementsFromPoint(mouseEvent.clientX, mouseEvent.clientY);\r\n    for (const el of elementStack) {\r\n      for (const dropTarget of validDropTargets) {\r\n        const containers = this.getAllContainersFromDropTarget(dropTarget).flatMap((a) => a);\r\n        if (containers.indexOf(el) !== -1) {\r\n          return dropTarget;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  enterDragTargetIfExists(dropTarget, mouseEvent, hDirection, vDirection, fromNudge) {\r\n    if (!dropTarget) {\r\n      return;\r\n    }\r\n    if (dropTarget.onDragEnter) {\r\n      const dragEnterEvent = this.createDropTargetEvent(\r\n        dropTarget,\r\n        mouseEvent,\r\n        hDirection,\r\n        vDirection,\r\n        fromNudge\r\n      );\r\n      dropTarget.onDragEnter(dragEnterEvent);\r\n    }\r\n  }\r\n  leaveLastTargetIfExists(mouseEvent, hDirection, vDirection, fromNudge) {\r\n    const { lastDropTarget } = this;\r\n    if (!lastDropTarget) {\r\n      return;\r\n    }\r\n    if (lastDropTarget.onDragLeave) {\r\n      const dragLeaveEvent = this.createDropTargetEvent(\r\n        lastDropTarget,\r\n        mouseEvent,\r\n        hDirection,\r\n        vDirection,\r\n        fromNudge\r\n      );\r\n      lastDropTarget.onDragLeave(dragLeaveEvent);\r\n    }\r\n    const dragAndDropImageComponent = this.getDragAndDropImageComponent();\r\n    if (dragAndDropImageComponent) {\r\n      dragAndDropImageComponent.setIcon(null, false);\r\n    }\r\n  }\r\n  addDropTarget(dropTarget) {\r\n    this.dropTargets.push(dropTarget);\r\n  }\r\n  removeDropTarget(dropTarget) {\r\n    this.dropTargets = this.dropTargets.filter((target) => target.getContainer() !== dropTarget.getContainer());\r\n  }\r\n  hasExternalDropZones() {\r\n    return this.dropTargets.some((zones) => zones.external);\r\n  }\r\n  findExternalZone(params) {\r\n    const externalTargets = this.dropTargets.filter((target) => target.external);\r\n    return externalTargets.find((zone) => zone.getContainer() === params.getContainer()) || null;\r\n  }\r\n  isDropZoneWithinThisGrid(draggingEvent) {\r\n    const gridBodyCon = this.ctrlsSvc.getGridBodyCtrl();\r\n    const gridGui = gridBodyCon.eGridBody;\r\n    const { dropZoneTarget } = draggingEvent;\r\n    return gridGui.contains(dropZoneTarget);\r\n  }\r\n  getHorizontalDirection(event) {\r\n    const clientX = this.eventLastTime?.clientX;\r\n    const eClientX = event.clientX;\r\n    if (clientX === eClientX) {\r\n      return null;\r\n    }\r\n    return clientX > eClientX ? \"left\" : \"right\";\r\n  }\r\n  getVerticalDirection(event) {\r\n    const clientY = this.eventLastTime?.clientY;\r\n    const eClientY = event.clientY;\r\n    if (clientY === eClientY) {\r\n      return null;\r\n    }\r\n    return clientY > eClientY ? \"up\" : \"down\";\r\n  }\r\n  createDropTargetEvent(dropTarget, event, hDirection, vDirection, fromNudge) {\r\n    const dropZoneTarget = dropTarget.getContainer();\r\n    const rect = dropZoneTarget.getBoundingClientRect();\r\n    const { dragItem, dragSource, gos } = this;\r\n    const x = event.clientX - rect.left;\r\n    const y = event.clientY - rect.top;\r\n    return _addGridCommonParams(gos, {\r\n      event,\r\n      x,\r\n      y,\r\n      vDirection,\r\n      hDirection,\r\n      dragSource,\r\n      fromNudge,\r\n      dragItem,\r\n      dropZoneTarget\r\n    });\r\n  }\r\n  positionDragAndDropImageComp(event) {\r\n    const dragAndDropImageComponent = this.getDragAndDropImageComponent();\r\n    if (!dragAndDropImageComponent) {\r\n      return;\r\n    }\r\n    _anchorElementToMouseMoveEvent(dragAndDropImageComponent.getGui(), event, this.beans);\r\n  }\r\n  removeDragAndDropImageComponent() {\r\n    const { dragAndDropImageComp } = this;\r\n    if (dragAndDropImageComp) {\r\n      const { comp } = dragAndDropImageComp;\r\n      if (comp) {\r\n        const eGui = comp.getGui();\r\n        this.dragAndDropImageParent?.removeChild(eGui);\r\n        this.destroyBean(comp);\r\n      }\r\n    }\r\n    this.dragAndDropImageComp = null;\r\n  }\r\n  createDragAndDropImageComponent() {\r\n    const { dragSource, gos, userCompFactory } = this;\r\n    if (!dragSource) {\r\n      return;\r\n    }\r\n    const userCompDetails = _getDragAndDropImageCompDetails(\r\n      userCompFactory,\r\n      _addGridCommonParams(gos, {\r\n        dragSource\r\n      })\r\n    );\r\n    if (!userCompDetails) {\r\n      return;\r\n    }\r\n    const promise = userCompDetails.newAgStackInstance();\r\n    this.dragAndDropImageComp = {\r\n      promise\r\n    };\r\n    promise.then((comp) => {\r\n      if (!comp || !this.isAlive()) {\r\n        return;\r\n      }\r\n      this.processDragAndDropImageComponent(comp);\r\n      this.dragAndDropImageComp.comp = comp;\r\n    });\r\n  }\r\n  processDragAndDropImageComponent(dragAndDropImageComponent) {\r\n    const { dragSource, environment } = this;\r\n    if (!dragSource) {\r\n      return;\r\n    }\r\n    const eGui = dragAndDropImageComponent.getGui();\r\n    eGui.style.setProperty(\"position\", \"absolute\");\r\n    eGui.style.setProperty(\"z-index\", \"9999\");\r\n    _stampTopLevelGridCompWithGridInstance(this.gos, eGui);\r\n    environment.applyThemeClasses(eGui);\r\n    dragAndDropImageComponent.setIcon(null, false);\r\n    let { dragItemName } = dragSource;\r\n    if (typeof dragItemName === \"function\") {\r\n      dragItemName = dragItemName();\r\n    }\r\n    dragAndDropImageComponent.setLabel(dragItemName || \"\");\r\n    eGui.style.top = \"20px\";\r\n    eGui.style.left = \"20px\";\r\n    const targetEl = _getPageBody(this.beans);\r\n    this.dragAndDropImageParent = targetEl;\r\n    if (!targetEl) {\r\n      _warn(54);\r\n    } else {\r\n      targetEl.appendChild(eGui);\r\n    }\r\n  }\r\n  registerGridDropTarget(elementFn, ctrl) {\r\n    const dropTarget = {\r\n      getContainer: elementFn,\r\n      isInterestedIn: (type) => type === 1 /* HeaderCell */ || type === 0 /* ToolPanel */,\r\n      getIconName: () => \"notAllowed\"\r\n    };\r\n    this.addDropTarget(dropTarget);\r\n    ctrl.addDestroyFunc(() => this.removeDropTarget(dropTarget));\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/dragAndDrop/dragService.ts\r\nvar DragService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"dragSvc\";\r\n    this.dragEndFunctions = [];\r\n    this.dragSources = [];\r\n  }\r\n  destroy() {\r\n    const { dragSources } = this;\r\n    dragSources.forEach(this.removeListener.bind(this));\r\n    dragSources.length = 0;\r\n    super.destroy();\r\n  }\r\n  removeListener(dragSourceAndListener) {\r\n    const element = dragSourceAndListener.dragSource.eElement;\r\n    const mouseDownListener = dragSourceAndListener.mouseDownListener;\r\n    element.removeEventListener(\"mousedown\", mouseDownListener);\r\n    if (dragSourceAndListener.touchEnabled) {\r\n      const touchStartListener = dragSourceAndListener.touchStartListener;\r\n      element.removeEventListener(\"touchstart\", touchStartListener, { passive: true });\r\n    }\r\n  }\r\n  removeDragSource(params) {\r\n    const { dragSources } = this;\r\n    const dragSourceAndListener = dragSources.find((item) => item.dragSource === params);\r\n    if (!dragSourceAndListener) {\r\n      return;\r\n    }\r\n    this.removeListener(dragSourceAndListener);\r\n    _removeFromArray(dragSources, dragSourceAndListener);\r\n  }\r\n  addDragSource(params) {\r\n    const mouseListener = this.onMouseDown.bind(this, params);\r\n    const { eElement, includeTouch, stopPropagationForTouch } = params;\r\n    eElement.addEventListener(\"mousedown\", mouseListener);\r\n    let touchListener = null;\r\n    const suppressTouch = this.gos.get(\"suppressTouch\");\r\n    if (includeTouch && !suppressTouch) {\r\n      touchListener = (touchEvent) => {\r\n        if (_isFocusableFormField(touchEvent.target)) {\r\n          return;\r\n        }\r\n        if (stopPropagationForTouch) {\r\n          touchEvent.stopPropagation();\r\n        }\r\n        this.onTouchStart(params, touchEvent);\r\n      };\r\n      eElement.addEventListener(\"touchstart\", touchListener, { passive: false });\r\n    }\r\n    this.dragSources.push({\r\n      dragSource: params,\r\n      mouseDownListener: mouseListener,\r\n      touchStartListener: touchListener,\r\n      touchEnabled: !!includeTouch\r\n    });\r\n  }\r\n  // gets called whenever mouse down on any drag source\r\n  onTouchStart(params, touchEvent) {\r\n    this.currentDragParams = params;\r\n    this.dragging = false;\r\n    const touch = touchEvent.touches[0];\r\n    this.touchLastTime = touch;\r\n    this.touchStart = touch;\r\n    const touchMoveEvent = (e) => this.onTouchMove(e, params.eElement);\r\n    const touchEndEvent = (e) => this.onTouchUp(e, params.eElement);\r\n    const documentTouchMove = (e) => {\r\n      if (e.cancelable) {\r\n        e.preventDefault();\r\n      }\r\n    };\r\n    const target = touchEvent.target;\r\n    const events = [\r\n      // Prevents the page document from moving while we are dragging items around.\r\n      // preventDefault needs to be called in the touchmove listener and never inside the\r\n      // touchstart, because using touchstart causes the click event to be cancelled on touch devices.\r\n      {\r\n        target: _getRootNode(this.beans),\r\n        type: \"touchmove\",\r\n        listener: documentTouchMove,\r\n        options: { passive: false }\r\n      },\r\n      { target, type: \"touchmove\", listener: touchMoveEvent, options: { passive: true } },\r\n      { target, type: \"touchend\", listener: touchEndEvent, options: { passive: true } },\r\n      { target, type: \"touchcancel\", listener: touchEndEvent, options: { passive: true } }\r\n    ];\r\n    this.addTemporaryEvents(events);\r\n    if (params.dragStartPixels === 0) {\r\n      this.onCommonMove(touch, this.touchStart, params.eElement);\r\n    }\r\n  }\r\n  // gets called whenever mouse down on any drag source\r\n  onMouseDown(params, mouseEvent) {\r\n    const e = mouseEvent;\r\n    if (params.skipMouseEvent && params.skipMouseEvent(mouseEvent)) {\r\n      return;\r\n    }\r\n    if (e._alreadyProcessedByDragService) {\r\n      return;\r\n    }\r\n    e._alreadyProcessedByDragService = true;\r\n    if (mouseEvent.button !== 0) {\r\n      return;\r\n    }\r\n    if (this.shouldPreventMouseEvent(mouseEvent)) {\r\n      mouseEvent.preventDefault();\r\n    }\r\n    this.currentDragParams = params;\r\n    this.dragging = false;\r\n    this.mouseStartEvent = mouseEvent;\r\n    this.startTarget = mouseEvent.target;\r\n    const mouseMoveEvent = (event) => this.onMouseMove(event, params.eElement);\r\n    const mouseUpEvent = (event) => this.onMouseUp(event, params.eElement);\r\n    const contextEvent = (event) => event.preventDefault();\r\n    const keydownEvent = (event) => {\r\n      if (event.key === KeyCode.ESCAPE) {\r\n        this.cancelDrag(params.eElement);\r\n      }\r\n    };\r\n    const target = _getRootNode(this.beans);\r\n    const events = [\r\n      { target, type: \"mousemove\", listener: mouseMoveEvent },\r\n      { target, type: \"mouseup\", listener: mouseUpEvent },\r\n      { target, type: \"contextmenu\", listener: contextEvent },\r\n      { target, type: \"keydown\", listener: keydownEvent }\r\n    ];\r\n    this.addTemporaryEvents(events);\r\n    if (params.dragStartPixels === 0) {\r\n      this.onMouseMove(mouseEvent, params.eElement);\r\n    }\r\n  }\r\n  addTemporaryEvents(events) {\r\n    events.forEach((currentEvent) => {\r\n      const { target, type, listener, options } = currentEvent;\r\n      target.addEventListener(type, listener, options);\r\n    });\r\n    this.dragEndFunctions.push(() => {\r\n      events.forEach((currentEvent) => {\r\n        const { target, type, listener, options } = currentEvent;\r\n        target.removeEventListener(type, listener, options);\r\n      });\r\n    });\r\n  }\r\n  // returns true if the event is close to the original event by X pixels either vertically or horizontally.\r\n  // we only start dragging after X pixels so this allows us to know if we should start dragging yet.\r\n  isEventNearStartEvent(currentEvent, startEvent) {\r\n    const { dragStartPixels } = this.currentDragParams;\r\n    const requiredPixelDiff = _exists(dragStartPixels) ? dragStartPixels : 4;\r\n    return _areEventsNear(currentEvent, startEvent, requiredPixelDiff);\r\n  }\r\n  getFirstActiveTouch(touchList) {\r\n    for (let i = 0; i < touchList.length; i++) {\r\n      if (touchList[i].identifier === this.touchStart.identifier) {\r\n        return touchList[i];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  onCommonMove(currentEvent, startEvent, el) {\r\n    if (!this.dragging) {\r\n      if (this.isEventNearStartEvent(currentEvent, startEvent)) {\r\n        return;\r\n      }\r\n      this.dragging = true;\r\n      this.eventSvc.dispatchEvent({\r\n        type: \"dragStarted\",\r\n        target: el\r\n      });\r\n      this.currentDragParams.onDragStart(startEvent);\r\n      if (!this.currentDragParams) {\r\n        this.dragging = false;\r\n        return;\r\n      }\r\n      this.currentDragParams.onDragging(startEvent);\r\n    }\r\n    this.currentDragParams?.onDragging(currentEvent);\r\n  }\r\n  onTouchMove(touchEvent, el) {\r\n    const touch = this.getFirstActiveTouch(touchEvent.touches);\r\n    if (!touch) {\r\n      return;\r\n    }\r\n    this.onCommonMove(touch, this.touchStart, el);\r\n  }\r\n  // only gets called after a mouse down - as this is only added after mouseDown\r\n  // and is removed when mouseUp happens\r\n  onMouseMove(mouseEvent, el) {\r\n    if (_isBrowserSafari()) {\r\n      const eDocument = _getDocument(this.beans);\r\n      eDocument.getSelection()?.removeAllRanges();\r\n    }\r\n    if (this.shouldPreventMouseEvent(mouseEvent)) {\r\n      mouseEvent.preventDefault();\r\n    }\r\n    this.onCommonMove(mouseEvent, this.mouseStartEvent, el);\r\n  }\r\n  shouldPreventMouseEvent(mouseEvent) {\r\n    const { gos } = this;\r\n    const isEnableCellTextSelect = gos.get(\"enableCellTextSelection\");\r\n    const isMouseMove = mouseEvent.type === \"mousemove\";\r\n    const isOverFormFieldElement = (mouseEvent2) => {\r\n      const el = mouseEvent2.target;\r\n      const tagName = el?.tagName.toLocaleLowerCase();\r\n      return !!tagName?.match(\"^a$|textarea|input|select|button\");\r\n    };\r\n    return (\r\n      // when `isEnableCellTextSelect` is `true`, we need to preventDefault on mouseMove\r\n      // to avoid the grid text being selected while dragging components.\r\n      isEnableCellTextSelect && isMouseMove && mouseEvent.cancelable && _isEventFromThisGrid(gos, mouseEvent) && !isOverFormFieldElement(mouseEvent)\r\n    );\r\n  }\r\n  onTouchUp(touchEvent, el) {\r\n    let touch = this.getFirstActiveTouch(touchEvent.changedTouches);\r\n    if (!touch) {\r\n      touch = this.touchLastTime;\r\n    }\r\n    this.onUpCommon(touch, el);\r\n  }\r\n  onMouseUp(mouseEvent, el) {\r\n    this.onUpCommon(mouseEvent, el);\r\n  }\r\n  onUpCommon(eventOrTouch, el) {\r\n    if (this.dragging) {\r\n      this.dragging = false;\r\n      this.currentDragParams.onDragStop(eventOrTouch);\r\n      this.eventSvc.dispatchEvent({\r\n        type: \"dragStopped\",\r\n        target: el\r\n      });\r\n    }\r\n    this.resetDragProperties();\r\n  }\r\n  cancelDrag(el) {\r\n    this.eventSvc.dispatchEvent({\r\n      type: \"dragCancelled\",\r\n      target: el\r\n    });\r\n    this.currentDragParams?.onDragCancel?.();\r\n    this.resetDragProperties();\r\n  }\r\n  resetDragProperties() {\r\n    this.mouseStartEvent = null;\r\n    this.startTarget = null;\r\n    this.touchStart = null;\r\n    this.touchLastTime = null;\r\n    this.currentDragParams = null;\r\n    const { dragEndFunctions } = this;\r\n    dragEndFunctions.forEach((func) => func());\r\n    dragEndFunctions.length = 0;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/entities/agColumnGroup.ts\r\nfunction createUniqueColumnGroupId(groupId, instanceId) {\r\n  return groupId + \"_\" + instanceId;\r\n}\r\nfunction isColumnGroup(col) {\r\n  return col instanceof AgColumnGroup;\r\n}\r\nvar AgColumnGroup = class extends BeanStub {\r\n  constructor(providedColumnGroup, groupId, partId, pinned) {\r\n    super();\r\n    this.providedColumnGroup = providedColumnGroup;\r\n    this.groupId = groupId;\r\n    this.partId = partId;\r\n    this.pinned = pinned;\r\n    this.isColumn = false;\r\n    // depends on the open/closed state of the group, only displaying columns are stored here\r\n    this.displayedChildren = [];\r\n    // The measured height of this column's header when autoHeaderHeight is enabled\r\n    this.autoHeaderHeight = null;\r\n    this.parent = null;\r\n  }\r\n  // as the user is adding and removing columns, the groups are recalculated.\r\n  // this reset clears out all children, ready for children to be added again\r\n  reset() {\r\n    this.parent = null;\r\n    this.children = null;\r\n    this.displayedChildren = null;\r\n  }\r\n  getParent() {\r\n    return this.parent;\r\n  }\r\n  getUniqueId() {\r\n    return createUniqueColumnGroupId(this.groupId, this.partId);\r\n  }\r\n  isEmptyGroup() {\r\n    return this.displayedChildren.length === 0;\r\n  }\r\n  isMoving() {\r\n    const allLeafColumns = this.getProvidedColumnGroup().getLeafColumns();\r\n    if (!allLeafColumns || allLeafColumns.length === 0) {\r\n      return false;\r\n    }\r\n    return allLeafColumns.every((col) => col.isMoving());\r\n  }\r\n  checkLeft() {\r\n    this.displayedChildren.forEach((child) => {\r\n      if (isColumnGroup(child)) {\r\n        child.checkLeft();\r\n      }\r\n    });\r\n    if (this.displayedChildren.length > 0) {\r\n      if (this.gos.get(\"enableRtl\")) {\r\n        const lastChild = _last(this.displayedChildren);\r\n        const lastChildLeft = lastChild.getLeft();\r\n        this.setLeft(lastChildLeft);\r\n      } else {\r\n        const firstChildLeft = this.displayedChildren[0].getLeft();\r\n        this.setLeft(firstChildLeft);\r\n      }\r\n    } else {\r\n      this.setLeft(null);\r\n    }\r\n  }\r\n  getLeft() {\r\n    return this.left;\r\n  }\r\n  getOldLeft() {\r\n    return this.oldLeft;\r\n  }\r\n  setLeft(left) {\r\n    this.oldLeft = this.left;\r\n    if (this.left !== left) {\r\n      this.left = left;\r\n      this.dispatchLocalEvent({ type: \"leftChanged\" });\r\n    }\r\n  }\r\n  getPinned() {\r\n    return this.pinned;\r\n  }\r\n  getGroupId() {\r\n    return this.groupId;\r\n  }\r\n  getPartId() {\r\n    return this.partId;\r\n  }\r\n  getActualWidth() {\r\n    let groupActualWidth = 0;\r\n    this.displayedChildren?.forEach((child) => {\r\n      groupActualWidth += child.getActualWidth();\r\n    });\r\n    return groupActualWidth;\r\n  }\r\n  isResizable() {\r\n    if (!this.displayedChildren) {\r\n      return false;\r\n    }\r\n    let result = false;\r\n    this.displayedChildren.forEach((child) => {\r\n      if (child.isResizable()) {\r\n        result = true;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  getMinWidth() {\r\n    let result = 0;\r\n    this.displayedChildren.forEach((groupChild) => {\r\n      result += groupChild.getMinWidth();\r\n    });\r\n    return result;\r\n  }\r\n  addChild(child) {\r\n    if (!this.children) {\r\n      this.children = [];\r\n    }\r\n    this.children.push(child);\r\n  }\r\n  getDisplayedChildren() {\r\n    return this.displayedChildren;\r\n  }\r\n  getLeafColumns() {\r\n    const result = [];\r\n    this.addLeafColumns(result);\r\n    return result;\r\n  }\r\n  getDisplayedLeafColumns() {\r\n    const result = [];\r\n    this.addDisplayedLeafColumns(result);\r\n    return result;\r\n  }\r\n  getDefinition() {\r\n    return this.providedColumnGroup.getColGroupDef();\r\n  }\r\n  getColGroupDef() {\r\n    return this.providedColumnGroup.getColGroupDef();\r\n  }\r\n  isPadding() {\r\n    return this.providedColumnGroup.isPadding();\r\n  }\r\n  isExpandable() {\r\n    return this.providedColumnGroup.isExpandable();\r\n  }\r\n  isExpanded() {\r\n    return this.providedColumnGroup.isExpanded();\r\n  }\r\n  setExpanded(expanded) {\r\n    this.providedColumnGroup.setExpanded(expanded);\r\n  }\r\n  isAutoHeaderHeight() {\r\n    return !!this.getColGroupDef()?.autoHeaderHeight;\r\n  }\r\n  getAutoHeaderHeight() {\r\n    return this.autoHeaderHeight;\r\n  }\r\n  /** Returns true if the header height has changed */\r\n  setAutoHeaderHeight(height) {\r\n    const changed = height !== this.autoHeaderHeight;\r\n    this.autoHeaderHeight = height;\r\n    return changed;\r\n  }\r\n  addDisplayedLeafColumns(leafColumns) {\r\n    this.displayedChildren.forEach((child) => {\r\n      if (isColumn(child)) {\r\n        leafColumns.push(child);\r\n      } else if (isColumnGroup(child)) {\r\n        child.addDisplayedLeafColumns(leafColumns);\r\n      }\r\n    });\r\n  }\r\n  addLeafColumns(leafColumns) {\r\n    this.children.forEach((child) => {\r\n      if (isColumn(child)) {\r\n        leafColumns.push(child);\r\n      } else if (isColumnGroup(child)) {\r\n        child.addLeafColumns(leafColumns);\r\n      }\r\n    });\r\n  }\r\n  getChildren() {\r\n    return this.children;\r\n  }\r\n  getColumnGroupShow() {\r\n    return this.providedColumnGroup.getColumnGroupShow();\r\n  }\r\n  getProvidedColumnGroup() {\r\n    return this.providedColumnGroup;\r\n  }\r\n  getPaddingLevel() {\r\n    const parent = this.getParent();\r\n    if (!this.isPadding() || !parent || !parent.isPadding()) {\r\n      return 0;\r\n    }\r\n    return 1 + parent.getPaddingLevel();\r\n  }\r\n  calculateDisplayedColumns() {\r\n    this.displayedChildren = [];\r\n    let parentWithExpansion = this;\r\n    while (parentWithExpansion != null && parentWithExpansion.isPadding()) {\r\n      parentWithExpansion = parentWithExpansion.getParent();\r\n    }\r\n    const isExpandable = parentWithExpansion ? parentWithExpansion.getProvidedColumnGroup().isExpandable() : false;\r\n    if (!isExpandable) {\r\n      this.displayedChildren = this.children;\r\n      this.dispatchLocalEvent({ type: \"displayedChildrenChanged\" });\r\n      return;\r\n    }\r\n    this.children.forEach((child) => {\r\n      const emptyGroup = isColumnGroup(child) && !child.displayedChildren?.length;\r\n      if (emptyGroup) {\r\n        return;\r\n      }\r\n      const headerGroupShow = child.getColumnGroupShow();\r\n      switch (headerGroupShow) {\r\n        case \"open\":\r\n          if (parentWithExpansion.getProvidedColumnGroup().isExpanded()) {\r\n            this.displayedChildren.push(child);\r\n          }\r\n          break;\r\n        case \"closed\":\r\n          if (!parentWithExpansion.getProvidedColumnGroup().isExpanded()) {\r\n            this.displayedChildren.push(child);\r\n          }\r\n          break;\r\n        default:\r\n          this.displayedChildren.push(child);\r\n          break;\r\n      }\r\n    });\r\n    this.dispatchLocalEvent({ type: \"displayedChildrenChanged\" });\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/entities/rowNode.ts\r\nvar ROW_ID_PREFIX_ROW_GROUP = \"row-group-\";\r\nvar ROW_ID_PREFIX_TOP_PINNED = \"t-\";\r\nvar ROW_ID_PREFIX_BOTTOM_PINNED = \"b-\";\r\nvar OBJECT_ID_SEQUENCE = 0;\r\nvar RowNode = class {\r\n  constructor(beans) {\r\n    /** `true` if this row is a master row, part of master / detail (ie row can be expanded to show detail) */\r\n    this.master = false;\r\n    /** `true` if this row is a detail row, part of master / detail (ie child row of an expanded master row)*/\r\n    this.detail = void 0;\r\n    /** The current row index. If the row is filtered out or in a collapsed group, this value is set to `null`. */\r\n    this.rowIndex = null;\r\n    /** The key for the group eg Ireland, UK, USA */\r\n    this.key = null;\r\n    /**\r\n     * The index of the row in the source rowData array including any updates via transactions.\r\n     * It does not change when sorting, filtering, grouping, pivoting or any other UI related operations.\r\n     * If this is a filler node (a visual row created by AG Grid in tree data or grouping) the value is set to `-1`.\r\n     *\r\n     * Generally readonly. It is modified only by:\r\n     * - ClientSideNodeManager, cast to ClientSideNodeManagerRowNode\r\n     * - ClientSideRowModel, cast to ClientSideRowModelRowNode\r\n     */\r\n    this.sourceRowIndex = -1;\r\n    /** Children mapped by the pivot columns or group key */\r\n    this.childrenMapped = null;\r\n    /**\r\n     * Parent RowNode for tree data.\r\n     * When set, the parent node in the hierarchy is updated during Client-Side Row Model (CSRM) grouping.\r\n     * Used by the ClientSideChildrenTreeNodeManager, TreeGroupStrategy, RowDragFeature\r\n     */\r\n    this.treeParent = null;\r\n    /** The flags associated to this node. Used only internally within TreeGroupStrategy. */\r\n    this.treeNodeFlags = 0;\r\n    /**\r\n     * This is `true` if the row has a rowIndex assigned, otherwise `false`.\r\n     */\r\n    this.displayed = false;\r\n    /** The row top position in pixels. */\r\n    this.rowTop = null;\r\n    /** The top pixel for this row last time, makes sense if data set was ordered or filtered,\r\n     * it is used so new rows can animate in from their old position. */\r\n    this.oldRowTop = null;\r\n    /** `true` by default - can be overridden via gridOptions.isRowSelectable(rowNode) */\r\n    this.selectable = true;\r\n    /**\r\n     * Used by sorting service - to give deterministic sort to groups. Previously we\r\n     * just id for this, however id is a string and had slower sorting compared to numbers.\r\n     * If re-naming this property, you must also update `IGNORED_SIBLING_PROPERTIES`\r\n     */\r\n    this.__objectId = OBJECT_ID_SEQUENCE++;\r\n    /** `true` when nodes with the same id are being removed and added as part of the same batch transaction */\r\n    this.alreadyRendered = false;\r\n    this.hovered = false;\r\n    this.__selected = false;\r\n    this.beans = beans;\r\n  }\r\n  /**\r\n   * Replaces the data on the `rowNode`. When this method is called, the grid refreshes the entire rendered row if it is displayed.\r\n   */\r\n  setData(data) {\r\n    this.setDataCommon(data, false);\r\n  }\r\n  // similar to setRowData, however it is expected that the data is the same data item. this\r\n  // is intended to be used with Redux type stores, where the whole data can be changed. we are\r\n  // guaranteed that the data is the same entity (so grid doesn't need to worry about the id of the\r\n  // underlying data changing, hence doesn't need to worry about selection). the grid, upon receiving\r\n  // dataChanged event, refreshes the cells rather than rip them all out (so user can show transitions).\r\n  /**\r\n   * Updates the data on the `rowNode`. When this method is called, the grid refreshes the entire rendered row if it is displayed.\r\n   */\r\n  updateData(data) {\r\n    this.setDataCommon(data, true);\r\n  }\r\n  setDataCommon(data, update) {\r\n    const { valueCache, eventSvc } = this.beans;\r\n    const oldData = this.data;\r\n    this.data = data;\r\n    valueCache?.onDataChanged();\r\n    this.updateDataOnDetailNode();\r\n    this.resetQuickFilterAggregateText();\r\n    const event = this.createDataChangedEvent(data, oldData, update);\r\n    this.__localEventService?.dispatchEvent(event);\r\n    if (this.sibling) {\r\n      this.sibling.data = data;\r\n      const event2 = this.sibling.createDataChangedEvent(data, oldData, update);\r\n      this.sibling.__localEventService?.dispatchEvent(event2);\r\n    }\r\n    eventSvc.dispatchEvent({ type: \"rowNodeDataChanged\", node: this });\r\n    const pinnedSibling = this.pinnedSibling;\r\n    if (pinnedSibling) {\r\n      pinnedSibling.data = data;\r\n      pinnedSibling.__localEventService?.dispatchEvent(\r\n        pinnedSibling.createDataChangedEvent(data, oldData, update)\r\n      );\r\n      eventSvc.dispatchEvent({ type: \"rowNodeDataChanged\", node: pinnedSibling });\r\n    }\r\n  }\r\n  // when we are doing master / detail, the detail node is lazy created, but then kept around.\r\n  // so if we show / hide the detail, the same detail rowNode is used. so we need to keep the data\r\n  // in sync, otherwise expand/collapse of the detail would still show the old values.\r\n  updateDataOnDetailNode() {\r\n    if (this.detailNode) {\r\n      this.detailNode.data = this.data;\r\n    }\r\n  }\r\n  createDataChangedEvent(newData, oldData, update) {\r\n    return {\r\n      type: \"dataChanged\",\r\n      node: this,\r\n      oldData,\r\n      newData,\r\n      update\r\n    };\r\n  }\r\n  getRowIndexString() {\r\n    if (this.rowIndex == null) {\r\n      _error(13);\r\n      return null;\r\n    }\r\n    if (this.rowPinned === \"top\") {\r\n      return ROW_ID_PREFIX_TOP_PINNED + this.rowIndex;\r\n    }\r\n    if (this.rowPinned === \"bottom\") {\r\n      return ROW_ID_PREFIX_BOTTOM_PINNED + this.rowIndex;\r\n    }\r\n    return this.rowIndex.toString();\r\n  }\r\n  setDataAndId(data, id) {\r\n    const { selectionSvc } = this.beans;\r\n    const oldNode = selectionSvc?.createDaemonNode?.(this);\r\n    const oldData = this.data;\r\n    this.data = data;\r\n    this.updateDataOnDetailNode();\r\n    this.setId(id);\r\n    if (selectionSvc) {\r\n      selectionSvc.updateRowSelectable(this);\r\n      selectionSvc.syncInRowNode(this, oldNode);\r\n    }\r\n    const event = this.createDataChangedEvent(data, oldData, false);\r\n    this.__localEventService?.dispatchEvent(event);\r\n  }\r\n  setId(id) {\r\n    const getRowIdFunc = _getRowIdCallback(this.beans.gos);\r\n    if (getRowIdFunc) {\r\n      if (this.data) {\r\n        const parentKeys = this.parent?.getRoute() ?? [];\r\n        this.id = getRowIdFunc({\r\n          data: this.data,\r\n          parentKeys: parentKeys.length > 0 ? parentKeys : void 0,\r\n          level: this.level,\r\n          rowPinned: this.rowPinned\r\n        });\r\n        if (this.id.startsWith(ROW_ID_PREFIX_ROW_GROUP)) {\r\n          _error(14, {\r\n            groupPrefix: ROW_ID_PREFIX_ROW_GROUP\r\n          });\r\n        }\r\n      } else {\r\n        this.id = void 0;\r\n      }\r\n    } else {\r\n      this.id = id;\r\n    }\r\n  }\r\n  setRowTop(rowTop) {\r\n    this.oldRowTop = this.rowTop;\r\n    if (this.rowTop === rowTop) {\r\n      return;\r\n    }\r\n    this.rowTop = rowTop;\r\n    this.dispatchRowEvent(\"topChanged\");\r\n    this.setDisplayed(rowTop !== null);\r\n  }\r\n  clearRowTopAndRowIndex() {\r\n    this.oldRowTop = null;\r\n    this.setRowTop(null);\r\n    this.setRowIndex(null);\r\n  }\r\n  setHovered(hovered) {\r\n    this.hovered = hovered;\r\n  }\r\n  isHovered() {\r\n    return this.hovered;\r\n  }\r\n  /**\r\n   * Sets the row height.\r\n   * Call if you want to change the height initially assigned to the row.\r\n   * After calling, you must call `api.onRowHeightChanged()` so the grid knows it needs to work out the placement of the rows. */\r\n  setRowHeight(rowHeight, estimated = false) {\r\n    this.rowHeight = rowHeight;\r\n    this.rowHeightEstimated = estimated;\r\n    this.dispatchRowEvent(\"heightChanged\");\r\n  }\r\n  setExpanded(expanded, e, forceSync) {\r\n    this.beans.expansionSvc?.setExpanded(this, expanded, e, forceSync);\r\n  }\r\n  /**\r\n   * Replaces the value on the `rowNode` for the specified column. When complete,\r\n   * the grid refreshes the rendered cell on the required row only.\r\n   * **Note**: This method only fires `onCellEditRequest` when the Grid is in **Read Only** mode.\r\n   * **Note**: This method defers to EditModule if available and batches the edit when `fullRow` or `batchEdit` is enabled.\r\n   *\r\n   * @param colKey The column where the value should be updated\r\n   * @param newValue The new value\r\n   * @param eventSource The source of the event\r\n   * @returns `true` if the value was changed, otherwise `false`.\r\n   */\r\n  setDataValue(colKey, newValue, eventSource) {\r\n    const { colModel, valueSvc, gos, editSvc } = this.beans;\r\n    const column = typeof colKey !== \"string\" ? colKey : colModel.getCol(colKey) ?? colModel.getColDefCol(colKey);\r\n    if (!column) {\r\n      return false;\r\n    }\r\n    const oldValue = valueSvc.getValueForDisplay(column, this, void 0, void 0, \"api\").value;\r\n    if (gos.get(\"readOnlyEdit\")) {\r\n      const {\r\n        beans: { eventSvc },\r\n        data,\r\n        rowIndex,\r\n        rowPinned\r\n      } = this;\r\n      eventSvc.dispatchEvent({\r\n        type: \"cellEditRequest\",\r\n        event: null,\r\n        rowIndex,\r\n        rowPinned,\r\n        column,\r\n        colDef: column.colDef,\r\n        data,\r\n        node: this,\r\n        oldValue,\r\n        newValue,\r\n        value: newValue,\r\n        source: eventSource\r\n      });\r\n      return false;\r\n    }\r\n    if (editSvc) {\r\n      const result = editSvc.setDataValue({ rowNode: this, column }, newValue, eventSource);\r\n      if (result != null) {\r\n        return result;\r\n      }\r\n    }\r\n    const valueChanged = valueSvc.setValue(this, column, newValue, eventSource);\r\n    this.dispatchCellChangedEvent(column, newValue, oldValue);\r\n    const pinnedSibling = this.pinnedSibling;\r\n    if (pinnedSibling) {\r\n      if (valueChanged) {\r\n        pinnedSibling.dispatchCellChangedEvent(column, newValue, oldValue);\r\n      }\r\n    }\r\n    return valueChanged;\r\n  }\r\n  updateHasChildren() {\r\n    let newValue = this.group && !this.footer || this.childrenAfterGroup && this.childrenAfterGroup.length > 0;\r\n    const { rowChildrenSvc } = this.beans;\r\n    if (rowChildrenSvc) {\r\n      newValue = rowChildrenSvc.getHasChildrenValue(this);\r\n    }\r\n    if (newValue !== this.__hasChildren) {\r\n      this.__hasChildren = !!newValue;\r\n      this.dispatchRowEvent(\"hasChildrenChanged\");\r\n    }\r\n  }\r\n  hasChildren() {\r\n    if (this.__hasChildren == null) {\r\n      this.updateHasChildren();\r\n    }\r\n    return this.__hasChildren;\r\n  }\r\n  dispatchCellChangedEvent(column, newValue, oldValue) {\r\n    const cellChangedEvent = {\r\n      type: \"cellChanged\",\r\n      node: this,\r\n      column,\r\n      newValue,\r\n      oldValue\r\n    };\r\n    this.__localEventService?.dispatchEvent(cellChangedEvent);\r\n  }\r\n  /**\r\n   * The first time `quickFilter` runs, the grid creates a one-off string representation of the row.\r\n   * This string is then used for the quick filter instead of hitting each column separately.\r\n   * When you edit, using grid editing, this string gets cleared down.\r\n   * However, if you edit without using grid editing, you need to clear this string down for the row to be updated with the new values.\r\n   * Otherwise, new values would not work with the `quickFilter`. */\r\n  resetQuickFilterAggregateText() {\r\n    this.quickFilterAggregateText = null;\r\n  }\r\n  /** Returns:\r\n   * - `true` if the node can be expanded, i.e it is a group or master row.\r\n   * - `false` if the node cannot be expanded\r\n   */\r\n  isExpandable() {\r\n    return this.beans.expansionSvc?.isExpandable(this) ?? false;\r\n  }\r\n  /** Returns:\r\n   * - `true` if node is selected,\r\n   * - `false` if the node isn't selected\r\n   * - `undefined` if it's partially selected (group where not all children are selected). */\r\n  isSelected() {\r\n    if (this.footer) {\r\n      return this.sibling.isSelected();\r\n    }\r\n    if (this.rowPinned && this.pinnedSibling) {\r\n      return this.pinnedSibling.isSelected();\r\n    }\r\n    return this.__selected;\r\n  }\r\n  /** Perform a depth-first search of this node and its children. */\r\n  depthFirstSearch(callback) {\r\n    this.childrenAfterGroup?.forEach((child) => child.depthFirstSearch(callback));\r\n    callback(this);\r\n  }\r\n  dispatchRowEvent(type) {\r\n    this.__localEventService?.dispatchEvent({\r\n      type,\r\n      node: this\r\n    });\r\n  }\r\n  /**\r\n   * Select (or deselect) the node.\r\n   * @param newValue -`true` for selection, `false` for deselection.\r\n   * @param clearSelection - If selecting, then passing `true` selects the node exclusively (i.e. NOT do multi select). If doing deselection, `clearSelection` has no impact.\r\n   * @param source - Source property that appears in the `selectionChanged` event.\r\n   */\r\n  setSelected(newValue, clearSelection = false, source = \"api\") {\r\n    this.beans.selectionSvc?.setNodesSelected({\r\n      nodes: [this],\r\n      newValue,\r\n      clearSelection,\r\n      source\r\n    });\r\n  }\r\n  /**\r\n   * Returns:\r\n   * - `true` if node is either pinned to the `top` or `bottom`\r\n   * - `false` if the node isn't pinned\r\n   */\r\n  isRowPinned() {\r\n    return !!this.rowPinned;\r\n  }\r\n  __addEventListener(eventType, listener) {\r\n    if (!this.__localEventService) {\r\n      this.__localEventService = new LocalEventService();\r\n    }\r\n    this.__localEventService.addEventListener(eventType, listener);\r\n  }\r\n  __removeEventListener(eventType, listener) {\r\n    this.removeLocalListener(eventType, listener);\r\n  }\r\n  /**\r\n   * PUBLIC USE ONLY: for internal use within AG Grid use the `__addEventListener` and `__removeEventListener` methods.\r\n   */\r\n  addEventListener(eventType, userListener) {\r\n    this.beans.validation?.checkRowEvents(eventType);\r\n    if (!this.__localEventService) {\r\n      this.__localEventService = new LocalEventService();\r\n    }\r\n    this.frameworkEventListenerService = this.beans.frameworkOverrides.createLocalEventListenerWrapper?.(\r\n      this.frameworkEventListenerService,\r\n      this.__localEventService\r\n    );\r\n    const listener = this.frameworkEventListenerService?.wrap(eventType, userListener) ?? userListener;\r\n    this.__localEventService.addEventListener(eventType, listener);\r\n  }\r\n  /**\r\n   * PUBLIC USE ONLY: for internal use within AG Grid use the `__addEventListener` and `__removeEventListener` methods.\r\n   */\r\n  removeEventListener(eventType, userListener) {\r\n    const listener = this.frameworkEventListenerService?.unwrap(eventType, userListener) ?? userListener;\r\n    this.removeLocalListener(eventType, listener);\r\n  }\r\n  removeLocalListener(eventType, listener) {\r\n    this.__localEventService?.removeEventListener(eventType, listener);\r\n    if (this.__localEventService?.noRegisteredListenersExist()) {\r\n      this.__localEventService = null;\r\n    }\r\n  }\r\n  /**\r\n   * @deprecated v32.2.0 Check `node.detail` then user provided callback `isFullWidthRow` instead.\r\n   *\r\n   * Returns:\r\n   * - `true` if the node is a full width cell\r\n   * - `false` if the node is not a full width cell\r\n   */\r\n  isFullWidthCell() {\r\n    _warn(61);\r\n    if (this.detail) {\r\n      return true;\r\n    }\r\n    const isFullWidthCellFunc = this.beans.gos.getCallback(\"isFullWidthRow\");\r\n    return isFullWidthCellFunc ? isFullWidthCellFunc({ rowNode: this }) : false;\r\n  }\r\n  /**\r\n   * Returns the route of keys to the row node. Returns undefined if the node has no key.\r\n   */\r\n  getRoute() {\r\n    if (this.level === -1) {\r\n      return [];\r\n    }\r\n    if (this.key == null) {\r\n      return void 0;\r\n    }\r\n    const res = [];\r\n    let pointer = this;\r\n    while (pointer && pointer.key != null) {\r\n      res.push(pointer.key);\r\n      pointer = pointer.parent;\r\n    }\r\n    return res.reverse();\r\n  }\r\n  setFirstChild(firstChild) {\r\n    if (this.firstChild !== firstChild) {\r\n      this.firstChild = firstChild;\r\n      this.dispatchRowEvent(\"firstChildChanged\");\r\n    }\r\n  }\r\n  setDisplayed(displayed) {\r\n    if (this.displayed !== displayed) {\r\n      this.displayed = displayed;\r\n      this.dispatchRowEvent(\"displayedChanged\");\r\n    }\r\n  }\r\n  setRowIndex(rowIndex) {\r\n    if (this.rowIndex !== rowIndex) {\r\n      this.rowIndex = rowIndex;\r\n      this.dispatchRowEvent(\"rowIndexChanged\");\r\n    }\r\n  }\r\n  setAllChildrenCount(allChildrenCount) {\r\n    if (this.allChildrenCount !== allChildrenCount) {\r\n      this.allChildrenCount = allChildrenCount;\r\n      this.dispatchRowEvent(\"allChildrenCountChanged\");\r\n    }\r\n  }\r\n  setUiLevel(uiLevel) {\r\n    if (this.uiLevel !== uiLevel) {\r\n      this.uiLevel = uiLevel;\r\n      this.dispatchRowEvent(\"uiLevelChanged\");\r\n    }\r\n  }\r\n  getFirstChild() {\r\n    if (this.childStore) {\r\n      return this.childStore.getFirstNode();\r\n    }\r\n    return this.childrenAfterSort?.[0] ?? null;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/entities/rowNodeUtils.ts\r\nfunction _createGlobalRowEvent(rowNode, gos, type) {\r\n  return _addGridCommonParams(gos, {\r\n    type,\r\n    node: rowNode,\r\n    data: rowNode.data,\r\n    rowIndex: rowNode.rowIndex,\r\n    rowPinned: rowNode.rowPinned\r\n  });\r\n}\r\nvar IGNORED_SIBLING_PROPERTIES = /* @__PURE__ */ new Set([\"__localEventService\", \"__objectId\", \"sticky\", \"__autoHeights\", \"__checkAutoHeightsDebounced\", \"childStore\"]);\r\nfunction _createRowNodeSibling(rowNode, beans) {\r\n  const sibling = new RowNode(beans);\r\n  Object.keys(rowNode).forEach((key) => {\r\n    if (IGNORED_SIBLING_PROPERTIES.has(key)) {\r\n      return;\r\n    }\r\n    sibling[key] = rowNode[key];\r\n  });\r\n  sibling.oldRowTop = null;\r\n  return sibling;\r\n}\r\n\r\n// packages/ag-grid-community/src/filter/columnFilterUtils.ts\r\nvar FILTER_HANDLER_MAP = {\r\n  agSetColumnFilter: \"agSetColumnFilterHandler\",\r\n  agMultiColumnFilter: \"agMultiColumnFilterHandler\",\r\n  agGroupColumnFilter: \"agGroupColumnFilterHandler\",\r\n  agNumberColumnFilter: \"agNumberColumnFilterHandler\",\r\n  agDateColumnFilter: \"agDateColumnFilterHandler\",\r\n  agTextColumnFilter: \"agTextColumnFilterHandler\"\r\n};\r\nvar FILTER_HANDLERS = new Set(Object.values(FILTER_HANDLER_MAP));\r\nfunction getFilterUiFromWrapper(filterWrapper, skipCreate) {\r\n  const filterUi = filterWrapper.filterUi;\r\n  if (!filterUi) {\r\n    return null;\r\n  }\r\n  if (filterUi.created) {\r\n    return filterUi.promise;\r\n  }\r\n  if (skipCreate) {\r\n    return null;\r\n  }\r\n  const promise = filterUi.create(filterUi.refreshed);\r\n  const createdFilterUi = filterUi;\r\n  createdFilterUi.created = true;\r\n  createdFilterUi.promise = promise;\r\n  return promise;\r\n}\r\nfunction _refreshHandlerAndUi(getFilterUi, handler, handlerParams, model, state, source) {\r\n  handler.refresh?.({ ...handlerParams, model, source });\r\n  return getFilterUi().then((filterUi) => {\r\n    if (filterUi) {\r\n      const { filter, filterParams } = filterUi;\r\n      _refreshFilterUi(filter, filterParams, model, state, source);\r\n    }\r\n  });\r\n}\r\nfunction _refreshFilterUi(filter, filterParams, model, state, source) {\r\n  filter?.refresh?.({\r\n    ...filterParams,\r\n    model,\r\n    state,\r\n    source\r\n  });\r\n}\r\nfunction getAndRefreshFilterUi(getFilterUi, getModel, getState2) {\r\n  const filterUi = getFilterUi();\r\n  if (filterUi?.created) {\r\n    filterUi.promise.then((filter) => {\r\n      const model = getModel();\r\n      _refreshFilterUi(filter, filterUi.filterParams, model, getState2() ?? { model }, \"ui\");\r\n    });\r\n  }\r\n}\r\nfunction _updateFilterModel(action, getFilterUi, getModel, getState2, updateState, updateModel) {\r\n  let state;\r\n  let shouldUpdateModel = false;\r\n  let model;\r\n  switch (action) {\r\n    case \"apply\": {\r\n      const oldState = getState2();\r\n      model = oldState?.model ?? null;\r\n      state = {\r\n        // keep the other UI state\r\n        state: oldState?.state,\r\n        model\r\n      };\r\n      shouldUpdateModel = true;\r\n      break;\r\n    }\r\n    case \"clear\": {\r\n      state = {\r\n        // wipe other UI state\r\n        model: null\r\n      };\r\n      break;\r\n    }\r\n    case \"reset\": {\r\n      state = {\r\n        // wipe other UI state\r\n        model: null\r\n      };\r\n      shouldUpdateModel = true;\r\n      model = null;\r\n      break;\r\n    }\r\n    case \"cancel\": {\r\n      state = {\r\n        // wipe other UI state\r\n        model: getModel()\r\n      };\r\n      break;\r\n    }\r\n  }\r\n  updateState(state);\r\n  if (shouldUpdateModel) {\r\n    updateModel(model);\r\n  } else {\r\n    getAndRefreshFilterUi(getFilterUi, getModel, getState2);\r\n  }\r\n}\r\nfunction _getFilterModel(model, colId) {\r\n  return model[colId] ?? null;\r\n}\r\n\r\n// packages/ag-grid-community/src/filter/filterButtonComp.ts\r\nfunction getElement(className) {\r\n  return {\r\n    tag: \"div\",\r\n    cls: className\r\n  };\r\n}\r\nvar FilterButtonComp = class extends Component {\r\n  constructor(config) {\r\n    const { className = \"ag-filter-apply-panel\" } = config ?? {};\r\n    super(getElement(className));\r\n    this.listeners = [];\r\n    this.validationMessage = null;\r\n    this.className = className;\r\n  }\r\n  updateButtons(buttons, useForm) {\r\n    const oldButtons = this.buttons;\r\n    this.buttons = buttons;\r\n    if (oldButtons === buttons) {\r\n      return;\r\n    }\r\n    const eGui = this.getGui();\r\n    _clearElement(eGui);\r\n    let eApplyButton;\r\n    this.destroyListeners();\r\n    const fragment = document.createDocumentFragment();\r\n    const className = this.className;\r\n    const addButton = ({ type, label }) => {\r\n      const clickListener = (event) => {\r\n        this.dispatchLocalEvent({\r\n          type,\r\n          event\r\n        });\r\n      };\r\n      if (![\"apply\", \"clear\", \"reset\", \"cancel\"].includes(type)) {\r\n        _warn(75);\r\n      }\r\n      const isApply = type === \"apply\";\r\n      const buttonType = isApply && useForm ? \"submit\" : \"button\";\r\n      const button = _createElement({\r\n        tag: \"button\",\r\n        attrs: { type: buttonType },\r\n        ref: `${type}FilterButton`,\r\n        cls: `ag-button ag-standard-button ${className}-button${isApply ? \" \" + className + \"-apply-button\" : \"\"}`,\r\n        children: label\r\n      });\r\n      this.activateTabIndex([button]);\r\n      if (isApply) {\r\n        eApplyButton = button;\r\n      }\r\n      const keydownListener = (event) => {\r\n        if (event.key === KeyCode.ENTER) {\r\n          event.preventDefault();\r\n          clickListener(event);\r\n        }\r\n      };\r\n      const listeners = this.listeners;\r\n      button.addEventListener(\"click\", clickListener);\r\n      listeners.push(() => button.removeEventListener(\"click\", clickListener));\r\n      button.addEventListener(\"keydown\", keydownListener);\r\n      listeners.push(() => button.removeEventListener(\"keydown\", keydownListener));\r\n      fragment.append(button);\r\n    };\r\n    buttons.forEach((button) => addButton(button));\r\n    this.eApply = eApplyButton;\r\n    const tooltip = this.validationTooltipFeature;\r\n    if (eApplyButton && !tooltip) {\r\n      this.validationTooltipFeature = this.createOptionalManagedBean(\r\n        this.beans.registry.createDynamicBean(\"tooltipFeature\", false, {\r\n          getGui: () => this.eApply,\r\n          getLocation: () => \"advancedFilter\",\r\n          getTooltipShowDelayOverride: () => 1e3\r\n        })\r\n      );\r\n    } else if (!eApplyButton && tooltip) {\r\n      this.validationTooltipFeature = this.destroyBean(tooltip);\r\n    }\r\n    eGui.append(fragment);\r\n  }\r\n  getApplyButton() {\r\n    return this.eApply;\r\n  }\r\n  updateValidity(valid, message = null) {\r\n    const eApplyButton = this.eApply;\r\n    if (!eApplyButton) {\r\n      return;\r\n    }\r\n    _setDisabled(eApplyButton, valid === false);\r\n    this.validationMessage = message ?? null;\r\n    this.validationTooltipFeature?.setTooltipAndRefresh(this.validationMessage);\r\n  }\r\n  destroyListeners() {\r\n    this.listeners.forEach((destroyFunc) => destroyFunc());\r\n    this.listeners = [];\r\n  }\r\n  destroy() {\r\n    this.destroyListeners();\r\n    super.destroy();\r\n  }\r\n};\r\nvar AgFilterButtonSelector = {\r\n  selector: \"AG-FILTER-BUTTON\",\r\n  component: FilterButtonComp\r\n};\r\n\r\n// packages/ag-grid-community/src/filter/filterLocaleText.ts\r\nvar FILTER_LOCALE_TEXT = {\r\n  applyFilter: \"Apply\",\r\n  clearFilter: \"Clear\",\r\n  resetFilter: \"Reset\",\r\n  cancelFilter: \"Cancel\",\r\n  textFilter: \"Text Filter\",\r\n  numberFilter: \"Number Filter\",\r\n  dateFilter: \"Date Filter\",\r\n  setFilter: \"Set Filter\",\r\n  filterOoo: \"Filter...\",\r\n  empty: \"Choose one\",\r\n  equals: \"Equals\",\r\n  notEqual: \"Does not equal\",\r\n  lessThan: \"Less than\",\r\n  greaterThan: \"Greater than\",\r\n  inRange: \"Between\",\r\n  inRangeStart: \"From\",\r\n  inRangeEnd: \"To\",\r\n  lessThanOrEqual: \"Less than or equal to\",\r\n  greaterThanOrEqual: \"Greater than or equal to\",\r\n  contains: \"Contains\",\r\n  notContains: \"Does not contain\",\r\n  startsWith: \"Begins with\",\r\n  endsWith: \"Ends with\",\r\n  blank: \"Blank\",\r\n  notBlank: \"Not blank\",\r\n  before: \"Before\",\r\n  after: \"After\",\r\n  andCondition: \"AND\",\r\n  orCondition: \"OR\",\r\n  dateFormatOoo: \"yyyy-mm-dd\",\r\n  filterSummaryInactive: \"is (All)\",\r\n  filterSummaryContains: \"contains\",\r\n  filterSummaryNotContains: \"does not contain\",\r\n  filterSummaryTextEquals: \"equals\",\r\n  filterSummaryTextNotEqual: \"does not equal\",\r\n  filterSummaryStartsWith: \"begins with\",\r\n  filterSummaryEndsWith: \"ends with\",\r\n  filterSummaryBlank: \"is blank\",\r\n  filterSummaryNotBlank: \"is not blank\",\r\n  filterSummaryEquals: \"=\",\r\n  filterSummaryNotEqual: \"!=\",\r\n  filterSummaryGreaterThan: \">\",\r\n  filterSummaryGreaterThanOrEqual: \">=\",\r\n  filterSummaryLessThan: \"<\",\r\n  filterSummaryLessThanOrEqual: \"<=\",\r\n  filterSummaryInRange: \"between\",\r\n  filterSummaryInRangeValues: (variableValues) => `(${variableValues[0]}, ${variableValues[1]})`,\r\n  filterSummaryTextQuote: (variableValues) => `\"${variableValues[0]}\"`\r\n};\r\nfunction translateForFilter(bean, key, variableValues) {\r\n  return _translate(bean, FILTER_LOCALE_TEXT, key, variableValues);\r\n}\r\n\r\n// packages/ag-grid-community/src/filter/provided/providedFilterUtils.ts\r\nfunction getDebounceMs(params, debounceDefault) {\r\n  const { debounceMs } = params;\r\n  if (_isUseApplyButton(params)) {\r\n    if (debounceMs != null) {\r\n      _warn(71);\r\n    }\r\n    return 0;\r\n  }\r\n  return debounceMs ?? debounceDefault;\r\n}\r\nfunction _isUseApplyButton(params) {\r\n  return (params.buttons?.indexOf(\"apply\") ?? -1) >= 0;\r\n}\r\n\r\n// packages/ag-grid-community/src/filter/filterWrapperComp.ts\r\nvar FilterWrapperComp = class extends Component {\r\n  constructor(column, wrapper, eventParent, updateModel, isGlobalButtons, enableGlobalButtonCheck) {\r\n    super();\r\n    this.column = column;\r\n    this.wrapper = wrapper;\r\n    this.eventParent = eventParent;\r\n    this.updateModel = updateModel;\r\n    this.isGlobalButtons = isGlobalButtons;\r\n    this.enableGlobalButtonCheck = enableGlobalButtonCheck;\r\n    this.hidePopup = null;\r\n    this.applyActive = false;\r\n  }\r\n  postConstruct() {\r\n    const { comp, params: originalParams } = this.wrapper;\r\n    const params = originalParams;\r\n    const useForm = params.useForm;\r\n    const tag = useForm ? \"form\" : \"div\";\r\n    this.setTemplate({\r\n      tag,\r\n      cls: \"ag-filter-wrapper\"\r\n    });\r\n    if (useForm) {\r\n      this.addManagedElementListeners(this.getGui(), {\r\n        submit: (e) => {\r\n          e?.preventDefault();\r\n        },\r\n        keydown: this.handleKeyDown.bind(this)\r\n      });\r\n    }\r\n    this.appendChild(comp.getGui());\r\n    this.params = params;\r\n    this.resetButtonsPanel(params);\r\n    this.addManagedListeners(this.eventParent, {\r\n      filterParamsChanged: ({ column, params: eventParams }) => {\r\n        if (column === this.column) {\r\n          this.resetButtonsPanel(eventParams, this.params);\r\n        }\r\n      },\r\n      filterStateChanged: ({ column, state }) => {\r\n        if (column === this.column) {\r\n          this.eButtons?.updateValidity(state.valid !== false);\r\n        }\r\n      },\r\n      filterAction: ({ column, action, event: keyboardEvent }) => {\r\n        if (column === this.column) {\r\n          this.afterAction(action, keyboardEvent);\r\n        }\r\n      },\r\n      ...this.enableGlobalButtonCheck ? {\r\n        filterGlobalButtons: ({ isGlobal }) => {\r\n          if (isGlobal !== this.isGlobalButtons) {\r\n            this.isGlobalButtons = isGlobal;\r\n            const currentParams = this.params;\r\n            this.resetButtonsPanel(currentParams, currentParams, true);\r\n          }\r\n        }\r\n      } : void 0\r\n    });\r\n  }\r\n  afterGuiAttached(params) {\r\n    if (params) {\r\n      this.hidePopup = params.hidePopup;\r\n    }\r\n  }\r\n  resetButtonsPanel(newParams, oldParams, forceUpdate) {\r\n    const { buttons: oldButtons, readOnly: oldReadOnly } = oldParams ?? {};\r\n    const { buttons: newButtons, readOnly, useForm } = newParams;\r\n    if (!forceUpdate && oldReadOnly === readOnly && _jsonEquals(oldButtons, newButtons)) {\r\n      return;\r\n    }\r\n    const hasButtons = newButtons && newButtons.length > 0 && !newParams.readOnly && !this.isGlobalButtons;\r\n    let eButtonsPanel = this.eButtons;\r\n    if (hasButtons) {\r\n      const buttons = newButtons.map((type) => {\r\n        const localeKey = `${type}Filter`;\r\n        return { type, label: translateForFilter(this, localeKey) };\r\n      });\r\n      this.applyActive = _isUseApplyButton(this.params);\r\n      if (!eButtonsPanel) {\r\n        eButtonsPanel = this.createBean(new FilterButtonComp());\r\n        this.appendChild(eButtonsPanel.getGui());\r\n        const column = this.column;\r\n        const getListener = (action) => ({ event }) => {\r\n          this.updateModel(column, action);\r\n          this.afterAction(action, event);\r\n        };\r\n        eButtonsPanel?.addManagedListeners(eButtonsPanel, {\r\n          apply: getListener(\"apply\"),\r\n          clear: getListener(\"clear\"),\r\n          reset: getListener(\"reset\"),\r\n          cancel: getListener(\"cancel\")\r\n        });\r\n        this.eButtons = eButtonsPanel;\r\n      }\r\n      eButtonsPanel.updateButtons(buttons, useForm);\r\n    } else {\r\n      this.applyActive = false;\r\n      if (eButtonsPanel) {\r\n        _removeFromParent(eButtonsPanel.getGui());\r\n        this.eButtons = this.destroyBean(eButtonsPanel);\r\n      }\r\n    }\r\n  }\r\n  close(e) {\r\n    const hidePopup = this.hidePopup;\r\n    if (!hidePopup) {\r\n      return;\r\n    }\r\n    const keyboardEvent = e;\r\n    const key = keyboardEvent && keyboardEvent.key;\r\n    let params;\r\n    if (key === KeyCode.ENTER || key === KeyCode.SPACE) {\r\n      params = { keyboardEvent };\r\n    }\r\n    hidePopup(params);\r\n    this.hidePopup = null;\r\n  }\r\n  afterAction(action, event) {\r\n    const { params, applyActive } = this;\r\n    const closeOnApply = params?.closeOnApply;\r\n    switch (action) {\r\n      case \"apply\": {\r\n        event?.preventDefault();\r\n        if (closeOnApply && applyActive) {\r\n          this.close(event);\r\n        }\r\n        break;\r\n      }\r\n      case \"reset\": {\r\n        if (closeOnApply && applyActive) {\r\n          this.close();\r\n        }\r\n        break;\r\n      }\r\n      case \"cancel\": {\r\n        if (closeOnApply) {\r\n          this.close(event);\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  handleKeyDown(event) {\r\n    if (!event.defaultPrevented && event.key === KeyCode.ENTER && this.applyActive) {\r\n      this.updateModel(this.column, \"apply\");\r\n      this.afterAction(\"apply\", event);\r\n    }\r\n  }\r\n  destroy() {\r\n    this.hidePopup = null;\r\n    this.eButtons = this.destroyBean(this.eButtons);\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/filter/filterComp.ts\r\nvar FilterElement = { tag: \"div\", cls: \"ag-filter\" };\r\nvar FilterComp = class extends Component {\r\n  constructor(column, source, enableGlobalButtonCheck) {\r\n    super(FilterElement);\r\n    this.column = column;\r\n    this.source = source;\r\n    this.enableGlobalButtonCheck = enableGlobalButtonCheck;\r\n    this.wrapper = null;\r\n  }\r\n  postConstruct() {\r\n    this.beans.colFilter?.activeFilterComps.add(this);\r\n    this.createFilter(true);\r\n    this.addManagedEventListeners({ filterDestroyed: this.onFilterDestroyed.bind(this) });\r\n  }\r\n  hasFilter() {\r\n    return this.wrapper != null;\r\n  }\r\n  getFilter() {\r\n    return this.wrapper?.then((wrapper) => wrapper.comp) ?? null;\r\n  }\r\n  afterInit() {\r\n    return this.wrapper?.then(() => {\r\n    }) ?? AgPromise.resolve();\r\n  }\r\n  afterGuiAttached(params) {\r\n    this.afterGuiAttachedParams = params;\r\n    this.wrapper?.then((wrapper) => {\r\n      this.comp?.afterGuiAttached(params);\r\n      wrapper?.comp?.afterGuiAttached?.(params);\r\n    });\r\n  }\r\n  afterGuiDetached() {\r\n    this.wrapper?.then((wrapper) => {\r\n      wrapper?.comp?.afterGuiDetached?.();\r\n    });\r\n  }\r\n  createFilter(init) {\r\n    const {\r\n      column,\r\n      source,\r\n      beans: { colFilter }\r\n    } = this;\r\n    const filterPromise = colFilter.getFilterUiForDisplay(column) ?? null;\r\n    this.wrapper = filterPromise;\r\n    filterPromise?.then((wrapper) => {\r\n      if (!wrapper) {\r\n        return;\r\n      }\r\n      const { isHandler, comp } = wrapper;\r\n      let filterGui;\r\n      if (isHandler) {\r\n        const enableGlobalButtonCheck = !!this.enableGlobalButtonCheck;\r\n        const displayComp = this.createBean(\r\n          new FilterWrapperComp(\r\n            column,\r\n            wrapper,\r\n            colFilter,\r\n            colFilter.updateModel.bind(colFilter),\r\n            enableGlobalButtonCheck && colFilter.isGlobalButtons,\r\n            enableGlobalButtonCheck\r\n          )\r\n        );\r\n        this.comp = displayComp;\r\n        filterGui = displayComp.getGui();\r\n      } else {\r\n        filterGui = comp.getGui();\r\n        if (!_exists(filterGui)) {\r\n          _warn(69, { guiFromFilter: filterGui });\r\n        }\r\n      }\r\n      this.appendChild(filterGui);\r\n      if (init) {\r\n        this.eventSvc.dispatchEvent({\r\n          type: \"filterOpened\",\r\n          column,\r\n          source,\r\n          eGui: this.getGui()\r\n        });\r\n      } else {\r\n        comp.afterGuiAttached?.(this.afterGuiAttachedParams);\r\n      }\r\n    });\r\n  }\r\n  onFilterDestroyed(event) {\r\n    const { source, column } = event;\r\n    if ((source === \"api\" || source === \"paramsUpdated\") && column.getId() === this.column.getId() && this.beans.colModel.getColDefCol(this.column)) {\r\n      _clearElement(this.getGui());\r\n      this.comp = this.destroyBean(this.comp);\r\n      this.createFilter();\r\n    }\r\n  }\r\n  destroy() {\r\n    this.beans.colFilter?.activeFilterComps.delete(this);\r\n    this.eventSvc.dispatchEvent({\r\n      type: \"filterClosed\",\r\n      column: this.column\r\n    });\r\n    this.wrapper = null;\r\n    this.comp = this.destroyBean(this.comp);\r\n    this.afterGuiAttachedParams = void 0;\r\n    super.destroy();\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/utils/date.ts\r\nvar DATE_TIME_SEPARATOR = \"T\";\r\nvar DATE_TIME_REGEXP = new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}(${DATE_TIME_SEPARATOR}\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\D?)?`);\r\nfunction _padStartWidthZeros(value, totalStringSize) {\r\n  return value.toString().padStart(totalStringSize, \"0\");\r\n}\r\nfunction _serialiseDate(date, includeTime = true, separator = \"-\") {\r\n  if (!date) {\r\n    return null;\r\n  }\r\n  let serialised = [date.getFullYear(), date.getMonth() + 1, date.getDate()].map((part) => _padStartWidthZeros(part, 2)).join(separator);\r\n  if (includeTime) {\r\n    serialised += DATE_TIME_SEPARATOR + [date.getHours(), date.getMinutes(), date.getSeconds()].map((part) => _padStartWidthZeros(part, 2)).join(\":\");\r\n  }\r\n  return serialised;\r\n}\r\nfunction _getDateParts(d, includeTime = true) {\r\n  if (!d) {\r\n    return null;\r\n  }\r\n  if (includeTime) {\r\n    return [\r\n      String(d.getFullYear()),\r\n      String(d.getMonth() + 1),\r\n      _padStartWidthZeros(d.getDate(), 2),\r\n      _padStartWidthZeros(d.getHours(), 2),\r\n      `:${_padStartWidthZeros(d.getMinutes(), 2)}`,\r\n      `:${_padStartWidthZeros(d.getSeconds(), 2)}`\r\n    ];\r\n  }\r\n  return [d.getFullYear(), d.getMonth() + 1, _padStartWidthZeros(d.getDate(), 2)].map(String);\r\n}\r\nvar calculateOrdinal = (value) => {\r\n  if (value > 3 && value < 21) {\r\n    return \"th\";\r\n  }\r\n  const remainder = value % 10;\r\n  switch (remainder) {\r\n    case 1:\r\n      return \"st\";\r\n    case 2:\r\n      return \"nd\";\r\n    case 3:\r\n      return \"rd\";\r\n  }\r\n  return \"th\";\r\n};\r\nfunction _dateToFormattedString(date, format) {\r\n  if (format == null) {\r\n    return _serialiseDate(date, false);\r\n  }\r\n  const fullYear = _padStartWidthZeros(date.getFullYear(), 4);\r\n  const months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\"\r\n  ];\r\n  const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n  const replace = {\r\n    YYYY: () => fullYear.slice(fullYear.length - 4, fullYear.length),\r\n    YY: () => fullYear.slice(fullYear.length - 2, fullYear.length),\r\n    Y: () => `${date.getFullYear()}`,\r\n    MMMM: () => months[date.getMonth()],\r\n    MMM: () => months[date.getMonth()].slice(0, 3),\r\n    MM: () => _padStartWidthZeros(date.getMonth() + 1, 2),\r\n    Mo: () => `${date.getMonth() + 1}${calculateOrdinal(date.getMonth() + 1)}`,\r\n    M: () => `${date.getMonth() + 1}`,\r\n    Do: () => `${date.getDate()}${calculateOrdinal(date.getDate())}`,\r\n    DD: () => _padStartWidthZeros(date.getDate(), 2),\r\n    D: () => `${date.getDate()}`,\r\n    dddd: () => days[date.getDay()],\r\n    ddd: () => days[date.getDay()].slice(0, 3),\r\n    dd: () => days[date.getDay()].slice(0, 2),\r\n    do: () => `${date.getDay()}${calculateOrdinal(date.getDay())}`,\r\n    d: () => `${date.getDay()}`\r\n  };\r\n  const regexp = new RegExp(Object.keys(replace).join(\"|\"), \"g\");\r\n  return format.replace(regexp, (match) => {\r\n    if (match in replace) {\r\n      return replace[match]();\r\n    }\r\n    return match;\r\n  });\r\n}\r\nfunction _isValidDate(value, bailIfInvalidTime = false) {\r\n  return !!_parseDateTimeFromString(value, bailIfInvalidTime);\r\n}\r\nfunction _isValidDateTime(value) {\r\n  return !!value && _isValidDate(value, true) && !!value.match(DATE_TIME_REGEXP)?.[1];\r\n}\r\nfunction _parseDateTimeFromString(value, bailIfInvalidTime = false) {\r\n  if (!value) {\r\n    return null;\r\n  }\r\n  const [dateStr, timeStr] = value.split(DATE_TIME_SEPARATOR);\r\n  if (!dateStr) {\r\n    return null;\r\n  }\r\n  const fields = dateStr.split(\"-\").map((f) => parseInt(f, 10));\r\n  if (fields.filter((f) => !isNaN(f)).length !== 3) {\r\n    return null;\r\n  }\r\n  const [year, month, day] = fields;\r\n  const date = new Date(year, month - 1, day);\r\n  if (date.getFullYear() !== year || date.getMonth() !== month - 1 || date.getDate() !== day) {\r\n    return null;\r\n  }\r\n  if (!timeStr || timeStr === \"00:00:00\") {\r\n    return date;\r\n  }\r\n  const [hours, minutes, seconds] = timeStr.split(\":\").map((part) => parseInt(part, 10));\r\n  if (hours >= 0 && hours < 24) {\r\n    date.setHours(hours);\r\n  } else if (bailIfInvalidTime) {\r\n    return null;\r\n  }\r\n  if (minutes >= 0 && minutes < 60) {\r\n    date.setMinutes(minutes);\r\n  } else if (bailIfInvalidTime) {\r\n    return null;\r\n  }\r\n  if (seconds >= 0 && seconds < 60) {\r\n    date.setSeconds(seconds);\r\n  } else if (bailIfInvalidTime) {\r\n    return null;\r\n  }\r\n  return date;\r\n}\r\n\r\n// packages/ag-grid-community/src/filter/filterDataTypeUtils.ts\r\nvar MONTH_LOCALE_TEXT = {\r\n  january: \"January\",\r\n  february: \"February\",\r\n  march: \"March\",\r\n  april: \"April\",\r\n  may: \"May\",\r\n  june: \"June\",\r\n  july: \"July\",\r\n  august: \"August\",\r\n  september: \"September\",\r\n  october: \"October\",\r\n  november: \"November\",\r\n  december: \"December\"\r\n};\r\nvar MONTH_KEYS = [\r\n  \"january\",\r\n  \"february\",\r\n  \"march\",\r\n  \"april\",\r\n  \"may\",\r\n  \"june\",\r\n  \"july\",\r\n  \"august\",\r\n  \"september\",\r\n  \"october\",\r\n  \"november\",\r\n  \"december\"\r\n];\r\nfunction setFilterNumberComparator(a, b) {\r\n  if (a == null) {\r\n    return -1;\r\n  }\r\n  if (b == null) {\r\n    return 1;\r\n  }\r\n  return parseFloat(a) - parseFloat(b);\r\n}\r\nfunction isValidDate(value) {\r\n  return value instanceof Date && !isNaN(value.getTime());\r\n}\r\nvar filterParamsForEachDataType = {\r\n  number: () => void 0,\r\n  boolean: () => ({\r\n    maxNumConditions: 1,\r\n    debounceMs: 0,\r\n    filterOptions: [\r\n      \"empty\",\r\n      {\r\n        displayKey: \"true\",\r\n        displayName: \"True\",\r\n        predicate: (_filterValues, cellValue) => cellValue,\r\n        numberOfInputs: 0\r\n      },\r\n      {\r\n        displayKey: \"false\",\r\n        displayName: \"False\",\r\n        predicate: (_filterValues, cellValue) => cellValue === false,\r\n        numberOfInputs: 0\r\n      }\r\n    ]\r\n  }),\r\n  date: () => ({ isValidDate }),\r\n  dateString: ({ dataTypeDefinition }) => ({\r\n    comparator: (filterDate, cellValue) => {\r\n      const cellAsDate = dataTypeDefinition.dateParser(cellValue);\r\n      if (cellValue == null || cellAsDate < filterDate) {\r\n        return -1;\r\n      }\r\n      if (cellAsDate > filterDate) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    },\r\n    isValidDate: (value) => typeof value === \"string\" && isValidDate(dataTypeDefinition.dateParser(value))\r\n  }),\r\n  dateTime: (args) => filterParamsForEachDataType.date(args),\r\n  dateTimeString: (args) => filterParamsForEachDataType.dateString(args),\r\n  object: () => void 0,\r\n  text: () => void 0\r\n};\r\nvar setFilterParamsForEachDataType = {\r\n  number: () => ({ comparator: setFilterNumberComparator }),\r\n  boolean: ({ t }) => ({\r\n    valueFormatter: (params) => _exists(params.value) ? t(String(params.value), params.value ? \"True\" : \"False\") : t(\"blanks\", \"(Blanks)\")\r\n  }),\r\n  date: ({ formatValue, t }) => ({\r\n    valueFormatter: (params) => {\r\n      const valueFormatted = formatValue(params);\r\n      return _exists(valueFormatted) ? valueFormatted : t(\"blanks\", \"(Blanks)\");\r\n    },\r\n    treeList: true,\r\n    treeListFormatter: (pathKey, level) => {\r\n      if (pathKey === \"NaN\") {\r\n        return t(\"invalidDate\", \"Invalid Date\");\r\n      }\r\n      if (level === 1 && pathKey != null) {\r\n        const monthKey = MONTH_KEYS[Number(pathKey) - 1];\r\n        return t(monthKey, MONTH_LOCALE_TEXT[monthKey]);\r\n      }\r\n      return pathKey ?? t(\"blanks\", \"(Blanks)\");\r\n    },\r\n    treeListPathGetter: (date) => _getDateParts(date, false)\r\n  }),\r\n  dateString: ({ formatValue, dataTypeDefinition, t }) => ({\r\n    valueFormatter: (params) => {\r\n      const valueFormatted = formatValue(params);\r\n      return _exists(valueFormatted) ? valueFormatted : t(\"blanks\", \"(Blanks)\");\r\n    },\r\n    treeList: true,\r\n    treeListPathGetter: (value) => _getDateParts(dataTypeDefinition.dateParser(value ?? void 0), false),\r\n    treeListFormatter: (pathKey, level) => {\r\n      if (level === 1 && pathKey != null) {\r\n        const monthKey = MONTH_KEYS[Number(pathKey) - 1];\r\n        return t(monthKey, MONTH_LOCALE_TEXT[monthKey]);\r\n      }\r\n      return pathKey ?? t(\"blanks\", \"(Blanks)\");\r\n    }\r\n  }),\r\n  dateTime: (args) => {\r\n    const params = setFilterParamsForEachDataType.date(args);\r\n    params.treeListPathGetter = _getDateParts;\r\n    return params;\r\n  },\r\n  dateTimeString(args) {\r\n    const convertToDate = args.dataTypeDefinition.dateParser;\r\n    const params = setFilterParamsForEachDataType.dateString(args);\r\n    params.treeListPathGetter = (value) => _getDateParts(convertToDate(value ?? void 0));\r\n    return params;\r\n  },\r\n  object: ({ formatValue, t }) => ({\r\n    valueFormatter: (params) => {\r\n      const valueFormatted = formatValue(params);\r\n      return _exists(valueFormatted) ? valueFormatted : t(\"blanks\", \"(Blanks)\");\r\n    }\r\n  }),\r\n  text: () => void 0\r\n};\r\nfunction _getFilterParamsForDataType(filter, existingFilterParams, existingFilterValueGetter, dataTypeDefinition, formatValue, beans, translate) {\r\n  let filterParams = existingFilterParams;\r\n  let filterValueGetter = existingFilterValueGetter;\r\n  const usingSetFilter = filter === \"agSetColumnFilter\";\r\n  if (!filterValueGetter && dataTypeDefinition.baseDataType === \"object\" && !usingSetFilter) {\r\n    filterValueGetter = ({ column, node }) => formatValue({ column, node, value: beans.valueSvc.getValue(column, node) });\r\n  }\r\n  const filterParamsMap = usingSetFilter ? setFilterParamsForEachDataType : filterParamsForEachDataType;\r\n  const filterParamsGetter = filterParamsMap[dataTypeDefinition.baseDataType];\r\n  const newFilterParams = filterParamsGetter({ dataTypeDefinition, formatValue, t: translate });\r\n  filterParams = typeof existingFilterParams === \"object\" ? {\r\n    ...newFilterParams,\r\n    ...existingFilterParams\r\n  } : newFilterParams;\r\n  return { filterParams, filterValueGetter };\r\n}\r\nvar defaultFilters = {\r\n  boolean: \"agTextColumnFilter\",\r\n  date: \"agDateColumnFilter\",\r\n  dateString: \"agDateColumnFilter\",\r\n  dateTime: \"agDateColumnFilter\",\r\n  dateTimeString: \"agDateColumnFilter\",\r\n  number: \"agNumberColumnFilter\",\r\n  object: \"agTextColumnFilter\",\r\n  text: \"agTextColumnFilter\"\r\n};\r\nvar defaultFloatingFilters = {\r\n  boolean: \"agTextColumnFloatingFilter\",\r\n  date: \"agDateColumnFloatingFilter\",\r\n  dateString: \"agDateColumnFloatingFilter\",\r\n  dateTime: \"agDateColumnFloatingFilter\",\r\n  dateTimeString: \"agDateColumnFloatingFilter\",\r\n  number: \"agNumberColumnFloatingFilter\",\r\n  object: \"agTextColumnFloatingFilter\",\r\n  text: \"agTextColumnFloatingFilter\"\r\n};\r\nfunction _getDefaultSimpleFilter(cellDataType, isFloating = false) {\r\n  const filterSet = isFloating ? defaultFloatingFilters : defaultFilters;\r\n  return filterSet[cellDataType ?? \"text\"];\r\n}\r\n\r\n// packages/ag-grid-community/src/rendering/features/positionableFeature.ts\r\nvar RESIZE_CONTAINER_STYLE = \"ag-resizer-wrapper\";\r\nvar makeDiv = (dataRefPrefix, classSuffix) => ({\r\n  tag: \"div\",\r\n  ref: `${dataRefPrefix}Resizer`,\r\n  cls: `ag-resizer ag-resizer-${classSuffix}`\r\n});\r\nvar RESIZE_TEMPLATE = {\r\n  tag: \"div\",\r\n  cls: RESIZE_CONTAINER_STYLE,\r\n  children: [\r\n    makeDiv(\"eTopLeft\", \"topLeft\"),\r\n    makeDiv(\"eTop\", \"top\"),\r\n    makeDiv(\"eTopRight\", \"topRight\"),\r\n    makeDiv(\"eRight\", \"right\"),\r\n    makeDiv(\"eBottomRight\", \"bottomRight\"),\r\n    makeDiv(\"eBottom\", \"bottom\"),\r\n    makeDiv(\"eBottomLeft\", \"bottomLeft\"),\r\n    makeDiv(\"eLeft\", \"left\")\r\n  ]\r\n};\r\nvar PositionableFeature = class extends BeanStub {\r\n  constructor(element, config) {\r\n    super();\r\n    this.element = element;\r\n    this.dragStartPosition = {\r\n      x: 0,\r\n      y: 0\r\n    };\r\n    this.position = {\r\n      x: 0,\r\n      y: 0\r\n    };\r\n    this.lastSize = {\r\n      width: -1,\r\n      height: -1\r\n    };\r\n    this.positioned = false;\r\n    this.resizersAdded = false;\r\n    this.resizeListeners = [];\r\n    this.boundaryEl = null;\r\n    this.isResizing = false;\r\n    this.isMoving = false;\r\n    this.resizable = {};\r\n    this.movable = false;\r\n    this.currentResizer = null;\r\n    this.config = Object.assign({}, { popup: false }, config);\r\n  }\r\n  wireBeans(beans) {\r\n    this.popupSvc = beans.popupSvc;\r\n    this.dragSvc = beans.dragSvc;\r\n  }\r\n  center(postProcessCallback) {\r\n    const { clientHeight, clientWidth } = this.offsetParent;\r\n    const x = clientWidth / 2 - this.getWidth() / 2;\r\n    const y = clientHeight / 2 - this.getHeight() / 2;\r\n    this.offsetElement(x, y, postProcessCallback);\r\n  }\r\n  initialisePosition(postProcessCallback) {\r\n    if (this.positioned) {\r\n      return;\r\n    }\r\n    const { centered, forcePopupParentAsOffsetParent, minWidth, width, minHeight, height, x, y } = this.config;\r\n    if (!this.offsetParent) {\r\n      this.setOffsetParent();\r\n    }\r\n    let computedMinHeight = 0;\r\n    let computedMinWidth = 0;\r\n    const isElementVisible = _isVisible(this.element);\r\n    if (isElementVisible) {\r\n      const boundaryEl = this.findBoundaryElement();\r\n      const offsetParentComputedStyles = window.getComputedStyle(boundaryEl);\r\n      if (offsetParentComputedStyles.minWidth != null) {\r\n        const paddingWidth = boundaryEl.offsetWidth - this.element.offsetWidth;\r\n        computedMinWidth = parseInt(offsetParentComputedStyles.minWidth, 10) - paddingWidth;\r\n      }\r\n      if (offsetParentComputedStyles.minHeight != null) {\r\n        const paddingHeight = boundaryEl.offsetHeight - this.element.offsetHeight;\r\n        computedMinHeight = parseInt(offsetParentComputedStyles.minHeight, 10) - paddingHeight;\r\n      }\r\n    }\r\n    this.minHeight = minHeight || computedMinHeight;\r\n    this.minWidth = minWidth || computedMinWidth;\r\n    if (width) {\r\n      this.setWidth(width);\r\n    }\r\n    if (height) {\r\n      this.setHeight(height);\r\n    }\r\n    if (!width || !height) {\r\n      this.refreshSize();\r\n    }\r\n    if (centered) {\r\n      this.center(postProcessCallback);\r\n    } else if (x || y) {\r\n      this.offsetElement(x, y, postProcessCallback);\r\n    } else if (isElementVisible && forcePopupParentAsOffsetParent) {\r\n      let boundaryEl = this.boundaryEl;\r\n      let initialisedDuringPositioning = true;\r\n      if (!boundaryEl) {\r\n        boundaryEl = this.findBoundaryElement();\r\n        initialisedDuringPositioning = false;\r\n      }\r\n      if (boundaryEl) {\r\n        const top = parseFloat(boundaryEl.style.top);\r\n        const left = parseFloat(boundaryEl.style.left);\r\n        if (initialisedDuringPositioning) {\r\n          this.offsetElement(isNaN(left) ? 0 : left, isNaN(top) ? 0 : top, postProcessCallback);\r\n        } else {\r\n          this.setPosition(left, top);\r\n        }\r\n      }\r\n    }\r\n    this.positioned = !!this.offsetParent;\r\n  }\r\n  isPositioned() {\r\n    return this.positioned;\r\n  }\r\n  getPosition() {\r\n    return this.position;\r\n  }\r\n  setMovable(movable, moveElement) {\r\n    if (!this.config.popup || movable === this.movable) {\r\n      return;\r\n    }\r\n    this.movable = movable;\r\n    const params = this.moveElementDragListener || {\r\n      eElement: moveElement,\r\n      onDragStart: this.onMoveStart.bind(this),\r\n      onDragging: this.onMove.bind(this),\r\n      onDragStop: this.onMoveEnd.bind(this)\r\n    };\r\n    if (movable) {\r\n      this.dragSvc?.addDragSource(params);\r\n      this.moveElementDragListener = params;\r\n    } else {\r\n      this.dragSvc?.removeDragSource(params);\r\n      this.moveElementDragListener = void 0;\r\n    }\r\n  }\r\n  setResizable(resizable) {\r\n    this.clearResizeListeners();\r\n    if (resizable) {\r\n      this.addResizers();\r\n    } else {\r\n      this.removeResizers();\r\n    }\r\n    if (typeof resizable === \"boolean\") {\r\n      if (resizable === false) {\r\n        return;\r\n      }\r\n      resizable = {\r\n        topLeft: resizable,\r\n        top: resizable,\r\n        topRight: resizable,\r\n        right: resizable,\r\n        bottomRight: resizable,\r\n        bottom: resizable,\r\n        bottomLeft: resizable,\r\n        left: resizable\r\n      };\r\n    }\r\n    Object.keys(resizable).forEach((side) => {\r\n      const resizableStructure = resizable;\r\n      const isSideResizable = !!resizableStructure[side];\r\n      const resizerEl = this.getResizerElement(side);\r\n      const params = {\r\n        dragStartPixels: 0,\r\n        eElement: resizerEl,\r\n        onDragStart: (e) => this.onResizeStart(e, side),\r\n        onDragging: this.onResize.bind(this),\r\n        onDragStop: (e) => this.onResizeEnd(e, side)\r\n      };\r\n      if (isSideResizable || !this.isAlive() && !isSideResizable) {\r\n        if (isSideResizable) {\r\n          this.dragSvc?.addDragSource(params);\r\n          this.resizeListeners.push(params);\r\n          resizerEl.style.pointerEvents = \"all\";\r\n        } else {\r\n          resizerEl.style.pointerEvents = \"none\";\r\n        }\r\n        this.resizable[side] = isSideResizable;\r\n      }\r\n    });\r\n  }\r\n  removeSizeFromEl() {\r\n    this.element.style.removeProperty(\"height\");\r\n    this.element.style.removeProperty(\"width\");\r\n    this.element.style.removeProperty(\"flex\");\r\n  }\r\n  restoreLastSize() {\r\n    this.element.style.flex = \"0 0 auto\";\r\n    const { height, width } = this.lastSize;\r\n    if (width !== -1) {\r\n      this.element.style.width = `${width}px`;\r\n    }\r\n    if (height !== -1) {\r\n      this.element.style.height = `${height}px`;\r\n    }\r\n  }\r\n  getHeight() {\r\n    return this.element.offsetHeight;\r\n  }\r\n  setHeight(height) {\r\n    const { popup } = this.config;\r\n    const eGui = this.element;\r\n    let isPercent = false;\r\n    if (typeof height === \"string\" && height.indexOf(\"%\") !== -1) {\r\n      _setFixedHeight(eGui, height);\r\n      height = _getAbsoluteHeight(eGui);\r\n      isPercent = true;\r\n    } else {\r\n      height = Math.max(this.minHeight, height);\r\n      if (this.positioned) {\r\n        const availableHeight = this.getAvailableHeight();\r\n        if (availableHeight && height > availableHeight) {\r\n          height = availableHeight;\r\n        }\r\n      }\r\n    }\r\n    if (this.getHeight() === height) {\r\n      return;\r\n    }\r\n    if (!isPercent) {\r\n      if (popup) {\r\n        _setFixedHeight(eGui, height);\r\n      } else {\r\n        eGui.style.height = `${height}px`;\r\n        eGui.style.flex = \"0 0 auto\";\r\n        this.lastSize.height = typeof height === \"number\" ? height : parseFloat(height);\r\n      }\r\n    } else {\r\n      eGui.style.maxHeight = \"unset\";\r\n      eGui.style.minHeight = \"unset\";\r\n    }\r\n  }\r\n  getAvailableHeight() {\r\n    const { popup, forcePopupParentAsOffsetParent } = this.config;\r\n    if (!this.positioned) {\r\n      this.initialisePosition();\r\n    }\r\n    const { clientHeight } = this.offsetParent;\r\n    if (!clientHeight) {\r\n      return null;\r\n    }\r\n    const elRect = this.element.getBoundingClientRect();\r\n    const offsetParentRect = this.offsetParent.getBoundingClientRect();\r\n    const yPosition = popup ? this.position.y : elRect.top;\r\n    const parentTop = popup ? 0 : offsetParentRect.top;\r\n    let additionalHeight = 0;\r\n    if (forcePopupParentAsOffsetParent) {\r\n      const parentEl = this.element.parentElement;\r\n      if (parentEl) {\r\n        const { bottom } = parentEl.getBoundingClientRect();\r\n        additionalHeight = bottom - elRect.bottom;\r\n      }\r\n    }\r\n    const availableHeight = clientHeight + parentTop - yPosition - additionalHeight;\r\n    return availableHeight;\r\n  }\r\n  getWidth() {\r\n    return this.element.offsetWidth;\r\n  }\r\n  setWidth(width) {\r\n    const eGui = this.element;\r\n    const { popup } = this.config;\r\n    let isPercent = false;\r\n    if (typeof width === \"string\" && width.indexOf(\"%\") !== -1) {\r\n      _setFixedWidth(eGui, width);\r\n      width = _getAbsoluteWidth(eGui);\r\n      isPercent = true;\r\n    } else if (this.positioned) {\r\n      width = Math.max(this.minWidth, width);\r\n      const { clientWidth } = this.offsetParent;\r\n      const xPosition = popup ? this.position.x : this.element.getBoundingClientRect().left;\r\n      if (clientWidth && width + xPosition > clientWidth) {\r\n        width = clientWidth - xPosition;\r\n      }\r\n    }\r\n    if (this.getWidth() === width) {\r\n      return;\r\n    }\r\n    if (!isPercent) {\r\n      if (this.config.popup) {\r\n        _setFixedWidth(eGui, width);\r\n      } else {\r\n        eGui.style.width = `${width}px`;\r\n        eGui.style.flex = \" unset\";\r\n        this.lastSize.width = typeof width === \"number\" ? width : parseFloat(width);\r\n      }\r\n    } else {\r\n      eGui.style.maxWidth = \"unset\";\r\n      eGui.style.minWidth = \"unset\";\r\n    }\r\n  }\r\n  offsetElement(x = 0, y = 0, postProcessCallback) {\r\n    const { forcePopupParentAsOffsetParent } = this.config;\r\n    const ePopup = forcePopupParentAsOffsetParent ? this.boundaryEl : this.element;\r\n    if (!ePopup) {\r\n      return;\r\n    }\r\n    this.popupSvc?.positionPopup({\r\n      ePopup,\r\n      keepWithinBounds: true,\r\n      skipObserver: this.movable || this.isResizable(),\r\n      updatePosition: () => ({ x, y }),\r\n      postProcessCallback\r\n    });\r\n    this.setPosition(parseFloat(ePopup.style.left), parseFloat(ePopup.style.top));\r\n  }\r\n  constrainSizeToAvailableHeight(constrain) {\r\n    if (!this.config.forcePopupParentAsOffsetParent) {\r\n      return;\r\n    }\r\n    const applyMaxHeightToElement = () => {\r\n      const availableHeight = this.getAvailableHeight();\r\n      this.element.style.setProperty(\"max-height\", `${availableHeight}px`);\r\n    };\r\n    if (constrain && this.popupSvc) {\r\n      this.resizeObserverSubscriber?.();\r\n      this.resizeObserverSubscriber = _observeResize(\r\n        this.beans,\r\n        this.popupSvc?.getPopupParent(),\r\n        applyMaxHeightToElement\r\n      );\r\n    } else {\r\n      this.element.style.removeProperty(\"max-height\");\r\n      if (this.resizeObserverSubscriber) {\r\n        this.resizeObserverSubscriber();\r\n        this.resizeObserverSubscriber = void 0;\r\n      }\r\n    }\r\n  }\r\n  setPosition(x, y) {\r\n    this.position.x = x;\r\n    this.position.y = y;\r\n  }\r\n  updateDragStartPosition(x, y) {\r\n    this.dragStartPosition = { x, y };\r\n  }\r\n  calculateMouseMovement(params) {\r\n    const { e, isLeft, isTop, anywhereWithin, topBuffer } = params;\r\n    const xDiff = e.clientX - this.dragStartPosition.x;\r\n    const yDiff = e.clientY - this.dragStartPosition.y;\r\n    const movementX = this.shouldSkipX(e, !!isLeft, !!anywhereWithin, xDiff) ? 0 : xDiff;\r\n    const movementY = this.shouldSkipY(e, !!isTop, topBuffer, yDiff) ? 0 : yDiff;\r\n    return { movementX, movementY };\r\n  }\r\n  shouldSkipX(e, isLeft, anywhereWithin, diff) {\r\n    const elRect = this.element.getBoundingClientRect();\r\n    const parentRect = this.offsetParent.getBoundingClientRect();\r\n    const boundaryElRect = this.boundaryEl.getBoundingClientRect();\r\n    const xPosition = this.config.popup ? this.position.x : elRect.left;\r\n    let skipX = xPosition <= 0 && parentRect.left >= e.clientX || parentRect.right <= e.clientX && parentRect.right <= boundaryElRect.right;\r\n    if (skipX) {\r\n      return true;\r\n    }\r\n    if (isLeft) {\r\n      skipX = // skip if we are moving to the left and the cursor\r\n      // is positioned to the right of the left side anchor\r\n      diff < 0 && e.clientX > xPosition + parentRect.left || // skip if we are moving to the right and the cursor\r\n      // is positioned to the left of the dialog\r\n      diff > 0 && e.clientX < xPosition + parentRect.left;\r\n    } else {\r\n      if (anywhereWithin) {\r\n        skipX = diff < 0 && e.clientX > boundaryElRect.right || diff > 0 && e.clientX < xPosition + parentRect.left;\r\n      } else {\r\n        skipX = // if the movement is bound to the right side of the dialog\r\n        // we skip if we are moving to the left and the cursor\r\n        // is to the right of the dialog\r\n        diff < 0 && e.clientX > boundaryElRect.right || // or skip if we are moving to the right and the cursor\r\n        // is to the left of the right side anchor\r\n        diff > 0 && e.clientX < boundaryElRect.right;\r\n      }\r\n    }\r\n    return skipX;\r\n  }\r\n  shouldSkipY(e, isTop, topBuffer = 0, diff) {\r\n    const elRect = this.element.getBoundingClientRect();\r\n    const parentRect = this.offsetParent.getBoundingClientRect();\r\n    const boundaryElRect = this.boundaryEl.getBoundingClientRect();\r\n    const yPosition = this.config.popup ? this.position.y : elRect.top;\r\n    let skipY = yPosition <= 0 && parentRect.top >= e.clientY || parentRect.bottom <= e.clientY && parentRect.bottom <= boundaryElRect.bottom;\r\n    if (skipY) {\r\n      return true;\r\n    }\r\n    if (isTop) {\r\n      skipY = // skip if we are moving to towards top and the cursor is\r\n      // below the top anchor + topBuffer\r\n      // note: topBuffer is used when moving the dialog using the title bar\r\n      diff < 0 && e.clientY > yPosition + parentRect.top + topBuffer || // skip if we are moving to the bottom and the cursor is\r\n      // above the top anchor\r\n      diff > 0 && e.clientY < yPosition + parentRect.top;\r\n    } else {\r\n      skipY = // skip if we are moving towards the top and the cursor\r\n      // is below the bottom anchor\r\n      diff < 0 && e.clientY > boundaryElRect.bottom || // skip if we are moving towards the bottom and the cursor\r\n      // is above the bottom anchor\r\n      diff > 0 && e.clientY < boundaryElRect.bottom;\r\n    }\r\n    return skipY;\r\n  }\r\n  createResizeMap() {\r\n    const getElement2 = (ref) => ({\r\n      element: this.element.querySelector(`[data-ref=${ref}Resizer]`)\r\n    });\r\n    this.resizerMap = {\r\n      topLeft: getElement2(\"eTopLeft\"),\r\n      top: getElement2(\"eTop\"),\r\n      topRight: getElement2(\"eTopRight\"),\r\n      right: getElement2(\"eRight\"),\r\n      bottomRight: getElement2(\"eBottomRight\"),\r\n      bottom: getElement2(\"eBottom\"),\r\n      bottomLeft: getElement2(\"eBottomLeft\"),\r\n      left: getElement2(\"eLeft\")\r\n    };\r\n  }\r\n  addResizers() {\r\n    if (this.resizersAdded) {\r\n      return;\r\n    }\r\n    const eGui = this.element;\r\n    if (!eGui) {\r\n      return;\r\n    }\r\n    eGui.appendChild(_createElement(RESIZE_TEMPLATE));\r\n    this.createResizeMap();\r\n    this.resizersAdded = true;\r\n  }\r\n  removeResizers() {\r\n    this.resizerMap = void 0;\r\n    const resizerEl = this.element.querySelector(`.${RESIZE_CONTAINER_STYLE}`);\r\n    if (resizerEl) {\r\n      this.element.removeChild(resizerEl);\r\n    }\r\n    this.resizersAdded = false;\r\n  }\r\n  getResizerElement(side) {\r\n    return this.resizerMap[side].element;\r\n  }\r\n  onResizeStart(e, side) {\r\n    this.boundaryEl = this.findBoundaryElement();\r\n    if (!this.positioned) {\r\n      this.initialisePosition();\r\n    }\r\n    this.currentResizer = {\r\n      isTop: !!side.match(/top/i),\r\n      isRight: !!side.match(/right/i),\r\n      isBottom: !!side.match(/bottom/i),\r\n      isLeft: !!side.match(/left/i)\r\n    };\r\n    this.element.classList.add(\"ag-resizing\");\r\n    this.resizerMap[side].element.classList.add(\"ag-active\");\r\n    const { popup, forcePopupParentAsOffsetParent } = this.config;\r\n    if (!popup && !forcePopupParentAsOffsetParent) {\r\n      this.applySizeToSiblings(this.currentResizer.isBottom || this.currentResizer.isTop);\r\n    }\r\n    this.isResizing = true;\r\n    this.updateDragStartPosition(e.clientX, e.clientY);\r\n  }\r\n  getSiblings() {\r\n    const element = this.element;\r\n    const parent = element.parentElement;\r\n    if (!parent) {\r\n      return null;\r\n    }\r\n    return Array.prototype.slice.call(parent.children).filter((el) => !el.classList.contains(\"ag-hidden\"));\r\n  }\r\n  getMinSizeOfSiblings() {\r\n    const siblings = this.getSiblings() || [];\r\n    let height = 0;\r\n    let width = 0;\r\n    for (let i = 0; i < siblings.length; i++) {\r\n      const currentEl = siblings[i];\r\n      const isFlex = !!currentEl.style.flex && currentEl.style.flex !== \"0 0 auto\";\r\n      if (currentEl === this.element) {\r\n        continue;\r\n      }\r\n      let nextHeight = this.minHeight || 0;\r\n      let nextWidth = this.minWidth || 0;\r\n      if (isFlex) {\r\n        const computedStyle = window.getComputedStyle(currentEl);\r\n        if (computedStyle.minHeight) {\r\n          nextHeight = parseInt(computedStyle.minHeight, 10);\r\n        }\r\n        if (computedStyle.minWidth) {\r\n          nextWidth = parseInt(computedStyle.minWidth, 10);\r\n        }\r\n      } else {\r\n        nextHeight = currentEl.offsetHeight;\r\n        nextWidth = currentEl.offsetWidth;\r\n      }\r\n      height += nextHeight;\r\n      width += nextWidth;\r\n    }\r\n    return { height, width };\r\n  }\r\n  applySizeToSiblings(vertical) {\r\n    let containerToFlex = null;\r\n    const siblings = this.getSiblings();\r\n    if (!siblings) {\r\n      return;\r\n    }\r\n    for (let i = 0; i < siblings.length; i++) {\r\n      const el = siblings[i];\r\n      if (el === containerToFlex) {\r\n        continue;\r\n      }\r\n      if (vertical) {\r\n        el.style.height = `${el.offsetHeight}px`;\r\n      } else {\r\n        el.style.width = `${el.offsetWidth}px`;\r\n      }\r\n      el.style.flex = \"0 0 auto\";\r\n      if (el === this.element) {\r\n        containerToFlex = siblings[i + 1];\r\n      }\r\n    }\r\n    if (containerToFlex) {\r\n      containerToFlex.style.removeProperty(\"height\");\r\n      containerToFlex.style.removeProperty(\"min-height\");\r\n      containerToFlex.style.removeProperty(\"max-height\");\r\n      containerToFlex.style.flex = \"1 1 auto\";\r\n    }\r\n  }\r\n  isResizable() {\r\n    return Object.values(this.resizable).some((value) => value);\r\n  }\r\n  onResize(e) {\r\n    if (!this.isResizing || !this.currentResizer) {\r\n      return;\r\n    }\r\n    const { popup, forcePopupParentAsOffsetParent } = this.config;\r\n    const { isTop, isRight, isBottom, isLeft } = this.currentResizer;\r\n    const isHorizontal = isRight || isLeft;\r\n    const isVertical = isBottom || isTop;\r\n    const { movementX, movementY } = this.calculateMouseMovement({ e, isLeft, isTop });\r\n    const xPosition = this.position.x;\r\n    const yPosition = this.position.y;\r\n    let offsetLeft = 0;\r\n    let offsetTop = 0;\r\n    if (isHorizontal && movementX) {\r\n      const direction = isLeft ? -1 : 1;\r\n      const oldWidth = this.getWidth();\r\n      const newWidth = oldWidth + movementX * direction;\r\n      let skipWidth = false;\r\n      if (isLeft) {\r\n        offsetLeft = oldWidth - newWidth;\r\n        if (xPosition + offsetLeft <= 0 || newWidth <= this.minWidth) {\r\n          skipWidth = true;\r\n          offsetLeft = 0;\r\n        }\r\n      }\r\n      if (!skipWidth) {\r\n        this.setWidth(newWidth);\r\n      }\r\n    }\r\n    if (isVertical && movementY) {\r\n      const direction = isTop ? -1 : 1;\r\n      const oldHeight = this.getHeight();\r\n      const newHeight = oldHeight + movementY * direction;\r\n      let skipHeight = false;\r\n      if (isTop) {\r\n        offsetTop = oldHeight - newHeight;\r\n        if (yPosition + offsetTop <= 0 || newHeight <= this.minHeight) {\r\n          skipHeight = true;\r\n          offsetTop = 0;\r\n        }\r\n      } else {\r\n        if (!this.config.popup && !this.config.forcePopupParentAsOffsetParent && oldHeight < newHeight && this.getMinSizeOfSiblings().height + newHeight > this.element.parentElement.offsetHeight) {\r\n          skipHeight = true;\r\n        }\r\n      }\r\n      if (!skipHeight) {\r\n        this.setHeight(newHeight);\r\n      }\r\n    }\r\n    this.updateDragStartPosition(e.clientX, e.clientY);\r\n    if ((popup || forcePopupParentAsOffsetParent) && offsetLeft || offsetTop) {\r\n      this.offsetElement(xPosition + offsetLeft, yPosition + offsetTop);\r\n    }\r\n  }\r\n  onResizeEnd(e, side) {\r\n    this.isResizing = false;\r\n    this.currentResizer = null;\r\n    this.boundaryEl = null;\r\n    this.element.classList.remove(\"ag-resizing\");\r\n    this.resizerMap[side].element.classList.remove(\"ag-active\");\r\n    this.dispatchLocalEvent({ type: \"resize\" });\r\n  }\r\n  refreshSize() {\r\n    const eGui = this.element;\r\n    if (this.config.popup) {\r\n      if (!this.config.width) {\r\n        this.setWidth(eGui.offsetWidth);\r\n      }\r\n      if (!this.config.height) {\r\n        this.setHeight(eGui.offsetHeight);\r\n      }\r\n    }\r\n  }\r\n  onMoveStart(e) {\r\n    this.boundaryEl = this.findBoundaryElement();\r\n    if (!this.positioned) {\r\n      this.initialisePosition();\r\n    }\r\n    this.isMoving = true;\r\n    this.element.classList.add(\"ag-moving\");\r\n    this.updateDragStartPosition(e.clientX, e.clientY);\r\n  }\r\n  onMove(e) {\r\n    if (!this.isMoving) {\r\n      return;\r\n    }\r\n    const { x, y } = this.position;\r\n    let topBuffer;\r\n    if (this.config.calculateTopBuffer) {\r\n      topBuffer = this.config.calculateTopBuffer();\r\n    }\r\n    const { movementX, movementY } = this.calculateMouseMovement({\r\n      e,\r\n      isTop: true,\r\n      anywhereWithin: true,\r\n      topBuffer\r\n    });\r\n    this.offsetElement(x + movementX, y + movementY);\r\n    this.updateDragStartPosition(e.clientX, e.clientY);\r\n  }\r\n  onMoveEnd() {\r\n    this.isMoving = false;\r\n    this.boundaryEl = null;\r\n    this.element.classList.remove(\"ag-moving\");\r\n  }\r\n  setOffsetParent() {\r\n    if (this.config.forcePopupParentAsOffsetParent && this.popupSvc) {\r\n      this.offsetParent = this.popupSvc.getPopupParent();\r\n    } else {\r\n      this.offsetParent = this.element.offsetParent;\r\n    }\r\n  }\r\n  findBoundaryElement() {\r\n    let el = this.element;\r\n    while (el) {\r\n      if (window.getComputedStyle(el).position !== \"static\") {\r\n        return el;\r\n      }\r\n      el = el.parentElement;\r\n    }\r\n    return this.element;\r\n  }\r\n  clearResizeListeners() {\r\n    while (this.resizeListeners.length) {\r\n      const params = this.resizeListeners.pop();\r\n      this.dragSvc?.removeDragSource(params);\r\n    }\r\n  }\r\n  destroy() {\r\n    super.destroy();\r\n    if (this.moveElementDragListener) {\r\n      this.dragSvc?.removeDragSource(this.moveElementDragListener);\r\n    }\r\n    this.constrainSizeToAvailableHeight(false);\r\n    this.clearResizeListeners();\r\n    this.removeResizers();\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/widgets/managedFocusFeature.ts\r\nvar FOCUS_MANAGED_CLASS = \"ag-focus-managed\";\r\nvar ManagedFocusFeature = class extends BeanStub {\r\n  constructor(eFocusable, callbacks = {}) {\r\n    super();\r\n    this.eFocusable = eFocusable;\r\n    this.callbacks = callbacks;\r\n    this.callbacks = {\r\n      shouldStopEventPropagation: () => false,\r\n      onTabKeyDown: (e) => {\r\n        if (e.defaultPrevented) {\r\n          return;\r\n        }\r\n        const nextRoot = _findNextFocusableElement(this.beans, this.eFocusable, false, e.shiftKey);\r\n        if (!nextRoot) {\r\n          return;\r\n        }\r\n        nextRoot.focus();\r\n        e.preventDefault();\r\n      },\r\n      ...callbacks\r\n    };\r\n  }\r\n  postConstruct() {\r\n    const {\r\n      eFocusable,\r\n      callbacks: { onFocusIn, onFocusOut }\r\n    } = this;\r\n    eFocusable.classList.add(FOCUS_MANAGED_CLASS);\r\n    this.addKeyDownListeners(eFocusable);\r\n    if (onFocusIn) {\r\n      this.addManagedElementListeners(eFocusable, { focusin: onFocusIn });\r\n    }\r\n    if (onFocusOut) {\r\n      this.addManagedElementListeners(eFocusable, { focusout: onFocusOut });\r\n    }\r\n  }\r\n  addKeyDownListeners(eGui) {\r\n    this.addManagedElementListeners(eGui, {\r\n      keydown: (e) => {\r\n        if (e.defaultPrevented || _isStopPropagationForAgGrid(e)) {\r\n          return;\r\n        }\r\n        const { callbacks } = this;\r\n        if (callbacks.shouldStopEventPropagation(e)) {\r\n          _stopPropagationForAgGrid(e);\r\n          return;\r\n        }\r\n        if (e.key === KeyCode.TAB) {\r\n          callbacks.onTabKeyDown(e);\r\n        } else if (callbacks.handleKeyDown) {\r\n          callbacks.handleKeyDown(e);\r\n        }\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/filter/provided/providedFilter.ts\r\nvar ProvidedFilter = class extends Component {\r\n  constructor(filterNameKey, cssIdentifier) {\r\n    super();\r\n    this.filterNameKey = filterNameKey;\r\n    this.cssIdentifier = cssIdentifier;\r\n    this.applyActive = false;\r\n    this.debouncePending = false;\r\n    // subclasses can override this to provide alternative debounce defaults\r\n    this.defaultDebounceMs = 0;\r\n  }\r\n  postConstruct() {\r\n    const element = {\r\n      tag: \"div\",\r\n      cls: `ag-filter-body-wrapper ag-${this.cssIdentifier}-body-wrapper`,\r\n      children: [this.createBodyTemplate()]\r\n    };\r\n    this.setTemplate(element, this.getAgComponents());\r\n    this.createManagedBean(\r\n      new ManagedFocusFeature(this.getFocusableElement(), {\r\n        handleKeyDown: this.handleKeyDown.bind(this)\r\n      })\r\n    );\r\n    this.positionableFeature = this.createBean(\r\n      new PositionableFeature(this.getPositionableElement(), {\r\n        forcePopupParentAsOffsetParent: true\r\n      })\r\n    );\r\n  }\r\n  handleKeyDown(_e) {\r\n  }\r\n  init(legacyParams) {\r\n    const params = legacyParams;\r\n    this.setParams(params);\r\n    this.setModelIntoUi(params.state.model, true).then(() => this.updateUiVisibility());\r\n  }\r\n  refresh(legacyNewParams) {\r\n    const newParams = legacyNewParams;\r\n    const oldParams = this.params;\r\n    this.params = newParams;\r\n    const source = newParams.source;\r\n    if (source === \"colDef\") {\r\n      this.updateParams(newParams, oldParams);\r\n    }\r\n    const newState = newParams.state;\r\n    const oldState = this.state;\r\n    this.state = newState;\r\n    if (newState.model !== oldState.model || newState.state !== oldState.state) {\r\n      this.setModelIntoUi(newState.model);\r\n    }\r\n    return true;\r\n  }\r\n  /** Called on init only. Override in subclasses */\r\n  setParams(params) {\r\n    this.params = params;\r\n    this.state = params.state;\r\n    this.commonUpdateParams(params);\r\n  }\r\n  /** Called on refresh only. Override in subclasses */\r\n  updateParams(newParams, oldParams) {\r\n    this.commonUpdateParams(newParams, oldParams);\r\n  }\r\n  commonUpdateParams(newParams, _oldParams) {\r\n    this.applyActive = _isUseApplyButton(newParams);\r\n    this.setupApplyDebounced();\r\n  }\r\n  /**\r\n   * @deprecated v34 Use the same method on the filter handler (`api.getColumnFilterHandler()`) instead.\r\n   */\r\n  doesFilterPass(params) {\r\n    _warn(283);\r\n    const { getHandler, model, column } = this.params;\r\n    return getHandler().doesFilterPass({\r\n      ...params,\r\n      model,\r\n      handlerParams: this.beans.colFilter.getHandlerParams(column)\r\n    });\r\n  }\r\n  getFilterTitle() {\r\n    return this.translate(this.filterNameKey);\r\n  }\r\n  /**\r\n   * @deprecated v34 Filters are active when they have a model. Use `api.getColumnFilterModel()` instead.\r\n   */\r\n  isFilterActive() {\r\n    _warn(284);\r\n    return this.params.model != null;\r\n  }\r\n  setupApplyDebounced() {\r\n    const debounceMs = getDebounceMs(this.params, this.defaultDebounceMs);\r\n    const debounceFunc = _debounce(this, this.checkApplyDebounce.bind(this), debounceMs);\r\n    this.applyDebounced = () => {\r\n      this.debouncePending = true;\r\n      debounceFunc();\r\n    };\r\n  }\r\n  checkApplyDebounce() {\r\n    if (this.debouncePending) {\r\n      this.debouncePending = false;\r\n      this.doApplyModel();\r\n    }\r\n  }\r\n  /**\r\n   * @deprecated v34 Use (`api.getColumnFilterModel()`) instead.\r\n   */\r\n  getModel() {\r\n    _warn(285);\r\n    return this.params.model;\r\n  }\r\n  /**\r\n   * @deprecated v34 Use (`api.setColumnFilterModel()`) instead.\r\n   */\r\n  setModel(model) {\r\n    _warn(286);\r\n    const { beans, params } = this;\r\n    return beans.colFilter.setModelForColumnLegacy(params.column, model);\r\n  }\r\n  /**\r\n   * Applies changes made in the UI to the filter, and returns true if the model has changed.\r\n   */\r\n  applyModel(_source = \"api\") {\r\n    return this.doApplyModel();\r\n  }\r\n  canApply(_model) {\r\n    return true;\r\n  }\r\n  doApplyModel(additionalEventAttributes) {\r\n    const { params, state } = this;\r\n    const changed = !this.areModelsEqual(params.model, state.model);\r\n    if (changed) {\r\n      params.onAction(\"apply\", additionalEventAttributes);\r\n    }\r\n    return changed;\r\n  }\r\n  /**\r\n   * @deprecated v34 Internal method - should only be called by the grid.\r\n   */\r\n  onNewRowsLoaded() {\r\n  }\r\n  /**\r\n   * By default, if the change came from a floating filter it will be applied immediately, otherwise if there is no\r\n   * apply button it will be applied after a debounce, otherwise it will not be applied at all. This behaviour can\r\n   * be adjusted by using the apply parameter.\r\n   */\r\n  onUiChanged(apply, afterFloatingFilter = false) {\r\n    this.updateUiVisibility();\r\n    const model = this.getModelFromUi();\r\n    const state = {\r\n      model,\r\n      state: this.getState(),\r\n      valid: this.canApply(model)\r\n    };\r\n    this.state = state;\r\n    const params = this.params;\r\n    params.onStateChange(state);\r\n    params.onUiChange(this.getUiChangeEventParams());\r\n    if (!this.gos.get(\"enableFilterHandlers\")) {\r\n      this.eventSvc.dispatchEvent({\r\n        type: \"filterModified\",\r\n        column: params.column,\r\n        filterInstance: this\r\n      });\r\n    }\r\n    apply ?? (apply = this.applyActive ? void 0 : \"debounce\");\r\n    if (apply === \"immediately\") {\r\n      this.doApplyModel({ afterFloatingFilter, afterDataChange: false });\r\n    } else if (apply === \"debounce\") {\r\n      this.applyDebounced();\r\n    }\r\n  }\r\n  getState() {\r\n    return void 0;\r\n  }\r\n  getUiChangeEventParams() {\r\n    return void 0;\r\n  }\r\n  afterGuiAttached(params) {\r\n    this.lastContainerType = params?.container;\r\n    this.refreshFilterResizer(params?.container);\r\n  }\r\n  refreshFilterResizer(containerType) {\r\n    const { positionableFeature, gos } = this;\r\n    if (!positionableFeature) {\r\n      return;\r\n    }\r\n    const isResizable = containerType === \"floatingFilter\" || containerType === \"columnFilter\";\r\n    if (isResizable) {\r\n      positionableFeature.restoreLastSize();\r\n      positionableFeature.setResizable(\r\n        gos.get(\"enableRtl\") ? { bottom: true, bottomLeft: true, left: true } : { bottom: true, bottomRight: true, right: true }\r\n      );\r\n    } else {\r\n      positionableFeature.removeSizeFromEl();\r\n      positionableFeature.setResizable(false);\r\n    }\r\n    positionableFeature.constrainSizeToAvailableHeight(isResizable);\r\n  }\r\n  afterGuiDetached() {\r\n    this.checkApplyDebounce();\r\n    this.positionableFeature?.constrainSizeToAvailableHeight(false);\r\n  }\r\n  destroy() {\r\n    this.positionableFeature = this.destroyBean(this.positionableFeature);\r\n    super.destroy();\r\n  }\r\n  translate(key) {\r\n    return translateForFilter(this, key);\r\n  }\r\n  // override to control positionable feature\r\n  getPositionableElement() {\r\n    return this.getGui();\r\n  }\r\n  areModelsEqual(a, b) {\r\n    if (a === b || a == null && b == null) {\r\n      return true;\r\n    }\r\n    if (a == null || b == null) {\r\n      return false;\r\n    }\r\n    return this.areNonNullModelsEqual(a, b);\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/filter/provided/iSimpleFilter.ts\r\nfunction isCombinedFilterModel(model) {\r\n  return !!model.operator;\r\n}\r\n\r\n// packages/ag-grid-community/src/filter/floating/floatingFilterMapper.ts\r\nfunction _getDefaultFloatingFilterType(frameworkOverrides, def, getFromDefault) {\r\n  if (def == null) {\r\n    return null;\r\n  }\r\n  let defaultFloatingFilterType = null;\r\n  const { compName, jsComp, fwComp } = _getFilterCompKeys(frameworkOverrides, def);\r\n  if (compName) {\r\n    const floatingFilterTypeMap = {\r\n      agSetColumnFilter: \"agSetColumnFloatingFilter\",\r\n      agMultiColumnFilter: \"agMultiColumnFloatingFilter\",\r\n      agGroupColumnFilter: \"agGroupColumnFloatingFilter\",\r\n      agNumberColumnFilter: \"agNumberColumnFloatingFilter\",\r\n      agDateColumnFilter: \"agDateColumnFloatingFilter\",\r\n      agTextColumnFilter: \"agTextColumnFloatingFilter\"\r\n    };\r\n    defaultFloatingFilterType = floatingFilterTypeMap[compName];\r\n  } else {\r\n    const usingDefaultFilter = jsComp == null && fwComp == null && def.filter === true;\r\n    if (usingDefaultFilter) {\r\n      defaultFloatingFilterType = getFromDefault();\r\n    }\r\n  }\r\n  return defaultFloatingFilterType;\r\n}\r\n\r\n// packages/ag-grid-community/src/styling/layoutFeature.ts\r\nvar LayoutCssClasses = {\r\n  AUTO_HEIGHT: \"ag-layout-auto-height\",\r\n  NORMAL: \"ag-layout-normal\",\r\n  PRINT: \"ag-layout-print\"\r\n};\r\nvar LayoutFeature = class extends BeanStub {\r\n  constructor(view) {\r\n    super();\r\n    this.view = view;\r\n  }\r\n  postConstruct() {\r\n    this.addManagedPropertyListener(\"domLayout\", this.updateLayoutClasses.bind(this));\r\n    this.updateLayoutClasses();\r\n  }\r\n  updateLayoutClasses() {\r\n    const domLayout = this.gos.get(\"domLayout\");\r\n    const params = {\r\n      autoHeight: domLayout === \"autoHeight\",\r\n      normal: domLayout === \"normal\",\r\n      print: domLayout === \"print\"\r\n    };\r\n    const cssClass = params.autoHeight ? LayoutCssClasses.AUTO_HEIGHT : params.print ? LayoutCssClasses.PRINT : LayoutCssClasses.NORMAL;\r\n    this.view.updateLayoutClasses(cssClass, params);\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/constants/direction.ts\r\nvar Direction = /* @__PURE__ */ ((Direction2) => {\r\n  Direction2[Direction2[\"Vertical\"] = 0] = \"Vertical\";\r\n  Direction2[Direction2[\"Horizontal\"] = 1] = \"Horizontal\";\r\n  return Direction2;\r\n})(Direction || {});\r\n\r\n// packages/ag-grid-community/src/gridBodyComp/gridBodyScrollFeature.ts\r\nvar VIEWPORT = \"Viewport\";\r\nvar FAKE_V_SCROLLBAR = \"fakeVScrollComp\";\r\nvar HORIZONTAL_SOURCES = [\r\n  \"fakeHScrollComp\",\r\n  \"centerHeader\",\r\n  \"topCenter\",\r\n  \"bottomCenter\",\r\n  \"stickyTopCenter\",\r\n  \"stickyBottomCenter\"\r\n];\r\nvar SCROLL_DEBOUNCE_TIMEOUT = 100;\r\nvar SCROLL_END_TIMEOUT = 150;\r\nvar GridBodyScrollFeature = class extends BeanStub {\r\n  constructor(eBodyViewport) {\r\n    super();\r\n    // listeners for when ensureIndexVisible is waiting for SSRM data to load\r\n    this.clearRetryListenerFncs = [];\r\n    this.lastScrollSource = [null, null];\r\n    this.scrollLeft = -1;\r\n    this.nextScrollTop = -1;\r\n    this.scrollTop = -1;\r\n    // Used to provide approximate values of scrollTop and offsetHeight\r\n    // without forcing the browser to recalculate styles.\r\n    this.lastOffsetHeight = -1;\r\n    this.lastScrollTop = -1;\r\n    this.lastIsHorizontalScrollShowing = false;\r\n    this.scrollTimer = 0;\r\n    this.isScrollActive = false;\r\n    this.isVerticalPositionInvalidated = true;\r\n    this.isHorizontalPositionInvalidated = true;\r\n    this.eBodyViewport = eBodyViewport;\r\n    this.resetLastHScrollDebounced = _debounce(\r\n      this,\r\n      () => this.lastScrollSource[1 /* Horizontal */] = null,\r\n      SCROLL_END_TIMEOUT\r\n    );\r\n    this.resetLastVScrollDebounced = _debounce(\r\n      this,\r\n      () => this.lastScrollSource[0 /* Vertical */] = null,\r\n      SCROLL_END_TIMEOUT\r\n    );\r\n  }\r\n  wireBeans(beans) {\r\n    this.ctrlsSvc = beans.ctrlsSvc;\r\n    this.animationFrameSvc = beans.animationFrameSvc;\r\n    this.visibleCols = beans.visibleCols;\r\n  }\r\n  destroy() {\r\n    super.destroy();\r\n    this.clearRetryListenerFncs = [];\r\n    window.clearTimeout(this.scrollTimer);\r\n  }\r\n  postConstruct() {\r\n    this.enableRtl = this.gos.get(\"enableRtl\");\r\n    const invalidateVerticalScroll = this.invalidateVerticalScroll.bind(this);\r\n    const invalidateHorizontalScroll = this.invalidateHorizontalScroll.bind(this);\r\n    this.addManagedEventListeners({\r\n      displayedColumnsWidthChanged: this.onDisplayedColumnsWidthChanged.bind(this),\r\n      gridSizeChanged: invalidateVerticalScroll,\r\n      // We only invalidate horizontal scrolling when the viewport switches\r\n      // between scrollable and non-scrollable, avoiding unnecessary\r\n      // invalidation on every gridSizeChanged event. If more properties\r\n      // require invalidation, read/write DOM cycles may be needed.\r\n      scrollGapChanged: invalidateHorizontalScroll\r\n    });\r\n    this.addManagedElementListeners(this.eBodyViewport, {\r\n      scroll: invalidateVerticalScroll\r\n    });\r\n    this.ctrlsSvc.whenReady(this, (p) => {\r\n      this.centerRowsCtrl = p.center;\r\n      this.onDisplayedColumnsWidthChanged();\r\n      this.addScrollListener();\r\n    });\r\n  }\r\n  invalidateHorizontalScroll() {\r\n    this.isHorizontalPositionInvalidated = true;\r\n  }\r\n  invalidateVerticalScroll() {\r\n    this.isVerticalPositionInvalidated = true;\r\n  }\r\n  addScrollListener() {\r\n    this.addHorizontalScrollListeners();\r\n    this.addVerticalScrollListeners();\r\n  }\r\n  addHorizontalScrollListeners() {\r\n    this.addManagedElementListeners(this.centerRowsCtrl.eViewport, {\r\n      scroll: this.onHScroll.bind(this, VIEWPORT)\r\n    });\r\n    for (const source of HORIZONTAL_SOURCES) {\r\n      const scrollPartner = this.ctrlsSvc.get(source);\r\n      this.registerScrollPartner(scrollPartner, this.onHScroll.bind(this, source));\r\n    }\r\n  }\r\n  addVerticalScrollListeners() {\r\n    const fakeVScrollComp = this.ctrlsSvc.get(\"fakeVScrollComp\");\r\n    const isDebounce = this.gos.get(\"debounceVerticalScrollbar\");\r\n    const onVScroll = isDebounce ? _debounce(this, this.onVScroll.bind(this, VIEWPORT), SCROLL_DEBOUNCE_TIMEOUT) : this.onVScroll.bind(this, VIEWPORT);\r\n    const onFakeVScroll = isDebounce ? _debounce(this, this.onVScroll.bind(this, FAKE_V_SCROLLBAR), SCROLL_DEBOUNCE_TIMEOUT) : this.onVScroll.bind(this, FAKE_V_SCROLLBAR);\r\n    this.addManagedElementListeners(this.eBodyViewport, { scroll: onVScroll });\r\n    this.registerScrollPartner(fakeVScrollComp, onFakeVScroll);\r\n  }\r\n  registerScrollPartner(comp, callback) {\r\n    comp.onScrollCallback(callback);\r\n  }\r\n  onDisplayedColumnsWidthChanged() {\r\n    if (this.enableRtl) {\r\n      this.horizontallyScrollHeaderCenterAndFloatingCenter();\r\n    }\r\n  }\r\n  horizontallyScrollHeaderCenterAndFloatingCenter(scrollLeft) {\r\n    const notYetInitialised = this.centerRowsCtrl == null;\r\n    if (notYetInitialised) {\r\n      return;\r\n    }\r\n    if (scrollLeft === void 0) {\r\n      scrollLeft = this.centerRowsCtrl.getCenterViewportScrollLeft();\r\n    }\r\n    this.setScrollLeftForAllContainersExceptCurrent(Math.abs(scrollLeft));\r\n  }\r\n  setScrollLeftForAllContainersExceptCurrent(scrollLeft) {\r\n    for (const container of [...HORIZONTAL_SOURCES, VIEWPORT]) {\r\n      if (this.lastScrollSource[1 /* Horizontal */] === container) {\r\n        continue;\r\n      }\r\n      const viewport = this.getViewportForSource(container);\r\n      _setScrollLeft(viewport, scrollLeft, this.enableRtl);\r\n    }\r\n  }\r\n  getViewportForSource(source) {\r\n    if (source === VIEWPORT) {\r\n      return this.centerRowsCtrl.eViewport;\r\n    }\r\n    return this.ctrlsSvc.get(source).eViewport;\r\n  }\r\n  isControllingScroll(source, direction) {\r\n    if (this.lastScrollSource[direction] == null) {\r\n      if (direction === 0 /* Vertical */) {\r\n        this.lastScrollSource[0] = source;\r\n      } else {\r\n        this.lastScrollSource[1] = source;\r\n      }\r\n      return true;\r\n    }\r\n    return this.lastScrollSource[direction] === source;\r\n  }\r\n  onHScroll(source) {\r\n    if (!this.isControllingScroll(source, 1 /* Horizontal */)) {\r\n      return;\r\n    }\r\n    const centerContainerViewport = this.centerRowsCtrl.eViewport;\r\n    const { scrollLeft } = centerContainerViewport;\r\n    if (this.shouldBlockScrollUpdate(1 /* Horizontal */, scrollLeft, true)) {\r\n      return;\r\n    }\r\n    const newScrollLeft = _getScrollLeft(this.getViewportForSource(source), this.enableRtl);\r\n    this.doHorizontalScroll(newScrollLeft);\r\n    this.resetLastHScrollDebounced();\r\n  }\r\n  onVScroll(source) {\r\n    if (!this.isControllingScroll(source, 0 /* Vertical */)) {\r\n      return;\r\n    }\r\n    let scrollTop;\r\n    if (source === VIEWPORT) {\r\n      scrollTop = this.eBodyViewport.scrollTop;\r\n    } else {\r\n      scrollTop = this.ctrlsSvc.get(\"fakeVScrollComp\").getScrollPosition();\r\n    }\r\n    if (this.shouldBlockScrollUpdate(0 /* Vertical */, scrollTop, true)) {\r\n      return;\r\n    }\r\n    const { animationFrameSvc } = this;\r\n    animationFrameSvc?.setScrollTop(scrollTop);\r\n    this.nextScrollTop = scrollTop;\r\n    if (source === VIEWPORT) {\r\n      this.ctrlsSvc.get(\"fakeVScrollComp\").setScrollPosition(scrollTop);\r\n    } else {\r\n      this.eBodyViewport.scrollTop = scrollTop;\r\n    }\r\n    if (animationFrameSvc?.active) {\r\n      animationFrameSvc.schedule();\r\n    } else {\r\n      this.scrollGridIfNeeded(true);\r\n    }\r\n    this.resetLastVScrollDebounced();\r\n  }\r\n  doHorizontalScroll(scrollLeft) {\r\n    const fakeScrollLeft = this.ctrlsSvc.get(\"fakeHScrollComp\").getScrollPosition();\r\n    if (this.scrollLeft === scrollLeft && scrollLeft === fakeScrollLeft) {\r\n      return;\r\n    }\r\n    this.scrollLeft = scrollLeft;\r\n    this.fireScrollEvent(1 /* Horizontal */);\r\n    this.horizontallyScrollHeaderCenterAndFloatingCenter(scrollLeft);\r\n    this.centerRowsCtrl.onHorizontalViewportChanged(true);\r\n  }\r\n  isScrolling() {\r\n    return this.isScrollActive;\r\n  }\r\n  fireScrollEvent(direction) {\r\n    const bodyScrollEvent = {\r\n      type: \"bodyScroll\",\r\n      direction: direction === 1 /* Horizontal */ ? \"horizontal\" : \"vertical\",\r\n      left: this.scrollLeft,\r\n      top: this.scrollTop\r\n    };\r\n    this.isScrollActive = true;\r\n    this.eventSvc.dispatchEvent(bodyScrollEvent);\r\n    window.clearTimeout(this.scrollTimer);\r\n    this.scrollTimer = window.setTimeout(() => {\r\n      this.scrollTimer = 0;\r\n      this.isScrollActive = false;\r\n      this.eventSvc.dispatchEvent({\r\n        ...bodyScrollEvent,\r\n        type: \"bodyScrollEnd\"\r\n      });\r\n    }, SCROLL_END_TIMEOUT);\r\n  }\r\n  shouldBlockScrollUpdate(direction, scrollTo, touchOnly = false) {\r\n    if (touchOnly && !_isIOSUserAgent()) {\r\n      return false;\r\n    }\r\n    if (direction === 0 /* Vertical */) {\r\n      return this.shouldBlockVerticalScroll(scrollTo);\r\n    }\r\n    return this.shouldBlockHorizontalScroll(scrollTo);\r\n  }\r\n  shouldBlockVerticalScroll(scrollTo) {\r\n    const clientHeight = _getInnerHeight(this.eBodyViewport);\r\n    const { scrollHeight } = this.eBodyViewport;\r\n    if (scrollTo < 0 || scrollTo + clientHeight > scrollHeight) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  shouldBlockHorizontalScroll(scrollTo) {\r\n    const clientWidth = this.centerRowsCtrl.getCenterWidth();\r\n    const { scrollWidth } = this.centerRowsCtrl.eViewport;\r\n    if (this.enableRtl) {\r\n      if (scrollTo > 0) {\r\n        return true;\r\n      }\r\n    } else if (scrollTo < 0) {\r\n      return true;\r\n    }\r\n    if (Math.abs(scrollTo) + clientWidth > scrollWidth) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  redrawRowsAfterScroll() {\r\n    this.fireScrollEvent(0 /* Vertical */);\r\n  }\r\n  // this is to cater for AG-3274, where grid is removed from the dom and then inserted back in again.\r\n  // (which happens with some implementations of tabbing). this can result in horizontal scroll getting\r\n  // reset back to the left, however no scroll event is fired. so we need to get header to also scroll\r\n  // back to the left to be kept in sync.\r\n  // adding and removing the grid from the DOM both resets the scroll position and\r\n  // triggers a resize event, so notify listeners if the scroll position has changed\r\n  checkScrollLeft() {\r\n    const scrollLeft = this.scrollLeft;\r\n    let hasHorizontalScrollersOutOfSync = false;\r\n    for (const source of HORIZONTAL_SOURCES) {\r\n      const viewport = this.getViewportForSource(source);\r\n      if (viewport.scrollLeft !== scrollLeft) {\r\n        hasHorizontalScrollersOutOfSync = true;\r\n        break;\r\n      }\r\n    }\r\n    if (hasHorizontalScrollersOutOfSync) {\r\n      this.onHScroll(VIEWPORT);\r\n    }\r\n  }\r\n  scrollGridIfNeeded(suppressedAnimationFrame = false) {\r\n    const frameNeeded = this.scrollTop != this.nextScrollTop;\r\n    if (frameNeeded) {\r\n      this.scrollTop = this.nextScrollTop;\r\n      if (suppressedAnimationFrame) {\r\n        this.invalidateVerticalScroll();\r\n      }\r\n      this.redrawRowsAfterScroll();\r\n    }\r\n    return frameNeeded;\r\n  }\r\n  // called by scrollHorizontally method and alignedGridsService\r\n  setHorizontalScrollPosition(hScrollPosition, fromAlignedGridsService = false) {\r\n    const minScrollLeft = 0;\r\n    const maxScrollLeft = this.centerRowsCtrl.eViewport.scrollWidth - this.centerRowsCtrl.getCenterWidth();\r\n    if (!fromAlignedGridsService && this.shouldBlockScrollUpdate(1 /* Horizontal */, hScrollPosition)) {\r\n      if (this.enableRtl) {\r\n        hScrollPosition = hScrollPosition > 0 ? 0 : maxScrollLeft;\r\n      } else {\r\n        hScrollPosition = Math.min(Math.max(hScrollPosition, minScrollLeft), maxScrollLeft);\r\n      }\r\n    }\r\n    _setScrollLeft(this.centerRowsCtrl.eViewport, Math.abs(hScrollPosition), this.enableRtl);\r\n    this.doHorizontalScroll(hScrollPosition);\r\n  }\r\n  setVerticalScrollPosition(vScrollPosition) {\r\n    this.invalidateVerticalScroll();\r\n    this.eBodyViewport.scrollTop = vScrollPosition;\r\n  }\r\n  getVScrollPosition() {\r\n    if (!this.isVerticalPositionInvalidated) {\r\n      const { lastOffsetHeight, lastScrollTop } = this;\r\n      return {\r\n        top: lastScrollTop,\r\n        bottom: lastScrollTop + lastOffsetHeight\r\n      };\r\n    }\r\n    this.isVerticalPositionInvalidated = false;\r\n    const { scrollTop, offsetHeight } = this.eBodyViewport;\r\n    this.lastScrollTop = scrollTop;\r\n    this.lastOffsetHeight = offsetHeight;\r\n    return {\r\n      top: scrollTop,\r\n      bottom: scrollTop + offsetHeight\r\n    };\r\n  }\r\n  /** Get an approximate scroll position that returns the last real value read.\r\n   * This is useful for avoiding repeated DOM reads that force the browser to recalculate styles.\r\n   * This can have big performance improvements but may not be 100% accurate so only use if this is acceptable.\r\n   */\r\n  getApproximateVScollPosition() {\r\n    if (this.lastScrollTop >= 0 && this.lastOffsetHeight >= 0) {\r\n      return {\r\n        top: this.scrollTop,\r\n        bottom: this.scrollTop + this.lastOffsetHeight\r\n      };\r\n    }\r\n    return this.getVScrollPosition();\r\n  }\r\n  getHScrollPosition() {\r\n    return this.centerRowsCtrl.getHScrollPosition();\r\n  }\r\n  isHorizontalScrollShowing() {\r\n    if (this.isHorizontalPositionInvalidated) {\r\n      this.lastIsHorizontalScrollShowing = this.centerRowsCtrl.isHorizontalScrollShowing();\r\n      this.isHorizontalPositionInvalidated = false;\r\n    }\r\n    return this.lastIsHorizontalScrollShowing;\r\n  }\r\n  // called by the headerRootComp and moveColumnController\r\n  scrollHorizontally(pixels) {\r\n    const oldScrollPosition = this.centerRowsCtrl.eViewport.scrollLeft;\r\n    this.setHorizontalScrollPosition(oldScrollPosition + pixels);\r\n    return this.centerRowsCtrl.eViewport.scrollLeft - oldScrollPosition;\r\n  }\r\n  // gets called by rowRenderer when new data loaded, as it will want to scroll to the top\r\n  scrollToTop() {\r\n    this.eBodyViewport.scrollTop = 0;\r\n  }\r\n  // Valid values for position are bottom, middle and top\r\n  ensureNodeVisible(comparator, position = null) {\r\n    const { rowModel } = this.beans;\r\n    const rowCount = rowModel.getRowCount();\r\n    let indexToSelect = -1;\r\n    for (let i = 0; i < rowCount; i++) {\r\n      const node = rowModel.getRow(i);\r\n      if (typeof comparator === \"function\") {\r\n        const predicate = comparator;\r\n        if (node && predicate(node)) {\r\n          indexToSelect = i;\r\n          break;\r\n        }\r\n      } else {\r\n        if (comparator === node || comparator === node.data) {\r\n          indexToSelect = i;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (indexToSelect >= 0) {\r\n      this.ensureIndexVisible(indexToSelect, position);\r\n    }\r\n  }\r\n  // Valid values for position are bottom, middle and top\r\n  // position should be {'top','middle','bottom', or undefined/null}.\r\n  // if undefined/null, then the grid will to the minimal amount of scrolling,\r\n  // eg if grid needs to scroll up, it scrolls until row is on top,\r\n  //    if grid needs to scroll down, it scrolls until row is on bottom,\r\n  //    if row is already in view, grid does not scroll\r\n  ensureIndexVisible(index, position, retry = 0) {\r\n    if (_isDomLayout(this.gos, \"print\")) {\r\n      return;\r\n    }\r\n    const { rowModel } = this.beans;\r\n    const rowCount = rowModel.getRowCount();\r\n    if (typeof index !== \"number\" || index < 0 || index >= rowCount) {\r\n      _warn(88, { index });\r\n      return;\r\n    }\r\n    this.clearRetryListeners();\r\n    const { frameworkOverrides, pageBounds, rowContainerHeight: heightScaler, rowRenderer } = this.beans;\r\n    frameworkOverrides.wrapIncoming(() => {\r\n      const gridBodyCtrl = this.ctrlsSvc.getGridBodyCtrl();\r\n      const rowNode = rowModel.getRow(index);\r\n      let rowGotShiftedDuringOperation;\r\n      let stickyHeightsChanged;\r\n      let attempt = 0;\r\n      this.invalidateVerticalScroll();\r\n      do {\r\n        const { stickyTopHeight, stickyBottomHeight } = gridBodyCtrl;\r\n        const startingRowTop = rowNode.rowTop;\r\n        const startingRowHeight = rowNode.rowHeight;\r\n        const paginationOffset = pageBounds.getPixelOffset();\r\n        const rowTopPixel = rowNode.rowTop - paginationOffset;\r\n        const rowBottomPixel = rowTopPixel + rowNode.rowHeight;\r\n        const scrollPosition = this.getVScrollPosition();\r\n        const heightOffset = heightScaler.divStretchOffset;\r\n        const vScrollTop = scrollPosition.top + heightOffset;\r\n        const vScrollBottom = scrollPosition.bottom + heightOffset;\r\n        const viewportHeight = vScrollBottom - vScrollTop;\r\n        const pxTop = heightScaler.getScrollPositionForPixel(rowTopPixel);\r\n        const pxBottom = heightScaler.getScrollPositionForPixel(rowBottomPixel - viewportHeight);\r\n        const pxMiddle = Math.min((pxTop + pxBottom) / 2, rowTopPixel);\r\n        const rowAboveViewport = vScrollTop + stickyTopHeight > rowTopPixel;\r\n        const rowBelowViewport = vScrollBottom - stickyBottomHeight < rowBottomPixel;\r\n        let newScrollPosition = null;\r\n        if (position === \"top\") {\r\n          newScrollPosition = pxTop - stickyTopHeight;\r\n        } else if (position === \"bottom\") {\r\n          newScrollPosition = pxBottom + stickyBottomHeight;\r\n        } else if (position === \"middle\") {\r\n          newScrollPosition = pxMiddle;\r\n        } else if (rowAboveViewport) {\r\n          newScrollPosition = pxTop - stickyTopHeight;\r\n        } else if (rowBelowViewport) {\r\n          if (pxBottom - pxTop > viewportHeight) {\r\n            newScrollPosition = pxTop - stickyTopHeight;\r\n          } else {\r\n            newScrollPosition = pxBottom + stickyBottomHeight;\r\n          }\r\n        }\r\n        if (newScrollPosition !== null) {\r\n          this.setVerticalScrollPosition(newScrollPosition);\r\n          rowRenderer.redraw({ afterScroll: true });\r\n        }\r\n        rowGotShiftedDuringOperation = startingRowTop !== rowNode.rowTop || startingRowHeight !== rowNode.rowHeight;\r\n        stickyHeightsChanged = stickyTopHeight !== gridBodyCtrl.stickyTopHeight || stickyBottomHeight !== gridBodyCtrl.stickyBottomHeight;\r\n        attempt++;\r\n      } while ((rowGotShiftedDuringOperation || stickyHeightsChanged) && attempt < 10);\r\n      this.animationFrameSvc?.flushAllFrames();\r\n      if (retry < 10 && (rowNode?.stub || !this.beans.rowAutoHeight?.areRowsMeasured())) {\r\n        const scrollTop = this.getVScrollPosition().top;\r\n        this.clearRetryListenerFncs = this.addManagedEventListeners({\r\n          bodyScroll: () => {\r\n            const newScrollTop = this.getVScrollPosition().top;\r\n            if (scrollTop === newScrollTop) {\r\n              return;\r\n            }\r\n            this.clearRetryListeners();\r\n          },\r\n          modelUpdated: () => {\r\n            this.clearRetryListeners();\r\n            if (index >= rowModel.getRowCount()) {\r\n              return;\r\n            }\r\n            this.ensureIndexVisible(index, position, retry + 1);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n  clearRetryListeners() {\r\n    this.clearRetryListenerFncs.forEach((callback) => callback());\r\n    this.clearRetryListenerFncs = [];\r\n  }\r\n  ensureColumnVisible(key, position = \"auto\") {\r\n    const { colModel, frameworkOverrides } = this.beans;\r\n    const column = colModel.getCol(key);\r\n    if (!column) {\r\n      return;\r\n    }\r\n    if (column.isPinned()) {\r\n      return;\r\n    }\r\n    if (!this.visibleCols.isColDisplayed(column)) {\r\n      return;\r\n    }\r\n    const newHorizontalScroll = this.getPositionedHorizontalScroll(column, position);\r\n    frameworkOverrides.wrapIncoming(() => {\r\n      if (newHorizontalScroll !== null) {\r\n        this.centerRowsCtrl.setCenterViewportScrollLeft(newHorizontalScroll);\r\n      }\r\n      this.centerRowsCtrl.onHorizontalViewportChanged();\r\n      this.animationFrameSvc?.flushAllFrames();\r\n    });\r\n  }\r\n  getPositionedHorizontalScroll(column, position) {\r\n    const { columnBeforeStart, columnAfterEnd } = this.isColumnOutsideViewport(column);\r\n    const viewportTooSmallForColumn = this.centerRowsCtrl.getCenterWidth() < column.getActualWidth();\r\n    const viewportWidth = this.centerRowsCtrl.getCenterWidth();\r\n    const isRtl = this.enableRtl;\r\n    let alignColToStart = (isRtl ? columnBeforeStart : columnAfterEnd) || viewportTooSmallForColumn;\r\n    let alignColToEnd = isRtl ? columnAfterEnd : columnBeforeStart;\r\n    if (position !== \"auto\") {\r\n      alignColToStart = position === \"start\";\r\n      alignColToEnd = position === \"end\";\r\n    }\r\n    const isMiddle = position === \"middle\";\r\n    if (alignColToStart || alignColToEnd || isMiddle) {\r\n      const { colLeft, colMiddle, colRight } = this.getColumnBounds(column);\r\n      if (isMiddle) {\r\n        return colMiddle - viewportWidth / 2;\r\n      }\r\n      if (alignColToStart) {\r\n        return isRtl ? colRight : colLeft;\r\n      }\r\n      return isRtl ? colLeft - viewportWidth : colRight - viewportWidth;\r\n    }\r\n    return null;\r\n  }\r\n  isColumnOutsideViewport(column) {\r\n    const { start: viewportStart, end: viewportEnd } = this.getViewportBounds();\r\n    const { colLeft, colRight } = this.getColumnBounds(column);\r\n    const isRtl = this.enableRtl;\r\n    const columnBeforeStart = isRtl ? viewportStart > colRight : viewportEnd < colRight;\r\n    const columnAfterEnd = isRtl ? viewportEnd < colLeft : viewportStart > colLeft;\r\n    return { columnBeforeStart, columnAfterEnd };\r\n  }\r\n  getColumnBounds(column) {\r\n    const isRtl = this.enableRtl;\r\n    const bodyWidth = this.visibleCols.bodyWidth;\r\n    const colWidth = column.getActualWidth();\r\n    const colLeft = column.getLeft();\r\n    const multiplier = isRtl ? -1 : 1;\r\n    const colLeftPixel = isRtl ? bodyWidth - colLeft : colLeft;\r\n    const colRightPixel = colLeftPixel + colWidth * multiplier;\r\n    const colMidPixel = colLeftPixel + colWidth / 2 * multiplier;\r\n    return { colLeft: colLeftPixel, colMiddle: colMidPixel, colRight: colRightPixel };\r\n  }\r\n  getViewportBounds() {\r\n    const viewportWidth = this.centerRowsCtrl.getCenterWidth();\r\n    const scrollPosition = this.centerRowsCtrl.getCenterViewportScrollLeft();\r\n    const viewportStartPixel = scrollPosition;\r\n    const viewportEndPixel = viewportWidth + scrollPosition;\r\n    return { start: viewportStartPixel, end: viewportEndPixel, width: viewportWidth };\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/gridBodyComp/centerWidthFeature.ts\r\nvar CenterWidthFeature = class extends BeanStub {\r\n  constructor(callback, addSpacer = false) {\r\n    super();\r\n    this.callback = callback;\r\n    this.addSpacer = addSpacer;\r\n  }\r\n  postConstruct() {\r\n    const listener = this.setWidth.bind(this);\r\n    this.addManagedPropertyListener(\"domLayout\", listener);\r\n    this.addManagedEventListeners({\r\n      columnContainerWidthChanged: listener,\r\n      displayedColumnsChanged: listener,\r\n      leftPinnedWidthChanged: listener\r\n    });\r\n    if (this.addSpacer) {\r\n      this.addManagedEventListeners({\r\n        rightPinnedWidthChanged: listener,\r\n        scrollVisibilityChanged: listener,\r\n        scrollbarWidthChanged: listener\r\n      });\r\n    }\r\n    this.setWidth();\r\n  }\r\n  setWidth() {\r\n    const printLayout = _isDomLayout(this.gos, \"print\");\r\n    const { visibleCols, scrollVisibleSvc } = this.beans;\r\n    const centerWidth = visibleCols.bodyWidth;\r\n    const leftWidth = visibleCols.getColsLeftWidth();\r\n    const rightWidth = visibleCols.getDisplayedColumnsRightWidth();\r\n    let totalWidth;\r\n    if (printLayout) {\r\n      totalWidth = centerWidth + leftWidth + rightWidth;\r\n    } else {\r\n      totalWidth = centerWidth;\r\n      if (this.addSpacer) {\r\n        const relevantWidth = this.gos.get(\"enableRtl\") ? leftWidth : rightWidth;\r\n        if (relevantWidth === 0 && scrollVisibleSvc.verticalScrollShowing) {\r\n          totalWidth += scrollVisibleSvc.getScrollbarWidth();\r\n        }\r\n      }\r\n    }\r\n    this.callback(totalWidth);\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/gridBodyComp/viewportSizeFeature.ts\r\nvar ViewportSizeFeature = class extends BeanStub {\r\n  constructor(centerContainerCtrl) {\r\n    super();\r\n    this.centerContainerCtrl = centerContainerCtrl;\r\n  }\r\n  wireBeans(beans) {\r\n    this.scrollVisibleSvc = beans.scrollVisibleSvc;\r\n  }\r\n  postConstruct() {\r\n    this.beans.ctrlsSvc.whenReady(this, (p) => {\r\n      this.gridBodyCtrl = p.gridBodyCtrl;\r\n      this.listenForResize();\r\n    });\r\n    this.addManagedEventListeners({ scrollbarWidthChanged: this.onScrollbarWidthChanged.bind(this) });\r\n    this.addManagedPropertyListeners([\"alwaysShowHorizontalScroll\", \"alwaysShowVerticalScroll\"], () => {\r\n      this.checkViewportAndScrolls();\r\n    });\r\n  }\r\n  listenForResize() {\r\n    const { beans, centerContainerCtrl, gridBodyCtrl } = this;\r\n    const listener = () => {\r\n      _requestAnimationFrame(beans, () => {\r\n        this.onCenterViewportResized();\r\n      });\r\n    };\r\n    centerContainerCtrl.registerViewportResizeListener(listener);\r\n    gridBodyCtrl.registerBodyViewportResizeListener(listener);\r\n  }\r\n  onScrollbarWidthChanged() {\r\n    this.checkViewportAndScrolls();\r\n  }\r\n  onCenterViewportResized() {\r\n    this.scrollVisibleSvc.updateScrollGap();\r\n    if (this.centerContainerCtrl.isViewportInTheDOMTree()) {\r\n      const { pinnedCols, colFlex } = this.beans;\r\n      pinnedCols?.keepPinnedColumnsNarrowerThanViewport();\r\n      this.checkViewportAndScrolls();\r\n      const newWidth = this.centerContainerCtrl.getCenterWidth();\r\n      if (newWidth !== this.centerWidth) {\r\n        this.centerWidth = newWidth;\r\n        colFlex?.refreshFlexedColumns({\r\n          viewportWidth: this.centerWidth,\r\n          updateBodyWidths: true,\r\n          fireResizedEvent: true\r\n        });\r\n      }\r\n    } else {\r\n      this.bodyHeight = 0;\r\n    }\r\n  }\r\n  // gets called every time the viewport size changes. we use this to check visibility of scrollbars\r\n  // in the grid panel, and also to check size and position of viewport for row and column virtualisation.\r\n  checkViewportAndScrolls() {\r\n    this.updateScrollVisibleService();\r\n    this.checkBodyHeight();\r\n    this.onHorizontalViewportChanged();\r\n    this.gridBodyCtrl.scrollFeature.checkScrollLeft();\r\n  }\r\n  getBodyHeight() {\r\n    return this.bodyHeight;\r\n  }\r\n  checkBodyHeight() {\r\n    const eBodyViewport = this.gridBodyCtrl.eBodyViewport;\r\n    const bodyHeight = _getInnerHeight(eBodyViewport);\r\n    if (this.bodyHeight !== bodyHeight) {\r\n      this.bodyHeight = bodyHeight;\r\n      this.eventSvc.dispatchEvent({\r\n        type: \"bodyHeightChanged\"\r\n      });\r\n    }\r\n  }\r\n  updateScrollVisibleService() {\r\n    this.updateScrollVisibleServiceImpl();\r\n    setTimeout(this.updateScrollVisibleServiceImpl.bind(this), 500);\r\n  }\r\n  updateScrollVisibleServiceImpl() {\r\n    const params = {\r\n      horizontalScrollShowing: this.centerContainerCtrl.isHorizontalScrollShowing(),\r\n      verticalScrollShowing: this.gridBodyCtrl.isVerticalScrollShowing()\r\n    };\r\n    this.scrollVisibleSvc.setScrollsVisible(params);\r\n  }\r\n  // this gets called whenever a change in the viewport, so we can inform column controller it has to work\r\n  // out the virtual columns again. gets called from following locations:\r\n  // + ensureColVisible, scroll, init, layoutChanged, displayedColumnsChanged\r\n  onHorizontalViewportChanged() {\r\n    const scrollWidth = this.centerContainerCtrl.getCenterWidth();\r\n    const scrollPosition = this.centerContainerCtrl.getViewportScrollLeft();\r\n    this.beans.colViewport.setScrollPosition(scrollWidth, scrollPosition);\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/styling/stylingUtils.ts\r\nfunction processClassRules(expressionSvc, previousClassRules, classRules, params, onApplicableClass, onNotApplicableClass) {\r\n  if (classRules == null && previousClassRules == null) {\r\n    return;\r\n  }\r\n  const classesToApply = {};\r\n  const classesToRemove = {};\r\n  const forEachSingleClass = (className, callback) => {\r\n    className.split(\" \").forEach((singleClass) => {\r\n      if (singleClass.trim() == \"\")\r\n        return;\r\n      callback(singleClass);\r\n    });\r\n  };\r\n  if (classRules) {\r\n    const classNames = Object.keys(classRules);\r\n    for (let i = 0; i < classNames.length; i++) {\r\n      const className = classNames[i];\r\n      const rule = classRules[className];\r\n      let resultOfRule;\r\n      if (typeof rule === \"string\") {\r\n        resultOfRule = expressionSvc ? expressionSvc.evaluate(rule, params) : true;\r\n      } else if (typeof rule === \"function\") {\r\n        resultOfRule = rule(params);\r\n      }\r\n      forEachSingleClass(className, (singleClass) => {\r\n        resultOfRule ? classesToApply[singleClass] = true : classesToRemove[singleClass] = true;\r\n      });\r\n    }\r\n  }\r\n  if (previousClassRules && onNotApplicableClass) {\r\n    Object.keys(previousClassRules).forEach(\r\n      (className) => forEachSingleClass(className, (singleClass) => {\r\n        if (!classesToApply[singleClass]) {\r\n          classesToRemove[singleClass] = true;\r\n        }\r\n      })\r\n    );\r\n  }\r\n  if (onNotApplicableClass) {\r\n    Object.keys(classesToRemove).forEach(onNotApplicableClass);\r\n  }\r\n  Object.keys(classesToApply).forEach(onApplicableClass);\r\n}\r\n\r\n// packages/ag-grid-community/src/styling/rowStyleService.ts\r\nfunction calculateRowLevel(rowNode) {\r\n  if (rowNode.group) {\r\n    return rowNode.level;\r\n  }\r\n  const parent = rowNode.parent;\r\n  return parent ? parent.level + 1 : 0;\r\n}\r\nvar RowStyleService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"rowStyleSvc\";\r\n  }\r\n  processClassesFromGridOptions(classes, rowNode) {\r\n    const gos = this.gos;\r\n    const process = (rowCls) => {\r\n      if (typeof rowCls === \"string\") {\r\n        classes.push(rowCls);\r\n      } else if (Array.isArray(rowCls)) {\r\n        rowCls.forEach((e) => classes.push(e));\r\n      }\r\n    };\r\n    const rowClass = gos.get(\"rowClass\");\r\n    if (rowClass) {\r\n      process(rowClass);\r\n    }\r\n    const rowClassFunc = gos.getCallback(\"getRowClass\");\r\n    if (rowClassFunc) {\r\n      const params = {\r\n        data: rowNode.data,\r\n        node: rowNode,\r\n        rowIndex: rowNode.rowIndex\r\n      };\r\n      const rowClassFuncResult = rowClassFunc(params);\r\n      process(rowClassFuncResult);\r\n    }\r\n  }\r\n  preProcessRowClassRules(classes, rowNode) {\r\n    this.processRowClassRules(\r\n      rowNode,\r\n      (className) => {\r\n        classes.push(className);\r\n      },\r\n      () => {\r\n      }\r\n    );\r\n  }\r\n  processRowClassRules(rowNode, onApplicableClass, onNotApplicableClass) {\r\n    const { gos, expressionSvc } = this.beans;\r\n    const rowClassParams = _addGridCommonParams(gos, {\r\n      data: rowNode.data,\r\n      node: rowNode,\r\n      rowIndex: rowNode.rowIndex\r\n    });\r\n    processClassRules(\r\n      expressionSvc,\r\n      void 0,\r\n      gos.get(\"rowClassRules\"),\r\n      rowClassParams,\r\n      onApplicableClass,\r\n      onNotApplicableClass\r\n    );\r\n  }\r\n  processStylesFromGridOptions(rowNode) {\r\n    const gos = this.gos;\r\n    const rowStyle = gos.get(\"rowStyle\");\r\n    const rowStyleFunc = gos.getCallback(\"getRowStyle\");\r\n    let rowStyleFuncResult;\r\n    if (rowStyleFunc) {\r\n      const params = {\r\n        data: rowNode.data,\r\n        node: rowNode,\r\n        rowIndex: rowNode.rowIndex\r\n      };\r\n      rowStyleFuncResult = rowStyleFunc(params);\r\n    }\r\n    if (rowStyleFuncResult || rowStyle) {\r\n      return Object.assign({}, rowStyle, rowStyleFuncResult);\r\n    }\r\n    return void 0;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/rendering/row/rowCtrl.ts\r\nvar instanceIdSequence3 = 0;\r\nvar DOM_DATA_KEY_ROW_CTRL = \"renderedRow\";\r\nvar RowCtrl = class extends BeanStub {\r\n  constructor(rowNode, beans, animateIn, useAnimationFrameForCreate, printLayout) {\r\n    super();\r\n    this.rowNode = rowNode;\r\n    this.useAnimationFrameForCreate = useAnimationFrameForCreate;\r\n    this.printLayout = printLayout;\r\n    this.allRowGuis = [];\r\n    this.active = true;\r\n    this.centerCellCtrls = { list: [], map: {} };\r\n    this.leftCellCtrls = { list: [], map: {} };\r\n    this.rightCellCtrls = { list: [], map: {} };\r\n    this.slideInAnimation = {\r\n      left: false,\r\n      center: false,\r\n      right: false,\r\n      fullWidth: false\r\n    };\r\n    this.fadeInAnimation = {\r\n      left: false,\r\n      center: false,\r\n      right: false,\r\n      fullWidth: false\r\n    };\r\n    this.rowDragComps = [];\r\n    this.lastMouseDownOnDragger = false;\r\n    this.emptyStyle = {};\r\n    this.updateColumnListsPending = false;\r\n    this.rowId = null;\r\n    /** sanitised */\r\n    this.businessKey = null;\r\n    this.beans = beans;\r\n    this.gos = beans.gos;\r\n    this.paginationPage = beans.pagination?.getCurrentPage() ?? 0;\r\n    this.suppressRowTransform = this.gos.get(\"suppressRowTransform\");\r\n    this.instanceId = rowNode.id + \"-\" + instanceIdSequence3++;\r\n    this.rowId = _escapeString(rowNode.id);\r\n    this.initRowBusinessKey();\r\n    this.rowFocused = beans.focusSvc.isRowFocused(this.rowNode.rowIndex, this.rowNode.rowPinned);\r\n    this.rowLevel = calculateRowLevel(this.rowNode);\r\n    this.setRowType();\r\n    this.setAnimateFlags(animateIn);\r\n    this.rowStyles = this.processStylesFromGridOptions();\r\n    this.rowEditStyleFeature = beans.editSvc?.createRowStyleFeature(this, beans);\r\n    this.addListeners();\r\n  }\r\n  initRowBusinessKey() {\r\n    this.businessKeyForNodeFunc = this.gos.get(\"getBusinessKeyForNode\");\r\n    this.updateRowBusinessKey();\r\n  }\r\n  updateRowBusinessKey() {\r\n    if (typeof this.businessKeyForNodeFunc !== \"function\") {\r\n      return;\r\n    }\r\n    const businessKey = this.businessKeyForNodeFunc(this.rowNode);\r\n    this.businessKey = _escapeString(businessKey);\r\n  }\r\n  updateGui(containerType, gui) {\r\n    if (containerType === \"left\") {\r\n      this.leftGui = gui;\r\n    } else if (containerType === \"right\") {\r\n      this.rightGui = gui;\r\n    } else if (containerType === \"fullWidth\") {\r\n      this.fullWidthGui = gui;\r\n    } else {\r\n      this.centerGui = gui;\r\n    }\r\n  }\r\n  setComp(rowComp, element, containerType, compBean) {\r\n    const { context, focusSvc } = this.beans;\r\n    compBean = setupCompBean(this, context, compBean);\r\n    const gui = { rowComp, element, containerType, compBean };\r\n    this.allRowGuis.push(gui);\r\n    this.updateGui(containerType, gui);\r\n    this.initialiseRowComp(gui);\r\n    const rowNode = this.rowNode;\r\n    const isSsrmLoadingRow = this.rowType === \"FullWidthLoading\" || rowNode.stub;\r\n    const isIrmLoadingRow = !rowNode.data && this.beans.rowModel.getType() === \"infinite\";\r\n    if (!isSsrmLoadingRow && !isIrmLoadingRow && !rowNode.rowPinned) {\r\n      this.beans.rowRenderer.dispatchFirstDataRenderedEvent();\r\n    }\r\n    const focusableElement = this.fullWidthGui?.element;\r\n    if (focusableElement) {\r\n      const editing = this.beans.editSvc?.isEditing(this);\r\n      if (!editing && focusSvc.isRowFocused(rowNode.rowIndex, rowNode.rowPinned) && focusSvc.shouldTakeFocus()) {\r\n        setTimeout(() => focusableElement.focus({ preventScroll: true }), 0);\r\n      }\r\n    }\r\n  }\r\n  unsetComp(containerType) {\r\n    this.allRowGuis = this.allRowGuis.filter((rowGui) => rowGui.containerType !== containerType);\r\n    this.updateGui(containerType, void 0);\r\n  }\r\n  isCacheable() {\r\n    return this.rowType === \"FullWidthDetail\" && this.gos.get(\"keepDetailRows\");\r\n  }\r\n  setCached(cached) {\r\n    const displayValue = cached ? \"none\" : \"\";\r\n    this.allRowGuis.forEach((rg) => rg.element.style.display = displayValue);\r\n  }\r\n  initialiseRowComp(gui) {\r\n    const gos = this.gos;\r\n    this.onSuppressCellFocusChanged(this.beans.gos.get(\"suppressCellFocus\"));\r\n    this.listenOnDomOrder(gui);\r\n    this.onRowHeightChanged(gui);\r\n    this.updateRowIndexes(gui);\r\n    this.setFocusedClasses(gui);\r\n    this.setStylesFromGridOptions(false, gui);\r\n    if (_isRowSelection(gos) && this.rowNode.selectable) {\r\n      this.onRowSelected(gui);\r\n    }\r\n    this.updateColumnLists(!this.useAnimationFrameForCreate);\r\n    const comp = gui.rowComp;\r\n    const initialRowClasses = this.getInitialRowClasses(gui.containerType);\r\n    initialRowClasses.forEach((name) => comp.toggleCss(name, true));\r\n    this.executeSlideAndFadeAnimations(gui);\r\n    if (this.rowNode.group) {\r\n      _setAriaExpanded(gui.element, this.rowNode.expanded == true);\r\n    }\r\n    this.setRowCompRowId(comp);\r\n    this.setRowCompRowBusinessKey(comp);\r\n    _setDomData(gos, gui.element, DOM_DATA_KEY_ROW_CTRL, this);\r\n    gui.compBean.addDestroyFunc(() => _setDomData(gos, gui.element, DOM_DATA_KEY_ROW_CTRL, null));\r\n    if (this.useAnimationFrameForCreate) {\r\n      this.beans.animationFrameSvc.createTask(\r\n        this.addHoverFunctionality.bind(this, gui),\r\n        this.rowNode.rowIndex,\r\n        \"p2\",\r\n        false\r\n      );\r\n    } else {\r\n      this.addHoverFunctionality(gui);\r\n    }\r\n    if (this.isFullWidth()) {\r\n      this.setupFullWidth(gui);\r\n    }\r\n    if (gos.get(\"rowDragEntireRow\")) {\r\n      this.addRowDraggerToRow(gui);\r\n    }\r\n    if (this.useAnimationFrameForCreate) {\r\n      this.beans.animationFrameSvc.addDestroyTask(() => {\r\n        if (!this.isAlive()) {\r\n          return;\r\n        }\r\n        gui.rowComp.toggleCss(\"ag-after-created\", true);\r\n      });\r\n    }\r\n    this.executeProcessRowPostCreateFunc();\r\n  }\r\n  setRowCompRowBusinessKey(comp) {\r\n    if (this.businessKey == null) {\r\n      return;\r\n    }\r\n    comp.setRowBusinessKey(this.businessKey);\r\n  }\r\n  setRowCompRowId(comp) {\r\n    const rowId = _escapeString(this.rowNode.id);\r\n    this.rowId = rowId;\r\n    if (rowId == null) {\r\n      return;\r\n    }\r\n    comp.setRowId(rowId);\r\n  }\r\n  executeSlideAndFadeAnimations(gui) {\r\n    const { containerType } = gui;\r\n    const shouldSlide = this.slideInAnimation[containerType];\r\n    if (shouldSlide) {\r\n      _batchCall(() => {\r\n        this.onTopChanged();\r\n      });\r\n      this.slideInAnimation[containerType] = false;\r\n    }\r\n    const shouldFade = this.fadeInAnimation[containerType];\r\n    if (shouldFade) {\r\n      _batchCall(() => {\r\n        gui.rowComp.toggleCss(\"ag-opacity-zero\", false);\r\n      });\r\n      this.fadeInAnimation[containerType] = false;\r\n    }\r\n  }\r\n  addRowDraggerToRow(gui) {\r\n    const rowDragComp = this.beans.rowDragSvc?.createRowDragCompForRow(this.rowNode, gui.element);\r\n    if (!rowDragComp) {\r\n      return;\r\n    }\r\n    const rowDragBean = this.createBean(rowDragComp, this.beans.context);\r\n    this.rowDragComps.push(rowDragBean);\r\n    gui.compBean.addDestroyFunc(() => {\r\n      this.rowDragComps = this.rowDragComps.filter((r) => r !== rowDragBean);\r\n      this.rowEditStyleFeature = this.destroyBean(this.rowEditStyleFeature, this.beans.context);\r\n      this.destroyBean(rowDragBean, this.beans.context);\r\n    });\r\n  }\r\n  setupFullWidth(gui) {\r\n    const pinned = this.getPinnedForContainer(gui.containerType);\r\n    const compDetails = this.createFullWidthCompDetails(gui.element, pinned);\r\n    gui.rowComp.showFullWidth(compDetails);\r\n  }\r\n  getFullWidthCellRenderers() {\r\n    if (this.gos.get(\"embedFullWidthRows\")) {\r\n      return this.allRowGuis.map((gui) => gui?.rowComp?.getFullWidthCellRenderer());\r\n    }\r\n    return [this.fullWidthGui?.rowComp?.getFullWidthCellRenderer()];\r\n  }\r\n  executeProcessRowPostCreateFunc() {\r\n    const func = this.gos.getCallback(\"processRowPostCreate\");\r\n    if (!func || !this.areAllContainersReady()) {\r\n      return;\r\n    }\r\n    const params = {\r\n      // areAllContainersReady asserts that centerGui is not null\r\n      eRow: this.centerGui.element,\r\n      ePinnedLeftRow: this.leftGui ? this.leftGui.element : void 0,\r\n      ePinnedRightRow: this.rightGui ? this.rightGui.element : void 0,\r\n      node: this.rowNode,\r\n      rowIndex: this.rowNode.rowIndex,\r\n      addRenderedRowListener: this.addEventListener.bind(this)\r\n    };\r\n    func(params);\r\n  }\r\n  areAllContainersReady() {\r\n    const {\r\n      leftGui,\r\n      centerGui,\r\n      rightGui,\r\n      beans: { visibleCols }\r\n    } = this;\r\n    const isLeftReady = !!leftGui || !visibleCols.isPinningLeft();\r\n    const isCenterReady = !!centerGui;\r\n    const isRightReady = !!rightGui || !visibleCols.isPinningRight();\r\n    return isLeftReady && isCenterReady && isRightReady;\r\n  }\r\n  isNodeFullWidthCell() {\r\n    if (this.rowNode.detail) {\r\n      return true;\r\n    }\r\n    const isFullWidthCellFunc = this.beans.gos.getCallback(\"isFullWidthRow\");\r\n    return isFullWidthCellFunc ? isFullWidthCellFunc({ rowNode: this.rowNode }) : false;\r\n  }\r\n  setRowType() {\r\n    const isStub = this.rowNode.stub && !this.gos.get(\"suppressServerSideFullWidthLoadingRow\") && !this.gos.get(\"groupHideOpenParents\");\r\n    const isFullWidthCell = this.isNodeFullWidthCell();\r\n    const isDetailCell = this.gos.get(\"masterDetail\") && this.rowNode.detail;\r\n    const pivotMode = this.beans.colModel.isPivotMode();\r\n    const isFullWidthGroup = _isFullWidthGroupRow(this.gos, this.rowNode, pivotMode);\r\n    if (isStub) {\r\n      this.rowType = \"FullWidthLoading\";\r\n    } else if (isDetailCell) {\r\n      this.rowType = \"FullWidthDetail\";\r\n    } else if (isFullWidthCell) {\r\n      this.rowType = \"FullWidth\";\r\n    } else if (isFullWidthGroup) {\r\n      this.rowType = \"FullWidthGroup\";\r\n    } else {\r\n      this.rowType = \"Normal\";\r\n    }\r\n  }\r\n  updateColumnLists(suppressAnimationFrame = false, useFlushSync = false) {\r\n    if (this.isFullWidth()) {\r\n      return;\r\n    }\r\n    const { animationFrameSvc } = this.beans;\r\n    const noAnimation = !animationFrameSvc?.active || suppressAnimationFrame || this.printLayout;\r\n    if (noAnimation) {\r\n      this.updateColumnListsImpl(useFlushSync);\r\n      return;\r\n    }\r\n    if (this.updateColumnListsPending) {\r\n      return;\r\n    }\r\n    animationFrameSvc.createTask(\r\n      () => {\r\n        if (!this.active) {\r\n          return;\r\n        }\r\n        this.updateColumnListsImpl(true);\r\n      },\r\n      this.rowNode.rowIndex,\r\n      \"p1\",\r\n      false\r\n    );\r\n    this.updateColumnListsPending = true;\r\n  }\r\n  /**\r\n   * Overridden by SpannedRowCtrl\r\n   */\r\n  getNewCellCtrl(col) {\r\n    const isCellSpan = this.beans.rowSpanSvc?.isCellSpanning(col, this.rowNode);\r\n    if (isCellSpan) {\r\n      return void 0;\r\n    }\r\n    return new CellCtrl(col, this.rowNode, this.beans, this);\r\n  }\r\n  /**\r\n   * Overridden by SpannedRowCtrl, if span context changes cell needs rebuilt\r\n   */\r\n  isCorrectCtrlForSpan(cell) {\r\n    return !this.beans.rowSpanSvc?.isCellSpanning(cell.column, this.rowNode);\r\n  }\r\n  createCellCtrls(prev, cols, pinned = null) {\r\n    const res = {\r\n      list: [],\r\n      map: {}\r\n    };\r\n    const addCell = (colInstanceId, cellCtrl, index) => {\r\n      if (index != null) {\r\n        res.list.splice(index, 0, cellCtrl);\r\n      } else {\r\n        res.list.push(cellCtrl);\r\n      }\r\n      res.map[colInstanceId] = cellCtrl;\r\n    };\r\n    const colsFromPrev = [];\r\n    for (const col of cols) {\r\n      const colInstanceId = col.getInstanceId();\r\n      let cellCtrl = prev.map[colInstanceId];\r\n      if (cellCtrl && !this.isCorrectCtrlForSpan(cellCtrl)) {\r\n        cellCtrl.destroy();\r\n        cellCtrl = void 0;\r\n      }\r\n      if (!cellCtrl) {\r\n        cellCtrl = this.getNewCellCtrl(col);\r\n      }\r\n      if (!cellCtrl) {\r\n        continue;\r\n      }\r\n      addCell(colInstanceId, cellCtrl);\r\n    }\r\n    for (const prevCellCtrl of prev.list) {\r\n      const colInstanceId = prevCellCtrl.column.getInstanceId();\r\n      const cellInResult = res.map[colInstanceId] != null;\r\n      if (cellInResult) {\r\n        continue;\r\n      }\r\n      const keepCell = !this.isCellEligibleToBeRemoved(prevCellCtrl, pinned);\r\n      if (keepCell) {\r\n        colsFromPrev.push([colInstanceId, prevCellCtrl]);\r\n      } else {\r\n        prevCellCtrl.destroy();\r\n      }\r\n    }\r\n    if (colsFromPrev.length) {\r\n      for (const [colInstanceId, cellCtrl] of colsFromPrev) {\r\n        const index = res.list.findIndex((ctrl) => ctrl.column.getLeft() > cellCtrl.column.getLeft());\r\n        const normalisedIndex = index === -1 ? void 0 : Math.max(index - 1, 0);\r\n        addCell(colInstanceId, cellCtrl, normalisedIndex);\r\n      }\r\n    }\r\n    const { focusSvc, visibleCols } = this.beans;\r\n    const focusedCell = focusSvc.getFocusedCell();\r\n    if (focusedCell && focusedCell.column.getPinned() == pinned) {\r\n      const focusedColInstanceId = focusedCell.column.getInstanceId();\r\n      const focusedCellCtrl = res.map[focusedColInstanceId];\r\n      if (!focusedCellCtrl && visibleCols.allCols.includes(focusedCell.column)) {\r\n        const cellCtrl = this.createFocusedCellCtrl();\r\n        if (cellCtrl) {\r\n          const index = res.list.findIndex((ctrl) => ctrl.column.getLeft() > cellCtrl.column.getLeft());\r\n          const normalisedIndex = index === -1 ? void 0 : Math.max(index - 1, 0);\r\n          addCell(focusedColInstanceId, cellCtrl, normalisedIndex);\r\n        }\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n  /**\r\n   * Creates a new cell ctrl for the focused cell, if this is the correct row ctrl.\r\n   * @returns a CellCtrl for the focused cell, if required.\r\n   */\r\n  createFocusedCellCtrl() {\r\n    const { focusSvc, rowSpanSvc } = this.beans;\r\n    const focusedCell = focusSvc.getFocusedCell();\r\n    if (!focusedCell) {\r\n      return void 0;\r\n    }\r\n    const focusedSpan = rowSpanSvc?.getCellSpan(focusedCell.column, this.rowNode);\r\n    if (focusedSpan) {\r\n      if (focusedSpan.firstNode !== this.rowNode || !focusedSpan.doesSpanContain(focusedCell)) {\r\n        return void 0;\r\n      }\r\n    } else {\r\n      if (!focusSvc.isRowFocused(this.rowNode.rowIndex, this.rowNode.rowPinned)) {\r\n        return void 0;\r\n      }\r\n    }\r\n    return this.getNewCellCtrl(focusedCell.column);\r\n  }\r\n  updateColumnListsImpl(useFlushSync) {\r\n    this.updateColumnListsPending = false;\r\n    this.createAllCellCtrls();\r\n    this.setCellCtrls(useFlushSync);\r\n  }\r\n  setCellCtrls(useFlushSync) {\r\n    this.allRowGuis.forEach((item) => {\r\n      const cellControls = this.getCellCtrlsForContainer(item.containerType);\r\n      item.rowComp.setCellCtrls(cellControls, useFlushSync);\r\n    });\r\n  }\r\n  getCellCtrlsForContainer(containerType) {\r\n    switch (containerType) {\r\n      case \"left\":\r\n        return this.leftCellCtrls.list;\r\n      case \"right\":\r\n        return this.rightCellCtrls.list;\r\n      case \"fullWidth\":\r\n        return [];\r\n      case \"center\":\r\n        return this.centerCellCtrls.list;\r\n    }\r\n  }\r\n  createAllCellCtrls() {\r\n    const colViewport = this.beans.colViewport;\r\n    const presentedColsService = this.beans.visibleCols;\r\n    if (this.printLayout) {\r\n      this.centerCellCtrls = this.createCellCtrls(this.centerCellCtrls, presentedColsService.allCols);\r\n      this.leftCellCtrls = { list: [], map: {} };\r\n      this.rightCellCtrls = { list: [], map: {} };\r\n    } else {\r\n      const centerCols = colViewport.getColsWithinViewport(this.rowNode);\r\n      this.centerCellCtrls = this.createCellCtrls(this.centerCellCtrls, centerCols);\r\n      const leftCols = presentedColsService.getLeftColsForRow(this.rowNode);\r\n      this.leftCellCtrls = this.createCellCtrls(this.leftCellCtrls, leftCols, \"left\");\r\n      const rightCols = presentedColsService.getRightColsForRow(this.rowNode);\r\n      this.rightCellCtrls = this.createCellCtrls(this.rightCellCtrls, rightCols, \"right\");\r\n    }\r\n  }\r\n  isCellEligibleToBeRemoved(cellCtrl, nextContainerPinned) {\r\n    const REMOVE_CELL = true;\r\n    const KEEP_CELL = false;\r\n    const { column } = cellCtrl;\r\n    if (column.getPinned() != nextContainerPinned) {\r\n      return REMOVE_CELL;\r\n    }\r\n    if (!this.isCorrectCtrlForSpan(cellCtrl)) {\r\n      return REMOVE_CELL;\r\n    }\r\n    const { visibleCols, editSvc } = this.beans;\r\n    const editing = editSvc?.isEditing(cellCtrl);\r\n    const focused = cellCtrl.isCellFocused();\r\n    const mightWantToKeepCell = editing || focused;\r\n    if (mightWantToKeepCell) {\r\n      const displayedColumns = visibleCols.allCols;\r\n      const cellStillDisplayed = displayedColumns.indexOf(column) >= 0;\r\n      return cellStillDisplayed ? KEEP_CELL : REMOVE_CELL;\r\n    }\r\n    return REMOVE_CELL;\r\n  }\r\n  getDomOrder() {\r\n    const isEnsureDomOrder = this.gos.get(\"ensureDomOrder\");\r\n    return isEnsureDomOrder || _isDomLayout(this.gos, \"print\");\r\n  }\r\n  listenOnDomOrder(gui) {\r\n    const listener = () => {\r\n      gui.rowComp.setDomOrder(this.getDomOrder());\r\n    };\r\n    gui.compBean.addManagedPropertyListeners([\"domLayout\", \"ensureDomOrder\"], listener);\r\n  }\r\n  setAnimateFlags(animateIn) {\r\n    if (this.rowNode.sticky || !animateIn) {\r\n      return;\r\n    }\r\n    const oldRowTopExists = _exists(this.rowNode.oldRowTop);\r\n    const { visibleCols } = this.beans;\r\n    const pinningLeft = visibleCols.isPinningLeft();\r\n    const pinningRight = visibleCols.isPinningRight();\r\n    if (oldRowTopExists) {\r\n      const { slideInAnimation } = this;\r\n      if (this.isFullWidth() && !this.gos.get(\"embedFullWidthRows\")) {\r\n        slideInAnimation.fullWidth = true;\r\n        return;\r\n      }\r\n      slideInAnimation.center = true;\r\n      slideInAnimation.left = pinningLeft;\r\n      slideInAnimation.right = pinningRight;\r\n    } else {\r\n      const { fadeInAnimation } = this;\r\n      if (this.isFullWidth() && !this.gos.get(\"embedFullWidthRows\")) {\r\n        fadeInAnimation.fullWidth = true;\r\n        return;\r\n      }\r\n      fadeInAnimation.center = true;\r\n      fadeInAnimation.left = pinningLeft;\r\n      fadeInAnimation.right = pinningRight;\r\n    }\r\n  }\r\n  isFullWidth() {\r\n    return this.rowType !== \"Normal\";\r\n  }\r\n  refreshFullWidth() {\r\n    const tryRefresh = (gui, pinned) => {\r\n      if (!gui) {\r\n        return true;\r\n      }\r\n      return gui.rowComp.refreshFullWidth(() => {\r\n        const compDetails = this.createFullWidthCompDetails(gui.element, pinned);\r\n        return compDetails.params;\r\n      });\r\n    };\r\n    const fullWidthSuccess = tryRefresh(this.fullWidthGui, null);\r\n    const centerSuccess = tryRefresh(this.centerGui, null);\r\n    const leftSuccess = tryRefresh(this.leftGui, \"left\");\r\n    const rightSuccess = tryRefresh(this.rightGui, \"right\");\r\n    const allFullWidthRowsRefreshed = fullWidthSuccess && centerSuccess && leftSuccess && rightSuccess;\r\n    return allFullWidthRowsRefreshed;\r\n  }\r\n  addListeners() {\r\n    const { beans, gos, rowNode } = this;\r\n    const { expansionSvc, eventSvc, context, rowSpanSvc } = beans;\r\n    this.addManagedListeners(this.rowNode, {\r\n      heightChanged: () => this.onRowHeightChanged(),\r\n      rowSelected: () => this.onRowSelected(),\r\n      rowIndexChanged: this.onRowIndexChanged.bind(this),\r\n      topChanged: this.onTopChanged.bind(this),\r\n      ...expansionSvc?.getRowExpandedListeners(this) ?? {}\r\n    });\r\n    if (rowNode.detail) {\r\n      this.addManagedListeners(rowNode.parent, { dataChanged: this.onRowNodeDataChanged.bind(this) });\r\n    }\r\n    this.addManagedListeners(rowNode, {\r\n      dataChanged: this.onRowNodeDataChanged.bind(this),\r\n      cellChanged: this.postProcessCss.bind(this),\r\n      rowHighlightChanged: this.onRowNodeHighlightChanged.bind(this),\r\n      draggingChanged: this.postProcessRowDragging.bind(this),\r\n      uiLevelChanged: this.onUiLevelChanged.bind(this),\r\n      rowPinned: this.onRowPinned.bind(this)\r\n    });\r\n    this.addManagedListeners(eventSvc, {\r\n      paginationPixelOffsetChanged: this.onPaginationPixelOffsetChanged.bind(this),\r\n      heightScaleChanged: this.onTopChanged.bind(this),\r\n      displayedColumnsChanged: this.onDisplayedColumnsChanged.bind(this),\r\n      virtualColumnsChanged: this.onVirtualColumnsChanged.bind(this),\r\n      cellFocused: this.onCellFocusChanged.bind(this),\r\n      cellFocusCleared: this.onCellFocusChanged.bind(this),\r\n      paginationChanged: this.onPaginationChanged.bind(this),\r\n      modelUpdated: this.refreshFirstAndLastRowStyles.bind(this),\r\n      columnMoved: () => this.updateColumnLists()\r\n    });\r\n    if (rowSpanSvc) {\r\n      this.addManagedListeners(rowSpanSvc, {\r\n        spannedCellsUpdated: ({ pinned }) => {\r\n          if (pinned && !rowNode.rowPinned) {\r\n            return;\r\n          }\r\n          this.updateColumnLists();\r\n        }\r\n      });\r\n    }\r\n    this.addDestroyFunc(() => {\r\n      this.rowDragComps = this.destroyBeans(this.rowDragComps, context);\r\n      this.tooltipFeature = this.destroyBean(this.tooltipFeature, context);\r\n      this.rowEditStyleFeature = this.destroyBean(this.rowEditStyleFeature, context);\r\n    });\r\n    this.addManagedPropertyListeners(\r\n      [\"rowStyle\", \"getRowStyle\", \"rowClass\", \"getRowClass\", \"rowClassRules\"],\r\n      this.postProcessCss.bind(this)\r\n    );\r\n    this.addManagedPropertyListener(\"rowDragEntireRow\", () => {\r\n      const useRowDragEntireRow = gos.get(\"rowDragEntireRow\");\r\n      if (useRowDragEntireRow) {\r\n        this.allRowGuis.forEach((gui) => {\r\n          this.addRowDraggerToRow(gui);\r\n        });\r\n        return;\r\n      }\r\n      this.rowDragComps = this.destroyBeans(this.rowDragComps, context);\r\n    });\r\n    this.addListenersForCellComps();\r\n  }\r\n  addListenersForCellComps() {\r\n    this.addManagedListeners(this.rowNode, {\r\n      rowIndexChanged: () => this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.onRowIndexChanged()),\r\n      cellChanged: (event) => this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.onCellChanged(event))\r\n    });\r\n  }\r\n  /** Should only ever be triggered on source rows (i.e. not on pinned siblings) */\r\n  onRowPinned() {\r\n    for (const gui of this.allRowGuis) {\r\n      gui.rowComp.toggleCss(\"ag-row-pinned-source\", !!this.rowNode.pinnedSibling);\r\n    }\r\n  }\r\n  onRowNodeDataChanged(event) {\r\n    this.refreshRow({\r\n      suppressFlash: !event.update,\r\n      newData: !event.update\r\n    });\r\n  }\r\n  refreshRow(params) {\r\n    const fullWidthChanged = this.isFullWidth() !== !!this.isNodeFullWidthCell();\r\n    if (fullWidthChanged) {\r\n      this.beans.rowRenderer.redrawRow(this.rowNode);\r\n      return;\r\n    }\r\n    if (this.isFullWidth()) {\r\n      const refresh = this.refreshFullWidth();\r\n      if (!refresh) {\r\n        this.beans.rowRenderer.redrawRow(this.rowNode);\r\n      }\r\n      return;\r\n    }\r\n    this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.refreshCell(params));\r\n    this.allRowGuis.forEach((gui) => {\r\n      this.setRowCompRowId(gui.rowComp);\r\n      this.updateRowBusinessKey();\r\n      this.setRowCompRowBusinessKey(gui.rowComp);\r\n    });\r\n    this.onRowSelected();\r\n    this.postProcessCss();\r\n  }\r\n  postProcessCss() {\r\n    this.setStylesFromGridOptions(true);\r\n    this.postProcessClassesFromGridOptions();\r\n    this.postProcessRowClassRules();\r\n    this.rowEditStyleFeature?.applyRowStyles();\r\n    this.postProcessRowDragging();\r\n  }\r\n  onRowNodeHighlightChanged() {\r\n    const rowDropHighlightSvc = this.beans.rowDropHighlightSvc;\r\n    const highlighted = rowDropHighlightSvc?.row === this.rowNode ? rowDropHighlightSvc.position : \"none\";\r\n    const aboveOn = highlighted === \"above\";\r\n    const insideOn = highlighted === \"inside\";\r\n    const belowOn = highlighted === \"below\";\r\n    const treeData = this.gos.get(\"treeData\");\r\n    const indented = treeData && (belowOn || aboveOn);\r\n    const uiLevel = this.rowNode.uiLevel.toString();\r\n    this.allRowGuis.forEach((gui) => {\r\n      const rowComp = gui.rowComp;\r\n      rowComp.toggleCss(\"ag-row-highlight-above\", aboveOn);\r\n      rowComp.toggleCss(\"ag-row-highlight-inside\", insideOn);\r\n      rowComp.toggleCss(\"ag-row-highlight-below\", belowOn);\r\n      rowComp.toggleCss(\"ag-row-highlight-indent\", indented);\r\n      if (indented) {\r\n        gui.element.style.setProperty(\"--ag-row-highlight-level\", uiLevel);\r\n      } else {\r\n        gui.element.style.removeProperty(\"--ag-row-highlight-level\");\r\n      }\r\n    });\r\n  }\r\n  postProcessRowDragging() {\r\n    const dragging = this.rowNode.dragging;\r\n    this.allRowGuis.forEach((gui) => gui.rowComp.toggleCss(\"ag-row-dragging\", dragging));\r\n  }\r\n  onDisplayedColumnsChanged() {\r\n    this.updateColumnLists(true);\r\n    this.beans.rowAutoHeight?.requestCheckAutoHeight();\r\n  }\r\n  onVirtualColumnsChanged() {\r\n    this.updateColumnLists(false, true);\r\n  }\r\n  getRowPosition() {\r\n    return {\r\n      rowPinned: _makeNull(this.rowNode.rowPinned),\r\n      rowIndex: this.rowNode.rowIndex\r\n    };\r\n  }\r\n  onKeyboardNavigate(keyboardEvent) {\r\n    const groupInfo = this.findFullWidthInfoForEvent(keyboardEvent);\r\n    if (!groupInfo) {\r\n      return;\r\n    }\r\n    const { rowGui, column } = groupInfo;\r\n    const currentFullWidthContainer = rowGui.element;\r\n    const isFullWidthContainerFocused = currentFullWidthContainer === keyboardEvent.target;\r\n    if (!isFullWidthContainerFocused) {\r\n      return;\r\n    }\r\n    const node = this.rowNode;\r\n    const { focusSvc, navigation } = this.beans;\r\n    const lastFocusedCell = focusSvc.getFocusedCell();\r\n    const cellPosition = {\r\n      rowIndex: node.rowIndex,\r\n      rowPinned: node.rowPinned,\r\n      column: lastFocusedCell?.column ?? column\r\n    };\r\n    navigation?.navigateToNextCell(keyboardEvent, keyboardEvent.key, cellPosition, true);\r\n    keyboardEvent.preventDefault();\r\n  }\r\n  onTabKeyDown(keyboardEvent) {\r\n    if (keyboardEvent.defaultPrevented || _isStopPropagationForAgGrid(keyboardEvent)) {\r\n      return;\r\n    }\r\n    const currentFullWidthComp = this.allRowGuis.find(\r\n      (c) => c.element.contains(keyboardEvent.target)\r\n    );\r\n    const currentFullWidthContainer = currentFullWidthComp ? currentFullWidthComp.element : null;\r\n    const isFullWidthContainerFocused = currentFullWidthContainer === keyboardEvent.target;\r\n    const activeEl = _getActiveDomElement(this.beans);\r\n    let isDetailGridCellFocused = false;\r\n    if (currentFullWidthContainer && activeEl) {\r\n      isDetailGridCellFocused = currentFullWidthContainer.contains(activeEl) && activeEl.classList.contains(\"ag-cell\");\r\n    }\r\n    let nextEl = null;\r\n    if (!isFullWidthContainerFocused && !isDetailGridCellFocused) {\r\n      nextEl = _findNextFocusableElement(this.beans, currentFullWidthContainer, false, keyboardEvent.shiftKey);\r\n    }\r\n    if (this.isFullWidth() && isFullWidthContainerFocused || !nextEl) {\r\n      this.beans.navigation?.onTabKeyDown(this, keyboardEvent);\r\n    }\r\n  }\r\n  getFullWidthElement() {\r\n    if (this.fullWidthGui) {\r\n      return this.fullWidthGui.element;\r\n    }\r\n    return null;\r\n  }\r\n  getRowYPosition() {\r\n    const displayedEl = this.allRowGuis.find((el) => _isVisible(el.element))?.element;\r\n    if (displayedEl) {\r\n      return displayedEl.getBoundingClientRect().top;\r\n    }\r\n    return 0;\r\n  }\r\n  onSuppressCellFocusChanged(suppressCellFocus) {\r\n    const tabIndex = this.isFullWidth() && suppressCellFocus ? void 0 : -1;\r\n    this.allRowGuis.forEach((gui) => {\r\n      _addOrRemoveAttribute(gui.element, \"tabindex\", tabIndex);\r\n    });\r\n  }\r\n  onFullWidthRowFocused(event) {\r\n    const node = this.rowNode;\r\n    const isFocused = !event ? false : this.isFullWidth() && event.rowIndex === node.rowIndex && event.rowPinned == node.rowPinned;\r\n    let element;\r\n    if (this.fullWidthGui) {\r\n      element = this.fullWidthGui.element;\r\n    } else {\r\n      const column = this.beans.colModel.getCol(event?.column);\r\n      const pinned = column?.pinned;\r\n      if (pinned) {\r\n        element = pinned === \"right\" ? this.rightGui?.element : this.leftGui?.element;\r\n      } else {\r\n        element = this.centerGui?.element;\r\n      }\r\n    }\r\n    if (!element) {\r\n      return;\r\n    }\r\n    element.classList.toggle(\"ag-full-width-focus\", isFocused);\r\n    if (isFocused && event?.forceBrowserFocus) {\r\n      element.focus({ preventScroll: true });\r\n    }\r\n  }\r\n  recreateCell(cellCtrl) {\r\n    this.centerCellCtrls = this.removeCellCtrl(this.centerCellCtrls, cellCtrl);\r\n    this.leftCellCtrls = this.removeCellCtrl(this.leftCellCtrls, cellCtrl);\r\n    this.rightCellCtrls = this.removeCellCtrl(this.rightCellCtrls, cellCtrl);\r\n    cellCtrl.destroy();\r\n    this.updateColumnLists();\r\n  }\r\n  removeCellCtrl(prev, cellCtrlToRemove) {\r\n    const res = {\r\n      list: [],\r\n      map: {}\r\n    };\r\n    prev.list.forEach((cellCtrl) => {\r\n      if (cellCtrl === cellCtrlToRemove) {\r\n        return;\r\n      }\r\n      res.list.push(cellCtrl);\r\n      res.map[cellCtrl.column.getInstanceId()] = cellCtrl;\r\n    });\r\n    return res;\r\n  }\r\n  onMouseEvent(eventName, mouseEvent) {\r\n    switch (eventName) {\r\n      case \"dblclick\":\r\n        this.onRowDblClick(mouseEvent);\r\n        break;\r\n      case \"click\":\r\n        this.onRowClick(mouseEvent);\r\n        break;\r\n      case \"touchstart\":\r\n      case \"mousedown\":\r\n        this.onRowMouseDown(mouseEvent);\r\n        break;\r\n    }\r\n  }\r\n  createRowEvent(type, domEvent) {\r\n    const { rowNode } = this;\r\n    return _addGridCommonParams(this.gos, {\r\n      type,\r\n      node: rowNode,\r\n      data: rowNode.data,\r\n      rowIndex: rowNode.rowIndex,\r\n      rowPinned: rowNode.rowPinned,\r\n      event: domEvent\r\n    });\r\n  }\r\n  createRowEventWithSource(type, domEvent) {\r\n    const event = this.createRowEvent(type, domEvent);\r\n    event.source = this;\r\n    return event;\r\n  }\r\n  onRowDblClick(mouseEvent) {\r\n    if (_isStopPropagationForAgGrid(mouseEvent)) {\r\n      return;\r\n    }\r\n    this.beans.eventSvc.dispatchEvent(this.createRowEventWithSource(\"rowDoubleClicked\", mouseEvent));\r\n  }\r\n  findFullWidthInfoForEvent(event) {\r\n    if (!event) {\r\n      return;\r\n    }\r\n    const rowGui = this.findFullWidthRowGui(event.target);\r\n    const column = this.getColumnForFullWidth(rowGui);\r\n    if (!rowGui || !column) {\r\n      return;\r\n    }\r\n    return { rowGui, column };\r\n  }\r\n  findFullWidthRowGui(target) {\r\n    return this.allRowGuis.find((c) => c.element.contains(target));\r\n  }\r\n  getColumnForFullWidth(fullWidthRowGui) {\r\n    const { visibleCols } = this.beans;\r\n    switch (fullWidthRowGui?.containerType) {\r\n      case \"center\":\r\n        return visibleCols.centerCols[0];\r\n      case \"left\":\r\n        return visibleCols.leftCols[0];\r\n      case \"right\":\r\n        return visibleCols.rightCols[0];\r\n      default:\r\n        return visibleCols.allCols[0];\r\n    }\r\n  }\r\n  onRowMouseDown(mouseEvent) {\r\n    this.lastMouseDownOnDragger = _isElementChildOfClass(mouseEvent.target, \"ag-row-drag\", 3);\r\n    if (!this.isFullWidth()) {\r\n      return;\r\n    }\r\n    const node = this.rowNode;\r\n    const { rangeSvc, focusSvc } = this.beans;\r\n    rangeSvc?.removeAllCellRanges();\r\n    const groupInfo = this.findFullWidthInfoForEvent(mouseEvent);\r\n    if (!groupInfo) {\r\n      return;\r\n    }\r\n    const { rowGui, column } = groupInfo;\r\n    const element = rowGui.element;\r\n    const target = mouseEvent.target;\r\n    let forceBrowserFocus = mouseEvent.defaultPrevented || _isBrowserSafari();\r\n    if (element && element.contains(target) && _isFocusableFormField(target)) {\r\n      forceBrowserFocus = false;\r\n    }\r\n    focusSvc.setFocusedCell({\r\n      rowIndex: node.rowIndex,\r\n      column,\r\n      rowPinned: node.rowPinned,\r\n      forceBrowserFocus\r\n    });\r\n  }\r\n  onRowClick(mouseEvent) {\r\n    const stop = _isStopPropagationForAgGrid(mouseEvent) || this.lastMouseDownOnDragger;\r\n    if (stop) {\r\n      return;\r\n    }\r\n    const { eventSvc, selectionSvc } = this.beans;\r\n    eventSvc.dispatchEvent(this.createRowEventWithSource(\"rowClicked\", mouseEvent));\r\n    selectionSvc?.handleSelectionEvent(mouseEvent, this.rowNode, \"rowClicked\");\r\n  }\r\n  setupDetailRowAutoHeight(eDetailGui) {\r\n    if (this.rowType !== \"FullWidthDetail\") {\r\n      return;\r\n    }\r\n    this.beans.masterDetailSvc?.setupDetailRowAutoHeight(this, eDetailGui);\r\n  }\r\n  createFullWidthCompDetails(eRow, pinned) {\r\n    const { gos, rowNode } = this;\r\n    const params = _addGridCommonParams(gos, {\r\n      fullWidth: true,\r\n      data: rowNode.data,\r\n      node: rowNode,\r\n      value: rowNode.key,\r\n      valueFormatted: rowNode.key,\r\n      // these need to be taken out, as part of 'afterAttached' now\r\n      eGridCell: eRow,\r\n      eParentOfValue: eRow,\r\n      pinned,\r\n      addRenderedRowListener: this.addEventListener.bind(this),\r\n      // This is not on the type of ICellRendererParams\r\n      registerRowDragger: (rowDraggerElement, dragStartPixels, value, suppressVisibilityChange) => this.addFullWidthRowDragging(rowDraggerElement, dragStartPixels, value, suppressVisibilityChange),\r\n      setTooltip: (value, shouldDisplayTooltip) => {\r\n        gos.assertModuleRegistered(\"Tooltip\", 3);\r\n        this.setupFullWidthRowTooltip(value, shouldDisplayTooltip);\r\n      }\r\n    });\r\n    const compFactory = this.beans.userCompFactory;\r\n    switch (this.rowType) {\r\n      case \"FullWidthDetail\":\r\n        return _getFullWidthDetailCellRendererDetails(compFactory, params);\r\n      case \"FullWidthGroup\": {\r\n        const { value, valueFormatted } = this.beans.valueSvc.getValueForDisplay(void 0, this.rowNode, true);\r\n        params.value = value;\r\n        params.valueFormatted = valueFormatted;\r\n        return _getFullWidthGroupCellRendererDetails(compFactory, params);\r\n      }\r\n      case \"FullWidthLoading\":\r\n        return _getFullWidthLoadingCellRendererDetails(compFactory, params);\r\n      default:\r\n        return _getFullWidthCellRendererDetails(compFactory, params);\r\n    }\r\n  }\r\n  setupFullWidthRowTooltip(value, shouldDisplayTooltip) {\r\n    if (!this.fullWidthGui) {\r\n      return;\r\n    }\r\n    this.tooltipFeature = this.beans.tooltipSvc?.setupFullWidthRowTooltip(\r\n      this.tooltipFeature,\r\n      this,\r\n      value,\r\n      shouldDisplayTooltip\r\n    );\r\n  }\r\n  addFullWidthRowDragging(rowDraggerElement, dragStartPixels, value = \"\", suppressVisibilityChange) {\r\n    const { rowDragSvc, context } = this.beans;\r\n    if (!rowDragSvc || !this.isFullWidth()) {\r\n      return;\r\n    }\r\n    const rowDragComp = rowDragSvc.createRowDragComp(\r\n      () => value,\r\n      this.rowNode,\r\n      void 0,\r\n      rowDraggerElement,\r\n      dragStartPixels,\r\n      suppressVisibilityChange\r\n    );\r\n    this.createBean(rowDragComp, context);\r\n    this.addDestroyFunc(() => {\r\n      this.destroyBean(rowDragComp, context);\r\n    });\r\n  }\r\n  onUiLevelChanged() {\r\n    const newLevel = calculateRowLevel(this.rowNode);\r\n    if (this.rowLevel != newLevel) {\r\n      const classToAdd = \"ag-row-level-\" + newLevel;\r\n      const classToRemove = \"ag-row-level-\" + this.rowLevel;\r\n      this.allRowGuis.forEach((gui) => {\r\n        gui.rowComp.toggleCss(classToAdd, true);\r\n        gui.rowComp.toggleCss(classToRemove, false);\r\n      });\r\n    }\r\n    this.rowLevel = newLevel;\r\n  }\r\n  isFirstRowOnPage() {\r\n    return this.rowNode.rowIndex === this.beans.pageBounds.getFirstRow();\r\n  }\r\n  isLastRowOnPage() {\r\n    return this.rowNode.rowIndex === this.beans.pageBounds.getLastRow();\r\n  }\r\n  refreshFirstAndLastRowStyles() {\r\n    const newFirst = this.isFirstRowOnPage();\r\n    const newLast = this.isLastRowOnPage();\r\n    if (this.firstRowOnPage !== newFirst) {\r\n      this.firstRowOnPage = newFirst;\r\n      this.allRowGuis.forEach((gui) => gui.rowComp.toggleCss(\"ag-row-first\", newFirst));\r\n    }\r\n    if (this.lastRowOnPage !== newLast) {\r\n      this.lastRowOnPage = newLast;\r\n      this.allRowGuis.forEach((gui) => gui.rowComp.toggleCss(\"ag-row-last\", newLast));\r\n    }\r\n  }\r\n  getAllCellCtrls() {\r\n    if (this.leftCellCtrls.list.length === 0 && this.rightCellCtrls.list.length === 0) {\r\n      return this.centerCellCtrls.list;\r\n    }\r\n    const res = [...this.centerCellCtrls.list, ...this.leftCellCtrls.list, ...this.rightCellCtrls.list];\r\n    return res;\r\n  }\r\n  postProcessClassesFromGridOptions() {\r\n    const cssClasses = [];\r\n    this.beans.rowStyleSvc?.processClassesFromGridOptions(cssClasses, this.rowNode);\r\n    if (!cssClasses.length) {\r\n      return;\r\n    }\r\n    cssClasses.forEach((classStr) => {\r\n      this.allRowGuis.forEach((c) => c.rowComp.toggleCss(classStr, true));\r\n    });\r\n  }\r\n  postProcessRowClassRules() {\r\n    this.beans.rowStyleSvc?.processRowClassRules(\r\n      this.rowNode,\r\n      (className) => {\r\n        this.allRowGuis.forEach((gui) => gui.rowComp.toggleCss(className, true));\r\n      },\r\n      (className) => {\r\n        this.allRowGuis.forEach((gui) => gui.rowComp.toggleCss(className, false));\r\n      }\r\n    );\r\n  }\r\n  setStylesFromGridOptions(updateStyles, gui) {\r\n    if (updateStyles) {\r\n      this.rowStyles = this.processStylesFromGridOptions();\r\n    }\r\n    this.forEachGui(gui, (gui2) => gui2.rowComp.setUserStyles(this.rowStyles));\r\n  }\r\n  getPinnedForContainer(rowContainerType) {\r\n    if (rowContainerType === \"left\" || rowContainerType === \"right\") {\r\n      return rowContainerType;\r\n    }\r\n    return null;\r\n  }\r\n  getInitialRowClasses(rowContainerType) {\r\n    const pinned = this.getPinnedForContainer(rowContainerType);\r\n    const fullWidthRow = this.isFullWidth();\r\n    const { rowNode, beans } = this;\r\n    const classes = [];\r\n    classes.push(\"ag-row\");\r\n    classes.push(this.rowFocused ? \"ag-row-focus\" : \"ag-row-no-focus\");\r\n    if (this.fadeInAnimation[rowContainerType]) {\r\n      classes.push(\"ag-opacity-zero\");\r\n    }\r\n    classes.push(rowNode.rowIndex % 2 === 0 ? \"ag-row-even\" : \"ag-row-odd\");\r\n    if (rowNode.isRowPinned()) {\r\n      classes.push(\"ag-row-pinned\");\r\n      if (beans.pinnedRowModel?.isManual()) {\r\n        classes.push(\"ag-row-pinned-manual\");\r\n      }\r\n    }\r\n    if (!rowNode.isRowPinned() && rowNode.pinnedSibling) {\r\n      classes.push(\"ag-row-pinned-source\");\r\n    }\r\n    if (rowNode.isSelected()) {\r\n      classes.push(\"ag-row-selected\");\r\n    }\r\n    if (rowNode.footer) {\r\n      classes.push(\"ag-row-footer\");\r\n    }\r\n    classes.push(\"ag-row-level-\" + this.rowLevel);\r\n    if (rowNode.stub) {\r\n      classes.push(\"ag-row-loading\");\r\n    }\r\n    if (fullWidthRow) {\r\n      classes.push(\"ag-full-width-row\");\r\n    }\r\n    beans.expansionSvc?.addExpandedCss(classes, rowNode);\r\n    if (rowNode.dragging) {\r\n      classes.push(\"ag-row-dragging\");\r\n    }\r\n    const { rowStyleSvc } = beans;\r\n    if (rowStyleSvc) {\r\n      rowStyleSvc.processClassesFromGridOptions(classes, rowNode);\r\n      rowStyleSvc.preProcessRowClassRules(classes, rowNode);\r\n    }\r\n    classes.push(this.printLayout ? \"ag-row-position-relative\" : \"ag-row-position-absolute\");\r\n    if (this.isFirstRowOnPage()) {\r\n      classes.push(\"ag-row-first\");\r\n    }\r\n    if (this.isLastRowOnPage()) {\r\n      classes.push(\"ag-row-last\");\r\n    }\r\n    if (fullWidthRow) {\r\n      if (pinned === \"left\") {\r\n        classes.push(\"ag-cell-last-left-pinned\");\r\n      }\r\n      if (pinned === \"right\") {\r\n        classes.push(\"ag-cell-first-right-pinned\");\r\n      }\r\n    }\r\n    return classes;\r\n  }\r\n  processStylesFromGridOptions() {\r\n    return this.beans.rowStyleSvc?.processStylesFromGridOptions(this.rowNode) ?? this.emptyStyle;\r\n  }\r\n  onRowSelected(gui) {\r\n    this.beans.selectionSvc?.onRowCtrlSelected(\r\n      this,\r\n      (gui2) => {\r\n        if (gui2 === this.centerGui || gui2 === this.fullWidthGui) {\r\n          this.announceDescription();\r\n        }\r\n      },\r\n      gui\r\n    );\r\n  }\r\n  announceDescription() {\r\n    this.beans.selectionSvc?.announceAriaRowSelection(this.rowNode);\r\n  }\r\n  addHoverFunctionality(eGui) {\r\n    if (!this.active) {\r\n      return;\r\n    }\r\n    const { element, compBean } = eGui;\r\n    const { rowNode, beans, gos } = this;\r\n    compBean.addManagedListeners(element, {\r\n      // We use pointer events here instead of mouse events, as pointer events\r\n      // are more reliable for hover detection, especially with touch devices\r\n      // or hybrid touch + mouse devices.\r\n      pointerenter: (e) => {\r\n        if (e.pointerType === \"mouse\") {\r\n          rowNode.dispatchRowEvent(\"mouseEnter\");\r\n        }\r\n      },\r\n      pointerleave: (e) => {\r\n        if (e.pointerType === \"mouse\") {\r\n          rowNode.dispatchRowEvent(\"mouseLeave\");\r\n        }\r\n      }\r\n    });\r\n    compBean.addManagedListeners(rowNode, {\r\n      mouseEnter: () => {\r\n        if (!beans.dragSvc?.dragging && !gos.get(\"suppressRowHoverHighlight\")) {\r\n          element.classList.add(\"ag-row-hover\");\r\n          rowNode.setHovered(true);\r\n        }\r\n      },\r\n      mouseLeave: () => {\r\n        this.resetHoveredStatus(element);\r\n      }\r\n    });\r\n  }\r\n  resetHoveredStatus(el) {\r\n    const elements = el ? [el] : this.allRowGuis.map((gui) => gui.element);\r\n    for (const element of elements) {\r\n      element.classList.remove(\"ag-row-hover\");\r\n    }\r\n    this.rowNode.setHovered(false);\r\n  }\r\n  // for animation, we don't want to animate entry or exit to a very far away pixel,\r\n  // otherwise the row would move so fast, it would appear to disappear. so this method\r\n  // moves the row closer to the viewport if it is far away, so the row slide in / out\r\n  // at a speed the user can see.\r\n  roundRowTopToBounds(rowTop) {\r\n    const range = this.beans.ctrlsSvc.getScrollFeature().getApproximateVScollPosition();\r\n    const minPixel = this.applyPaginationOffset(range.top, true) - 100;\r\n    const maxPixel = this.applyPaginationOffset(range.bottom, true) + 100;\r\n    return Math.min(Math.max(minPixel, rowTop), maxPixel);\r\n  }\r\n  forEachGui(gui, callback) {\r\n    if (gui) {\r\n      callback(gui);\r\n    } else {\r\n      this.allRowGuis.forEach(callback);\r\n    }\r\n  }\r\n  isRowRendered() {\r\n    return this.allRowGuis.length > 0;\r\n  }\r\n  onRowHeightChanged(gui) {\r\n    if (this.rowNode.rowHeight == null) {\r\n      return;\r\n    }\r\n    const rowHeight = this.rowNode.rowHeight;\r\n    const defaultRowHeight = this.beans.environment.getDefaultRowHeight();\r\n    const isHeightFromFunc = _isGetRowHeightFunction(this.gos);\r\n    const heightFromFunc = isHeightFromFunc ? _getRowHeightForNode(this.beans, this.rowNode).height : void 0;\r\n    const lineHeight = heightFromFunc ? `${Math.min(defaultRowHeight, heightFromFunc) - 2}px` : void 0;\r\n    this.forEachGui(gui, (gui2) => {\r\n      gui2.element.style.height = `${rowHeight}px`;\r\n      if (lineHeight) {\r\n        gui2.element.style.setProperty(\"--ag-line-height\", lineHeight);\r\n      }\r\n    });\r\n  }\r\n  // note - this is NOT called by context, as we don't wire / unwire the CellComp for performance reasons.\r\n  destroyFirstPass(suppressAnimation = false) {\r\n    this.active = false;\r\n    const { rowNode } = this;\r\n    if (!suppressAnimation && _isAnimateRows(this.gos) && !rowNode.sticky) {\r\n      const rowStillVisibleJustNotInViewport = rowNode.rowTop != null;\r\n      if (rowStillVisibleJustNotInViewport) {\r\n        const rowTop = this.roundRowTopToBounds(rowNode.rowTop);\r\n        this.setRowTop(rowTop);\r\n      } else {\r\n        this.allRowGuis.forEach((gui) => gui.rowComp.toggleCss(\"ag-opacity-zero\", true));\r\n      }\r\n    }\r\n    if (this.fullWidthGui?.element.contains(_getActiveDomElement(this.beans))) {\r\n      this.beans.focusSvc.attemptToRecoverFocus();\r\n    }\r\n    rowNode.setHovered(false);\r\n    const event = this.createRowEvent(\"virtualRowRemoved\");\r\n    this.dispatchLocalEvent(event);\r\n    this.beans.eventSvc.dispatchEvent(event);\r\n    super.destroy();\r\n  }\r\n  destroySecondPass() {\r\n    this.allRowGuis.length = 0;\r\n    const destroyCellCtrls = (ctrls) => {\r\n      ctrls.list.forEach((c) => c.destroy());\r\n      return { list: [], map: {} };\r\n    };\r\n    this.centerCellCtrls = destroyCellCtrls(this.centerCellCtrls);\r\n    this.leftCellCtrls = destroyCellCtrls(this.leftCellCtrls);\r\n    this.rightCellCtrls = destroyCellCtrls(this.rightCellCtrls);\r\n  }\r\n  setFocusedClasses(gui) {\r\n    this.forEachGui(gui, (gui2) => {\r\n      gui2.rowComp.toggleCss(\"ag-row-focus\", this.rowFocused);\r\n      gui2.rowComp.toggleCss(\"ag-row-no-focus\", !this.rowFocused);\r\n    });\r\n  }\r\n  onCellFocusChanged() {\r\n    const { focusSvc } = this.beans;\r\n    const rowFocused = focusSvc.isRowFocused(this.rowNode.rowIndex, this.rowNode.rowPinned);\r\n    if (rowFocused !== this.rowFocused) {\r\n      this.rowFocused = rowFocused;\r\n      this.setFocusedClasses();\r\n    }\r\n  }\r\n  onPaginationChanged() {\r\n    const currentPage = this.beans.pagination?.getCurrentPage() ?? 0;\r\n    if (this.paginationPage !== currentPage) {\r\n      this.paginationPage = currentPage;\r\n      this.onTopChanged();\r\n    }\r\n    this.refreshFirstAndLastRowStyles();\r\n  }\r\n  onTopChanged() {\r\n    this.setRowTop(this.rowNode.rowTop);\r\n  }\r\n  onPaginationPixelOffsetChanged() {\r\n    this.onTopChanged();\r\n  }\r\n  // applies pagination offset, eg if on second page, and page height is 500px, then removes\r\n  // 500px from the top position, so a row with rowTop 600px is displayed at location 100px.\r\n  // reverse will take the offset away rather than add.\r\n  applyPaginationOffset(topPx, reverse = false) {\r\n    if (this.rowNode.isRowPinned() || this.rowNode.sticky) {\r\n      return topPx;\r\n    }\r\n    const pixelOffset = this.beans.pageBounds.getPixelOffset();\r\n    const multiplier = reverse ? 1 : -1;\r\n    return topPx + pixelOffset * multiplier;\r\n  }\r\n  setRowTop(pixels) {\r\n    if (this.printLayout) {\r\n      return;\r\n    }\r\n    if (_exists(pixels)) {\r\n      const afterPaginationPixels = this.applyPaginationOffset(pixels);\r\n      const skipScaling = this.rowNode.isRowPinned() || this.rowNode.sticky;\r\n      const afterScalingPixels = skipScaling ? afterPaginationPixels : this.beans.rowContainerHeight.getRealPixelPosition(afterPaginationPixels);\r\n      const topPx = `${afterScalingPixels}px`;\r\n      this.setRowTopStyle(topPx);\r\n    }\r\n  }\r\n  // the top needs to be set into the DOM element when the element is created, not updated afterwards.\r\n  // otherwise the transition would not work, as it would be transitioning from zero (the unset value).\r\n  // for example, suppose a row that is outside the viewport, then user does a filter to remove other rows\r\n  // and this row now appears in the viewport, and the row moves up (ie it was under the viewport and not rendered,\r\n  // but now is in the viewport) then a new RowComp is created, however it should have it's position initialised\r\n  // to below the viewport, so the row will appear to animate up. if we didn't set the initial position at creation\r\n  // time, the row would animate down (ie from position zero).\r\n  getInitialRowTop(rowContainerType) {\r\n    return this.suppressRowTransform ? this.getInitialRowTopShared(rowContainerType) : void 0;\r\n  }\r\n  getInitialTransform(rowContainerType) {\r\n    return this.suppressRowTransform ? void 0 : `translateY(${this.getInitialRowTopShared(rowContainerType)})`;\r\n  }\r\n  getInitialRowTopShared(rowContainerType) {\r\n    if (this.printLayout) {\r\n      return \"\";\r\n    }\r\n    const rowNode = this.rowNode;\r\n    let rowTop;\r\n    if (rowNode.sticky) {\r\n      rowTop = rowNode.stickyRowTop;\r\n    } else {\r\n      const pixels = this.slideInAnimation[rowContainerType] ? this.roundRowTopToBounds(rowNode.oldRowTop) : rowNode.rowTop;\r\n      const afterPaginationPixels = this.applyPaginationOffset(pixels);\r\n      rowTop = rowNode.isRowPinned() ? afterPaginationPixels : this.beans.rowContainerHeight.getRealPixelPosition(afterPaginationPixels);\r\n    }\r\n    return rowTop + \"px\";\r\n  }\r\n  setRowTopStyle(topPx) {\r\n    this.allRowGuis.forEach(\r\n      (gui) => this.suppressRowTransform ? gui.rowComp.setTop(topPx) : gui.rowComp.setTransform(`translateY(${topPx})`)\r\n    );\r\n  }\r\n  getCellCtrl(column, skipColSpanSearch = false) {\r\n    let res = null;\r\n    this.getAllCellCtrls().forEach((cellCtrl) => {\r\n      if (cellCtrl.column == column) {\r\n        res = cellCtrl;\r\n      }\r\n    });\r\n    if (res != null || skipColSpanSearch) {\r\n      return res;\r\n    }\r\n    this.getAllCellCtrls().forEach((cellCtrl) => {\r\n      if (cellCtrl?.getColSpanningList().indexOf(column) >= 0) {\r\n        res = cellCtrl;\r\n      }\r\n    });\r\n    return res;\r\n  }\r\n  onRowIndexChanged() {\r\n    if (this.rowNode.rowIndex != null) {\r\n      this.onCellFocusChanged();\r\n      this.updateRowIndexes();\r\n      this.postProcessCss();\r\n    }\r\n  }\r\n  updateRowIndexes(gui) {\r\n    const rowIndexStr = this.rowNode.getRowIndexString();\r\n    if (rowIndexStr === null) {\r\n      return;\r\n    }\r\n    const headerRowCount = (this.beans.ctrlsSvc.getHeaderRowContainerCtrl()?.getRowCount() ?? 0) + (this.beans.filterManager?.getHeaderRowCount() ?? 0);\r\n    const rowIsEven = this.rowNode.rowIndex % 2 === 0;\r\n    const ariaRowIndex = headerRowCount + this.rowNode.rowIndex + 1;\r\n    this.forEachGui(gui, (c) => {\r\n      c.rowComp.setRowIndex(rowIndexStr);\r\n      c.rowComp.toggleCss(\"ag-row-even\", rowIsEven);\r\n      c.rowComp.toggleCss(\"ag-row-odd\", !rowIsEven);\r\n      _setAriaRowIndex(c.element, ariaRowIndex);\r\n    });\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/utils/keyboard.ts\r\nfunction _isEventFromPrintableCharacter(event) {\r\n  if (event.altKey || event.ctrlKey || event.metaKey) {\r\n    return false;\r\n  }\r\n  const printableCharacter = event.key?.length === 1;\r\n  return printableCharacter;\r\n}\r\nfunction _isUserSuppressingKeyboardEvent(gos, keyboardEvent, rowNode, column, editing) {\r\n  const colDefFunc = column ? column.getColDef().suppressKeyboardEvent : void 0;\r\n  if (!colDefFunc) {\r\n    return false;\r\n  }\r\n  const params = _addGridCommonParams(gos, {\r\n    event: keyboardEvent,\r\n    editing,\r\n    column,\r\n    node: rowNode,\r\n    data: rowNode.data,\r\n    colDef: column.getColDef()\r\n  });\r\n  if (colDefFunc) {\r\n    const colDefFuncResult = colDefFunc(params);\r\n    if (colDefFuncResult) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n// packages/ag-grid-community/src/utils/selection.ts\r\nfunction _selectAllCells(beans) {\r\n  const { pinnedRowModel, rowModel } = beans;\r\n  const [isEmptyPinnedTop, isEmptyPinnedBottom] = [\r\n    pinnedRowModel?.isEmpty(\"top\") ?? true,\r\n    pinnedRowModel?.isEmpty(\"bottom\") ?? true\r\n  ];\r\n  const floatingStart = isEmptyPinnedTop ? null : \"top\";\r\n  let floatingEnd;\r\n  let rowEnd;\r\n  if (isEmptyPinnedBottom) {\r\n    floatingEnd = null;\r\n    rowEnd = rowModel.getRowCount() - 1;\r\n  } else {\r\n    floatingEnd = \"bottom\";\r\n    rowEnd = pinnedRowModel?.getPinnedBottomRowCount() ?? 0 - 1;\r\n  }\r\n  const { visibleCols, rangeSvc } = beans;\r\n  const allDisplayedColumns = visibleCols.allCols;\r\n  if (!rangeSvc || !allDisplayedColumns?.length) {\r\n    return;\r\n  }\r\n  rangeSvc.setCellRange({\r\n    rowStartIndex: 0,\r\n    rowStartPinned: floatingStart,\r\n    rowEndIndex: rowEnd,\r\n    rowEndPinned: floatingEnd\r\n  });\r\n}\r\n\r\n// packages/ag-grid-community/src/gridBodyComp/rowContainer/rowContainerEventsFeature.ts\r\nvar A_KEYCODE = 65;\r\nvar C_KEYCODE = 67;\r\nvar V_KEYCODE = 86;\r\nvar D_KEYCODE = 68;\r\nvar Z_KEYCODE = 90;\r\nvar Y_KEYCODE = 89;\r\nfunction _normaliseQwertyAzerty(keyboardEvent) {\r\n  const { keyCode } = keyboardEvent;\r\n  let code;\r\n  switch (keyCode) {\r\n    case A_KEYCODE:\r\n      code = KeyCode.A;\r\n      break;\r\n    case C_KEYCODE:\r\n      code = KeyCode.C;\r\n      break;\r\n    case V_KEYCODE:\r\n      code = KeyCode.V;\r\n      break;\r\n    case D_KEYCODE:\r\n      code = KeyCode.D;\r\n      break;\r\n    case Z_KEYCODE:\r\n      code = KeyCode.Z;\r\n      break;\r\n    case Y_KEYCODE:\r\n      code = KeyCode.Y;\r\n      break;\r\n    default:\r\n      code = keyboardEvent.code;\r\n  }\r\n  return code;\r\n}\r\nvar RowContainerEventsFeature = class extends BeanStub {\r\n  constructor(element) {\r\n    super();\r\n    this.element = element;\r\n  }\r\n  postConstruct() {\r\n    this.addKeyboardListeners();\r\n    this.addMouseListeners();\r\n    this.beans.touchSvc?.mockRowContextMenu(this);\r\n    this.editSvc = this.beans.editSvc;\r\n  }\r\n  addKeyboardListeners() {\r\n    const eventName = \"keydown\";\r\n    const listener = this.processKeyboardEvent.bind(this, eventName);\r\n    this.addManagedElementListeners(this.element, { [eventName]: listener });\r\n  }\r\n  addMouseListeners() {\r\n    const mouseDownEvent = _isEventSupported(\"touchstart\") ? \"touchstart\" : \"mousedown\";\r\n    const eventNames = [\"dblclick\", \"contextmenu\", \"mouseover\", \"mouseout\", \"click\", mouseDownEvent];\r\n    eventNames.forEach((eventName) => {\r\n      const listener = this.processMouseEvent.bind(this, eventName);\r\n      this.addManagedElementListeners(this.element, { [eventName]: listener });\r\n    });\r\n  }\r\n  processMouseEvent(eventName, mouseEvent) {\r\n    if (!_isEventFromThisGrid(this.gos, mouseEvent) || _isStopPropagationForAgGrid(mouseEvent)) {\r\n      return;\r\n    }\r\n    const { cellCtrl, rowCtrl } = this.getControlsForEventTarget(mouseEvent.target);\r\n    if (eventName === \"contextmenu\") {\r\n      if (cellCtrl?.column) {\r\n        cellCtrl.dispatchCellContextMenuEvent(mouseEvent);\r\n      }\r\n      this.beans.contextMenuSvc?.handleContextMenuMouseEvent(mouseEvent, void 0, rowCtrl, cellCtrl);\r\n    } else {\r\n      if (cellCtrl) {\r\n        cellCtrl.onMouseEvent(eventName, mouseEvent);\r\n      }\r\n      if (rowCtrl) {\r\n        rowCtrl.onMouseEvent(eventName, mouseEvent);\r\n      }\r\n    }\r\n  }\r\n  getControlsForEventTarget(target) {\r\n    const { gos } = this;\r\n    return {\r\n      cellCtrl: _getCellCtrlForEventTarget(gos, target),\r\n      rowCtrl: _getCtrlForEventTarget(gos, target, DOM_DATA_KEY_ROW_CTRL)\r\n    };\r\n  }\r\n  processKeyboardEvent(eventName, keyboardEvent) {\r\n    const { cellCtrl, rowCtrl } = this.getControlsForEventTarget(keyboardEvent.target);\r\n    if (keyboardEvent.defaultPrevented) {\r\n      return;\r\n    }\r\n    if (cellCtrl) {\r\n      this.processCellKeyboardEvent(cellCtrl, eventName, keyboardEvent);\r\n    } else if (rowCtrl?.isFullWidth()) {\r\n      this.processFullWidthRowKeyboardEvent(rowCtrl, eventName, keyboardEvent);\r\n    }\r\n  }\r\n  processCellKeyboardEvent(cellCtrl, eventName, keyboardEvent) {\r\n    const editing = this.editSvc?.isEditing(cellCtrl, { withOpenEditor: true }) ?? false;\r\n    const gridProcessingAllowed = !_isUserSuppressingKeyboardEvent(\r\n      this.gos,\r\n      keyboardEvent,\r\n      cellCtrl.rowNode,\r\n      cellCtrl.column,\r\n      editing\r\n    );\r\n    if (gridProcessingAllowed) {\r\n      if (eventName === \"keydown\") {\r\n        const wasScrollKey = !editing && this.beans.navigation?.handlePageScrollingKey(keyboardEvent);\r\n        if (!wasScrollKey) {\r\n          cellCtrl.onKeyDown(keyboardEvent);\r\n        }\r\n        this.doGridOperations(keyboardEvent, editing);\r\n        if (_isEventFromPrintableCharacter(keyboardEvent)) {\r\n          cellCtrl.processCharacter(keyboardEvent);\r\n        }\r\n      }\r\n    }\r\n    if (eventName === \"keydown\") {\r\n      this.eventSvc.dispatchEvent(cellCtrl.createEvent(keyboardEvent, \"cellKeyDown\"));\r\n    }\r\n  }\r\n  processFullWidthRowKeyboardEvent(rowCtrl, eventName, keyboardEvent) {\r\n    const { rowNode } = rowCtrl;\r\n    const { focusSvc, navigation } = this.beans;\r\n    const focusedCell = focusSvc.getFocusedCell();\r\n    const column = focusedCell?.column;\r\n    const gridProcessingAllowed = !_isUserSuppressingKeyboardEvent(this.gos, keyboardEvent, rowNode, column, false);\r\n    if (gridProcessingAllowed) {\r\n      const key = keyboardEvent.key;\r\n      if (eventName === \"keydown\") {\r\n        switch (key) {\r\n          case KeyCode.PAGE_HOME:\r\n          case KeyCode.PAGE_END:\r\n          case KeyCode.PAGE_UP:\r\n          case KeyCode.PAGE_DOWN:\r\n            navigation?.handlePageScrollingKey(keyboardEvent, true);\r\n            break;\r\n          case KeyCode.LEFT:\r\n          case KeyCode.RIGHT:\r\n            if (!this.gos.get(\"embedFullWidthRows\")) {\r\n              break;\r\n            }\r\n          case KeyCode.UP:\r\n          case KeyCode.DOWN:\r\n            rowCtrl.onKeyboardNavigate(keyboardEvent);\r\n            break;\r\n          case KeyCode.TAB:\r\n            rowCtrl.onTabKeyDown(keyboardEvent);\r\n            break;\r\n          default:\r\n        }\r\n      }\r\n    }\r\n    if (eventName === \"keydown\") {\r\n      this.eventSvc.dispatchEvent(rowCtrl.createRowEvent(\"cellKeyDown\", keyboardEvent));\r\n    }\r\n  }\r\n  doGridOperations(keyboardEvent, editing) {\r\n    if (!keyboardEvent.ctrlKey && !keyboardEvent.metaKey) {\r\n      return;\r\n    }\r\n    if (editing) {\r\n      return;\r\n    }\r\n    if (!_isEventFromThisGrid(this.gos, keyboardEvent)) {\r\n      return;\r\n    }\r\n    const keyCode = _normaliseQwertyAzerty(keyboardEvent);\r\n    const { clipboardSvc, undoRedo } = this.beans;\r\n    if (keyCode === KeyCode.A) {\r\n      return this.onCtrlAndA(keyboardEvent);\r\n    }\r\n    if (keyCode === KeyCode.C) {\r\n      return this.onCtrlAndC(clipboardSvc, keyboardEvent);\r\n    }\r\n    if (keyCode === KeyCode.D) {\r\n      return this.onCtrlAndD(clipboardSvc, keyboardEvent);\r\n    }\r\n    if (keyCode === KeyCode.V) {\r\n      return this.onCtrlAndV(clipboardSvc, keyboardEvent);\r\n    }\r\n    if (keyCode === KeyCode.X) {\r\n      return this.onCtrlAndX(clipboardSvc, keyboardEvent);\r\n    }\r\n    if (keyCode === KeyCode.Y) {\r\n      return this.onCtrlAndY(undoRedo);\r\n    }\r\n    if (keyCode === KeyCode.Z) {\r\n      return this.onCtrlAndZ(undoRedo, keyboardEvent);\r\n    }\r\n  }\r\n  onCtrlAndA(event) {\r\n    const {\r\n      beans: { rowModel, rangeSvc, selectionSvc },\r\n      gos\r\n    } = this;\r\n    if (rangeSvc && _isCellSelectionEnabled(gos) && rowModel.isRowsToRender()) {\r\n      _selectAllCells(this.beans);\r\n    } else if (selectionSvc) {\r\n      selectionSvc?.selectAllRowNodes({ source: \"keyboardSelectAll\", selectAll: _getSelectAll(gos) });\r\n    }\r\n    event.preventDefault();\r\n  }\r\n  onCtrlAndC(clipboardSvc, event) {\r\n    if (!clipboardSvc || this.gos.get(\"enableCellTextSelection\")) {\r\n      return;\r\n    }\r\n    const { cellCtrl } = this.getControlsForEventTarget(event.target);\r\n    if (this.editSvc?.isEditing(cellCtrl, { withOpenEditor: true })) {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    clipboardSvc.copyToClipboard();\r\n  }\r\n  onCtrlAndX(clipboardSvc, event) {\r\n    if (!clipboardSvc || this.gos.get(\"enableCellTextSelection\") || this.gos.get(\"suppressCutToClipboard\")) {\r\n      return;\r\n    }\r\n    const { cellCtrl } = this.getControlsForEventTarget(event.target);\r\n    if (this.editSvc?.isEditing(cellCtrl, { withOpenEditor: true })) {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    clipboardSvc.cutToClipboard(void 0, \"ui\");\r\n  }\r\n  onCtrlAndV(clipboardSvc, event) {\r\n    const { cellCtrl } = this.getControlsForEventTarget(event.target);\r\n    if (this.editSvc?.isEditing(cellCtrl, { withOpenEditor: true })) {\r\n      return;\r\n    }\r\n    if (clipboardSvc && !this.gos.get(\"suppressClipboardPaste\")) {\r\n      clipboardSvc.pasteFromClipboard();\r\n    }\r\n  }\r\n  onCtrlAndD(clipboardSvc, event) {\r\n    if (clipboardSvc && !this.gos.get(\"suppressClipboardPaste\")) {\r\n      clipboardSvc.copyRangeDown();\r\n    }\r\n    event.preventDefault();\r\n  }\r\n  onCtrlAndZ(undoRedo, event) {\r\n    if (!this.gos.get(\"undoRedoCellEditing\") || !undoRedo) {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    if (event.shiftKey) {\r\n      undoRedo.redo(\"ui\");\r\n    } else {\r\n      undoRedo.undo(\"ui\");\r\n    }\r\n  }\r\n  onCtrlAndY(undoRedo) {\r\n    undoRedo?.redo(\"ui\");\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/gridBodyComp/rowContainer/setHeightFeature.ts\r\nvar SetHeightFeature = class extends BeanStub {\r\n  constructor(eContainer, eViewport) {\r\n    super();\r\n    this.eContainer = eContainer;\r\n    this.eViewport = eViewport;\r\n  }\r\n  postConstruct() {\r\n    this.addManagedEventListeners({\r\n      rowContainerHeightChanged: this.onHeightChanged.bind(this, this.beans.rowContainerHeight)\r\n    });\r\n  }\r\n  onHeightChanged(maxDivHeightScaler) {\r\n    const height = maxDivHeightScaler.uiContainerHeight;\r\n    const heightString = height != null ? `${height}px` : ``;\r\n    this.eContainer.style.height = heightString;\r\n    if (this.eViewport) {\r\n      this.eViewport.style.height = heightString;\r\n    }\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/gridBodyComp/rowContainer/rowContainerCtrl.ts\r\nvar getTopRowCtrls = (r) => r.topRowCtrls;\r\nvar getStickyTopRowCtrls = (r) => r.getStickyTopRowCtrls();\r\nvar getStickyBottomRowCtrls = (r) => r.getStickyBottomRowCtrls();\r\nvar getBottomRowCtrls = (r) => r.bottomRowCtrls;\r\nvar getCentreRowCtrls = (r) => r.allRowCtrls;\r\nvar getSpannedTopRowCtrls = (r) => r.getCtrls(\"top\");\r\nvar getSpannedCenterRowCtrls = (r) => r.getCtrls(\"center\");\r\nvar getSpannedBottomRowCtrls = (r) => r.getCtrls(\"bottom\");\r\nvar ContainerCssClasses = {\r\n  center: {\r\n    type: \"center\",\r\n    name: \"center-cols\",\r\n    getRowCtrls: getCentreRowCtrls,\r\n    getSpannedRowCtrls: getSpannedCenterRowCtrls\r\n  },\r\n  left: {\r\n    type: \"left\",\r\n    name: \"pinned-left-cols\",\r\n    pinnedType: \"left\",\r\n    getRowCtrls: getCentreRowCtrls,\r\n    getSpannedRowCtrls: getSpannedCenterRowCtrls\r\n  },\r\n  right: {\r\n    type: \"right\",\r\n    name: \"pinned-right-cols\",\r\n    pinnedType: \"right\",\r\n    getRowCtrls: getCentreRowCtrls,\r\n    getSpannedRowCtrls: getSpannedCenterRowCtrls\r\n  },\r\n  fullWidth: {\r\n    type: \"fullWidth\",\r\n    name: \"full-width\",\r\n    fullWidth: true,\r\n    getRowCtrls: getCentreRowCtrls\r\n  },\r\n  topCenter: {\r\n    type: \"center\",\r\n    name: \"floating-top\",\r\n    getRowCtrls: getTopRowCtrls,\r\n    getSpannedRowCtrls: getSpannedTopRowCtrls\r\n  },\r\n  topLeft: {\r\n    type: \"left\",\r\n    name: \"pinned-left-floating\",\r\n    container: \"ag-pinned-left-floating-top\",\r\n    pinnedType: \"left\",\r\n    getRowCtrls: getTopRowCtrls,\r\n    getSpannedRowCtrls: getSpannedTopRowCtrls\r\n  },\r\n  topRight: {\r\n    type: \"right\",\r\n    name: \"pinned-right-floating\",\r\n    container: \"ag-pinned-right-floating-top\",\r\n    pinnedType: \"right\",\r\n    getRowCtrls: getTopRowCtrls,\r\n    getSpannedRowCtrls: getSpannedTopRowCtrls\r\n  },\r\n  topFullWidth: {\r\n    type: \"fullWidth\",\r\n    name: \"floating-top-full-width\",\r\n    fullWidth: true,\r\n    getRowCtrls: getTopRowCtrls\r\n  },\r\n  stickyTopCenter: {\r\n    type: \"center\",\r\n    name: \"sticky-top\",\r\n    getRowCtrls: getStickyTopRowCtrls\r\n  },\r\n  stickyTopLeft: {\r\n    type: \"left\",\r\n    name: \"pinned-left-sticky-top\",\r\n    container: \"ag-pinned-left-sticky-top\",\r\n    pinnedType: \"left\",\r\n    getRowCtrls: getStickyTopRowCtrls\r\n  },\r\n  stickyTopRight: {\r\n    type: \"right\",\r\n    name: \"pinned-right-sticky-top\",\r\n    container: \"ag-pinned-right-sticky-top\",\r\n    pinnedType: \"right\",\r\n    getRowCtrls: getStickyTopRowCtrls\r\n  },\r\n  stickyTopFullWidth: {\r\n    type: \"fullWidth\",\r\n    name: \"sticky-top-full-width\",\r\n    fullWidth: true,\r\n    getRowCtrls: getStickyTopRowCtrls\r\n  },\r\n  stickyBottomCenter: {\r\n    type: \"center\",\r\n    name: \"sticky-bottom\",\r\n    getRowCtrls: getStickyBottomRowCtrls\r\n  },\r\n  stickyBottomLeft: {\r\n    type: \"left\",\r\n    name: \"pinned-left-sticky-bottom\",\r\n    container: \"ag-pinned-left-sticky-bottom\",\r\n    pinnedType: \"left\",\r\n    getRowCtrls: getStickyBottomRowCtrls\r\n  },\r\n  stickyBottomRight: {\r\n    type: \"right\",\r\n    name: \"pinned-right-sticky-bottom\",\r\n    container: \"ag-pinned-right-sticky-bottom\",\r\n    pinnedType: \"right\",\r\n    getRowCtrls: getStickyBottomRowCtrls\r\n  },\r\n  stickyBottomFullWidth: {\r\n    type: \"fullWidth\",\r\n    name: \"sticky-bottom-full-width\",\r\n    fullWidth: true,\r\n    getRowCtrls: getStickyBottomRowCtrls\r\n  },\r\n  bottomCenter: {\r\n    type: \"center\",\r\n    name: \"floating-bottom\",\r\n    getRowCtrls: getBottomRowCtrls,\r\n    getSpannedRowCtrls: getSpannedBottomRowCtrls\r\n  },\r\n  bottomLeft: {\r\n    type: \"left\",\r\n    name: \"pinned-left-floating-bottom\",\r\n    container: \"ag-pinned-left-floating-bottom\",\r\n    pinnedType: \"left\",\r\n    getRowCtrls: getBottomRowCtrls,\r\n    getSpannedRowCtrls: getSpannedBottomRowCtrls\r\n  },\r\n  bottomRight: {\r\n    type: \"right\",\r\n    name: \"pinned-right-floating-bottom\",\r\n    container: \"ag-pinned-right-floating-bottom\",\r\n    pinnedType: \"right\",\r\n    getRowCtrls: getBottomRowCtrls,\r\n    getSpannedRowCtrls: getSpannedBottomRowCtrls\r\n  },\r\n  bottomFullWidth: {\r\n    type: \"fullWidth\",\r\n    name: \"floating-bottom-full-width\",\r\n    fullWidth: true,\r\n    getRowCtrls: getBottomRowCtrls\r\n  }\r\n};\r\nfunction _getRowViewportClass(name) {\r\n  const options = _getRowContainerOptions(name);\r\n  return `ag-${options.name}-viewport`;\r\n}\r\nfunction _getRowContainerClass(name) {\r\n  const options = _getRowContainerOptions(name);\r\n  return options.container ?? `ag-${options.name}-container`;\r\n}\r\nfunction _getRowSpanContainerClass(name) {\r\n  const options = _getRowContainerOptions(name);\r\n  return `ag-${options.name}-spanned-cells-container`;\r\n}\r\nfunction _getRowContainerOptions(name) {\r\n  return ContainerCssClasses[name];\r\n}\r\nvar allTopNoFW = [\"topCenter\", \"topLeft\", \"topRight\"];\r\nvar allBottomNoFW = [\"bottomCenter\", \"bottomLeft\", \"bottomRight\"];\r\nvar allMiddleNoFW = [\"center\", \"left\", \"right\"];\r\nvar allMiddle = [\"center\", \"left\", \"right\", \"fullWidth\"];\r\nvar allCenter = [\"stickyTopCenter\", \"stickyBottomCenter\", \"center\", \"topCenter\", \"bottomCenter\"];\r\nvar allLeft = [\"left\", \"bottomLeft\", \"topLeft\", \"stickyTopLeft\", \"stickyBottomLeft\"];\r\nvar allRight = [\"right\", \"bottomRight\", \"topRight\", \"stickyTopRight\", \"stickyBottomRight\"];\r\nvar allStickyTopNoFW = [\"stickyTopCenter\", \"stickyTopLeft\", \"stickyTopRight\"];\r\nvar allStickyBottomNoFW = [\"stickyBottomCenter\", \"stickyBottomLeft\", \"stickyBottomRight\"];\r\nvar allStickyContainers = [\r\n  ...allStickyTopNoFW,\r\n  \"stickyTopFullWidth\",\r\n  ...allStickyBottomNoFW,\r\n  \"stickyBottomFullWidth\"\r\n];\r\nvar allNoFW = [\r\n  ...allTopNoFW,\r\n  ...allBottomNoFW,\r\n  ...allMiddleNoFW,\r\n  ...allStickyTopNoFW,\r\n  ...allStickyBottomNoFW\r\n];\r\nvar RowContainerCtrl = class extends BeanStub {\r\n  constructor(name) {\r\n    super();\r\n    this.name = name;\r\n    this.visible = true;\r\n    // Maintaining a constant reference enables optimization in React.\r\n    this.EMPTY_CTRLS = [];\r\n    this.options = _getRowContainerOptions(name);\r\n  }\r\n  postConstruct() {\r\n    this.enableRtl = this.gos.get(\"enableRtl\");\r\n    this.forContainers([\"center\"], () => {\r\n      this.viewportSizeFeature = this.createManagedBean(new ViewportSizeFeature(this));\r\n      this.addManagedEventListeners({\r\n        stickyTopOffsetChanged: this.onStickyTopOffsetChanged.bind(this)\r\n      });\r\n    });\r\n  }\r\n  onStickyTopOffsetChanged(event) {\r\n    this.comp.setOffsetTop(`${event.offset}px`);\r\n  }\r\n  registerWithCtrlsService() {\r\n    if (this.options.fullWidth)\r\n      return;\r\n    this.beans.ctrlsSvc.register(this.name, this);\r\n  }\r\n  forContainers(names, callback) {\r\n    if (names.indexOf(this.name) >= 0) {\r\n      callback();\r\n    }\r\n  }\r\n  setComp(view, eContainer, eSpannedContainer, eViewport) {\r\n    this.comp = view;\r\n    this.eContainer = eContainer;\r\n    this.eSpannedContainer = eSpannedContainer;\r\n    this.eViewport = eViewport;\r\n    this.createManagedBean(new RowContainerEventsFeature(this.eViewport ?? this.eContainer));\r\n    this.addPreventScrollWhileDragging();\r\n    this.listenOnDomOrder();\r\n    const { pinnedCols, rangeSvc } = this.beans;\r\n    const pinnedWidthChanged = () => this.onPinnedWidthChanged();\r\n    this.forContainers(allLeft, () => {\r\n      this.pinnedWidthFeature = this.createOptionalManagedBean(\r\n        pinnedCols?.createPinnedWidthFeature(true, this.eContainer, this.eSpannedContainer)\r\n      );\r\n      this.addManagedEventListeners({ leftPinnedWidthChanged: pinnedWidthChanged });\r\n    });\r\n    this.forContainers(allRight, () => {\r\n      this.pinnedWidthFeature = this.createOptionalManagedBean(\r\n        pinnedCols?.createPinnedWidthFeature(false, this.eContainer, this.eSpannedContainer)\r\n      );\r\n      this.addManagedEventListeners({ rightPinnedWidthChanged: pinnedWidthChanged });\r\n    });\r\n    this.forContainers(\r\n      allMiddle,\r\n      () => this.createManagedBean(\r\n        new SetHeightFeature(this.eContainer, this.name === \"center\" ? eViewport : void 0)\r\n      )\r\n    );\r\n    if (rangeSvc) {\r\n      this.forContainers(\r\n        allNoFW,\r\n        () => this.createManagedBean(rangeSvc.createDragListenerFeature(this.eContainer))\r\n      );\r\n    }\r\n    this.forContainers(\r\n      allCenter,\r\n      () => this.createManagedBean(new CenterWidthFeature((width) => this.comp.setContainerWidth(`${width}px`)))\r\n    );\r\n    this.visible = this.isContainerVisible();\r\n    this.addListeners();\r\n    this.registerWithCtrlsService();\r\n  }\r\n  onScrollCallback(fn) {\r\n    this.addManagedElementListeners(this.eViewport, { scroll: fn });\r\n  }\r\n  addListeners() {\r\n    const { spannedRowRenderer, gos } = this.beans;\r\n    const onDisplayedColumnsChanged = this.onDisplayedColumnsChanged.bind(this);\r\n    this.addManagedEventListeners({\r\n      displayedColumnsChanged: onDisplayedColumnsChanged,\r\n      displayedColumnsWidthChanged: onDisplayedColumnsChanged,\r\n      displayedRowsChanged: (params) => this.onDisplayedRowsChanged(params.afterScroll)\r\n    });\r\n    onDisplayedColumnsChanged();\r\n    this.onDisplayedRowsChanged();\r\n    if (spannedRowRenderer && this.options.getSpannedRowCtrls && gos.get(\"enableCellSpan\")) {\r\n      this.addManagedListeners(spannedRowRenderer, {\r\n        spannedRowsUpdated: () => {\r\n          const spannedCtrls = this.options.getSpannedRowCtrls(spannedRowRenderer);\r\n          if (!spannedCtrls) {\r\n            return;\r\n          }\r\n          this.comp.setSpannedRowCtrls(spannedCtrls, false);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  listenOnDomOrder() {\r\n    const isStickContainer = allStickyContainers.indexOf(this.name) >= 0;\r\n    if (isStickContainer) {\r\n      this.comp.setDomOrder(true);\r\n      return;\r\n    }\r\n    const listener = () => {\r\n      const isEnsureDomOrder = this.gos.get(\"ensureDomOrder\");\r\n      const isPrintLayout = _isDomLayout(this.gos, \"print\");\r\n      this.comp.setDomOrder(isEnsureDomOrder || isPrintLayout);\r\n    };\r\n    this.addManagedPropertyListener(\"domLayout\", listener);\r\n    listener();\r\n  }\r\n  onDisplayedColumnsChanged() {\r\n    this.forContainers([\"center\"], () => this.onHorizontalViewportChanged());\r\n  }\r\n  // this methods prevents the grid views from being scrolled while the dragService is being used\r\n  // eg. the view should not scroll up and down while dragging rows using the rowDragComp.\r\n  addPreventScrollWhileDragging() {\r\n    const { dragSvc } = this.beans;\r\n    if (!dragSvc) {\r\n      return;\r\n    }\r\n    const preventScroll = (e) => {\r\n      if (dragSvc.dragging) {\r\n        if (e.cancelable) {\r\n          e.preventDefault();\r\n        }\r\n      }\r\n    };\r\n    this.eContainer.addEventListener(\"touchmove\", preventScroll, { passive: false });\r\n    this.addDestroyFunc(() => this.eContainer.removeEventListener(\"touchmove\", preventScroll));\r\n  }\r\n  // this gets called whenever a change in the viewport, so we can inform column controller it has to work\r\n  // out the virtual columns again. gets called from following locations:\r\n  // + ensureColVisible, scroll, init, layoutChanged, displayedColumnsChanged\r\n  onHorizontalViewportChanged(afterScroll = false) {\r\n    const scrollWidth = this.getCenterWidth();\r\n    const scrollPosition = this.getCenterViewportScrollLeft();\r\n    this.beans.colViewport.setScrollPosition(scrollWidth, scrollPosition, afterScroll);\r\n  }\r\n  hasHorizontalScrollGap() {\r\n    return this.eContainer.clientWidth - this.eViewport.clientWidth < 0;\r\n  }\r\n  hasVerticalScrollGap() {\r\n    return this.eContainer.clientHeight - this.eViewport.clientHeight < 0;\r\n  }\r\n  getCenterWidth() {\r\n    return _getInnerWidth(this.eViewport);\r\n  }\r\n  getCenterViewportScrollLeft() {\r\n    return _getScrollLeft(this.eViewport, this.enableRtl);\r\n  }\r\n  registerViewportResizeListener(listener) {\r\n    const unsubscribeFromResize = _observeResize(this.beans, this.eViewport, listener);\r\n    this.addDestroyFunc(() => unsubscribeFromResize());\r\n  }\r\n  isViewportInTheDOMTree() {\r\n    return _isInDOM(this.eViewport);\r\n  }\r\n  getViewportScrollLeft() {\r\n    return _getScrollLeft(this.eViewport, this.enableRtl);\r\n  }\r\n  isHorizontalScrollShowing() {\r\n    const isAlwaysShowHorizontalScroll = this.gos.get(\"alwaysShowHorizontalScroll\");\r\n    return isAlwaysShowHorizontalScroll || _isHorizontalScrollShowing(this.eViewport);\r\n  }\r\n  setHorizontalScroll(offset) {\r\n    this.comp.setHorizontalScroll(offset);\r\n  }\r\n  getHScrollPosition() {\r\n    const res = {\r\n      left: this.eViewport.scrollLeft,\r\n      right: this.eViewport.scrollLeft + this.eViewport.offsetWidth\r\n    };\r\n    return res;\r\n  }\r\n  setCenterViewportScrollLeft(value) {\r\n    _setScrollLeft(this.eViewport, value, this.enableRtl);\r\n  }\r\n  isContainerVisible() {\r\n    const pinned = this.options.pinnedType != null;\r\n    return !pinned || !!this.pinnedWidthFeature && this.pinnedWidthFeature.getWidth() > 0;\r\n  }\r\n  onPinnedWidthChanged() {\r\n    const visible = this.isContainerVisible();\r\n    if (this.visible != visible) {\r\n      this.visible = visible;\r\n      this.onDisplayedRowsChanged();\r\n    }\r\n  }\r\n  onDisplayedRowsChanged(afterScroll = false) {\r\n    const rows = this.options.getRowCtrls(this.beans.rowRenderer);\r\n    if (!this.visible || rows.length === 0) {\r\n      this.comp.setRowCtrls({ rowCtrls: this.EMPTY_CTRLS });\r\n      return;\r\n    }\r\n    const printLayout = _isDomLayout(this.gos, \"print\");\r\n    const embedFullWidthRows = this.gos.get(\"embedFullWidthRows\");\r\n    const embedFW = embedFullWidthRows || printLayout;\r\n    const rowsThisContainer = rows.filter((rowCtrl) => {\r\n      const fullWidthRow = rowCtrl.isFullWidth();\r\n      const match = this.options.fullWidth ? !embedFW && fullWidthRow : embedFW || !fullWidthRow;\r\n      return match;\r\n    });\r\n    this.comp.setRowCtrls({ rowCtrls: rowsThisContainer, useFlushSync: afterScroll });\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/gridBodyComp/gridBodyCtrl.ts\r\nvar CSS_CLASS_FORCE_VERTICAL_SCROLL = \"ag-force-vertical-scroll\";\r\nvar CSS_CLASS_CELL_SELECTABLE = \"ag-selectable\";\r\nvar CSS_CLASS_COLUMN_MOVING = \"ag-column-moving\";\r\nvar GridBodyCtrl = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.stickyTopHeight = 0;\r\n    this.stickyBottomHeight = 0;\r\n  }\r\n  wireBeans(beans) {\r\n    this.ctrlsSvc = beans.ctrlsSvc;\r\n    this.colModel = beans.colModel;\r\n    this.scrollVisibleSvc = beans.scrollVisibleSvc;\r\n    this.pinnedRowModel = beans.pinnedRowModel;\r\n    this.filterManager = beans.filterManager;\r\n    this.rowGroupColsSvc = beans.rowGroupColsSvc;\r\n  }\r\n  setComp(comp, eGridBody, eBodyViewport, eTop, eBottom, eStickyTop, eStickyBottom) {\r\n    this.comp = comp;\r\n    this.eGridBody = eGridBody;\r\n    this.eBodyViewport = eBodyViewport;\r\n    this.eTop = eTop;\r\n    this.eBottom = eBottom;\r\n    this.eStickyTop = eStickyTop;\r\n    this.eStickyBottom = eStickyBottom;\r\n    this.eCenterColsViewport = eBodyViewport.querySelector(`.${_getRowViewportClass(\"center\")}`);\r\n    this.eFullWidthContainer = eBodyViewport.querySelector(`.${_getRowContainerClass(\"fullWidth\")}`);\r\n    this.eStickyTopFullWidthContainer = eStickyTop.querySelector(\r\n      `.${_getRowContainerClass(\"stickyTopFullWidth\")}`\r\n    );\r\n    this.eStickyBottomFullWidthContainer = eStickyBottom.querySelector(\r\n      `.${_getRowContainerClass(\"stickyBottomFullWidth\")}`\r\n    );\r\n    this.setCellTextSelection(this.gos.get(\"enableCellTextSelection\"));\r\n    this.addManagedPropertyListener(\r\n      \"enableCellTextSelection\",\r\n      (props) => this.setCellTextSelection(props.currentValue)\r\n    );\r\n    this.createManagedBean(new LayoutFeature(this.comp));\r\n    this.scrollFeature = this.createManagedBean(new GridBodyScrollFeature(eBodyViewport));\r\n    this.beans.rowDragSvc?.setupRowDrag(eBodyViewport, this);\r\n    this.setupRowAnimationCssClass();\r\n    this.addEventListeners();\r\n    this.addFocusListeners([eTop, eBodyViewport, eBottom, eStickyTop, eStickyBottom]);\r\n    this.setGridRootRole();\r\n    this.onGridColumnsChanged();\r\n    this.addBodyViewportListener();\r\n    this.setFloatingHeights();\r\n    this.disableBrowserDragging();\r\n    this.addStopEditingWhenGridLosesFocus();\r\n    this.updateScrollingClasses();\r\n    this.filterManager?.setupAdvFilterHeaderComp(eTop);\r\n    this.ctrlsSvc.register(\"gridBodyCtrl\", this);\r\n  }\r\n  addEventListeners() {\r\n    const setFloatingHeights = this.setFloatingHeights.bind(this);\r\n    const setGridRootRole = this.setGridRootRole.bind(this);\r\n    const toggleRowResizeStyle = this.toggleRowResizeStyles.bind(this);\r\n    this.addManagedEventListeners({\r\n      gridColumnsChanged: this.onGridColumnsChanged.bind(this),\r\n      scrollVisibilityChanged: this.onScrollVisibilityChanged.bind(this),\r\n      scrollGapChanged: this.updateScrollingClasses.bind(this),\r\n      pinnedRowDataChanged: setFloatingHeights,\r\n      pinnedHeightChanged: setFloatingHeights,\r\n      pinnedRowsChanged: setFloatingHeights,\r\n      headerHeightChanged: this.setStickyTopOffsetTop.bind(this),\r\n      columnRowGroupChanged: setGridRootRole,\r\n      columnPivotChanged: setGridRootRole,\r\n      rowResizeStarted: toggleRowResizeStyle,\r\n      rowResizeEnded: toggleRowResizeStyle\r\n    });\r\n    this.addManagedPropertyListener(\"treeData\", setGridRootRole);\r\n  }\r\n  toggleRowResizeStyles(params) {\r\n    const isResizingRow = params.type === \"rowResizeStarted\";\r\n    this.eBodyViewport.classList.toggle(\"ag-prevent-animation\", isResizingRow);\r\n  }\r\n  onGridColumnsChanged() {\r\n    const columns = this.beans.colModel.getCols();\r\n    this.comp.setColumnCount(columns.length);\r\n  }\r\n  onScrollVisibilityChanged() {\r\n    const { scrollVisibleSvc } = this;\r\n    const visible = scrollVisibleSvc.verticalScrollShowing;\r\n    this.setVerticalScrollPaddingVisible(visible);\r\n    this.setStickyWidth(visible);\r\n    this.setStickyBottomOffsetBottom();\r\n    const scrollbarWidth = visible ? scrollVisibleSvc.getScrollbarWidth() || 0 : 0;\r\n    const pad = _isInvisibleScrollbar() ? 16 : 0;\r\n    const width = `calc(100% + ${scrollbarWidth + pad}px)`;\r\n    _requestAnimationFrame(this.beans, () => this.comp.setBodyViewportWidth(width));\r\n    this.updateScrollingClasses();\r\n  }\r\n  setGridRootRole() {\r\n    const { rowGroupColsSvc, colModel } = this;\r\n    let isTreeGrid = this.gos.get(\"treeData\");\r\n    if (!isTreeGrid) {\r\n      const isPivotActive = colModel.isPivotMode();\r\n      const rowGroupColumnLen = !rowGroupColsSvc ? 0 : rowGroupColsSvc.columns.length;\r\n      const columnsNeededForGrouping = isPivotActive ? 2 : 1;\r\n      isTreeGrid = rowGroupColumnLen >= columnsNeededForGrouping;\r\n    }\r\n    this.comp.setGridRootRole(isTreeGrid ? \"treegrid\" : \"grid\");\r\n  }\r\n  addFocusListeners(elements) {\r\n    elements.forEach((element) => {\r\n      this.addManagedElementListeners(element, {\r\n        focusin: (e) => {\r\n          const { target } = e;\r\n          const isFocusedElementNested = _isElementChildOfClass(target, \"ag-root\", element);\r\n          element.classList.toggle(\"ag-has-focus\", !isFocusedElementNested);\r\n        },\r\n        focusout: (e) => {\r\n          const { target, relatedTarget } = e;\r\n          const gridContainRelatedTarget = element.contains(relatedTarget);\r\n          const isNestedRelatedTarget = _isElementChildOfClass(\r\n            relatedTarget,\r\n            \"ag-root\",\r\n            element\r\n          );\r\n          const isNestedTarget = _isElementChildOfClass(target, \"ag-root\", element);\r\n          if (isNestedTarget) {\r\n            return;\r\n          }\r\n          if (!gridContainRelatedTarget || isNestedRelatedTarget) {\r\n            element.classList.remove(\"ag-has-focus\");\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n  // used by ColumnAnimationService\r\n  setColumnMovingCss(moving) {\r\n    this.comp.setColumnMovingCss(CSS_CLASS_COLUMN_MOVING, moving);\r\n  }\r\n  setCellTextSelection(selectable = false) {\r\n    this.comp.setCellSelectableCss(CSS_CLASS_CELL_SELECTABLE, selectable);\r\n  }\r\n  updateScrollingClasses() {\r\n    const {\r\n      eGridBody: { classList },\r\n      scrollVisibleSvc\r\n    } = this;\r\n    classList.toggle(\"ag-body-vertical-content-no-gap\", !scrollVisibleSvc.verticalScrollGap);\r\n    classList.toggle(\"ag-body-horizontal-content-no-gap\", !scrollVisibleSvc.horizontalScrollGap);\r\n  }\r\n  // if we do not do this, then the user can select a pic in the grid (eg an image in a custom cell renderer)\r\n  // and then that will start the browser native drag n' drop, which messes up with our own drag and drop.\r\n  disableBrowserDragging() {\r\n    this.addManagedElementListeners(this.eGridBody, {\r\n      dragstart: (event) => {\r\n        if (event.target instanceof HTMLImageElement) {\r\n          event.preventDefault();\r\n          return false;\r\n        }\r\n      }\r\n    });\r\n  }\r\n  addStopEditingWhenGridLosesFocus() {\r\n    this.beans.editSvc?.addStopEditingWhenGridLosesFocus([\r\n      this.eBodyViewport,\r\n      this.eBottom,\r\n      this.eTop,\r\n      this.eStickyTop,\r\n      this.eStickyBottom\r\n    ]);\r\n  }\r\n  updateRowCount() {\r\n    const headerCount = (this.ctrlsSvc.getHeaderRowContainerCtrl()?.getRowCount() ?? 0) + (this.filterManager?.getHeaderRowCount() ?? 0);\r\n    const { rowModel } = this.beans;\r\n    const rowCount = rowModel.isLastRowIndexKnown() ? rowModel.getRowCount() : -1;\r\n    const total = rowCount === -1 ? -1 : headerCount + rowCount;\r\n    this.comp.setRowCount(total);\r\n  }\r\n  registerBodyViewportResizeListener(listener) {\r\n    this.comp.registerBodyViewportResizeListener(listener);\r\n  }\r\n  setVerticalScrollPaddingVisible(visible) {\r\n    const overflowY = visible ? \"scroll\" : \"hidden\";\r\n    this.comp.setPinnedTopBottomOverflowY(overflowY);\r\n  }\r\n  isVerticalScrollShowing() {\r\n    const show = this.gos.get(\"alwaysShowVerticalScroll\");\r\n    const cssClass = show ? CSS_CLASS_FORCE_VERTICAL_SCROLL : null;\r\n    const allowVerticalScroll = _isDomLayout(this.gos, \"normal\");\r\n    this.comp.setAlwaysVerticalScrollClass(cssClass, show);\r\n    return show || allowVerticalScroll && _isVerticalScrollShowing(this.eBodyViewport);\r\n  }\r\n  setupRowAnimationCssClass() {\r\n    const { rowContainerHeight, environment } = this.beans;\r\n    let initialSizeMeasurementComplete = environment.sizesMeasured;\r\n    const updateAnimationClass = () => {\r\n      const animateRows = initialSizeMeasurementComplete && _isAnimateRows(this.gos) && !rowContainerHeight.stretching;\r\n      const animateRowsCssClass = animateRows ? \"ag-row-animation\" : \"ag-row-no-animation\";\r\n      this.comp.setRowAnimationCssOnBodyViewport(animateRowsCssClass, animateRows);\r\n    };\r\n    updateAnimationClass();\r\n    this.addManagedEventListeners({ heightScaleChanged: updateAnimationClass });\r\n    this.addManagedPropertyListener(\"animateRows\", updateAnimationClass);\r\n    this.addManagedEventListeners({\r\n      gridStylesChanged: () => {\r\n        if (!initialSizeMeasurementComplete && environment.sizesMeasured) {\r\n          initialSizeMeasurementComplete = true;\r\n          updateAnimationClass();\r\n        }\r\n      }\r\n    });\r\n  }\r\n  addBodyViewportListener() {\r\n    const {\r\n      eBodyViewport,\r\n      eStickyTop,\r\n      eStickyBottom,\r\n      eTop,\r\n      eBottom,\r\n      beans: { popupSvc, touchSvc }\r\n    } = this;\r\n    const listener = this.onBodyViewportContextMenu.bind(this);\r\n    this.addManagedElementListeners(eBodyViewport, { contextmenu: listener });\r\n    touchSvc?.mockBodyContextMenu(this, listener);\r\n    this.addManagedElementListeners(eBodyViewport, {\r\n      wheel: this.onBodyViewportWheel.bind(this, popupSvc)\r\n    });\r\n    const onStickyWheel = this.onStickyWheel.bind(this);\r\n    for (const container of [eStickyTop, eStickyBottom, eTop, eBottom]) {\r\n      this.addManagedElementListeners(container, { wheel: onStickyWheel });\r\n    }\r\n    const onHorizontalWheel = this.onHorizontalWheel.bind(this);\r\n    for (const container of [\"left\", \"right\", \"topLeft\", \"topRight\", \"bottomLeft\", \"bottomRight\"]) {\r\n      this.addManagedElementListeners(this.ctrlsSvc.get(container).eContainer, {\r\n        wheel: onHorizontalWheel\r\n      });\r\n    }\r\n    this.addFullWidthContainerWheelListener();\r\n  }\r\n  addFullWidthContainerWheelListener() {\r\n    this.addManagedElementListeners(this.eFullWidthContainer, {\r\n      wheel: (e) => this.onFullWidthContainerWheel(e)\r\n    });\r\n  }\r\n  onFullWidthContainerWheel(e) {\r\n    const { deltaX, deltaY, shiftKey } = e;\r\n    const isHorizontalScroll = shiftKey || Math.abs(deltaX) > Math.abs(deltaY);\r\n    if (isHorizontalScroll && _isEventFromThisGrid(this.gos, e)) {\r\n      this.scrollGridBodyToMatchEvent(e);\r\n    }\r\n  }\r\n  onStickyWheel(e) {\r\n    const { deltaY } = e;\r\n    const scrolled = this.scrollVertically(deltaY);\r\n    if (scrolled > 0) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n  onHorizontalWheel(e) {\r\n    const { deltaX, deltaY, shiftKey } = e;\r\n    const isHorizontalScroll = shiftKey || Math.abs(deltaX) > Math.abs(deltaY);\r\n    if (!isHorizontalScroll) {\r\n      return;\r\n    }\r\n    this.scrollGridBodyToMatchEvent(e);\r\n  }\r\n  scrollGridBodyToMatchEvent(e) {\r\n    const { deltaX, deltaY } = e;\r\n    e.preventDefault();\r\n    this.eCenterColsViewport.scrollBy({ left: deltaX || deltaY });\r\n  }\r\n  onBodyViewportContextMenu(mouseEvent, touch, touchEvent) {\r\n    if (!mouseEvent && !touchEvent) {\r\n      return;\r\n    }\r\n    if (this.gos.get(\"preventDefaultOnContextMenu\")) {\r\n      const event = mouseEvent || touchEvent;\r\n      event.preventDefault();\r\n    }\r\n    const { target } = mouseEvent || touch;\r\n    if (target === this.eBodyViewport || target === this.ctrlsSvc.get(\"center\").eViewport) {\r\n      this.beans.contextMenuSvc?.showContextMenu({\r\n        mouseEvent,\r\n        touchEvent,\r\n        value: null,\r\n        anchorToElement: this.eGridBody,\r\n        source: \"ui\"\r\n      });\r\n    }\r\n  }\r\n  onBodyViewportWheel(popupSvc, e) {\r\n    if (!this.gos.get(\"suppressScrollWhenPopupsAreOpen\")) {\r\n      return;\r\n    }\r\n    if (popupSvc?.hasAnchoredPopup()) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n  // called by rowDragFeature\r\n  scrollVertically(pixels) {\r\n    const oldScrollPosition = this.eBodyViewport.scrollTop;\r\n    this.scrollFeature.setVerticalScrollPosition(oldScrollPosition + pixels);\r\n    return this.eBodyViewport.scrollTop - oldScrollPosition;\r\n  }\r\n  setFloatingHeights() {\r\n    const {\r\n      pinnedRowModel,\r\n      beans: { environment }\r\n    } = this;\r\n    const floatingTopHeight = pinnedRowModel?.getPinnedTopTotalHeight();\r\n    const floatingBottomHeight = pinnedRowModel?.getPinnedBottomTotalHeight();\r\n    const pinnedBorderWidth = environment.getPinnedRowBorderWidth();\r\n    const rowBorderWidth = environment.getRowBorderWidth();\r\n    const additionalHeight = pinnedBorderWidth - rowBorderWidth;\r\n    const normalisedFloatingTopHeight = !floatingTopHeight ? 0 : additionalHeight + floatingTopHeight;\r\n    const normalisedFloatingBottomHeight = !floatingBottomHeight ? 0 : additionalHeight + floatingBottomHeight;\r\n    this.comp.setTopHeight(normalisedFloatingTopHeight);\r\n    this.comp.setBottomHeight(normalisedFloatingBottomHeight);\r\n    this.comp.setTopInvisible(normalisedFloatingTopHeight <= 0);\r\n    this.comp.setBottomInvisible(normalisedFloatingBottomHeight <= 0);\r\n    this.setStickyTopOffsetTop();\r\n    this.setStickyBottomOffsetBottom();\r\n  }\r\n  setStickyTopHeight(height = 0) {\r\n    this.comp.setStickyTopHeight(`${height}px`);\r\n    this.stickyTopHeight = height;\r\n  }\r\n  setStickyBottomHeight(height = 0) {\r\n    this.comp.setStickyBottomHeight(`${height}px`);\r\n    this.stickyBottomHeight = height;\r\n  }\r\n  setStickyWidth(vScrollVisible) {\r\n    if (!vScrollVisible) {\r\n      this.comp.setStickyTopWidth(\"100%\");\r\n      this.comp.setStickyBottomWidth(\"100%\");\r\n    } else {\r\n      const scrollbarWidth = this.scrollVisibleSvc.getScrollbarWidth();\r\n      this.comp.setStickyTopWidth(`calc(100% - ${scrollbarWidth}px)`);\r\n      this.comp.setStickyBottomWidth(`calc(100% - ${scrollbarWidth}px)`);\r\n    }\r\n  }\r\n  setStickyTopOffsetTop() {\r\n    const headerCtrl = this.ctrlsSvc.get(\"gridHeaderCtrl\");\r\n    const headerHeight = headerCtrl.headerHeight + (this.filterManager?.getHeaderHeight() ?? 0);\r\n    const pinnedTopHeight = this.pinnedRowModel?.getPinnedTopTotalHeight() ?? 0;\r\n    let height = 0;\r\n    if (headerHeight > 0) {\r\n      height += headerHeight;\r\n    }\r\n    if (pinnedTopHeight > 0) {\r\n      height += pinnedTopHeight;\r\n    }\r\n    if (height > 0) {\r\n      height += 1;\r\n    }\r\n    this.comp.setStickyTopTop(`${height}px`);\r\n  }\r\n  setStickyBottomOffsetBottom() {\r\n    const { pinnedRowModel, scrollVisibleSvc, comp } = this;\r\n    const pinnedBottomHeight = pinnedRowModel?.getPinnedBottomTotalHeight() ?? 0;\r\n    const hScrollShowing = scrollVisibleSvc.horizontalScrollShowing;\r\n    const scrollbarWidth = hScrollShowing ? scrollVisibleSvc.getScrollbarWidth() || 0 : 0;\r\n    const height = pinnedBottomHeight + scrollbarWidth;\r\n    comp.setStickyBottomBottom(`${height}px`);\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/gridBodyComp/abstractFakeScrollComp.ts\r\nvar AbstractFakeScrollComp = class extends Component {\r\n  constructor(template, direction) {\r\n    super();\r\n    this.direction = direction;\r\n    this.eViewport = RefPlaceholder;\r\n    this.eContainer = RefPlaceholder;\r\n    this.hideTimeout = 0;\r\n    this.setTemplate(template);\r\n  }\r\n  postConstruct() {\r\n    this.addManagedEventListeners({\r\n      scrollVisibilityChanged: this.onScrollVisibilityChanged.bind(this)\r\n    });\r\n    this.onScrollVisibilityChanged();\r\n    this.toggleCss(\"ag-apple-scrollbar\", _isMacOsUserAgent() || _isIOSUserAgent());\r\n  }\r\n  destroy() {\r\n    super.destroy();\r\n    window.clearTimeout(this.hideTimeout);\r\n  }\r\n  initialiseInvisibleScrollbar() {\r\n    if (this.invisibleScrollbar !== void 0) {\r\n      return;\r\n    }\r\n    this.invisibleScrollbar = _isInvisibleScrollbar();\r\n    if (this.invisibleScrollbar) {\r\n      this.hideAndShowInvisibleScrollAsNeeded();\r\n      this.addActiveListenerToggles();\r\n    }\r\n  }\r\n  addActiveListenerToggles() {\r\n    const eGui = this.getGui();\r\n    const onActivate = () => this.toggleCss(\"ag-scrollbar-active\", true);\r\n    const onDeactivate = () => this.toggleCss(\"ag-scrollbar-active\", false);\r\n    this.addManagedListeners(eGui, {\r\n      mouseenter: onActivate,\r\n      mousedown: onActivate,\r\n      touchstart: onActivate,\r\n      mouseleave: onDeactivate,\r\n      touchend: onDeactivate\r\n    });\r\n  }\r\n  onScrollVisibilityChanged() {\r\n    if (this.invisibleScrollbar === void 0) {\r\n      this.initialiseInvisibleScrollbar();\r\n    }\r\n    _requestAnimationFrame(this.beans, () => this.setScrollVisible());\r\n  }\r\n  hideAndShowInvisibleScrollAsNeeded() {\r\n    this.addManagedEventListeners({\r\n      bodyScroll: (params) => {\r\n        if (params.direction === this.direction) {\r\n          if (this.hideTimeout) {\r\n            window.clearTimeout(this.hideTimeout);\r\n            this.hideTimeout = 0;\r\n          }\r\n          this.toggleCss(\"ag-scrollbar-scrolling\", true);\r\n        }\r\n      },\r\n      bodyScrollEnd: () => {\r\n        this.hideTimeout = window.setTimeout(() => {\r\n          this.toggleCss(\"ag-scrollbar-scrolling\", false);\r\n          this.hideTimeout = 0;\r\n        }, 400);\r\n      }\r\n    });\r\n  }\r\n  attemptSettingScrollPosition(value) {\r\n    const viewport = this.eViewport;\r\n    _waitUntil(\r\n      () => _isVisible(viewport),\r\n      () => this.setScrollPosition(value),\r\n      100\r\n    );\r\n  }\r\n  onScrollCallback(fn) {\r\n    this.addManagedElementListeners(this.eViewport, { scroll: fn });\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/gridBodyComp/fakeHScrollComp.ts\r\nvar FakeHScrollElement = {\r\n  tag: \"div\",\r\n  cls: \"ag-body-horizontal-scroll\",\r\n  attrs: { \"aria-hidden\": \"true\" },\r\n  children: [\r\n    { tag: \"div\", ref: \"eLeftSpacer\", cls: \"ag-horizontal-left-spacer\" },\r\n    {\r\n      tag: \"div\",\r\n      ref: \"eViewport\",\r\n      cls: \"ag-body-horizontal-scroll-viewport\",\r\n      children: [{ tag: \"div\", ref: \"eContainer\", cls: \"ag-body-horizontal-scroll-container\" }]\r\n    },\r\n    { tag: \"div\", ref: \"eRightSpacer\", cls: \"ag-horizontal-right-spacer\" }\r\n  ]\r\n};\r\nvar FakeHScrollComp = class extends AbstractFakeScrollComp {\r\n  constructor() {\r\n    super(FakeHScrollElement, \"horizontal\");\r\n    this.eLeftSpacer = RefPlaceholder;\r\n    this.eRightSpacer = RefPlaceholder;\r\n    this.setScrollVisibleDebounce = 0;\r\n  }\r\n  wireBeans(beans) {\r\n    this.visibleCols = beans.visibleCols;\r\n    this.scrollVisibleSvc = beans.scrollVisibleSvc;\r\n  }\r\n  postConstruct() {\r\n    super.postConstruct();\r\n    const spacerWidthsListener = this.setFakeHScrollSpacerWidths.bind(this);\r\n    this.addManagedEventListeners({\r\n      displayedColumnsChanged: spacerWidthsListener,\r\n      displayedColumnsWidthChanged: spacerWidthsListener,\r\n      pinnedRowDataChanged: this.refreshCompBottom.bind(this)\r\n    });\r\n    this.addManagedPropertyListener(\"domLayout\", spacerWidthsListener);\r\n    this.beans.ctrlsSvc.register(\"fakeHScrollComp\", this);\r\n    this.createManagedBean(new CenterWidthFeature((width) => this.eContainer.style.width = `${width}px`));\r\n    this.addManagedPropertyListeners([\"suppressHorizontalScroll\"], this.onScrollVisibilityChanged.bind(this));\r\n  }\r\n  destroy() {\r\n    window.clearTimeout(this.setScrollVisibleDebounce);\r\n    super.destroy();\r\n  }\r\n  initialiseInvisibleScrollbar() {\r\n    if (this.invisibleScrollbar !== void 0) {\r\n      return;\r\n    }\r\n    this.enableRtl = this.gos.get(\"enableRtl\");\r\n    super.initialiseInvisibleScrollbar();\r\n    if (this.invisibleScrollbar) {\r\n      this.refreshCompBottom();\r\n    }\r\n  }\r\n  refreshCompBottom() {\r\n    if (!this.invisibleScrollbar) {\r\n      return;\r\n    }\r\n    const bottomPinnedHeight = this.beans.pinnedRowModel?.getPinnedBottomTotalHeight() ?? 0;\r\n    this.getGui().style.bottom = `${bottomPinnedHeight}px`;\r\n  }\r\n  onScrollVisibilityChanged() {\r\n    super.onScrollVisibilityChanged();\r\n    this.setFakeHScrollSpacerWidths();\r\n  }\r\n  setFakeHScrollSpacerWidths() {\r\n    const vScrollShowing = this.scrollVisibleSvc.verticalScrollShowing;\r\n    let rightSpacing = this.visibleCols.getDisplayedColumnsRightWidth();\r\n    const scrollOnRight = !this.enableRtl && vScrollShowing;\r\n    const scrollbarWidth = this.scrollVisibleSvc.getScrollbarWidth();\r\n    if (scrollOnRight) {\r\n      rightSpacing += scrollbarWidth;\r\n    }\r\n    _setFixedWidth(this.eRightSpacer, rightSpacing);\r\n    this.eRightSpacer.classList.toggle(\"ag-scroller-corner\", rightSpacing <= scrollbarWidth);\r\n    let leftSpacing = this.visibleCols.getColsLeftWidth();\r\n    const scrollOnLeft = this.enableRtl && vScrollShowing;\r\n    if (scrollOnLeft) {\r\n      leftSpacing += scrollbarWidth;\r\n    }\r\n    _setFixedWidth(this.eLeftSpacer, leftSpacing);\r\n    this.eLeftSpacer.classList.toggle(\"ag-scroller-corner\", leftSpacing <= scrollbarWidth);\r\n  }\r\n  setScrollVisible() {\r\n    const hScrollShowing = this.scrollVisibleSvc.horizontalScrollShowing;\r\n    const invisibleScrollbar2 = this.invisibleScrollbar;\r\n    const isSuppressHorizontalScroll = this.gos.get(\"suppressHorizontalScroll\");\r\n    const scrollbarWidth = hScrollShowing ? this.scrollVisibleSvc.getScrollbarWidth() || 0 : 0;\r\n    const adjustedScrollbarWidth = scrollbarWidth === 0 && invisibleScrollbar2 ? 16 : scrollbarWidth;\r\n    const scrollContainerSize = !isSuppressHorizontalScroll ? adjustedScrollbarWidth : 0;\r\n    const apply = () => {\r\n      this.setScrollVisibleDebounce = 0;\r\n      this.toggleCss(\"ag-scrollbar-invisible\", invisibleScrollbar2);\r\n      _setFixedHeight(this.getGui(), scrollContainerSize);\r\n      _setFixedHeight(this.eViewport, scrollContainerSize);\r\n      _setFixedHeight(this.eContainer, scrollContainerSize);\r\n      if (!scrollContainerSize) {\r\n        this.eContainer.style.setProperty(\"min-height\", \"1px\");\r\n      }\r\n      this.setVisible(hScrollShowing, { skipAriaHidden: true });\r\n    };\r\n    window.clearTimeout(this.setScrollVisibleDebounce);\r\n    if (!hScrollShowing) {\r\n      apply();\r\n    } else {\r\n      this.setScrollVisibleDebounce = window.setTimeout(apply, 100);\r\n    }\r\n  }\r\n  getScrollPosition() {\r\n    return _getScrollLeft(this.eViewport, this.enableRtl);\r\n  }\r\n  setScrollPosition(value) {\r\n    if (!_isVisible(this.eViewport)) {\r\n      this.attemptSettingScrollPosition(value);\r\n    }\r\n    _setScrollLeft(this.eViewport, value, this.enableRtl);\r\n  }\r\n};\r\nvar FakeHScrollSelector = {\r\n  selector: \"AG-FAKE-HORIZONTAL-SCROLL\",\r\n  component: FakeHScrollComp\r\n};\r\n\r\n// packages/ag-grid-community/src/gridBodyComp/fakeVScrollComp.ts\r\nvar FakeVScrollElement = {\r\n  tag: \"div\",\r\n  cls: \"ag-body-vertical-scroll\",\r\n  attrs: { \"aria-hidden\": \"true\" },\r\n  children: [\r\n    {\r\n      tag: \"div\",\r\n      ref: \"eViewport\",\r\n      cls: \"ag-body-vertical-scroll-viewport\",\r\n      children: [{ tag: \"div\", ref: \"eContainer\", cls: \"ag-body-vertical-scroll-container\" }]\r\n    }\r\n  ]\r\n};\r\nvar FakeVScrollComp = class extends AbstractFakeScrollComp {\r\n  constructor() {\r\n    super(FakeVScrollElement, \"vertical\");\r\n  }\r\n  postConstruct() {\r\n    super.postConstruct();\r\n    this.createManagedBean(new SetHeightFeature(this.eContainer));\r\n    const { ctrlsSvc } = this.beans;\r\n    ctrlsSvc.register(\"fakeVScrollComp\", this);\r\n    this.addManagedEventListeners({\r\n      rowContainerHeightChanged: this.onRowContainerHeightChanged.bind(this, ctrlsSvc)\r\n    });\r\n  }\r\n  setScrollVisible() {\r\n    const { scrollVisibleSvc } = this.beans;\r\n    const vScrollShowing = scrollVisibleSvc.verticalScrollShowing;\r\n    const invisibleScrollbar2 = this.invisibleScrollbar;\r\n    const scrollbarWidth = vScrollShowing ? scrollVisibleSvc.getScrollbarWidth() || 0 : 0;\r\n    const adjustedScrollbarWidth = scrollbarWidth === 0 && invisibleScrollbar2 ? 16 : scrollbarWidth;\r\n    this.toggleCss(\"ag-scrollbar-invisible\", invisibleScrollbar2);\r\n    _setFixedWidth(this.getGui(), adjustedScrollbarWidth);\r\n    _setFixedWidth(this.eViewport, adjustedScrollbarWidth);\r\n    _setFixedWidth(this.eContainer, adjustedScrollbarWidth);\r\n    this.setDisplayed(vScrollShowing, { skipAriaHidden: true });\r\n  }\r\n  onRowContainerHeightChanged(ctrlsSvc) {\r\n    const gridBodyCtrl = ctrlsSvc.getGridBodyCtrl();\r\n    const gridBodyViewportEl = gridBodyCtrl.eBodyViewport;\r\n    const eViewportScrollTop = this.getScrollPosition();\r\n    const gridBodyViewportScrollTop = gridBodyViewportEl.scrollTop;\r\n    if (eViewportScrollTop != gridBodyViewportScrollTop) {\r\n      this.setScrollPosition(gridBodyViewportScrollTop, true);\r\n    }\r\n  }\r\n  getScrollPosition() {\r\n    return this.eViewport.scrollTop;\r\n  }\r\n  setScrollPosition(value, force) {\r\n    if (!force && !_isVisible(this.eViewport)) {\r\n      this.attemptSettingScrollPosition(value);\r\n    }\r\n    this.eViewport.scrollTop = value;\r\n  }\r\n};\r\nvar FakeVScrollSelector = {\r\n  selector: \"AG-FAKE-VERTICAL-SCROLL\",\r\n  component: FakeVScrollComp\r\n};\r\n\r\n// packages/ag-grid-community/src/headerRendering/headerUtils.ts\r\nfunction getHeaderRowCount(colModel) {\r\n  if (!colModel.cols) {\r\n    return -1;\r\n  }\r\n  return colModel.cols.treeDepth + 1;\r\n}\r\nfunction getFocusHeaderRowCount(beans) {\r\n  return beans.ctrlsSvc.getHeaderRowContainerCtrl()?.getRowCount() ?? 0;\r\n}\r\nfunction getGroupRowsHeight(beans) {\r\n  const heights = [];\r\n  const headerRowContainerCtrls = beans.ctrlsSvc.getHeaderRowContainerCtrls();\r\n  for (const headerRowContainerCtrl of headerRowContainerCtrls) {\r\n    if (!headerRowContainerCtrl) {\r\n      continue;\r\n    }\r\n    const groupRowCount = headerRowContainerCtrl.getGroupRowCount() || 0;\r\n    for (let i = 0; i < groupRowCount; i++) {\r\n      const headerRowCtrl = headerRowContainerCtrl.getGroupRowCtrlAtIndex(i);\r\n      const currentHeightAtPos = heights[i];\r\n      if (headerRowCtrl) {\r\n        const newHeight = getColumnGroupHeaderRowHeight(beans, headerRowCtrl);\r\n        if (currentHeightAtPos == null || newHeight > currentHeightAtPos) {\r\n          heights[i] = newHeight;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return heights;\r\n}\r\nfunction getColumnGroupHeaderRowHeight(beans, headerRowCtrl) {\r\n  const defaultHeight = beans.colModel.isPivotMode() ? getPivotGroupHeaderHeight(beans) : getGroupHeaderHeight(beans);\r\n  let maxDisplayedHeight = defaultHeight;\r\n  const headerRowCellCtrls = headerRowCtrl.getHeaderCellCtrls();\r\n  for (const headerCellCtrl of headerRowCellCtrls) {\r\n    const { column } = headerCellCtrl;\r\n    const height = column.getAutoHeaderHeight();\r\n    if (height != null && height > maxDisplayedHeight && column.isAutoHeaderHeight()) {\r\n      maxDisplayedHeight = height;\r\n    }\r\n  }\r\n  return maxDisplayedHeight;\r\n}\r\nfunction getColumnHeaderRowHeight(beans) {\r\n  const defaultHeight = beans.colModel.isPivotMode() ? getPivotHeaderHeight(beans) : getHeaderHeight(beans);\r\n  let maxDisplayedHeight = defaultHeight;\r\n  beans.colModel.forAllCols((col) => {\r\n    const height = col.getAutoHeaderHeight();\r\n    if (height != null && height > maxDisplayedHeight && col.isAutoHeaderHeight()) {\r\n      maxDisplayedHeight = height;\r\n    }\r\n  });\r\n  return maxDisplayedHeight;\r\n}\r\nfunction getHeaderHeight(beans) {\r\n  return beans.gos.get(\"headerHeight\") ?? beans.environment.getDefaultHeaderHeight();\r\n}\r\nfunction getFloatingFiltersHeight(beans) {\r\n  return beans.gos.get(\"floatingFiltersHeight\") ?? getHeaderHeight(beans);\r\n}\r\nfunction getGroupHeaderHeight(beans) {\r\n  return beans.gos.get(\"groupHeaderHeight\") ?? getHeaderHeight(beans);\r\n}\r\nfunction getPivotHeaderHeight(beans) {\r\n  return beans.gos.get(\"pivotHeaderHeight\") ?? getHeaderHeight(beans);\r\n}\r\nfunction getPivotGroupHeaderHeight(beans) {\r\n  return beans.gos.get(\"pivotGroupHeaderHeight\") ?? getGroupHeaderHeight(beans);\r\n}\r\n\r\n// packages/ag-grid-community/src/headerRendering/gridHeaderCtrl.ts\r\nvar GridHeaderCtrl = class extends BeanStub {\r\n  setComp(comp, eGui, eFocusableElement) {\r\n    this.comp = comp;\r\n    this.eGui = eGui;\r\n    const { beans } = this;\r\n    const { headerNavigation, touchSvc, ctrlsSvc } = beans;\r\n    if (headerNavigation) {\r\n      this.createManagedBean(\r\n        new ManagedFocusFeature(eFocusableElement, {\r\n          onTabKeyDown: this.onTabKeyDown.bind(this),\r\n          handleKeyDown: this.handleKeyDown.bind(this),\r\n          onFocusOut: this.onFocusOut.bind(this)\r\n        })\r\n      );\r\n    }\r\n    this.addManagedEventListeners({\r\n      columnPivotModeChanged: this.onPivotModeChanged.bind(this, beans),\r\n      displayedColumnsChanged: this.onDisplayedColumnsChanged.bind(this, beans)\r\n    });\r\n    this.onPivotModeChanged(beans);\r\n    this.setupHeaderHeight();\r\n    const listener = this.onHeaderContextMenu.bind(this);\r\n    this.addManagedElementListeners(this.eGui, { contextmenu: listener });\r\n    touchSvc?.mockHeaderContextMenu(this, listener);\r\n    ctrlsSvc.register(\"gridHeaderCtrl\", this);\r\n  }\r\n  setupHeaderHeight() {\r\n    const listener = this.setHeaderHeight.bind(this);\r\n    listener();\r\n    this.addManagedPropertyListeners(\r\n      [\r\n        \"headerHeight\",\r\n        \"pivotHeaderHeight\",\r\n        \"groupHeaderHeight\",\r\n        \"pivotGroupHeaderHeight\",\r\n        \"floatingFiltersHeight\"\r\n      ],\r\n      listener\r\n    );\r\n    this.addManagedEventListeners({\r\n      headerRowsChanged: listener,\r\n      columnHeaderHeightChanged: listener,\r\n      // add this to the animation frame to avoid a feedback loop\r\n      columnGroupHeaderHeightChanged: () => _requestAnimationFrame(this.beans, () => listener()),\r\n      gridStylesChanged: listener,\r\n      advancedFilterEnabledChanged: listener\r\n    });\r\n  }\r\n  setHeaderHeight() {\r\n    const { beans } = this;\r\n    let totalHeaderHeight = 0;\r\n    const groupHeight = getGroupRowsHeight(beans).reduce((prev, curr) => prev + curr, 0);\r\n    const headerHeight = getColumnHeaderRowHeight(beans);\r\n    if (beans.filterManager?.hasFloatingFilters()) {\r\n      totalHeaderHeight += getFloatingFiltersHeight(beans);\r\n    }\r\n    totalHeaderHeight += groupHeight;\r\n    totalHeaderHeight += headerHeight;\r\n    if (this.headerHeight === totalHeaderHeight) {\r\n      return;\r\n    }\r\n    this.headerHeight = totalHeaderHeight;\r\n    const px = `${totalHeaderHeight + 1}px`;\r\n    this.comp.setHeightAndMinHeight(px);\r\n    this.eventSvc.dispatchEvent({\r\n      type: \"headerHeightChanged\"\r\n    });\r\n  }\r\n  onPivotModeChanged(beans) {\r\n    const pivotMode = beans.colModel.isPivotMode();\r\n    this.comp.toggleCss(\"ag-pivot-on\", pivotMode);\r\n    this.comp.toggleCss(\"ag-pivot-off\", !pivotMode);\r\n  }\r\n  onDisplayedColumnsChanged(beans) {\r\n    const columns = beans.visibleCols.allCols;\r\n    const shouldAllowOverflow = columns.some((col) => col.isSpanHeaderHeight());\r\n    this.comp.toggleCss(\"ag-header-allow-overflow\", shouldAllowOverflow);\r\n  }\r\n  onTabKeyDown(e) {\r\n    const isRtl = this.gos.get(\"enableRtl\");\r\n    const backwards = e.shiftKey;\r\n    const direction = backwards !== isRtl ? \"LEFT\" : \"RIGHT\";\r\n    const { beans } = this;\r\n    const { headerNavigation, focusSvc } = beans;\r\n    if (headerNavigation.navigateHorizontally(direction, true, e) || !backwards && focusSvc.focusOverlay(false) || _focusNextGridCoreContainer(beans, backwards, true)) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n  handleKeyDown(e) {\r\n    let direction = null;\r\n    const { headerNavigation } = this.beans;\r\n    switch (e.key) {\r\n      case KeyCode.LEFT:\r\n        direction = \"LEFT\";\r\n      case KeyCode.RIGHT: {\r\n        if (!_exists(direction)) {\r\n          direction = \"RIGHT\";\r\n        }\r\n        if (headerNavigation.navigateHorizontally(direction, false, e)) {\r\n          e.preventDefault();\r\n        }\r\n        break;\r\n      }\r\n      case KeyCode.UP:\r\n        direction = \"UP\";\r\n      case KeyCode.DOWN: {\r\n        if (!_exists(direction)) {\r\n          direction = \"DOWN\";\r\n        }\r\n        if (headerNavigation.navigateVertically(direction, e)) {\r\n          e.preventDefault();\r\n        }\r\n        break;\r\n      }\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n  onFocusOut(e) {\r\n    const { relatedTarget } = e;\r\n    const { eGui, beans } = this;\r\n    if (!relatedTarget && eGui.contains(_getActiveDomElement(beans))) {\r\n      return;\r\n    }\r\n    if (!eGui.contains(relatedTarget)) {\r\n      beans.focusSvc.focusedHeader = null;\r\n    }\r\n  }\r\n  onHeaderContextMenu(mouseEvent, touch, touchEvent) {\r\n    const { menuSvc, ctrlsSvc } = this.beans;\r\n    if (!mouseEvent && !touchEvent || !menuSvc?.isHeaderContextMenuEnabled()) {\r\n      return;\r\n    }\r\n    const { target } = mouseEvent ?? touch;\r\n    if (target === this.eGui || target === ctrlsSvc.getHeaderRowContainerCtrl()?.eViewport) {\r\n      menuSvc.showHeaderContextMenu(void 0, mouseEvent, touchEvent);\r\n    }\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/headerRendering/cells/abstractCell/abstractHeaderCellComp.ts\r\nvar AbstractHeaderCellComp = class extends Component {\r\n  constructor(template, ctrl) {\r\n    super(template);\r\n    this.ctrl = ctrl;\r\n  }\r\n  getCtrl() {\r\n    return this.ctrl;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/headerRendering/cells/column/headerCellComp.ts\r\nvar HeaderCellElement = {\r\n  tag: \"div\",\r\n  cls: \"ag-header-cell\",\r\n  role: \"columnheader\",\r\n  children: [\r\n    { tag: \"div\", ref: \"eResize\", cls: \"ag-header-cell-resize\", role: \"presentation\" },\r\n    { tag: \"div\", ref: \"eHeaderCompWrapper\", cls: \"ag-header-cell-comp-wrapper\", role: \"presentation\" }\r\n  ]\r\n};\r\nvar HeaderCellComp = class extends AbstractHeaderCellComp {\r\n  constructor(ctrl) {\r\n    super(HeaderCellElement, ctrl);\r\n    this.eResize = RefPlaceholder;\r\n    this.eHeaderCompWrapper = RefPlaceholder;\r\n    this.headerCompVersion = 0;\r\n  }\r\n  postConstruct() {\r\n    const eGui = this.getGui();\r\n    const setAttribute = (name, value) => {\r\n      if (value != null && value != \"\") {\r\n        eGui.setAttribute(name, value);\r\n      } else {\r\n        eGui.removeAttribute(name);\r\n      }\r\n    };\r\n    const refreshSelectAllGui = () => {\r\n      const selectAllGui = this.ctrl.getSelectAllGui();\r\n      if (selectAllGui) {\r\n        this.eResize.insertAdjacentElement(\"afterend\", selectAllGui);\r\n        this.addDestroyFunc(() => selectAllGui.remove());\r\n      }\r\n    };\r\n    setAttribute(\"col-id\", this.ctrl.column.getColId());\r\n    const compProxy = {\r\n      setWidth: (width) => eGui.style.width = width,\r\n      toggleCss: (cssClassName, on) => this.toggleCss(cssClassName, on),\r\n      setUserStyles: (styles) => _addStylesToElement(eGui, styles),\r\n      setAriaSort: (sort) => sort ? _setAriaSort(eGui, sort) : _removeAriaSort(eGui),\r\n      setUserCompDetails: (compDetails) => this.setUserCompDetails(compDetails),\r\n      getUserCompInstance: () => this.headerComp,\r\n      refreshSelectAllGui,\r\n      removeSelectAllGui: () => this.ctrl.getSelectAllGui()?.remove()\r\n    };\r\n    this.ctrl.setComp(compProxy, this.getGui(), this.eResize, this.eHeaderCompWrapper, void 0);\r\n    refreshSelectAllGui();\r\n  }\r\n  destroy() {\r\n    this.destroyHeaderComp();\r\n    super.destroy();\r\n  }\r\n  destroyHeaderComp() {\r\n    if (this.headerComp) {\r\n      this.eHeaderCompWrapper.removeChild(this.headerCompGui);\r\n      this.headerComp = this.destroyBean(this.headerComp);\r\n      this.headerCompGui = void 0;\r\n    }\r\n  }\r\n  setUserCompDetails(compDetails) {\r\n    this.headerCompVersion++;\r\n    const versionCopy = this.headerCompVersion;\r\n    compDetails.newAgStackInstance().then((comp) => this.afterCompCreated(versionCopy, comp));\r\n  }\r\n  afterCompCreated(version, headerComp) {\r\n    if (version != this.headerCompVersion || !this.isAlive()) {\r\n      this.destroyBean(headerComp);\r\n      return;\r\n    }\r\n    this.destroyHeaderComp();\r\n    this.headerComp = headerComp;\r\n    this.headerCompGui = headerComp.getGui();\r\n    this.eHeaderCompWrapper.appendChild(this.headerCompGui);\r\n    this.ctrl.setDragSource(this.getGui());\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/headerRendering/cells/columnGroup/headerGroupCellComp.ts\r\nvar HeaderGroupCellCompElement = {\r\n  tag: \"div\",\r\n  cls: \"ag-header-group-cell\",\r\n  role: \"columnheader\",\r\n  children: [\r\n    { tag: \"div\", ref: \"eHeaderCompWrapper\", cls: \"ag-header-cell-comp-wrapper\", role: \"presentation\" },\r\n    { tag: \"div\", ref: \"eResize\", cls: \"ag-header-cell-resize\", role: \"presentation\" }\r\n  ]\r\n};\r\nvar HeaderGroupCellComp = class extends AbstractHeaderCellComp {\r\n  constructor(ctrl) {\r\n    super(HeaderGroupCellCompElement, ctrl);\r\n    this.eResize = RefPlaceholder;\r\n    this.eHeaderCompWrapper = RefPlaceholder;\r\n  }\r\n  postConstruct() {\r\n    const eGui = this.getGui();\r\n    const setAttribute = (key, value) => value != void 0 ? eGui.setAttribute(key, value) : eGui.removeAttribute(key);\r\n    eGui.setAttribute(\"col-id\", this.ctrl.column.getUniqueId());\r\n    const compProxy = {\r\n      toggleCss: (cssClassName, on) => this.toggleCss(cssClassName, on),\r\n      setUserStyles: (styles) => _addStylesToElement(eGui, styles),\r\n      setHeaderWrapperHidden: (hidden) => {\r\n        if (hidden) {\r\n          this.eHeaderCompWrapper.style.setProperty(\"display\", \"none\");\r\n        } else {\r\n          this.eHeaderCompWrapper.style.removeProperty(\"display\");\r\n        }\r\n      },\r\n      setHeaderWrapperMaxHeight: (value) => {\r\n        if (value != null) {\r\n          this.eHeaderCompWrapper.style.setProperty(\"max-height\", `${value}px`);\r\n        } else {\r\n          this.eHeaderCompWrapper.style.removeProperty(\"max-height\");\r\n        }\r\n        this.eHeaderCompWrapper.classList.toggle(\"ag-header-cell-comp-wrapper-limited-height\", value != null);\r\n      },\r\n      setResizableDisplayed: (displayed) => _setDisplayed(this.eResize, displayed),\r\n      setWidth: (width) => eGui.style.width = width,\r\n      setAriaExpanded: (expanded) => setAttribute(\"aria-expanded\", expanded),\r\n      setUserCompDetails: (details) => this.setUserCompDetails(details),\r\n      getUserCompInstance: () => this.headerGroupComp\r\n    };\r\n    this.ctrl.setComp(compProxy, eGui, this.eResize, this.eHeaderCompWrapper, void 0);\r\n  }\r\n  setUserCompDetails(details) {\r\n    details.newAgStackInstance().then((comp) => this.afterHeaderCompCreated(comp));\r\n  }\r\n  afterHeaderCompCreated(headerGroupComp) {\r\n    const destroyFunc = () => this.destroyBean(headerGroupComp);\r\n    if (!this.isAlive()) {\r\n      destroyFunc();\r\n      return;\r\n    }\r\n    const eGui = this.getGui();\r\n    const eHeaderGroupGui = headerGroupComp.getGui();\r\n    this.eHeaderCompWrapper.appendChild(eHeaderGroupGui);\r\n    this.addDestroyFunc(destroyFunc);\r\n    this.headerGroupComp = headerGroupComp;\r\n    this.ctrl.setDragSource(eGui);\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/headerRendering/cells/floatingFilter/headerFilterCellComp.ts\r\nvar HeaderFilterCellCompElement = {\r\n  tag: \"div\",\r\n  cls: \"ag-header-cell ag-floating-filter\",\r\n  role: \"gridcell\",\r\n  children: [\r\n    { tag: \"div\", ref: \"eFloatingFilterBody\", role: \"presentation\" },\r\n    {\r\n      tag: \"div\",\r\n      ref: \"eButtonWrapper\",\r\n      cls: \"ag-floating-filter-button ag-hidden\",\r\n      role: \"presentation\",\r\n      children: [\r\n        {\r\n          tag: \"button\",\r\n          ref: \"eButtonShowMainFilter\",\r\n          cls: \"ag-button ag-floating-filter-button-button\",\r\n          attrs: { type: \"button\", tabindex: \"-1\" }\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n};\r\nvar HeaderFilterCellComp = class extends AbstractHeaderCellComp {\r\n  constructor(ctrl) {\r\n    super(HeaderFilterCellCompElement, ctrl);\r\n    this.eFloatingFilterBody = RefPlaceholder;\r\n    this.eButtonWrapper = RefPlaceholder;\r\n    this.eButtonShowMainFilter = RefPlaceholder;\r\n  }\r\n  postConstruct() {\r\n    const eGui = this.getGui();\r\n    const compProxy = {\r\n      toggleCss: (cssClassName, on) => this.toggleCss(cssClassName, on),\r\n      setUserStyles: (styles) => _addStylesToElement(eGui, styles),\r\n      addOrRemoveBodyCssClass: (cssClassName, on) => this.eFloatingFilterBody.classList.toggle(cssClassName, on),\r\n      setButtonWrapperDisplayed: (displayed) => _setDisplayed(this.eButtonWrapper, displayed),\r\n      setCompDetails: (compDetails) => this.setCompDetails(compDetails),\r\n      getFloatingFilterComp: () => this.compPromise,\r\n      setWidth: (width) => eGui.style.width = width,\r\n      setMenuIcon: (eIcon) => this.eButtonShowMainFilter.appendChild(eIcon)\r\n    };\r\n    this.ctrl.setComp(compProxy, eGui, this.eButtonShowMainFilter, this.eFloatingFilterBody, void 0);\r\n  }\r\n  setCompDetails(compDetails) {\r\n    if (!compDetails) {\r\n      this.destroyFloatingFilterComp();\r\n      this.compPromise = null;\r\n      return;\r\n    }\r\n    this.compPromise = compDetails.newAgStackInstance();\r\n    this.compPromise.then((comp) => this.afterCompCreated(comp));\r\n  }\r\n  destroy() {\r\n    this.destroyFloatingFilterComp();\r\n    super.destroy();\r\n  }\r\n  destroyFloatingFilterComp() {\r\n    if (this.floatingFilterComp) {\r\n      this.eFloatingFilterBody.removeChild(this.floatingFilterComp.getGui());\r\n      this.floatingFilterComp = this.destroyBean(this.floatingFilterComp);\r\n    }\r\n  }\r\n  afterCompCreated(comp) {\r\n    if (!comp) {\r\n      return;\r\n    }\r\n    if (!this.isAlive()) {\r\n      this.destroyBean(comp);\r\n      return;\r\n    }\r\n    this.destroyFloatingFilterComp();\r\n    this.floatingFilterComp = comp;\r\n    this.eFloatingFilterBody.appendChild(comp.getGui());\r\n    if (comp.afterGuiAttached) {\r\n      comp.afterGuiAttached();\r\n    }\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/headerRendering/row/headerRowComp.ts\r\nvar HeaderRowComp = class extends Component {\r\n  constructor(ctrl) {\r\n    super({ tag: \"div\", cls: ctrl.headerRowClass, role: \"row\" });\r\n    this.ctrl = ctrl;\r\n    this.headerComps = {};\r\n  }\r\n  postConstruct() {\r\n    _setAriaRowIndex(this.getGui(), this.ctrl.getAriaRowIndex());\r\n    const compProxy = {\r\n      setHeight: (height) => this.getGui().style.height = height,\r\n      setTop: (top) => this.getGui().style.top = top,\r\n      setHeaderCtrls: (ctrls, forceOrder) => this.setHeaderCtrls(ctrls, forceOrder),\r\n      setWidth: (width) => this.getGui().style.width = width,\r\n      setRowIndex: (rowIndex) => _setAriaRowIndex(this.getGui(), rowIndex)\r\n    };\r\n    this.ctrl.setComp(compProxy, void 0);\r\n  }\r\n  destroy() {\r\n    this.setHeaderCtrls([], false);\r\n    super.destroy();\r\n  }\r\n  setHeaderCtrls(ctrls, forceOrder) {\r\n    if (!this.isAlive()) {\r\n      return;\r\n    }\r\n    const oldComps = this.headerComps;\r\n    this.headerComps = {};\r\n    ctrls.forEach((ctrl) => {\r\n      const id = ctrl.instanceId;\r\n      let comp = oldComps[id];\r\n      delete oldComps[id];\r\n      if (comp == null) {\r\n        comp = this.createHeaderComp(ctrl);\r\n        this.getGui().appendChild(comp.getGui());\r\n      }\r\n      this.headerComps[id] = comp;\r\n    });\r\n    Object.values(oldComps).forEach((comp) => {\r\n      this.getGui().removeChild(comp.getGui());\r\n      this.destroyBean(comp);\r\n    });\r\n    if (forceOrder) {\r\n      const comps = Object.values(this.headerComps);\r\n      comps.sort(\r\n        (a, b) => {\r\n          const leftA = a.getCtrl().column.getLeft();\r\n          const leftB = b.getCtrl().column.getLeft();\r\n          return leftA - leftB;\r\n        }\r\n      );\r\n      const elementsInOrder = comps.map((c) => c.getGui());\r\n      _setDomChildOrder(this.getGui(), elementsInOrder);\r\n    }\r\n  }\r\n  createHeaderComp(headerCtrl) {\r\n    let result;\r\n    switch (this.ctrl.type) {\r\n      case \"group\":\r\n        result = new HeaderGroupCellComp(headerCtrl);\r\n        break;\r\n      case \"filter\":\r\n        result = new HeaderFilterCellComp(headerCtrl);\r\n        break;\r\n      default:\r\n        result = new HeaderCellComp(headerCtrl);\r\n        break;\r\n    }\r\n    this.createBean(result);\r\n    result.setParentComponent(this);\r\n    return result;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/rendering/features/setLeftFeature.ts\r\nvar SetLeftFeature = class extends BeanStub {\r\n  constructor(columnOrGroup, eCell, beans, colsSpanning) {\r\n    super();\r\n    this.columnOrGroup = columnOrGroup;\r\n    this.eCell = eCell;\r\n    this.colsSpanning = colsSpanning;\r\n    this.columnOrGroup = columnOrGroup;\r\n    this.ariaEl = eCell.querySelector(\"[role=columnheader]\") || eCell;\r\n    this.beans = beans;\r\n  }\r\n  setColsSpanning(colsSpanning) {\r\n    this.colsSpanning = colsSpanning;\r\n    this.onLeftChanged();\r\n  }\r\n  getColumnOrGroup() {\r\n    const { beans, colsSpanning } = this;\r\n    if (beans.gos.get(\"enableRtl\") && colsSpanning) {\r\n      return _last(colsSpanning);\r\n    }\r\n    return this.columnOrGroup;\r\n  }\r\n  postConstruct() {\r\n    const onLeftChanged = this.onLeftChanged.bind(this);\r\n    this.addManagedListeners(this.columnOrGroup, { leftChanged: onLeftChanged });\r\n    this.setLeftFirstTime();\r\n    this.addManagedEventListeners({ displayedColumnsWidthChanged: onLeftChanged });\r\n    this.addManagedPropertyListener(\"domLayout\", onLeftChanged);\r\n  }\r\n  setLeftFirstTime() {\r\n    const { gos, colAnimation } = this.beans;\r\n    const suppressMoveAnimation = gos.get(\"suppressColumnMoveAnimation\");\r\n    const oldLeftExists = _exists(this.columnOrGroup.getOldLeft());\r\n    const animateColumnMove = colAnimation?.isActive() && oldLeftExists && !suppressMoveAnimation;\r\n    if (animateColumnMove) {\r\n      this.animateInLeft();\r\n    } else {\r\n      this.onLeftChanged();\r\n    }\r\n  }\r\n  animateInLeft() {\r\n    const colOrGroup = this.getColumnOrGroup();\r\n    const oldActualLeft = this.modifyLeftForPrintLayout(colOrGroup, colOrGroup.getOldLeft());\r\n    const actualLeft = this.modifyLeftForPrintLayout(colOrGroup, colOrGroup.getLeft());\r\n    this.setLeft(oldActualLeft);\r\n    this.actualLeft = actualLeft;\r\n    this.beans.colAnimation.executeNextVMTurn(() => {\r\n      if (this.actualLeft === actualLeft) {\r\n        this.setLeft(actualLeft);\r\n      }\r\n    });\r\n  }\r\n  onLeftChanged() {\r\n    const colOrGroup = this.getColumnOrGroup();\r\n    const left = colOrGroup.getLeft();\r\n    this.actualLeft = this.modifyLeftForPrintLayout(colOrGroup, left);\r\n    this.setLeft(this.actualLeft);\r\n  }\r\n  modifyLeftForPrintLayout(colOrGroup, leftPosition) {\r\n    const { gos, visibleCols } = this.beans;\r\n    const printLayout = _isDomLayout(gos, \"print\");\r\n    if (!printLayout) {\r\n      return leftPosition;\r\n    }\r\n    if (colOrGroup.getPinned() === \"left\") {\r\n      return leftPosition;\r\n    }\r\n    const leftWidth = visibleCols.getColsLeftWidth();\r\n    if (colOrGroup.getPinned() === \"right\") {\r\n      const bodyWidth = visibleCols.bodyWidth;\r\n      return leftWidth + bodyWidth + leftPosition;\r\n    }\r\n    return leftWidth + leftPosition;\r\n  }\r\n  setLeft(value) {\r\n    if (_exists(value)) {\r\n      this.eCell.style.left = `${value}px`;\r\n    }\r\n    if (isColumnGroup(this.columnOrGroup)) {\r\n      const children = this.columnOrGroup.getLeafColumns();\r\n      if (!children.length) {\r\n        return;\r\n      }\r\n      if (children.length > 1) {\r\n        _setAriaColSpan(this.ariaEl, children.length);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/headerRendering/cells/abstractCell/abstractHeaderCellCtrl.ts\r\nvar instanceIdSequence4 = 0;\r\nvar DOM_DATA_KEY_HEADER_CTRL = \"headerCtrl\";\r\nvar AbstractHeaderCellCtrl = class extends BeanStub {\r\n  constructor(column, rowCtrl) {\r\n    super();\r\n    this.column = column;\r\n    this.rowCtrl = rowCtrl;\r\n    this.resizeToggleTimeout = 0;\r\n    this.resizeMultiplier = 1;\r\n    this.resizeFeature = null;\r\n    this.lastFocusEvent = null;\r\n    this.dragSource = null;\r\n    this.instanceId = column.getUniqueId() + \"-\" + instanceIdSequence4++;\r\n  }\r\n  postConstruct() {\r\n    const refreshTabIndex = this.refreshTabIndex.bind(this);\r\n    this.addManagedPropertyListeners([\"suppressHeaderFocus\"], refreshTabIndex);\r\n    this.addManagedEventListeners({\r\n      overlayExclusiveChanged: refreshTabIndex\r\n    });\r\n  }\r\n  shouldStopEventPropagation(event) {\r\n    const { headerRowIndex, column } = this.beans.focusSvc.focusedHeader;\r\n    const colDef = column.getDefinition();\r\n    const colDefFunc = colDef && colDef.suppressHeaderKeyboardEvent;\r\n    if (!_exists(colDefFunc)) {\r\n      return false;\r\n    }\r\n    const params = _addGridCommonParams(this.gos, {\r\n      colDef,\r\n      column,\r\n      headerRowIndex,\r\n      event\r\n    });\r\n    return !!colDefFunc(params);\r\n  }\r\n  getWrapperHasFocus() {\r\n    const activeEl = _getActiveDomElement(this.beans);\r\n    return activeEl === this.eGui;\r\n  }\r\n  setGui(eGui, compBean) {\r\n    this.eGui = eGui;\r\n    this.addDomData(compBean);\r\n    compBean.addManagedListeners(this.beans.eventSvc, {\r\n      displayedColumnsChanged: this.onDisplayedColumnsChanged.bind(this)\r\n    });\r\n    compBean.addManagedElementListeners(this.eGui, {\r\n      focus: this.onGuiFocus.bind(this)\r\n    });\r\n    this.onDisplayedColumnsChanged();\r\n    this.refreshTabIndex();\r\n  }\r\n  refreshHeaderStyles() {\r\n    const colDef = this.column.getDefinition();\r\n    if (!colDef) {\r\n      return;\r\n    }\r\n    const { headerStyle } = colDef;\r\n    let styles;\r\n    if (typeof headerStyle === \"function\") {\r\n      const cellStyleParams = this.getHeaderClassParams();\r\n      styles = headerStyle(cellStyleParams);\r\n    } else {\r\n      styles = headerStyle;\r\n    }\r\n    if (styles) {\r\n      this.comp.setUserStyles(styles);\r\n    }\r\n  }\r\n  onGuiFocus() {\r\n    this.eventSvc.dispatchEvent({\r\n      type: \"headerFocused\",\r\n      column: this.column\r\n    });\r\n  }\r\n  setupAutoHeight(params) {\r\n    const { wrapperElement, checkMeasuringCallback, compBean } = params;\r\n    const { beans } = this;\r\n    const measureHeight = (timesCalled) => {\r\n      if (!this.isAlive() || !compBean.isAlive()) {\r\n        return;\r\n      }\r\n      const { paddingTop, paddingBottom, borderBottomWidth, borderTopWidth } = _getElementSize(this.eGui);\r\n      const extraHeight = paddingTop + paddingBottom + borderBottomWidth + borderTopWidth;\r\n      const wrapperHeight = wrapperElement.offsetHeight;\r\n      const autoHeight = wrapperHeight + extraHeight;\r\n      if (timesCalled < 5) {\r\n        const doc = _getDocument(beans);\r\n        const notYetInDom = !doc || !doc.contains(wrapperElement);\r\n        const possiblyNoContentYet = autoHeight == 0;\r\n        if (notYetInDom || possiblyNoContentYet) {\r\n          _batchCall(() => measureHeight(timesCalled + 1), \"raf\", beans);\r\n          return;\r\n        }\r\n      }\r\n      this.setColHeaderHeight(this.column, autoHeight);\r\n    };\r\n    let isMeasuring = false;\r\n    let stopResizeObserver;\r\n    const checkMeasuring = () => {\r\n      const newValue = this.column.isAutoHeaderHeight();\r\n      if (newValue && !isMeasuring) {\r\n        startMeasuring();\r\n      }\r\n      if (!newValue && isMeasuring) {\r\n        stopMeasuring();\r\n      }\r\n    };\r\n    const startMeasuring = () => {\r\n      isMeasuring = true;\r\n      measureHeight(0);\r\n      this.comp.toggleCss(\"ag-header-cell-auto-height\", true);\r\n      stopResizeObserver = _observeResize(this.beans, wrapperElement, () => measureHeight(0));\r\n    };\r\n    const stopMeasuring = () => {\r\n      isMeasuring = false;\r\n      if (stopResizeObserver) {\r\n        stopResizeObserver();\r\n      }\r\n      this.comp.toggleCss(\"ag-header-cell-auto-height\", false);\r\n      stopResizeObserver = void 0;\r\n    };\r\n    checkMeasuring();\r\n    compBean.addDestroyFunc(() => stopMeasuring());\r\n    compBean.addManagedListeners(this.column, { widthChanged: () => isMeasuring && measureHeight(0) });\r\n    compBean.addManagedEventListeners({\r\n      sortChanged: () => {\r\n        if (isMeasuring) {\r\n          window.setTimeout(() => measureHeight(0));\r\n        }\r\n      }\r\n    });\r\n    if (checkMeasuringCallback) {\r\n      checkMeasuringCallback(checkMeasuring);\r\n    }\r\n  }\r\n  onDisplayedColumnsChanged() {\r\n    const { comp, column, beans, eGui } = this;\r\n    if (!comp || !column || !eGui) {\r\n      return;\r\n    }\r\n    refreshFirstAndLastStyles(comp, column, beans.visibleCols);\r\n    _setAriaColIndex(eGui, beans.visibleCols.getAriaColIndex(column));\r\n  }\r\n  addResizeAndMoveKeyboardListeners(compBean) {\r\n    compBean.addManagedListeners(this.eGui, {\r\n      keydown: this.onGuiKeyDown.bind(this),\r\n      keyup: this.onGuiKeyUp.bind(this)\r\n    });\r\n  }\r\n  refreshTabIndex() {\r\n    const suppressHeaderFocus = _isHeaderFocusSuppressed(this.beans);\r\n    if (this.eGui) {\r\n      _addOrRemoveAttribute(this.eGui, \"tabindex\", suppressHeaderFocus ? null : \"-1\");\r\n    }\r\n  }\r\n  onGuiKeyDown(e) {\r\n    const activeEl = _getActiveDomElement(this.beans);\r\n    const isLeftOrRight = e.key === KeyCode.LEFT || e.key === KeyCode.RIGHT;\r\n    if (this.isResizing) {\r\n      e.preventDefault();\r\n      e.stopImmediatePropagation();\r\n    }\r\n    if (\r\n      // if elements within the header are focused, we don't process the event\r\n      activeEl !== this.eGui || // if shiftKey and altKey are not pressed, it's cell navigation so we don't process the event\r\n      !e.shiftKey && !e.altKey\r\n    ) {\r\n      return;\r\n    }\r\n    if (this.isResizing || isLeftOrRight) {\r\n      e.preventDefault();\r\n      e.stopImmediatePropagation();\r\n    }\r\n    if (!isLeftOrRight) {\r\n      return;\r\n    }\r\n    const isLeft = e.key === KeyCode.LEFT !== this.gos.get(\"enableRtl\");\r\n    const direction = isLeft ? \"left\" : \"right\";\r\n    if (e.altKey) {\r\n      this.isResizing = true;\r\n      this.resizeMultiplier += 1;\r\n      const diff = this.getViewportAdjustedResizeDiff(e);\r\n      this.resizeHeader(diff, e.shiftKey);\r\n      this.resizeFeature?.toggleColumnResizing(true);\r\n    } else {\r\n      this.moveHeader(direction);\r\n    }\r\n  }\r\n  moveHeader(hDirection) {\r\n    this.beans.colMoves?.moveHeader(hDirection, this.eGui, this.column, this.rowCtrl.pinned, this);\r\n  }\r\n  getViewportAdjustedResizeDiff(e) {\r\n    const diff = this.getResizeDiff(e);\r\n    const { pinnedCols } = this.beans;\r\n    return pinnedCols ? pinnedCols.getHeaderResizeDiff(diff, this.column) : diff;\r\n  }\r\n  getResizeDiff(e) {\r\n    const { gos, column } = this;\r\n    let isLeft = e.key === KeyCode.LEFT !== gos.get(\"enableRtl\");\r\n    const pinned = column.getPinned();\r\n    const isRtl = gos.get(\"enableRtl\");\r\n    if (pinned) {\r\n      if (isRtl !== (pinned === \"right\")) {\r\n        isLeft = !isLeft;\r\n      }\r\n    }\r\n    return (isLeft ? -1 : 1) * this.resizeMultiplier;\r\n  }\r\n  onGuiKeyUp() {\r\n    if (!this.isResizing) {\r\n      return;\r\n    }\r\n    if (this.resizeToggleTimeout) {\r\n      window.clearTimeout(this.resizeToggleTimeout);\r\n      this.resizeToggleTimeout = 0;\r\n    }\r\n    this.isResizing = false;\r\n    this.resizeMultiplier = 1;\r\n    this.resizeToggleTimeout = window.setTimeout(() => {\r\n      this.resizeFeature?.toggleColumnResizing(false);\r\n    }, 150);\r\n  }\r\n  handleKeyDown(e) {\r\n    const wrapperHasFocus = this.getWrapperHasFocus();\r\n    switch (e.key) {\r\n      case KeyCode.PAGE_DOWN:\r\n      case KeyCode.PAGE_UP:\r\n      case KeyCode.PAGE_HOME:\r\n      case KeyCode.PAGE_END:\r\n        if (wrapperHasFocus) {\r\n          e.preventDefault();\r\n        }\r\n    }\r\n  }\r\n  addDomData(compBean) {\r\n    const key = DOM_DATA_KEY_HEADER_CTRL;\r\n    const { eGui, gos } = this;\r\n    _setDomData(gos, eGui, key, this);\r\n    compBean.addDestroyFunc(() => _setDomData(gos, eGui, key, null));\r\n  }\r\n  focus(event) {\r\n    const { eGui } = this;\r\n    if (!eGui) {\r\n      return false;\r\n    }\r\n    this.lastFocusEvent = event || null;\r\n    eGui.focus();\r\n    return true;\r\n  }\r\n  focusThis() {\r\n    this.beans.focusSvc.focusedHeader = { headerRowIndex: this.rowCtrl.rowIndex, column: this.column };\r\n  }\r\n  removeDragSource() {\r\n    if (this.dragSource) {\r\n      this.beans.dragAndDrop?.removeDragSource(this.dragSource);\r\n      this.dragSource = null;\r\n    }\r\n  }\r\n  handleContextMenuMouseEvent(mouseEvent, touchEvent, column) {\r\n    const event = mouseEvent ?? touchEvent;\r\n    const { menuSvc, gos } = this.beans;\r\n    if (gos.get(\"preventDefaultOnContextMenu\")) {\r\n      event.preventDefault();\r\n    }\r\n    if (menuSvc?.isHeaderContextMenuEnabled(column)) {\r\n      menuSvc.showHeaderContextMenu(column, mouseEvent, touchEvent);\r\n    }\r\n    this.dispatchColumnMouseEvent(\"columnHeaderContextMenu\", column);\r\n  }\r\n  dispatchColumnMouseEvent(eventType, column) {\r\n    this.eventSvc.dispatchEvent({\r\n      type: eventType,\r\n      column\r\n    });\r\n  }\r\n  setColHeaderHeight(col, height) {\r\n    if (!col.setAutoHeaderHeight(height)) {\r\n      return;\r\n    }\r\n    const { eventSvc } = this;\r\n    if (col.isColumn) {\r\n      eventSvc.dispatchEvent({\r\n        type: \"columnHeaderHeightChanged\",\r\n        column: col,\r\n        columns: [col],\r\n        source: \"autosizeColumnHeaderHeight\"\r\n      });\r\n    } else {\r\n      eventSvc.dispatchEvent({\r\n        type: \"columnGroupHeaderHeightChanged\",\r\n        columnGroup: col,\r\n        source: \"autosizeColumnGroupHeaderHeight\"\r\n      });\r\n    }\r\n  }\r\n  clearComponent() {\r\n    this.removeDragSource();\r\n    this.resizeFeature = null;\r\n    this.comp = null;\r\n    this.eGui = null;\r\n  }\r\n  destroy() {\r\n    super.destroy();\r\n    this.column = null;\r\n    this.lastFocusEvent = null;\r\n    this.rowCtrl = null;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/headerRendering/cells/column/headerCellCtrl.ts\r\nvar HeaderCellCtrl = class extends AbstractHeaderCellCtrl {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.refreshFunctions = {};\r\n    this.userHeaderClasses = /* @__PURE__ */ new Set();\r\n    this.ariaDescriptionProperties = /* @__PURE__ */ new Map();\r\n  }\r\n  setComp(comp, eGui, eResize, eHeaderCompWrapper, compBeanInput) {\r\n    this.comp = comp;\r\n    const { rowCtrl, column, beans } = this;\r\n    const { colResize, context, colHover, rangeSvc } = beans;\r\n    const compBean = setupCompBean(this, context, compBeanInput);\r\n    this.setGui(eGui, compBean);\r\n    this.updateState();\r\n    this.setupWidth(compBean);\r\n    this.setupMovingCss(compBean);\r\n    this.setupMenuClass(compBean);\r\n    this.setupSortableClass(compBean);\r\n    this.setupWrapTextClass();\r\n    this.refreshSpanHeaderHeight();\r\n    this.setupAutoHeight({\r\n      wrapperElement: eHeaderCompWrapper,\r\n      checkMeasuringCallback: (checkMeasuring) => this.setRefreshFunction(\"measuring\", checkMeasuring),\r\n      compBean\r\n    });\r\n    this.addColumnHoverListener(compBean);\r\n    this.setupFilterClass(compBean);\r\n    this.setupStylesFromColDef();\r\n    this.setupClassesFromColDef();\r\n    this.setupTooltip();\r\n    this.addActiveHeaderMouseListeners(compBean);\r\n    this.setupSelectAll(compBean);\r\n    this.setupUserComp();\r\n    this.refreshAria();\r\n    if (colResize) {\r\n      this.resizeFeature = compBean.createManagedBean(\r\n        colResize.createResizeFeature(rowCtrl.pinned, column, eResize, comp, this)\r\n      );\r\n    } else {\r\n      _setDisplayed(eResize, false);\r\n    }\r\n    colHover?.createHoverFeature(compBean, [column], eGui);\r\n    rangeSvc?.createRangeHighlightFeature(compBean, column, comp);\r\n    compBean.createManagedBean(new SetLeftFeature(column, eGui, beans));\r\n    compBean.createManagedBean(\r\n      new ManagedFocusFeature(eGui, {\r\n        shouldStopEventPropagation: (e) => this.shouldStopEventPropagation(e),\r\n        onTabKeyDown: () => null,\r\n        handleKeyDown: this.handleKeyDown.bind(this),\r\n        onFocusIn: this.onFocusIn.bind(this),\r\n        onFocusOut: this.onFocusOut.bind(this)\r\n      })\r\n    );\r\n    this.addResizeAndMoveKeyboardListeners(compBean);\r\n    compBean.addManagedPropertyListeners(\r\n      [\"suppressMovableColumns\", \"suppressMenuHide\", \"suppressAggFuncInHeader\", \"enableAdvancedFilter\"],\r\n      () => this.refresh()\r\n    );\r\n    compBean.addManagedListeners(column, { colDefChanged: () => this.refresh() });\r\n    compBean.addManagedListeners(column, { headerHighlightChanged: this.onHeaderHighlightChanged.bind(this) });\r\n    const listener = () => this.checkDisplayName();\r\n    compBean.addManagedEventListeners({\r\n      columnValueChanged: listener,\r\n      columnRowGroupChanged: listener,\r\n      columnPivotChanged: listener,\r\n      headerHeightChanged: this.onHeaderHeightChanged.bind(this)\r\n    });\r\n    compBean.addDestroyFunc(() => {\r\n      this.refreshFunctions = {};\r\n      this.selectAllFeature = null;\r\n      this.dragSourceElement = void 0;\r\n      this.userCompDetails = null;\r\n      this.userHeaderClasses.clear();\r\n      this.ariaDescriptionProperties.clear();\r\n      this.clearComponent();\r\n    });\r\n  }\r\n  resizeHeader(delta, shiftKey) {\r\n    this.beans.colResize?.resizeHeader(this.column, delta, shiftKey);\r\n  }\r\n  getHeaderClassParams() {\r\n    const { column, beans } = this;\r\n    const colDef = column.colDef;\r\n    return _addGridCommonParams(beans.gos, {\r\n      colDef,\r\n      column,\r\n      floatingFilter: false\r\n    });\r\n  }\r\n  setupUserComp() {\r\n    const compDetails = this.lookupUserCompDetails();\r\n    if (compDetails) {\r\n      this.setCompDetails(compDetails);\r\n    }\r\n  }\r\n  setCompDetails(compDetails) {\r\n    this.userCompDetails = compDetails;\r\n    this.comp.setUserCompDetails(compDetails);\r\n  }\r\n  lookupUserCompDetails() {\r\n    const params = this.createParams();\r\n    const colDef = this.column.getColDef();\r\n    return _getHeaderCompDetails(this.beans.userCompFactory, colDef, params);\r\n  }\r\n  createParams() {\r\n    const { menuSvc, sortSvc, colFilter, gos } = this.beans;\r\n    const params = _addGridCommonParams(gos, {\r\n      column: this.column,\r\n      displayName: this.displayName,\r\n      enableSorting: this.column.isSortable(),\r\n      enableMenu: this.menuEnabled,\r\n      enableFilterButton: this.openFilterEnabled && !!menuSvc?.isHeaderFilterButtonEnabled(this.column),\r\n      enableFilterIcon: !!colFilter && (!this.openFilterEnabled || _isLegacyMenuEnabled(this.gos)),\r\n      showColumnMenu: (buttonElement, onClosedCallback) => {\r\n        menuSvc?.showColumnMenu({\r\n          column: this.column,\r\n          buttonElement,\r\n          positionBy: \"button\",\r\n          onClosedCallback\r\n        });\r\n      },\r\n      showColumnMenuAfterMouseClick: (mouseEvent, onClosedCallback) => {\r\n        menuSvc?.showColumnMenu({\r\n          column: this.column,\r\n          mouseEvent,\r\n          positionBy: \"mouse\",\r\n          onClosedCallback\r\n        });\r\n      },\r\n      showFilter: (buttonElement) => {\r\n        menuSvc?.showFilterMenu({\r\n          column: this.column,\r\n          buttonElement,\r\n          containerType: \"columnFilter\",\r\n          positionBy: \"button\"\r\n        });\r\n      },\r\n      progressSort: (multiSort) => {\r\n        sortSvc?.progressSort(this.column, !!multiSort, \"uiColumnSorted\");\r\n      },\r\n      setSort: (sort, multiSort) => {\r\n        sortSvc?.setSortForColumn(this.column, sort, !!multiSort, \"uiColumnSorted\");\r\n      },\r\n      eGridHeader: this.eGui,\r\n      setTooltip: (value, shouldDisplayTooltip) => {\r\n        gos.assertModuleRegistered(\"Tooltip\", 3);\r\n        this.setupTooltip(value, shouldDisplayTooltip);\r\n      }\r\n    });\r\n    return params;\r\n  }\r\n  setupSelectAll(compBean) {\r\n    const { selectionSvc } = this.beans;\r\n    if (!selectionSvc) {\r\n      return;\r\n    }\r\n    this.selectAllFeature = compBean.createOptionalManagedBean(selectionSvc.createSelectAllFeature(this.column));\r\n    this.selectAllFeature?.setComp(this);\r\n    compBean.addManagedPropertyListener(\"rowSelection\", () => {\r\n      const selectAllFeature = selectionSvc.createSelectAllFeature(this.column);\r\n      if (selectAllFeature && !this.selectAllFeature) {\r\n        this.selectAllFeature = compBean.createManagedBean(selectAllFeature);\r\n        this.selectAllFeature?.setComp(this);\r\n        this.comp.refreshSelectAllGui();\r\n      } else if (this.selectAllFeature && !selectAllFeature) {\r\n        this.comp.removeSelectAllGui();\r\n        this.selectAllFeature = this.destroyBean(this.selectAllFeature);\r\n      }\r\n    });\r\n  }\r\n  getSelectAllGui() {\r\n    return this.selectAllFeature?.getCheckboxGui();\r\n  }\r\n  handleKeyDown(e) {\r\n    super.handleKeyDown(e);\r\n    if (e.key === KeyCode.SPACE) {\r\n      this.selectAllFeature?.onSpaceKeyDown(e);\r\n    }\r\n    if (e.key === KeyCode.ENTER) {\r\n      this.onEnterKeyDown(e);\r\n    }\r\n    if (e.key === KeyCode.DOWN && e.altKey) {\r\n      this.showMenuOnKeyPress(e, false);\r\n    }\r\n  }\r\n  onEnterKeyDown(e) {\r\n    if (e.ctrlKey || e.metaKey) {\r\n      this.showMenuOnKeyPress(e, true);\r\n    } else if (this.sortable) {\r\n      this.beans.sortSvc?.progressSort(this.column, e.shiftKey, \"uiColumnSorted\");\r\n    }\r\n  }\r\n  showMenuOnKeyPress(e, isFilterShortcut) {\r\n    const headerComp = this.comp.getUserCompInstance();\r\n    if (!isHeaderComp(headerComp)) {\r\n      return;\r\n    }\r\n    if (headerComp.onMenuKeyboardShortcut(isFilterShortcut)) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n  onFocusIn(e) {\r\n    if (!this.eGui.contains(e.relatedTarget)) {\r\n      this.focusThis();\r\n      this.announceAriaDescription();\r\n    }\r\n    if (_isKeyboardMode()) {\r\n      this.setActiveHeader(true);\r\n    }\r\n  }\r\n  onFocusOut(e) {\r\n    if (this.eGui.contains(e.relatedTarget)) {\r\n      return;\r\n    }\r\n    this.setActiveHeader(false);\r\n  }\r\n  setupTooltip(value, shouldDisplayTooltip) {\r\n    this.tooltipFeature = this.beans.tooltipSvc?.setupHeaderTooltip(\r\n      this.tooltipFeature,\r\n      this,\r\n      value,\r\n      shouldDisplayTooltip\r\n    );\r\n  }\r\n  setupStylesFromColDef() {\r\n    this.setRefreshFunction(\"headerStyles\", this.refreshHeaderStyles.bind(this));\r\n    this.refreshHeaderStyles();\r\n  }\r\n  setupClassesFromColDef() {\r\n    const refreshHeaderClasses = () => {\r\n      const colDef = this.column.getColDef();\r\n      const classes = _getHeaderClassesFromColDef(colDef, this.gos, this.column, null);\r\n      const oldClasses = this.userHeaderClasses;\r\n      this.userHeaderClasses = new Set(classes);\r\n      classes.forEach((c) => {\r\n        if (oldClasses.has(c)) {\r\n          oldClasses.delete(c);\r\n        } else {\r\n          this.comp.toggleCss(c, true);\r\n        }\r\n      });\r\n      oldClasses.forEach((c) => this.comp.toggleCss(c, false));\r\n    };\r\n    this.setRefreshFunction(\"headerClasses\", refreshHeaderClasses);\r\n    refreshHeaderClasses();\r\n  }\r\n  setDragSource(eSource) {\r\n    this.dragSourceElement = eSource;\r\n    this.removeDragSource();\r\n    if (!eSource || !this.draggable) {\r\n      return;\r\n    }\r\n    this.dragSource = this.beans.colMoves?.setDragSourceForHeader(eSource, this.column, this.displayName) ?? null;\r\n  }\r\n  updateState() {\r\n    const { menuSvc } = this.beans;\r\n    this.menuEnabled = !!menuSvc?.isColumnMenuInHeaderEnabled(this.column);\r\n    this.openFilterEnabled = !!menuSvc?.isFilterMenuInHeaderEnabled(this.column);\r\n    this.sortable = this.column.isSortable();\r\n    this.displayName = this.calculateDisplayName();\r\n    this.draggable = this.workOutDraggable();\r\n  }\r\n  setRefreshFunction(name, func) {\r\n    this.refreshFunctions[name] = func;\r\n  }\r\n  refresh() {\r\n    this.updateState();\r\n    this.refreshHeaderComp();\r\n    this.refreshAria();\r\n    Object.values(this.refreshFunctions).forEach((f) => f());\r\n  }\r\n  refreshHeaderComp() {\r\n    const newCompDetails = this.lookupUserCompDetails();\r\n    if (!newCompDetails) {\r\n      return;\r\n    }\r\n    const compInstance = this.comp.getUserCompInstance();\r\n    const attemptRefresh = compInstance != null && this.userCompDetails.componentClass == newCompDetails.componentClass;\r\n    const headerCompRefreshed = attemptRefresh ? this.attemptHeaderCompRefresh(newCompDetails.params) : false;\r\n    if (headerCompRefreshed) {\r\n      this.setDragSource(this.dragSourceElement);\r\n    } else {\r\n      this.setCompDetails(newCompDetails);\r\n    }\r\n  }\r\n  attemptHeaderCompRefresh(params) {\r\n    const headerComp = this.comp.getUserCompInstance();\r\n    if (!headerComp) {\r\n      return false;\r\n    }\r\n    if (!headerComp.refresh) {\r\n      return false;\r\n    }\r\n    const res = headerComp.refresh(params);\r\n    return res;\r\n  }\r\n  calculateDisplayName() {\r\n    return this.beans.colNames.getDisplayNameForColumn(this.column, \"header\", true);\r\n  }\r\n  checkDisplayName() {\r\n    if (this.displayName !== this.calculateDisplayName()) {\r\n      this.refresh();\r\n    }\r\n  }\r\n  workOutDraggable() {\r\n    const colDef = this.column.getColDef();\r\n    const isSuppressMovableColumns = this.gos.get(\"suppressMovableColumns\");\r\n    const colCanMove = !isSuppressMovableColumns && !colDef.suppressMovable && !colDef.lockPosition;\r\n    return !!colCanMove || !!colDef.enableRowGroup || !!colDef.enablePivot;\r\n  }\r\n  setupWidth(compBean) {\r\n    const listener = () => {\r\n      const columnWidth = this.column.getActualWidth();\r\n      this.comp.setWidth(`${columnWidth}px`);\r\n    };\r\n    compBean.addManagedListeners(this.column, { widthChanged: listener });\r\n    listener();\r\n  }\r\n  setupMovingCss(compBean) {\r\n    const listener = () => {\r\n      this.comp.toggleCss(\"ag-header-cell-moving\", this.column.isMoving());\r\n    };\r\n    compBean.addManagedListeners(this.column, { movingChanged: listener });\r\n    listener();\r\n  }\r\n  setupMenuClass(compBean) {\r\n    const listener = () => {\r\n      this.comp?.toggleCss(\"ag-column-menu-visible\", this.column.isMenuVisible());\r\n    };\r\n    compBean.addManagedListeners(this.column, { menuVisibleChanged: listener });\r\n    listener();\r\n  }\r\n  setupSortableClass(compBean) {\r\n    const updateSortableCssClass = () => {\r\n      this.comp.toggleCss(\"ag-header-cell-sortable\", !!this.sortable);\r\n    };\r\n    updateSortableCssClass();\r\n    this.setRefreshFunction(\"updateSortable\", updateSortableCssClass);\r\n    compBean.addManagedEventListeners({ sortChanged: this.refreshAriaSort.bind(this) });\r\n  }\r\n  setupFilterClass(compBean) {\r\n    const listener = () => {\r\n      const isFilterActive = this.column.isFilterActive();\r\n      this.comp.toggleCss(\"ag-header-cell-filtered\", isFilterActive);\r\n      this.refreshAria();\r\n    };\r\n    compBean.addManagedListeners(this.column, { filterActiveChanged: listener });\r\n    listener();\r\n  }\r\n  setupWrapTextClass() {\r\n    const listener = () => {\r\n      const wrapText = !!this.column.getColDef().wrapHeaderText;\r\n      this.comp.toggleCss(\"ag-header-cell-wrap-text\", wrapText);\r\n    };\r\n    listener();\r\n    this.setRefreshFunction(\"wrapText\", listener);\r\n  }\r\n  onHeaderHighlightChanged() {\r\n    const highlighted = this.column.getHighlighted();\r\n    const beforeOn = highlighted === 0 /* Before */;\r\n    const afterOn = highlighted === 1 /* After */;\r\n    this.comp.toggleCss(\"ag-header-highlight-before\", beforeOn);\r\n    this.comp.toggleCss(\"ag-header-highlight-after\", afterOn);\r\n  }\r\n  onDisplayedColumnsChanged() {\r\n    super.onDisplayedColumnsChanged();\r\n    if (!this.isAlive()) {\r\n      return;\r\n    }\r\n    this.onHeaderHeightChanged();\r\n  }\r\n  onHeaderHeightChanged() {\r\n    this.refreshSpanHeaderHeight();\r\n  }\r\n  refreshSpanHeaderHeight() {\r\n    const { eGui, column, comp, beans } = this;\r\n    const groupHeaderHeight = getGroupRowsHeight(this.beans);\r\n    const isZeroGroupHeight = groupHeaderHeight.reduce((total, next) => total += next, 0) === 0;\r\n    comp.toggleCss(\"ag-header-parent-hidden\", isZeroGroupHeight);\r\n    if (!column.isSpanHeaderHeight()) {\r\n      eGui.style.removeProperty(\"top\");\r\n      eGui.style.removeProperty(\"height\");\r\n      comp.toggleCss(\"ag-header-span-height\", false);\r\n      comp.toggleCss(\"ag-header-span-total\", false);\r\n      return;\r\n    }\r\n    const { numberOfParents, isSpanningTotal } = this.column.getColumnGroupPaddingInfo();\r\n    comp.toggleCss(\"ag-header-span-height\", numberOfParents > 0);\r\n    const headerHeight = getColumnHeaderRowHeight(beans);\r\n    if (numberOfParents === 0) {\r\n      comp.toggleCss(\"ag-header-span-total\", false);\r\n      eGui.style.setProperty(\"top\", `0px`);\r\n      eGui.style.setProperty(\"height\", `${headerHeight}px`);\r\n      return;\r\n    }\r\n    comp.toggleCss(\"ag-header-span-total\", isSpanningTotal);\r\n    const indexToStartSpanning = (this.column.getFirstRealParent()?.getLevel() ?? -1) + 1;\r\n    const rowsToSpan = groupHeaderHeight.length - indexToStartSpanning;\r\n    let extraHeight = 0;\r\n    for (let i = 0; i < rowsToSpan; i++) {\r\n      extraHeight += groupHeaderHeight[groupHeaderHeight.length - 1 - i];\r\n    }\r\n    eGui.style.setProperty(\"top\", `${-extraHeight}px`);\r\n    eGui.style.setProperty(\"height\", `${headerHeight + extraHeight}px`);\r\n  }\r\n  refreshAriaSort() {\r\n    if (this.sortable) {\r\n      const translate = this.getLocaleTextFunc();\r\n      const sort = this.beans.sortSvc?.getDisplaySortForColumn(this.column) || null;\r\n      this.comp.setAriaSort(_getAriaSortState(sort));\r\n      this.setAriaDescriptionProperty(\"sort\", translate(\"ariaSortableColumn\", \"Press ENTER to sort\"));\r\n    } else {\r\n      this.comp.setAriaSort();\r\n      this.setAriaDescriptionProperty(\"sort\", null);\r\n    }\r\n  }\r\n  refreshAriaMenu() {\r\n    if (this.menuEnabled) {\r\n      const translate = this.getLocaleTextFunc();\r\n      this.setAriaDescriptionProperty(\"menu\", translate(\"ariaMenuColumn\", \"Press ALT DOWN to open column menu\"));\r\n    } else {\r\n      this.setAriaDescriptionProperty(\"menu\", null);\r\n    }\r\n  }\r\n  refreshAriaFilterButton() {\r\n    if (this.openFilterEnabled && !_isLegacyMenuEnabled(this.gos)) {\r\n      const translate = this.getLocaleTextFunc();\r\n      this.setAriaDescriptionProperty(\r\n        \"filterButton\",\r\n        translate(\"ariaFilterColumn\", \"Press CTRL ENTER to open filter\")\r\n      );\r\n    } else {\r\n      this.setAriaDescriptionProperty(\"filterButton\", null);\r\n    }\r\n  }\r\n  refreshAriaFiltered() {\r\n    const translate = this.getLocaleTextFunc();\r\n    const isFilterActive = this.column.isFilterActive();\r\n    if (isFilterActive) {\r\n      this.setAriaDescriptionProperty(\"filter\", translate(\"ariaColumnFiltered\", \"Column Filtered\"));\r\n    } else {\r\n      this.setAriaDescriptionProperty(\"filter\", null);\r\n    }\r\n  }\r\n  setAriaDescriptionProperty(property, value) {\r\n    if (value != null) {\r\n      this.ariaDescriptionProperties.set(property, value);\r\n    } else {\r\n      this.ariaDescriptionProperties.delete(property);\r\n    }\r\n  }\r\n  announceAriaDescription() {\r\n    if (!this.eGui.contains(_getActiveDomElement(this.beans))) {\r\n      return;\r\n    }\r\n    const ariaDescription = Array.from(this.ariaDescriptionProperties.keys()).sort((a, b) => a === \"filter\" ? -1 : b.charCodeAt(0) - a.charCodeAt(0)).map((key) => this.ariaDescriptionProperties.get(key)).join(\". \");\r\n    this.beans.ariaAnnounce?.announceValue(ariaDescription, \"columnHeader\");\r\n  }\r\n  refreshAria() {\r\n    this.refreshAriaSort();\r\n    this.refreshAriaMenu();\r\n    this.refreshAriaFilterButton();\r\n    this.refreshAriaFiltered();\r\n  }\r\n  addColumnHoverListener(compBean) {\r\n    this.beans.colHover?.addHeaderColumnHoverListener(compBean, this.comp, this.column);\r\n  }\r\n  addActiveHeaderMouseListeners(compBean) {\r\n    const listener = (e) => this.handleMouseOverChange(e.type === \"mouseenter\");\r\n    const clickListener = () => {\r\n      this.setActiveHeader(true);\r\n      this.dispatchColumnMouseEvent(\"columnHeaderClicked\", this.column);\r\n    };\r\n    const contextMenuListener = (event) => this.handleContextMenuMouseEvent(event, void 0, this.column);\r\n    compBean.addManagedListeners(this.eGui, {\r\n      mouseenter: listener,\r\n      mouseleave: listener,\r\n      click: clickListener,\r\n      contextmenu: contextMenuListener\r\n    });\r\n  }\r\n  handleMouseOverChange(isMouseOver) {\r\n    this.setActiveHeader(isMouseOver);\r\n    this.eventSvc.dispatchEvent({\r\n      type: isMouseOver ? \"columnHeaderMouseOver\" : \"columnHeaderMouseLeave\",\r\n      column: this.column\r\n    });\r\n  }\r\n  setActiveHeader(active) {\r\n    this.comp.toggleCss(\"ag-header-active\", active);\r\n  }\r\n  getAnchorElementForMenu(isFilter) {\r\n    const headerComp = this.comp.getUserCompInstance();\r\n    if (isHeaderComp(headerComp)) {\r\n      return headerComp.getAnchorElementForMenu(isFilter);\r\n    }\r\n    return this.eGui;\r\n  }\r\n  destroy() {\r\n    this.tooltipFeature = this.destroyBean(this.tooltipFeature);\r\n    super.destroy();\r\n  }\r\n};\r\nfunction isHeaderComp(headerComp) {\r\n  return typeof headerComp?.getAnchorElementForMenu === \"function\" && typeof headerComp.onMenuKeyboardShortcut === \"function\";\r\n}\r\n\r\n// packages/ag-grid-community/src/headerRendering/row/headerRowCtrl.ts\r\nvar instanceIdSequence5 = 0;\r\nvar HeaderRowCtrl = class extends BeanStub {\r\n  constructor(rowIndex, pinned, type) {\r\n    super();\r\n    this.rowIndex = rowIndex;\r\n    this.pinned = pinned;\r\n    this.type = type;\r\n    this.instanceId = instanceIdSequence5++;\r\n    this.comp = null;\r\n    this.allCtrls = [];\r\n    let typeClass = \"ag-header-row-column\";\r\n    if (type === \"group\") {\r\n      typeClass = \"ag-header-row-group\";\r\n    } else if (type === \"filter\") {\r\n      typeClass = \"ag-header-row-filter\";\r\n    }\r\n    this.headerRowClass = `ag-header-row ${typeClass}`;\r\n  }\r\n  setRowIndex(rowIndex) {\r\n    this.rowIndex = rowIndex;\r\n    this.comp?.setRowIndex(this.getAriaRowIndex());\r\n    this.onRowHeightChanged();\r\n  }\r\n  postConstruct() {\r\n    this.isPrintLayout = _isDomLayout(this.gos, \"print\");\r\n    this.isEnsureDomOrder = this.gos.get(\"ensureDomOrder\");\r\n  }\r\n  /** Checks that every header cell that is currently visible has been rendered.\r\n   * Can only be false under some circumstances when using React\r\n   */\r\n  areCellsRendered() {\r\n    if (!this.comp) {\r\n      return false;\r\n    }\r\n    return this.allCtrls.every((ctrl) => ctrl.eGui != null);\r\n  }\r\n  /**\r\n   *\r\n   * @param comp Proxy to the actual component\r\n   * @param initCompState Should the component be initialised with the current state of the controller. Default: true\r\n   */\r\n  setComp(comp, compBean, initCompState = true) {\r\n    this.comp = comp;\r\n    compBean = setupCompBean(this, this.beans.context, compBean);\r\n    if (initCompState) {\r\n      this.setRowIndex(this.rowIndex);\r\n      this.onVirtualColumnsChanged();\r\n    }\r\n    this.setWidth();\r\n    this.addEventListeners(compBean);\r\n  }\r\n  getAriaRowIndex() {\r\n    return this.rowIndex + 1;\r\n  }\r\n  addEventListeners(compBean) {\r\n    const onHeightChanged = this.onRowHeightChanged.bind(this);\r\n    const onDisplayedColumnsChanged = this.onDisplayedColumnsChanged.bind(this);\r\n    compBean.addManagedEventListeners({\r\n      columnResized: this.setWidth.bind(this),\r\n      displayedColumnsChanged: onDisplayedColumnsChanged,\r\n      virtualColumnsChanged: (params) => this.onVirtualColumnsChanged(params.afterScroll),\r\n      columnGroupHeaderHeightChanged: onHeightChanged,\r\n      columnHeaderHeightChanged: onHeightChanged,\r\n      gridStylesChanged: onHeightChanged,\r\n      advancedFilterEnabledChanged: onHeightChanged\r\n    });\r\n    compBean.addManagedPropertyListener(\"domLayout\", onDisplayedColumnsChanged);\r\n    compBean.addManagedPropertyListener(\"ensureDomOrder\", (e) => this.isEnsureDomOrder = e.currentValue);\r\n    compBean.addManagedPropertyListeners(\r\n      [\r\n        \"headerHeight\",\r\n        \"pivotHeaderHeight\",\r\n        \"groupHeaderHeight\",\r\n        \"pivotGroupHeaderHeight\",\r\n        \"floatingFiltersHeight\"\r\n      ],\r\n      onHeightChanged\r\n    );\r\n  }\r\n  onDisplayedColumnsChanged() {\r\n    this.isPrintLayout = _isDomLayout(this.gos, \"print\");\r\n    this.onVirtualColumnsChanged();\r\n    this.setWidth();\r\n    this.onRowHeightChanged();\r\n  }\r\n  setWidth() {\r\n    if (!this.comp) {\r\n      return;\r\n    }\r\n    const width = this.getWidthForRow();\r\n    this.comp.setWidth(`${width}px`);\r\n  }\r\n  getWidthForRow() {\r\n    const { visibleCols } = this.beans;\r\n    if (this.isPrintLayout) {\r\n      const pinned = this.pinned != null;\r\n      if (pinned) {\r\n        return 0;\r\n      }\r\n      return visibleCols.getContainerWidth(\"right\") + visibleCols.getContainerWidth(\"left\") + visibleCols.getContainerWidth(null);\r\n    }\r\n    return visibleCols.getContainerWidth(this.pinned);\r\n  }\r\n  onRowHeightChanged() {\r\n    if (!this.comp) {\r\n      return;\r\n    }\r\n    const { topOffset, rowHeight } = this.getTopAndHeight();\r\n    this.comp.setTop(topOffset + \"px\");\r\n    this.comp.setHeight(rowHeight + \"px\");\r\n  }\r\n  getTopAndHeight() {\r\n    let topOffset = 0;\r\n    const groupHeadersHeight = getGroupRowsHeight(this.beans);\r\n    for (let i = 0; i < groupHeadersHeight.length; i++) {\r\n      if (i === this.rowIndex && this.type === \"group\") {\r\n        return { topOffset, rowHeight: groupHeadersHeight[i] };\r\n      }\r\n      topOffset += groupHeadersHeight[i];\r\n    }\r\n    const headerHeight = getColumnHeaderRowHeight(this.beans);\r\n    if (this.type === \"column\") {\r\n      return { topOffset, rowHeight: headerHeight };\r\n    }\r\n    topOffset += headerHeight;\r\n    const filterHeight = getFloatingFiltersHeight(this.beans);\r\n    return { topOffset, rowHeight: filterHeight };\r\n  }\r\n  onVirtualColumnsChanged(afterScroll = false) {\r\n    if (!this.comp) {\r\n      return;\r\n    }\r\n    const ctrlsToDisplay = this.getUpdatedHeaderCtrls();\r\n    const forceOrder = this.isEnsureDomOrder || this.isPrintLayout;\r\n    this.comp.setHeaderCtrls(ctrlsToDisplay, forceOrder, afterScroll);\r\n  }\r\n  /**\r\n   * Recycles the header cell ctrls and creates new ones for the columns in the viewport\r\n   * @returns The updated header cell ctrls\r\n   */\r\n  getUpdatedHeaderCtrls() {\r\n    const oldCtrls = this.ctrlsById;\r\n    this.ctrlsById = /* @__PURE__ */ new Map();\r\n    const columns = this.getColumnsInViewport();\r\n    for (const child of columns) {\r\n      this.recycleAndCreateHeaderCtrls(child, this.ctrlsById, oldCtrls);\r\n    }\r\n    const isFocusedAndDisplayed = (ctrl) => {\r\n      const { focusSvc, visibleCols } = this.beans;\r\n      const isFocused = focusSvc.isHeaderWrapperFocused(ctrl);\r\n      if (!isFocused) {\r\n        return false;\r\n      }\r\n      const isDisplayed = visibleCols.isVisible(ctrl.column);\r\n      return isDisplayed;\r\n    };\r\n    if (oldCtrls) {\r\n      for (const [id, oldCtrl] of oldCtrls) {\r\n        const keepCtrl = isFocusedAndDisplayed(oldCtrl);\r\n        if (keepCtrl) {\r\n          this.ctrlsById.set(id, oldCtrl);\r\n        } else {\r\n          this.destroyBean(oldCtrl);\r\n        }\r\n      }\r\n    }\r\n    this.allCtrls = Array.from(this.ctrlsById.values());\r\n    return this.allCtrls;\r\n  }\r\n  /** Get the current header cell ctrls */\r\n  getHeaderCellCtrls() {\r\n    return this.allCtrls;\r\n  }\r\n  recycleAndCreateHeaderCtrls(headerColumn, currCtrls, oldCtrls) {\r\n    if (headerColumn.isEmptyGroup()) {\r\n      return;\r\n    }\r\n    const idOfChild = headerColumn.getUniqueId();\r\n    let headerCtrl;\r\n    if (oldCtrls) {\r\n      headerCtrl = oldCtrls.get(idOfChild);\r\n      oldCtrls.delete(idOfChild);\r\n    }\r\n    const forOldColumn = headerCtrl && headerCtrl.column != headerColumn;\r\n    if (forOldColumn) {\r\n      this.destroyBean(headerCtrl);\r\n      headerCtrl = void 0;\r\n    }\r\n    if (headerCtrl == null) {\r\n      switch (this.type) {\r\n        case \"filter\": {\r\n          headerCtrl = this.createBean(\r\n            this.beans.registry.createDynamicBean(\r\n              \"headerFilterCellCtrl\",\r\n              true,\r\n              headerColumn,\r\n              this\r\n            )\r\n          );\r\n          break;\r\n        }\r\n        case \"group\":\r\n          headerCtrl = this.createBean(\r\n            this.beans.registry.createDynamicBean(\r\n              \"headerGroupCellCtrl\",\r\n              true,\r\n              headerColumn,\r\n              this\r\n            )\r\n          );\r\n          break;\r\n        default:\r\n          headerCtrl = this.createBean(new HeaderCellCtrl(headerColumn, this));\r\n          break;\r\n      }\r\n    }\r\n    currCtrls.set(idOfChild, headerCtrl);\r\n  }\r\n  getColumnsInViewport() {\r\n    if (!this.isPrintLayout) {\r\n      return this.getComponentsToRender();\r\n    }\r\n    if (this.pinned) {\r\n      return [];\r\n    }\r\n    const viewportColumns = [];\r\n    [\"left\", null, \"right\"].forEach((pinned) => {\r\n      viewportColumns.push(...this.getComponentsToRender(pinned));\r\n    });\r\n    return viewportColumns;\r\n  }\r\n  getComponentsToRender(pinned = this.pinned) {\r\n    if (this.type === \"group\") {\r\n      return this.beans.colViewport.getHeadersToRender(pinned, this.rowIndex);\r\n    }\r\n    return this.beans.colViewport.getColumnHeadersToRender(pinned);\r\n  }\r\n  focusHeader(column, event) {\r\n    const ctrl = this.allCtrls.find((ctrl2) => ctrl2.column == column);\r\n    if (!ctrl) {\r\n      return false;\r\n    }\r\n    const focused = ctrl.focus(event);\r\n    return focused;\r\n  }\r\n  destroy() {\r\n    this.allCtrls = this.destroyBeans(this.allCtrls);\r\n    this.ctrlsById = void 0;\r\n    this.comp = null;\r\n    super.destroy();\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/headerRendering/rowContainer/headerRowContainerCtrl.ts\r\nvar HeaderRowContainerCtrl = class extends BeanStub {\r\n  constructor(pinned) {\r\n    super();\r\n    this.pinned = pinned;\r\n    this.hidden = false;\r\n    this.includeFloatingFilter = false;\r\n    this.groupsRowCtrls = [];\r\n  }\r\n  setComp(comp, eGui) {\r\n    this.comp = comp;\r\n    this.eViewport = eGui;\r\n    const { pinnedCols, ctrlsSvc, colModel, colMoves } = this.beans;\r\n    this.setupCenterWidth();\r\n    pinnedCols?.setupHeaderPinnedWidth(this);\r\n    this.setupDragAndDrop(colMoves, this.eViewport);\r\n    const onDisplayedColsChanged = this.refresh.bind(this, true);\r\n    this.addManagedEventListeners({\r\n      displayedColumnsChanged: onDisplayedColsChanged,\r\n      advancedFilterEnabledChanged: onDisplayedColsChanged\r\n    });\r\n    const headerType = `${typeof this.pinned === \"string\" ? this.pinned : \"center\"}Header`;\r\n    ctrlsSvc.register(headerType, this);\r\n    if (colModel.ready) {\r\n      this.refresh();\r\n    }\r\n  }\r\n  getAllCtrls() {\r\n    const res = [...this.groupsRowCtrls];\r\n    if (this.columnsRowCtrl) {\r\n      res.push(this.columnsRowCtrl);\r\n    }\r\n    if (this.filtersRowCtrl) {\r\n      res.push(this.filtersRowCtrl);\r\n    }\r\n    return res;\r\n  }\r\n  refresh(keepColumns = false) {\r\n    const { focusSvc, filterManager, visibleCols } = this.beans;\r\n    let sequence = 0;\r\n    const focusedHeaderPosition = focusSvc.getFocusHeaderToUseAfterRefresh();\r\n    const refreshColumnGroups = () => {\r\n      const groupRowCount = visibleCols.headerGroupRowCount;\r\n      sequence = groupRowCount;\r\n      const currentGroupCount = this.groupsRowCtrls.length;\r\n      if (currentGroupCount === groupRowCount) {\r\n        return;\r\n      }\r\n      if (currentGroupCount > groupRowCount) {\r\n        for (let i = groupRowCount; i < currentGroupCount; i++) {\r\n          this.destroyBean(this.groupsRowCtrls[i]);\r\n        }\r\n        this.groupsRowCtrls.length = groupRowCount;\r\n        return;\r\n      }\r\n      for (let i = currentGroupCount; i < groupRowCount; i++) {\r\n        const ctrl = this.createBean(new HeaderRowCtrl(i, this.pinned, \"group\"));\r\n        this.groupsRowCtrls.push(ctrl);\r\n      }\r\n    };\r\n    const refreshColumns = () => {\r\n      const rowIndex = sequence++;\r\n      if (this.hidden) {\r\n        this.columnsRowCtrl = this.destroyBean(this.columnsRowCtrl);\r\n        return;\r\n      }\r\n      if (this.columnsRowCtrl == null || !keepColumns) {\r\n        this.columnsRowCtrl = this.destroyBean(this.columnsRowCtrl);\r\n        this.columnsRowCtrl = this.createBean(new HeaderRowCtrl(rowIndex, this.pinned, \"column\"));\r\n      } else if (this.columnsRowCtrl.rowIndex !== rowIndex) {\r\n        this.columnsRowCtrl.setRowIndex(rowIndex);\r\n      }\r\n    };\r\n    const refreshFilters = () => {\r\n      this.includeFloatingFilter = !!filterManager?.hasFloatingFilters() && !this.hidden;\r\n      const destroyPreviousComp = () => {\r\n        this.filtersRowCtrl = this.destroyBean(this.filtersRowCtrl);\r\n      };\r\n      if (!this.includeFloatingFilter) {\r\n        destroyPreviousComp();\r\n        return;\r\n      }\r\n      if (!keepColumns) {\r\n        destroyPreviousComp();\r\n      }\r\n      const rowIndex = sequence++;\r\n      if (this.filtersRowCtrl) {\r\n        const rowIndexMismatch = this.filtersRowCtrl.rowIndex !== rowIndex;\r\n        if (rowIndexMismatch) {\r\n          this.filtersRowCtrl.setRowIndex(rowIndex);\r\n        }\r\n      } else {\r\n        this.filtersRowCtrl = this.createBean(new HeaderRowCtrl(rowIndex, this.pinned, \"filter\"));\r\n      }\r\n    };\r\n    const oldCtrls = this.getAllCtrls();\r\n    refreshColumnGroups();\r\n    refreshColumns();\r\n    refreshFilters();\r\n    const allCtrls = this.getAllCtrls();\r\n    this.comp.setCtrls(allCtrls);\r\n    this.restoreFocusOnHeader(focusSvc, focusedHeaderPosition);\r\n    if (oldCtrls.length !== allCtrls.length) {\r\n      this.beans.eventSvc.dispatchEvent({\r\n        type: \"headerRowsChanged\"\r\n      });\r\n    }\r\n  }\r\n  getHeaderCtrlForColumn(column) {\r\n    const findCtrl = (ctrl) => ctrl?.getHeaderCellCtrls().find((ctrl2) => ctrl2.column === column);\r\n    if (isColumn(column)) {\r\n      return findCtrl(this.columnsRowCtrl);\r\n    }\r\n    if (this.groupsRowCtrls.length === 0) {\r\n      return;\r\n    }\r\n    for (let i = 0; i < this.groupsRowCtrls.length; i++) {\r\n      const ctrl = findCtrl(this.groupsRowCtrls[i]);\r\n      if (ctrl) {\r\n        return ctrl;\r\n      }\r\n    }\r\n  }\r\n  getHtmlElementForColumnHeader(column) {\r\n    return this.getHeaderCtrlForColumn(column)?.eGui ?? null;\r\n  }\r\n  getRowType(rowIndex) {\r\n    return this.getAllCtrls()[rowIndex]?.type;\r\n  }\r\n  focusHeader(rowIndex, column, event) {\r\n    const allCtrls = this.getAllCtrls();\r\n    const ctrl = allCtrls[rowIndex];\r\n    if (!ctrl) {\r\n      return false;\r\n    }\r\n    return ctrl.focusHeader(column, event);\r\n  }\r\n  getGroupRowCount() {\r\n    return this.groupsRowCtrls.length;\r\n  }\r\n  getGroupRowCtrlAtIndex(index) {\r\n    return this.groupsRowCtrls[index];\r\n  }\r\n  getRowCount() {\r\n    return this.groupsRowCtrls.length + (this.columnsRowCtrl ? 1 : 0) + (this.filtersRowCtrl ? 1 : 0);\r\n  }\r\n  setHorizontalScroll(offset) {\r\n    this.comp.setViewportScrollLeft(offset);\r\n  }\r\n  onScrollCallback(fn) {\r\n    this.addManagedElementListeners(this.eViewport, { scroll: fn });\r\n  }\r\n  destroy() {\r\n    this.filtersRowCtrl = this.destroyBean(this.filtersRowCtrl);\r\n    this.columnsRowCtrl = this.destroyBean(this.columnsRowCtrl);\r\n    this.groupsRowCtrls = this.destroyBeans(this.groupsRowCtrls);\r\n    super.destroy();\r\n  }\r\n  setupDragAndDrop(colMoves, dropContainer) {\r\n    const bodyDropTarget = colMoves?.createBodyDropTarget(this.pinned, dropContainer);\r\n    if (bodyDropTarget) {\r\n      this.createManagedBean(bodyDropTarget);\r\n    }\r\n  }\r\n  restoreFocusOnHeader(focusSvc, position) {\r\n    if (!position) {\r\n      return;\r\n    }\r\n    const { column } = position;\r\n    if (column.getPinned() != this.pinned) {\r\n      return;\r\n    }\r\n    focusSvc.focusHeaderPosition({ headerPosition: position });\r\n  }\r\n  setupCenterWidth() {\r\n    if (this.pinned != null) {\r\n      return;\r\n    }\r\n    this.createManagedBean(new CenterWidthFeature((width) => this.comp.setCenterWidth(`${width}px`), true));\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/misc/menu/menuService.ts\r\nvar MenuService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"menuSvc\";\r\n  }\r\n  postConstruct() {\r\n    const { enterpriseMenuFactory, filterMenuFactory } = this.beans;\r\n    this.activeMenuFactory = enterpriseMenuFactory ?? filterMenuFactory;\r\n  }\r\n  showColumnMenu(params) {\r\n    this.showColumnMenuCommon(this.activeMenuFactory, params, \"columnMenu\");\r\n  }\r\n  showFilterMenu(params) {\r\n    this.showColumnMenuCommon(getFilterMenuFactory(this.beans), params, params.containerType, true);\r\n  }\r\n  showHeaderContextMenu(column, mouseEvent, touchEvent) {\r\n    this.activeMenuFactory?.showMenuAfterContextMenuEvent(column, mouseEvent, touchEvent);\r\n  }\r\n  hidePopupMenu() {\r\n    this.beans.contextMenuSvc?.hideActiveMenu();\r\n    this.activeMenuFactory?.hideActiveMenu();\r\n  }\r\n  hideFilterMenu() {\r\n    getFilterMenuFactory(this.beans)?.hideActiveMenu();\r\n  }\r\n  isColumnMenuInHeaderEnabled(column) {\r\n    const { suppressHeaderMenuButton } = column.getColDef();\r\n    return !suppressHeaderMenuButton && !!this.activeMenuFactory?.isMenuEnabled(column) && (_isLegacyMenuEnabled(this.gos) || !!this.beans.enterpriseMenuFactory);\r\n  }\r\n  isFilterMenuInHeaderEnabled(column) {\r\n    return !column.getColDef().suppressHeaderFilterButton && !!this.beans.filterManager?.isFilterAllowed(column);\r\n  }\r\n  isHeaderContextMenuEnabled(column) {\r\n    const colDef = column && isColumn(column) ? column.getColDef() : column?.getColGroupDef();\r\n    return !colDef?.suppressHeaderContextMenu && this.gos.get(\"columnMenu\") === \"new\";\r\n  }\r\n  isHeaderMenuButtonAlwaysShowEnabled() {\r\n    return this.isSuppressMenuHide();\r\n  }\r\n  isHeaderMenuButtonEnabled() {\r\n    const menuHides = !this.isSuppressMenuHide();\r\n    const onIpadAndMenuHides = _isIOSUserAgent() && menuHides;\r\n    return !onIpadAndMenuHides;\r\n  }\r\n  isHeaderFilterButtonEnabled(column) {\r\n    return this.isFilterMenuInHeaderEnabled(column) && !_isLegacyMenuEnabled(this.gos) && !this.isFloatingFilterButtonDisplayed(column);\r\n  }\r\n  isFilterMenuItemEnabled(column) {\r\n    return !!this.beans.filterManager?.isFilterAllowed(column) && !_isLegacyMenuEnabled(this.gos) && !this.isFilterMenuInHeaderEnabled(column) && !this.isFloatingFilterButtonDisplayed(column);\r\n  }\r\n  isFloatingFilterButtonEnabled(column) {\r\n    return !column.getColDef().suppressFloatingFilterButton;\r\n  }\r\n  isFloatingFilterButtonDisplayed(column) {\r\n    return !!column.getColDef().floatingFilter && this.isFloatingFilterButtonEnabled(column);\r\n  }\r\n  isSuppressMenuHide() {\r\n    const gos = this.gos;\r\n    const suppressMenuHide = gos.get(\"suppressMenuHide\");\r\n    if (_isLegacyMenuEnabled(gos)) {\r\n      return gos.exists(\"suppressMenuHide\") ? suppressMenuHide : false;\r\n    }\r\n    return suppressMenuHide;\r\n  }\r\n  showColumnMenuCommon(menuFactory, params, containerType, filtersOnly) {\r\n    const { positionBy, onClosedCallback } = params;\r\n    const column = params.column;\r\n    if (positionBy === \"button\") {\r\n      const { buttonElement } = params;\r\n      menuFactory?.showMenuAfterButtonClick(column, buttonElement, containerType, onClosedCallback, filtersOnly);\r\n    } else if (positionBy === \"mouse\") {\r\n      const { mouseEvent } = params;\r\n      menuFactory?.showMenuAfterMouseEvent(column, mouseEvent, containerType, onClosedCallback, filtersOnly);\r\n    } else if (column) {\r\n      const beans = this.beans;\r\n      const ctrlsSvc = beans.ctrlsSvc;\r\n      ctrlsSvc.getScrollFeature().ensureColumnVisible(column, \"auto\");\r\n      _requestAnimationFrame(beans, () => {\r\n        const headerCellCtrl = ctrlsSvc.getHeaderRowContainerCtrl(column.getPinned())?.getHeaderCtrlForColumn(column);\r\n        if (headerCellCtrl) {\r\n          menuFactory?.showMenuAfterButtonClick(\r\n            column,\r\n            headerCellCtrl.getAnchorElementForMenu(filtersOnly),\r\n            containerType,\r\n            onClosedCallback,\r\n            filtersOnly\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\nfunction _setColMenuVisible(column, visible, source) {\r\n  if (column.menuVisible !== visible) {\r\n    column.menuVisible = visible;\r\n    column.dispatchColEvent(\"menuVisibleChanged\", source);\r\n  }\r\n}\r\nfunction getFilterMenuFactory(beans) {\r\n  const { enterpriseMenuFactory, filterMenuFactory, gos } = beans;\r\n  return enterpriseMenuFactory && _isLegacyMenuEnabled(gos) ? enterpriseMenuFactory : filterMenuFactory;\r\n}\r\n\r\n// packages/ag-grid-community/src/widgets/popupComponent.ts\r\nvar PopupComponent = class extends Component {\r\n  isPopup() {\r\n    return true;\r\n  }\r\n  setParentComponent(container) {\r\n    container.addCss(\"ag-has-popup\");\r\n    super.setParentComponent(container);\r\n  }\r\n  destroy() {\r\n    const parentComp = this.parentComponent;\r\n    const hasParent = parentComp && parentComp.isAlive();\r\n    if (hasParent) {\r\n      parentComp.getGui().classList.remove(\"ag-has-popup\");\r\n    }\r\n    super.destroy();\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/widgets/agAbstractCellEditor.ts\r\nvar AgAbstractCellEditor = class extends PopupComponent {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.errorMessages = null;\r\n  }\r\n  init(params) {\r\n    this.params = params;\r\n    this.initialiseEditor(params);\r\n    this.eEditor.onValueChange(() => params.validate());\r\n  }\r\n  destroy() {\r\n    this.errorMessages = null;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/rendering/overlays/overlayComponent.ts\r\nvar OverlayComponent = class extends Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/rendering/overlays/loadingOverlayComponent.ts\r\nvar LoadingOverlayElement = {\r\n  tag: \"span\",\r\n  cls: \"ag-overlay-loading-center\",\r\n  attrs: { \"aria-live\": \"polite\", \"aria-atomic\": \"true\" }\r\n};\r\nvar LoadingOverlayComponent2 = class extends OverlayComponent {\r\n  init() {\r\n    const customTemplate = _makeNull(this.gos.get(\"overlayLoadingTemplate\")?.trim());\r\n    this.setTemplate(customTemplate ?? LoadingOverlayElement);\r\n    if (!customTemplate) {\r\n      const localeTextFunc = this.getLocaleTextFunc();\r\n      setTimeout(() => {\r\n        this.getGui().textContent = localeTextFunc(\"loadingOoo\", \"Loading...\");\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/rendering/overlays/noRowsOverlayComponent.ts\r\nvar NoRowsOverlayElement = { tag: \"span\", cls: \"ag-overlay-no-rows-center\" };\r\nvar NoRowsOverlayComponent2 = class extends OverlayComponent {\r\n  init() {\r\n    const customTemplate = _makeNull(this.gos.get(\"overlayNoRowsTemplate\")?.trim());\r\n    this.setTemplate(customTemplate ?? NoRowsOverlayElement);\r\n    if (!customTemplate) {\r\n      const localeTextFunc = this.getLocaleTextFunc();\r\n      setTimeout(() => {\r\n        this.getGui().textContent = localeTextFunc(\"noRowsToShow\", \"No Rows To Show\");\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/utils/icon.ts\r\nfunction _createIcon(iconName, beans, column) {\r\n  const iconContents = _createIconNoSpan(iconName, beans, column);\r\n  if (iconContents) {\r\n    const { className } = iconContents;\r\n    if (typeof className === \"string\" && className.indexOf(\"ag-icon\") > -1 || typeof className === \"object\" && className[\"ag-icon\"]) {\r\n      return iconContents;\r\n    }\r\n  }\r\n  const eResult = _createElement({ tag: \"span\" });\r\n  eResult.appendChild(iconContents);\r\n  return eResult;\r\n}\r\nfunction _createIconNoSpan(iconName, beans, column) {\r\n  let userProvidedIcon = null;\r\n  if (iconName === \"smallDown\") {\r\n    _warn(262);\r\n  } else if (iconName === \"smallLeft\") {\r\n    _warn(263);\r\n  } else if (iconName === \"smallRight\") {\r\n    _warn(264);\r\n  }\r\n  const icons = column && column.getColDef().icons;\r\n  if (icons) {\r\n    userProvidedIcon = icons[iconName];\r\n  }\r\n  if (beans.gos && !userProvidedIcon) {\r\n    const optionsIcons = beans.gos.get(\"icons\");\r\n    if (optionsIcons) {\r\n      userProvidedIcon = optionsIcons[iconName];\r\n    }\r\n  }\r\n  if (userProvidedIcon) {\r\n    let rendererResult;\r\n    if (typeof userProvidedIcon === \"function\") {\r\n      rendererResult = userProvidedIcon();\r\n    } else if (typeof userProvidedIcon === \"string\") {\r\n      rendererResult = userProvidedIcon;\r\n    } else {\r\n      _warn(38, { iconName });\r\n      return void 0;\r\n    }\r\n    if (typeof rendererResult === \"string\") {\r\n      return _loadTemplate(rendererResult);\r\n    }\r\n    if (_isNodeOrElement(rendererResult)) {\r\n      return rendererResult;\r\n    }\r\n    _warn(133, { iconName });\r\n    return void 0;\r\n  } else {\r\n    const iconValue = beans.registry.getIcon(iconName);\r\n    if (!iconValue) {\r\n      beans.validation?.validateIcon(iconName);\r\n    }\r\n    return _createElement({\r\n      tag: \"span\",\r\n      cls: `ag-icon ag-icon-${iconValue ?? iconName}`,\r\n      role: \"presentation\",\r\n      attrs: { unselectable: \"on\" }\r\n    });\r\n  }\r\n}\r\n\r\n// packages/ag-grid-community/src/dragAndDrop/dragAndDropImageComponent.css-GENERATED.ts\r\nvar dragAndDropImageComponentCSS = (\r\n  /*css*/\r\n  `.ag-dnd-ghost{align-items:center;background-color:var(--ag-drag-and-drop-image-background-color);border:var(--ag-drag-and-drop-image-border);border-radius:var(--ag-border-radius);box-shadow:var(--ag-drag-and-drop-image-shadow);color:var(--ag-text-color);cursor:move;display:flex;font-weight:500;gap:var(--ag-cell-widget-spacing);height:var(--ag-header-height);overflow:hidden;padding-left:var(--ag-cell-horizontal-padding);padding-right:var(--ag-cell-horizontal-padding);text-overflow:ellipsis;transform:translateY(calc(var(--ag-spacing)*2));white-space:nowrap}`\r\n);\r\n\r\n// packages/ag-grid-community/src/dragAndDrop/dragAndDropImageComponent.ts\r\nvar DragAndDropElement = {\r\n  tag: \"div\",\r\n  children: [\r\n    {\r\n      tag: \"div\",\r\n      ref: \"eGhost\",\r\n      cls: \"ag-dnd-ghost ag-unselectable\",\r\n      children: [\r\n        { tag: \"span\", ref: \"eIcon\", cls: \"ag-dnd-ghost-icon ag-shake-left-to-right\" },\r\n        { tag: \"div\", ref: \"eLabel\", cls: \"ag-dnd-ghost-label\" }\r\n      ]\r\n    }\r\n  ]\r\n};\r\nvar DragAndDropImageComponent2 = class extends Component {\r\n  constructor() {\r\n    super();\r\n    this.dragSource = null;\r\n    this.eIcon = RefPlaceholder;\r\n    this.eLabel = RefPlaceholder;\r\n    this.eGhost = RefPlaceholder;\r\n    this.registerCSS(dragAndDropImageComponentCSS);\r\n  }\r\n  postConstruct() {\r\n    const create = (iconName) => _createIcon(iconName, this.beans, null);\r\n    this.dropIconMap = {\r\n      pinned: create(\"columnMovePin\"),\r\n      hide: create(\"columnMoveHide\"),\r\n      move: create(\"columnMoveMove\"),\r\n      left: create(\"columnMoveLeft\"),\r\n      right: create(\"columnMoveRight\"),\r\n      group: create(\"columnMoveGroup\"),\r\n      aggregate: create(\"columnMoveValue\"),\r\n      pivot: create(\"columnMovePivot\"),\r\n      notAllowed: create(\"dropNotAllowed\")\r\n    };\r\n  }\r\n  init(params) {\r\n    this.dragSource = params.dragSource;\r\n    this.setTemplate(DragAndDropElement);\r\n    this.beans.environment.applyThemeClasses(this.eGhost);\r\n  }\r\n  destroy() {\r\n    this.dragSource = null;\r\n    super.destroy();\r\n  }\r\n  setIcon(iconName, shake) {\r\n    const { eIcon, dragSource, dropIconMap, gos } = this;\r\n    _clearElement(eIcon);\r\n    let eIconChild = null;\r\n    if (!iconName) {\r\n      iconName = dragSource?.getDefaultIconName ? dragSource.getDefaultIconName() : \"notAllowed\";\r\n    }\r\n    eIconChild = dropIconMap[iconName];\r\n    eIcon.classList.toggle(\"ag-shake-left-to-right\", shake);\r\n    if (eIconChild === dropIconMap[\"hide\"] && gos.get(\"suppressDragLeaveHidesColumns\")) {\r\n      return;\r\n    }\r\n    if (eIconChild) {\r\n      eIcon.appendChild(eIconChild);\r\n    }\r\n  }\r\n  setLabel(label) {\r\n    this.eLabel.textContent = label;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/widgets/agAbstractLabel.css-GENERATED.ts\r\nvar agAbstractLabelCSS = (\r\n  /*css*/\r\n  `.ag-label{white-space:nowrap}:where(.ag-ltr) .ag-label{margin-right:var(--ag-spacing)}:where(.ag-rtl) .ag-label{margin-left:var(--ag-spacing)}:where(.ag-label-align-right) .ag-label{order:1}:where(.ag-ltr) :where(.ag-label-align-right) .ag-label{margin-left:var(--ag-spacing)}:where(.ag-rtl) :where(.ag-label-align-right) .ag-label{margin-right:var(--ag-spacing)}.ag-label-align-right>*{flex:none}.ag-label-align-top{align-items:flex-start;flex-direction:column;>*{align-self:stretch}}.ag-label-ellipsis{flex:1;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}:where(.ag-label-align-top) .ag-label{margin-bottom:calc(var(--ag-spacing)*.5)}`\r\n);\r\n\r\n// packages/ag-grid-community/src/widgets/agAbstractLabel.ts\r\nvar AgAbstractLabel = class extends Component {\r\n  constructor(config, template, components) {\r\n    super(template, components);\r\n    this.labelSeparator = \"\";\r\n    this.labelAlignment = \"left\";\r\n    this.disabled = false;\r\n    this.label = \"\";\r\n    this.config = config || {};\r\n    this.registerCSS(agAbstractLabelCSS);\r\n  }\r\n  postConstruct() {\r\n    this.addCss(\"ag-labeled\");\r\n    this.eLabel.classList.add(\"ag-label\");\r\n    const { labelSeparator, label, labelWidth, labelAlignment, disabled } = this.config;\r\n    if (disabled != null) {\r\n      this.setDisabled(disabled);\r\n    }\r\n    if (labelSeparator != null) {\r\n      this.setLabelSeparator(labelSeparator);\r\n    }\r\n    if (label != null) {\r\n      this.setLabel(label);\r\n    }\r\n    if (labelWidth != null) {\r\n      this.setLabelWidth(labelWidth);\r\n    }\r\n    this.setLabelAlignment(labelAlignment || this.labelAlignment);\r\n    this.refreshLabel();\r\n  }\r\n  refreshLabel() {\r\n    const { label, eLabel } = this;\r\n    _clearElement(eLabel);\r\n    if (typeof label === \"string\") {\r\n      eLabel.innerText = label + this.labelSeparator;\r\n    } else if (label) {\r\n      eLabel.appendChild(label);\r\n    }\r\n    if (label === \"\") {\r\n      _setDisplayed(eLabel, false);\r\n      _setAriaRole(eLabel, \"presentation\");\r\n    } else {\r\n      _setDisplayed(eLabel, true);\r\n      _setAriaRole(eLabel, null);\r\n    }\r\n  }\r\n  setLabelSeparator(labelSeparator) {\r\n    if (this.labelSeparator === labelSeparator) {\r\n      return this;\r\n    }\r\n    this.labelSeparator = labelSeparator;\r\n    if (this.label != null) {\r\n      this.refreshLabel();\r\n    }\r\n    return this;\r\n  }\r\n  getLabelId() {\r\n    const eLabel = this.eLabel;\r\n    eLabel.id = eLabel.id || `ag-${this.getCompId()}-label`;\r\n    return eLabel.id;\r\n  }\r\n  getLabel() {\r\n    return this.label;\r\n  }\r\n  setLabel(label) {\r\n    if (this.label === label) {\r\n      return this;\r\n    }\r\n    this.label = label;\r\n    this.refreshLabel();\r\n    return this;\r\n  }\r\n  setLabelAlignment(alignment) {\r\n    const eGui = this.getGui();\r\n    const eGuiClassList = eGui.classList;\r\n    eGuiClassList.toggle(\"ag-label-align-left\", alignment === \"left\");\r\n    eGuiClassList.toggle(\"ag-label-align-right\", alignment === \"right\");\r\n    eGuiClassList.toggle(\"ag-label-align-top\", alignment === \"top\");\r\n    return this;\r\n  }\r\n  setLabelEllipsis(hasEllipsis) {\r\n    this.eLabel.classList.toggle(\"ag-label-ellipsis\", hasEllipsis);\r\n    return this;\r\n  }\r\n  setLabelWidth(width) {\r\n    if (this.label == null) {\r\n      return this;\r\n    }\r\n    _setElementWidth(this.eLabel, width);\r\n    return this;\r\n  }\r\n  setDisabled(disabled) {\r\n    disabled = !!disabled;\r\n    const element = this.getGui();\r\n    _setDisabled(element, disabled);\r\n    element.classList.toggle(\"ag-disabled\", disabled);\r\n    this.disabled = disabled;\r\n    return this;\r\n  }\r\n  isDisabled() {\r\n    return !!this.disabled;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/widgets/agAbstractField.ts\r\nvar AgAbstractField = class extends AgAbstractLabel {\r\n  constructor(config, template, components, className) {\r\n    super(config, template, components);\r\n    this.className = className;\r\n  }\r\n  postConstruct() {\r\n    super.postConstruct();\r\n    const { width, value, onValueChange } = this.config;\r\n    if (width != null) {\r\n      this.setWidth(width);\r\n    }\r\n    if (value != null) {\r\n      this.setValue(value);\r\n    }\r\n    if (onValueChange != null) {\r\n      this.onValueChange(onValueChange);\r\n    }\r\n    if (this.className) {\r\n      this.addCss(this.className);\r\n    }\r\n    this.refreshAriaLabelledBy();\r\n  }\r\n  setLabel(label) {\r\n    super.setLabel(label);\r\n    this.refreshAriaLabelledBy();\r\n    return this;\r\n  }\r\n  refreshAriaLabelledBy() {\r\n    const ariaEl = this.getAriaElement();\r\n    const labelId = this.getLabelId();\r\n    const label = this.getLabel();\r\n    if (label == null || label == \"\" || _getAriaLabel(ariaEl) !== null) {\r\n      _setAriaLabelledBy(ariaEl, \"\");\r\n    } else {\r\n      _setAriaLabelledBy(ariaEl, labelId ?? \"\");\r\n    }\r\n  }\r\n  setAriaLabel(label) {\r\n    _setAriaLabel(this.getAriaElement(), label);\r\n    this.refreshAriaLabelledBy();\r\n    return this;\r\n  }\r\n  onValueChange(callbackFn) {\r\n    this.addManagedListeners(this, { fieldValueChanged: () => callbackFn(this.getValue()) });\r\n    return this;\r\n  }\r\n  getWidth() {\r\n    return this.getGui().clientWidth;\r\n  }\r\n  setWidth(width) {\r\n    _setFixedWidth(this.getGui(), width);\r\n    return this;\r\n  }\r\n  getPreviousValue() {\r\n    return this.previousValue;\r\n  }\r\n  getValue() {\r\n    return this.value;\r\n  }\r\n  setValue(value, silent) {\r\n    if (this.value === value) {\r\n      return this;\r\n    }\r\n    this.previousValue = this.value;\r\n    this.value = value;\r\n    if (!silent) {\r\n      this.dispatchLocalEvent({ type: \"fieldValueChanged\" });\r\n    }\r\n    return this;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/widgets/agAbstractInputField.ts\r\nfunction buildTemplate(displayFieldTag) {\r\n  return {\r\n    tag: \"div\",\r\n    role: \"presentation\",\r\n    children: [\r\n      { tag: \"div\", ref: \"eLabel\", cls: \"ag-input-field-label\" },\r\n      {\r\n        tag: \"div\",\r\n        ref: \"eWrapper\",\r\n        cls: \"ag-wrapper ag-input-wrapper\",\r\n        role: \"presentation\",\r\n        children: [{ tag: displayFieldTag, ref: \"eInput\", cls: \"ag-input-field-input\" }]\r\n      }\r\n    ]\r\n  };\r\n}\r\nvar AgAbstractInputField = class extends AgAbstractField {\r\n  constructor(config, className, inputType = \"text\", displayFieldTag = \"input\") {\r\n    super(config, config?.template ?? buildTemplate(displayFieldTag), [], className);\r\n    this.inputType = inputType;\r\n    this.displayFieldTag = displayFieldTag;\r\n    this.eLabel = RefPlaceholder;\r\n    this.eWrapper = RefPlaceholder;\r\n    this.eInput = RefPlaceholder;\r\n  }\r\n  postConstruct() {\r\n    super.postConstruct();\r\n    this.setInputType(this.inputType);\r\n    const { eLabel, eWrapper, eInput, className } = this;\r\n    eLabel.classList.add(`${className}-label`);\r\n    eWrapper.classList.add(`${className}-input-wrapper`);\r\n    eInput.classList.add(`${className}-input`);\r\n    this.addCss(\"ag-input-field\");\r\n    eInput.id = eInput.id || `ag-${this.getCompId()}-input`;\r\n    const { inputName, inputWidth } = this.config;\r\n    if (inputName != null) {\r\n      this.setInputName(inputName);\r\n    }\r\n    if (inputWidth != null) {\r\n      this.setInputWidth(inputWidth);\r\n    }\r\n    this.addInputListeners();\r\n    this.activateTabIndex([eInput]);\r\n  }\r\n  addInputListeners() {\r\n    this.addManagedElementListeners(this.eInput, {\r\n      input: (e) => this.setValue(e.target.value)\r\n    });\r\n  }\r\n  setInputType(inputType) {\r\n    if (this.displayFieldTag === \"input\") {\r\n      this.inputType = inputType;\r\n      _addOrRemoveAttribute(this.eInput, \"type\", inputType);\r\n    }\r\n  }\r\n  getInputElement() {\r\n    return this.eInput;\r\n  }\r\n  setInputWidth(width) {\r\n    _setElementWidth(this.eWrapper, width);\r\n    return this;\r\n  }\r\n  setInputName(name) {\r\n    this.getInputElement().setAttribute(\"name\", name);\r\n    return this;\r\n  }\r\n  getFocusableElement() {\r\n    return this.eInput;\r\n  }\r\n  setMaxLength(length) {\r\n    const eInput = this.eInput;\r\n    eInput.maxLength = length;\r\n    return this;\r\n  }\r\n  setInputPlaceholder(placeholder) {\r\n    _addOrRemoveAttribute(this.eInput, \"placeholder\", placeholder);\r\n    return this;\r\n  }\r\n  setInputAriaLabel(label) {\r\n    _setAriaLabel(this.eInput, label);\r\n    this.refreshAriaLabelledBy();\r\n    return this;\r\n  }\r\n  setDisabled(disabled) {\r\n    _setDisabled(this.eInput, disabled);\r\n    return super.setDisabled(disabled);\r\n  }\r\n  setAutoComplete(value) {\r\n    if (value === true) {\r\n      _addOrRemoveAttribute(this.eInput, \"autocomplete\", null);\r\n    } else {\r\n      const autoCompleteValue = typeof value === \"string\" ? value : \"off\";\r\n      _addOrRemoveAttribute(this.eInput, \"autocomplete\", autoCompleteValue);\r\n    }\r\n    return this;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/widgets/agCheckbox.ts\r\nvar AgCheckbox = class extends AgAbstractInputField {\r\n  constructor(config, className = \"ag-checkbox\", inputType = \"checkbox\") {\r\n    super(config, className, inputType);\r\n    this.labelAlignment = \"right\";\r\n    this.selected = false;\r\n    this.readOnly = false;\r\n    this.passive = false;\r\n  }\r\n  postConstruct() {\r\n    super.postConstruct();\r\n    const { readOnly, passive } = this.config;\r\n    if (typeof readOnly === \"boolean\")\r\n      this.setReadOnly(readOnly);\r\n    if (typeof passive === \"boolean\")\r\n      this.setPassive(passive);\r\n  }\r\n  addInputListeners() {\r\n    this.addManagedElementListeners(this.eInput, { click: this.onCheckboxClick.bind(this) });\r\n    this.addManagedElementListeners(this.eLabel, { click: this.toggle.bind(this) });\r\n  }\r\n  getNextValue() {\r\n    return this.selected === void 0 ? true : !this.selected;\r\n  }\r\n  setPassive(passive) {\r\n    this.passive = passive;\r\n  }\r\n  isReadOnly() {\r\n    return this.readOnly;\r\n  }\r\n  setReadOnly(readOnly) {\r\n    this.eWrapper.classList.toggle(\"ag-disabled\", readOnly);\r\n    this.eInput.disabled = readOnly;\r\n    this.readOnly = readOnly;\r\n  }\r\n  setDisabled(disabled) {\r\n    this.eWrapper.classList.toggle(\"ag-disabled\", disabled);\r\n    return super.setDisabled(disabled);\r\n  }\r\n  toggle() {\r\n    if (this.eInput.disabled) {\r\n      return;\r\n    }\r\n    const previousValue = this.isSelected();\r\n    const nextValue = this.getNextValue();\r\n    if (this.passive) {\r\n      this.dispatchChange(nextValue, previousValue);\r\n    } else {\r\n      this.setValue(nextValue);\r\n    }\r\n  }\r\n  getValue() {\r\n    return this.isSelected();\r\n  }\r\n  setValue(value, silent) {\r\n    this.refreshSelectedClass(value);\r\n    this.setSelected(value, silent);\r\n    return this;\r\n  }\r\n  setName(name) {\r\n    const input = this.getInputElement();\r\n    input.name = name;\r\n    return this;\r\n  }\r\n  isSelected() {\r\n    return this.selected;\r\n  }\r\n  setSelected(selected, silent) {\r\n    if (this.isSelected() === selected) {\r\n      return;\r\n    }\r\n    this.previousValue = this.isSelected();\r\n    selected = this.selected = typeof selected === \"boolean\" ? selected : void 0;\r\n    const eInput = this.eInput;\r\n    eInput.checked = selected;\r\n    eInput.indeterminate = selected === void 0;\r\n    if (!silent) {\r\n      this.dispatchChange(this.selected, this.previousValue);\r\n    }\r\n  }\r\n  dispatchChange(selected, previousValue, event) {\r\n    this.dispatchLocalEvent({ type: \"fieldValueChanged\", selected, previousValue, event });\r\n    const input = this.getInputElement();\r\n    this.eventSvc.dispatchEvent({\r\n      type: \"checkboxChanged\",\r\n      id: input.id,\r\n      name: input.name,\r\n      selected,\r\n      previousValue\r\n    });\r\n  }\r\n  onCheckboxClick(e) {\r\n    if (this.passive || this.eInput.disabled) {\r\n      return;\r\n    }\r\n    const previousValue = this.isSelected();\r\n    const selected = this.selected = e.target.checked;\r\n    this.refreshSelectedClass(selected);\r\n    this.dispatchChange(selected, previousValue, e);\r\n  }\r\n  refreshSelectedClass(value) {\r\n    const classList = this.eWrapper.classList;\r\n    classList.toggle(\"ag-checked\", value === true);\r\n    classList.toggle(\"ag-indeterminate\", value == null);\r\n  }\r\n};\r\nvar AgCheckboxSelector = {\r\n  selector: \"AG-CHECKBOX\",\r\n  component: AgCheckbox\r\n};\r\n\r\n// packages/ag-grid-community/src/rendering/cellRenderers/checkboxCellRenderer.css-GENERATED.ts\r\nvar checkboxCellRendererCSS = (\r\n  /*css*/\r\n  `.ag-checkbox-cell{height:100%}`\r\n);\r\n\r\n// packages/ag-grid-community/src/rendering/cellRenderers/checkboxCellRenderer.ts\r\nvar CheckboxCellRendererElement = {\r\n  tag: \"div\",\r\n  cls: \"ag-cell-wrapper ag-checkbox-cell\",\r\n  role: \"presentation\",\r\n  children: [\r\n    {\r\n      tag: \"ag-checkbox\",\r\n      ref: \"eCheckbox\",\r\n      role: \"presentation\"\r\n    }\r\n  ]\r\n};\r\nvar CheckboxCellRenderer = class extends Component {\r\n  constructor() {\r\n    super(CheckboxCellRendererElement, [AgCheckboxSelector]);\r\n    this.eCheckbox = RefPlaceholder;\r\n    this.registerCSS(checkboxCellRendererCSS);\r\n  }\r\n  init(params) {\r\n    this.refresh(params);\r\n    const { eCheckbox, beans } = this;\r\n    const inputEl = eCheckbox.getInputElement();\r\n    inputEl.setAttribute(\"tabindex\", \"-1\");\r\n    _setAriaLive(inputEl, \"polite\");\r\n    this.addManagedListeners(inputEl, {\r\n      click: (event) => {\r\n        _stopPropagationForAgGrid(event);\r\n        if (eCheckbox.isDisabled()) {\r\n          return;\r\n        }\r\n        const isSelected = eCheckbox.getValue();\r\n        this.onCheckboxChanged(isSelected);\r\n      },\r\n      dblclick: (event) => {\r\n        _stopPropagationForAgGrid(event);\r\n      }\r\n    });\r\n    this.addManagedElementListeners(params.eGridCell, {\r\n      keydown: (event) => {\r\n        if (event.key === KeyCode.SPACE && !eCheckbox.isDisabled()) {\r\n          if (params.eGridCell === _getActiveDomElement(beans)) {\r\n            eCheckbox.toggle();\r\n          }\r\n          const isSelected = eCheckbox.getValue();\r\n          this.onCheckboxChanged(isSelected);\r\n          event.preventDefault();\r\n        }\r\n      }\r\n    });\r\n  }\r\n  refresh(params) {\r\n    this.params = params;\r\n    this.updateCheckbox(params);\r\n    return true;\r\n  }\r\n  updateCheckbox(params) {\r\n    let isSelected;\r\n    let displayed = true;\r\n    const { value, column, node } = params;\r\n    if (node.group && column) {\r\n      if (typeof value === \"boolean\") {\r\n        isSelected = value;\r\n      } else {\r\n        const colId = column.getColId();\r\n        if (colId.startsWith(GROUP_AUTO_COLUMN_ID)) {\r\n          isSelected = value == null || value === \"\" ? void 0 : value === \"true\";\r\n        } else if (node.aggData && node.aggData[colId] !== void 0) {\r\n          isSelected = value ?? void 0;\r\n        } else {\r\n          displayed = false;\r\n        }\r\n      }\r\n    } else {\r\n      isSelected = value ?? void 0;\r\n    }\r\n    const { eCheckbox } = this;\r\n    if (!displayed) {\r\n      eCheckbox.setDisplayed(false);\r\n      return;\r\n    }\r\n    eCheckbox.setValue(isSelected);\r\n    const disabled = params.disabled ?? !column?.isCellEditable(node);\r\n    eCheckbox.setDisabled(disabled);\r\n    const translate = this.getLocaleTextFunc();\r\n    const stateName = _getAriaCheckboxStateName(translate, isSelected);\r\n    const ariaLabel = disabled ? stateName : `${translate(\"ariaToggleCellValue\", \"Press SPACE to toggle cell value\")} (${stateName})`;\r\n    eCheckbox.setInputAriaLabel(ariaLabel);\r\n  }\r\n  onCheckboxChanged(isSelected) {\r\n    const { params } = this;\r\n    const { column, node, value } = params;\r\n    this.beans?.editSvc?.setEditingCells(\r\n      [\r\n        {\r\n          column,\r\n          colId: column.getColId(),\r\n          rowIndex: node.rowIndex,\r\n          rowPinned: node.rowPinned,\r\n          state: \"changed\",\r\n          oldValue: value,\r\n          newValue: value\r\n        }\r\n      ],\r\n      { update: true }\r\n    );\r\n    const valueChanged = node.setDataValue(column, isSelected, \"renderer\");\r\n    this.beans.editSvc?.stopEditing(\r\n      {\r\n        rowNode: node,\r\n        column\r\n      },\r\n      { source: this.beans.editSvc?.isBatchEditing() ? \"ui\" : \"api\" }\r\n    );\r\n    if (!valueChanged) {\r\n      this.updateCheckbox(params);\r\n    }\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/pinnedRowModel/manualPinnedRowUtils.ts\r\nvar PinnedRows = class {\r\n  constructor(beans, floating) {\r\n    this.beans = beans;\r\n    this.floating = floating;\r\n    /** Canonical set of pinned nodes */\r\n    this.all = /* @__PURE__ */ new Set();\r\n    /**\r\n     * Set of nodes that should currently be visible given the context of the grid.\r\n     * This is currently used for hiding leaf nodes in pivot mode and filtered nodes.\r\n     */\r\n    this.visible = /* @__PURE__ */ new Set();\r\n    /** Ordering of nodes in the pinned area */\r\n    this.order = [];\r\n    /** IDs of nodes that need to be pinned once they are available from the row model (SSRM) */\r\n    this.queued = /* @__PURE__ */ new Set();\r\n  }\r\n  size() {\r\n    return this.visible.size;\r\n  }\r\n  add(node) {\r\n    const { all, visible, order } = this;\r\n    if (all.has(node))\r\n      return;\r\n    all.add(node);\r\n    visible.add(node);\r\n    order.push(node);\r\n    this.sort();\r\n  }\r\n  delete(item) {\r\n    this.all.delete(item);\r\n    this.visible.delete(item);\r\n    this.queued.delete(item.id);\r\n    _removeFromArray(this.order, item);\r\n  }\r\n  has(item) {\r\n    return this.visible.has(item);\r\n  }\r\n  forEach(fn) {\r\n    this.order.forEach(fn);\r\n  }\r\n  getByIndex(i) {\r\n    return this.order[i];\r\n  }\r\n  getById(id) {\r\n    for (const node of this.visible) {\r\n      if (node.id == id)\r\n        return node;\r\n    }\r\n  }\r\n  clear() {\r\n    const { all, visible, order, queued } = this;\r\n    all.clear();\r\n    queued.clear();\r\n    visible.clear();\r\n    order.length = 0;\r\n  }\r\n  sort() {\r\n    const { sortSvc, rowNodeSorter, gos } = this.beans;\r\n    const sortOptions = sortSvc?.getSortOptions() ?? [];\r\n    const grandTotalNode = _removeGrandTotalRow(this.order);\r\n    this.order.sort((a, b) => (a.pinnedSibling?.rowIndex ?? 0) - (b.pinnedSibling?.rowIndex ?? 0));\r\n    this.order = rowNodeSorter?.doFullSort(this.order, sortOptions) ?? this.order;\r\n    if (!grandTotalNode)\r\n      return;\r\n    const grandTotalRow = _getGrandTotalRow(gos);\r\n    if (grandTotalRow === \"bottom\" || grandTotalRow === \"pinnedBottom\") {\r\n      this.order.push(grandTotalNode);\r\n    } else {\r\n      this.order.unshift(grandTotalNode);\r\n    }\r\n  }\r\n  hide(shouldHide) {\r\n    const { all, visible } = this;\r\n    all.forEach((node) => shouldHide(node) ? visible.delete(node) : visible.add(node));\r\n    this.order = Array.from(visible);\r\n    this.sort();\r\n  }\r\n  queue(id) {\r\n    this.queued.add(id);\r\n  }\r\n  unqueue(id) {\r\n    this.queued.delete(id);\r\n  }\r\n  forEachQueued(fn) {\r\n    this.queued.forEach(fn);\r\n  }\r\n};\r\nfunction _isDisplayedAfterFilterCSRM(node) {\r\n  if (node.level === -1)\r\n    return true;\r\n  const parent = node.parent;\r\n  if (parent?.childrenAfterSort?.some((child) => child == node)) {\r\n    return _isDisplayedAfterFilterCSRM(parent);\r\n  }\r\n  return false;\r\n}\r\nfunction _shouldHidePinnedRows(beans, node) {\r\n  const { gos, rowModel, filterManager } = beans;\r\n  if (_isServerSideRowModel(gos, rowModel)) {\r\n    return !rowModel.getRowNode(node.id);\r\n  }\r\n  if (filterManager?.isAnyFilterPresent()) {\r\n    return !_isDisplayedAfterFilterCSRM(node);\r\n  }\r\n  if (gos.get(\"pivotMode\")) {\r\n    return !node.group;\r\n  }\r\n  return false;\r\n}\r\nfunction _isNodeGrandTotal(node) {\r\n  return !!node.footer && node.level === -1;\r\n}\r\nfunction _isPinnedNodeGrandTotal(node) {\r\n  return !!node.pinnedSibling && _isNodeGrandTotal(node.pinnedSibling);\r\n}\r\nfunction _removeGrandTotalRow(order) {\r\n  const index = order.findIndex(_isPinnedNodeGrandTotal);\r\n  if (index > -1) {\r\n    return order.splice(index, 1)?.[0];\r\n  }\r\n}\r\n\r\n// packages/ag-grid-community/src/pinnedRowModel/manualPinnedRowModel.ts\r\nvar ManualPinnedRowModel = class extends BeanStub {\r\n  postConstruct() {\r\n    const { gos, beans } = this;\r\n    this.top = new PinnedRows(beans, \"top\");\r\n    this.bottom = new PinnedRows(beans, \"bottom\");\r\n    const shouldHide = (node) => _shouldHidePinnedRows(beans, node.pinnedSibling);\r\n    const runIsRowPinned = () => {\r\n      const isRowPinned = gos.get(\"isRowPinned\");\r\n      if (isRowPinned && gos.get(\"enableRowPinning\")) {\r\n        beans.rowModel.forEachNode((node) => this.pinRow(node, isRowPinned(node)), true);\r\n      }\r\n      this.refreshRowPositions();\r\n      this.dispatchRowPinnedEvents();\r\n    };\r\n    this.addManagedEventListeners({\r\n      gridStylesChanged: this.onGridStylesChanges.bind(this),\r\n      modelUpdated: ({ keepRenderedRows }) => {\r\n        this.tryToEmptyQueues();\r\n        this.pinGrandTotalRow();\r\n        this.forContainers((container) => container.hide(shouldHide));\r\n        this.refreshRowPositions();\r\n        if (!keepRenderedRows) {\r\n          this.dispatchRowPinnedEvents();\r\n        }\r\n      },\r\n      columnRowGroupChanged: () => {\r\n        this.forContainers(removeGroupRows);\r\n        this.refreshRowPositions();\r\n      },\r\n      rowNodeDataChanged: ({ node }) => {\r\n        const isRowPinnable = gos.get(\"isRowPinnable\");\r\n        const pinnable = isRowPinnable?.(node) ?? true;\r\n        if (!pinnable) {\r\n          this.pinRow(node, null);\r\n        }\r\n      },\r\n      firstDataRendered: runIsRowPinned\r\n    });\r\n    this.addManagedPropertyListener(\"pivotMode\", () => {\r\n      this.forContainers((container) => container.hide(shouldHide));\r\n      this.dispatchRowPinnedEvents();\r\n    });\r\n    this.addManagedPropertyListener(\"grandTotalRow\", ({ currentValue }) => {\r\n      this._grandTotalPinned = currentValue === \"pinnedBottom\" ? \"bottom\" : currentValue === \"pinnedTop\" ? \"top\" : null;\r\n    });\r\n    this.addManagedPropertyListener(\"isRowPinned\", runIsRowPinned);\r\n  }\r\n  destroy() {\r\n    this.reset(false);\r\n    super.destroy();\r\n  }\r\n  reset(dispatch = true) {\r\n    this.forContainers((container) => {\r\n      const nodesToUnpin = [];\r\n      container.forEach((n) => nodesToUnpin.push(n));\r\n      nodesToUnpin.forEach((n) => this.pinRow(n, null));\r\n      container.clear();\r\n    });\r\n    if (dispatch) {\r\n      this.dispatchRowPinnedEvents();\r\n    }\r\n  }\r\n  pinRow(rowNode, float, column) {\r\n    if (rowNode.footer && rowNode.level > -1)\r\n      return;\r\n    if (rowNode.footer && rowNode.level === -1) {\r\n      this._grandTotalPinned = float;\r\n      refreshCSRM(this.beans);\r\n      return;\r\n    }\r\n    const currentFloat = rowNode.rowPinned ?? rowNode.pinnedSibling?.rowPinned;\r\n    const switching = currentFloat != null && float != null && float != currentFloat;\r\n    if (switching) {\r\n      const pinned = rowNode.rowPinned ? rowNode : rowNode.pinnedSibling;\r\n      const source = rowNode.rowPinned ? rowNode.pinnedSibling : rowNode;\r\n      this.pinRow(pinned, null, column);\r\n      this.pinRow(source, float, column);\r\n      return;\r\n    }\r\n    const spannedRows = column && getSpannedRows(this.beans, rowNode, column);\r\n    if (spannedRows) {\r\n      spannedRows.forEach((node) => this.pinRow(node, float));\r\n      return;\r\n    }\r\n    if (float == null) {\r\n      const node = rowNode.rowPinned ? rowNode : rowNode.pinnedSibling;\r\n      const found = this.findPinnedRowNode(node);\r\n      if (!found)\r\n        return;\r\n      found.delete(node);\r\n      const source = node.pinnedSibling;\r\n      _destroyRowNodeSibling(node);\r\n      this.refreshRowPositions(float);\r\n      this.dispatchRowPinnedEvents(source);\r\n    } else {\r\n      const sibling = _createPinnedSibling(this.beans, rowNode, float);\r\n      const container = this.getContainer(float);\r\n      container.add(sibling);\r\n      if (_shouldHidePinnedRows(this.beans, rowNode)) {\r\n        container.hide((node) => _shouldHidePinnedRows(this.beans, node.pinnedSibling));\r\n      }\r\n      this.refreshRowPositions(float);\r\n      this.dispatchRowPinnedEvents(rowNode);\r\n    }\r\n  }\r\n  isManual() {\r\n    return true;\r\n  }\r\n  isEmpty(floating) {\r\n    return this.getContainer(floating).size() === 0;\r\n  }\r\n  isRowsToRender(floating) {\r\n    return !this.isEmpty(floating);\r\n  }\r\n  ensureRowHeightsValid() {\r\n    let anyChange = false;\r\n    let rowTop = 0;\r\n    const updateRowHeight = (rowNode) => {\r\n      if (rowNode.rowHeightEstimated) {\r\n        const rowHeight = _getRowHeightForNode(this.beans, rowNode);\r\n        rowNode.setRowTop(rowTop);\r\n        rowNode.setRowHeight(rowHeight.height);\r\n        rowTop += rowHeight.height;\r\n        anyChange = true;\r\n      }\r\n    };\r\n    this.bottom.forEach(updateRowHeight);\r\n    rowTop = 0;\r\n    this.top.forEach(updateRowHeight);\r\n    this.eventSvc.dispatchEvent({\r\n      type: \"pinnedHeightChanged\"\r\n    });\r\n    return anyChange;\r\n  }\r\n  getPinnedTopTotalHeight() {\r\n    return getTotalHeight(this.top);\r\n  }\r\n  getPinnedBottomTotalHeight() {\r\n    return getTotalHeight(this.bottom);\r\n  }\r\n  getPinnedTopRowCount() {\r\n    return this.top.size();\r\n  }\r\n  getPinnedBottomRowCount() {\r\n    return this.bottom.size();\r\n  }\r\n  getPinnedTopRow(index) {\r\n    return this.top.getByIndex(index);\r\n  }\r\n  getPinnedBottomRow(index) {\r\n    return this.bottom.getByIndex(index);\r\n  }\r\n  getPinnedRowById(id, floating) {\r\n    return this.getContainer(floating).getById(id);\r\n  }\r\n  forEachPinnedRow(floating, callback) {\r\n    this.getContainer(floating).forEach(callback);\r\n  }\r\n  getPinnedState() {\r\n    const buildState = (floating) => {\r\n      const list = [];\r\n      this.forEachPinnedRow(floating, (node) => list.push(node.pinnedSibling.id));\r\n      return list;\r\n    };\r\n    return {\r\n      top: buildState(\"top\"),\r\n      bottom: buildState(\"bottom\")\r\n    };\r\n  }\r\n  setPinnedState(state) {\r\n    this.forContainers((pinned, floating) => {\r\n      for (const id of state[floating]) {\r\n        const node = this.beans.rowModel.getRowNode(id);\r\n        if (node) {\r\n          this.pinRow(node, floating);\r\n        } else {\r\n          pinned.queue(id);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  getGrandTotalPinned() {\r\n    return this._grandTotalPinned;\r\n  }\r\n  setGrandTotalPinned(value) {\r\n    this._grandTotalPinned = value;\r\n  }\r\n  tryToEmptyQueues() {\r\n    this.forContainers((pinned, container) => {\r\n      const nodesToPin = /* @__PURE__ */ new Set();\r\n      pinned.forEachQueued((id) => {\r\n        const node = this.beans.rowModel.getRowNode(id);\r\n        if (node) {\r\n          nodesToPin.add(node);\r\n        }\r\n      });\r\n      for (const node of nodesToPin) {\r\n        pinned.unqueue(node.id);\r\n        this.pinRow(node, container);\r\n      }\r\n    });\r\n  }\r\n  pinGrandTotalRow() {\r\n    const { gos, beans, _grandTotalPinned: float } = this;\r\n    const rowModel = beans.rowModel;\r\n    if (!_isClientSideRowModel(gos, rowModel))\r\n      return;\r\n    const sibling = rowModel.rootNode?.sibling;\r\n    if (!sibling)\r\n      return;\r\n    const pinnedSibling = sibling.pinnedSibling;\r\n    const container = pinnedSibling && this.findPinnedRowNode(pinnedSibling);\r\n    if (!float) {\r\n      if (!container)\r\n        return;\r\n      container.delete(pinnedSibling);\r\n      _destroyRowNodeSibling(pinnedSibling);\r\n    } else {\r\n      if (container && container.floating !== float) {\r\n        container.delete(pinnedSibling);\r\n        _destroyRowNodeSibling(pinnedSibling);\r\n      }\r\n      if (!container || container.floating !== float) {\r\n        const newPinnedSibling = _createPinnedSibling(beans, sibling, float);\r\n        this.getContainer(float).add(newPinnedSibling);\r\n      }\r\n    }\r\n  }\r\n  onGridStylesChanges(e) {\r\n    if (e.rowHeightChanged) {\r\n      this.forContainers(\r\n        (container) => container.forEach((rowNode) => rowNode.setRowHeight(rowNode.rowHeight, true))\r\n      );\r\n    }\r\n  }\r\n  getContainer(floating) {\r\n    return floating === \"top\" ? this.top : this.bottom;\r\n  }\r\n  findPinnedRowNode(node) {\r\n    if (this.top.has(node))\r\n      return this.top;\r\n    if (this.bottom.has(node))\r\n      return this.bottom;\r\n  }\r\n  refreshRowPositions(floating) {\r\n    const refreshAll = (pinned) => refreshRowPositions(this.beans, pinned);\r\n    return floating == null ? this.forContainers(refreshAll) : refreshAll(this.getContainer(floating));\r\n  }\r\n  forContainers(fn) {\r\n    fn(this.top, \"top\");\r\n    fn(this.bottom, \"bottom\");\r\n  }\r\n  dispatchRowPinnedEvents(node) {\r\n    this.eventSvc.dispatchEvent({ type: \"pinnedRowsChanged\" });\r\n    node?.dispatchRowEvent(\"rowPinned\");\r\n  }\r\n};\r\nfunction refreshRowPositions(beans, container) {\r\n  let rowTop = 0;\r\n  container.forEach((node, index) => {\r\n    node.setRowTop(rowTop);\r\n    if (node.rowHeightEstimated || node.rowHeight == null) {\r\n      node.setRowHeight(_getRowHeightForNode(beans, node).height);\r\n    }\r\n    node.setRowIndex(index);\r\n    rowTop += node.rowHeight;\r\n  });\r\n}\r\nfunction _createPinnedSibling(beans, rowNode, floating) {\r\n  if (rowNode.pinnedSibling) {\r\n    return rowNode.pinnedSibling;\r\n  }\r\n  const sibling = _createRowNodeSibling(rowNode, beans);\r\n  sibling.setRowTop(null);\r\n  sibling.setRowIndex(null);\r\n  sibling.rowPinned = floating;\r\n  const prefix = floating === \"top\" ? ROW_ID_PREFIX_TOP_PINNED : ROW_ID_PREFIX_BOTTOM_PINNED;\r\n  sibling.id = `${prefix}${floating}-${rowNode.id}`;\r\n  sibling.pinnedSibling = rowNode;\r\n  rowNode.pinnedSibling = sibling;\r\n  return sibling;\r\n}\r\nfunction _destroyRowNodeSibling(rowNode) {\r\n  if (!rowNode.pinnedSibling) {\r\n    return;\r\n  }\r\n  rowNode.rowPinned = null;\r\n  rowNode.setRowTop(null);\r\n  rowNode.setRowIndex(null);\r\n  const mainNode = rowNode.pinnedSibling;\r\n  rowNode.pinnedSibling = void 0;\r\n  if (mainNode) {\r\n    mainNode.pinnedSibling = void 0;\r\n    mainNode.rowPinned = null;\r\n  }\r\n}\r\nfunction removeGroupRows(set) {\r\n  const rowsToRemove = /* @__PURE__ */ new Set();\r\n  set.forEach((node) => {\r\n    if (node.group) {\r\n      rowsToRemove.add(node);\r\n    }\r\n  });\r\n  rowsToRemove.forEach((node) => set.delete(node));\r\n}\r\nfunction getSpannedRows(beans, rowNode, column) {\r\n  const { rowSpanSvc } = beans;\r\n  const isCellSpanning = (column && rowSpanSvc?.isCellSpanning(column, rowNode)) ?? false;\r\n  if (column && isCellSpanning) {\r\n    return rowSpanSvc?.getCellSpan(column, rowNode)?.spannedNodes;\r\n  }\r\n}\r\nfunction getTotalHeight(container) {\r\n  const size = container.size();\r\n  if (size === 0)\r\n    return 0;\r\n  const node = container.getByIndex(size - 1);\r\n  if (node === void 0)\r\n    return 0;\r\n  return node.rowTop + node.rowHeight;\r\n}\r\nfunction refreshCSRM({ gos, rowModel }) {\r\n  if (_isClientSideRowModel(gos, rowModel)) {\r\n    rowModel.refreshModel({ step: \"map\" });\r\n  }\r\n}\r\n\r\n// packages/ag-grid-community/src/pinnedRowModel/staticPinnedRowModel.ts\r\nvar StaticPinnedRowModel = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.nextId = 0;\r\n    this.pinnedTopRows = { cache: {}, order: [] };\r\n    this.pinnedBottomRows = { cache: {}, order: [] };\r\n  }\r\n  postConstruct() {\r\n    const gos = this.gos;\r\n    this.setPinnedRowData(gos.get(\"pinnedTopRowData\"), \"top\");\r\n    this.setPinnedRowData(gos.get(\"pinnedBottomRowData\"), \"bottom\");\r\n    this.addManagedPropertyListener(\"pinnedTopRowData\", (e) => this.setPinnedRowData(e.currentValue, \"top\"));\r\n    this.addManagedPropertyListener(\"pinnedBottomRowData\", (e) => this.setPinnedRowData(e.currentValue, \"bottom\"));\r\n    this.addManagedEventListeners({ gridStylesChanged: this.onGridStylesChanges.bind(this) });\r\n  }\r\n  reset() {\r\n  }\r\n  isEmpty(floating) {\r\n    return this.getCache(floating).order.length === 0;\r\n  }\r\n  isRowsToRender(floating) {\r\n    return !this.isEmpty(floating);\r\n  }\r\n  isManual() {\r\n    return false;\r\n  }\r\n  pinRow(_node, _container) {\r\n  }\r\n  onGridStylesChanges(e) {\r\n    if (e.rowHeightChanged) {\r\n      const estimateRowHeight = (rowNode) => {\r\n        rowNode.setRowHeight(rowNode.rowHeight, true);\r\n      };\r\n      forEach(this.pinnedBottomRows, estimateRowHeight);\r\n      forEach(this.pinnedTopRows, estimateRowHeight);\r\n    }\r\n  }\r\n  ensureRowHeightsValid() {\r\n    let anyChange = false;\r\n    let rowTop = 0;\r\n    const updateRowHeight = (rowNode) => {\r\n      if (rowNode.rowHeightEstimated) {\r\n        const rowHeight = _getRowHeightForNode(this.beans, rowNode);\r\n        rowNode.setRowTop(rowTop);\r\n        rowNode.setRowHeight(rowHeight.height);\r\n        rowTop += rowHeight.height;\r\n        anyChange = true;\r\n      }\r\n    };\r\n    forEach(this.pinnedBottomRows, updateRowHeight);\r\n    rowTop = 0;\r\n    forEach(this.pinnedTopRows, updateRowHeight);\r\n    this.eventSvc.dispatchEvent({\r\n      type: \"pinnedHeightChanged\"\r\n    });\r\n    return anyChange;\r\n  }\r\n  setPinnedRowData(rowData, floating) {\r\n    this.updateNodesFromRowData(rowData, floating);\r\n    this.eventSvc.dispatchEvent({\r\n      type: \"pinnedRowDataChanged\"\r\n    });\r\n  }\r\n  /**\r\n   * Updates existing RowNode instances and creates new ones if necessary\r\n   *\r\n   * Setting data as `undefined` will clear row nodes\r\n   */\r\n  updateNodesFromRowData(allData, floating) {\r\n    const nodes = this.getCache(floating);\r\n    if (allData === void 0) {\r\n      nodes.order.length = 0;\r\n      nodes.cache = {};\r\n      return;\r\n    }\r\n    const getRowId = _getRowIdCallback(this.gos);\r\n    const idPrefix = floating === \"top\" ? ROW_ID_PREFIX_TOP_PINNED : ROW_ID_PREFIX_BOTTOM_PINNED;\r\n    const nodesToRemove = new Set(nodes.order);\r\n    const newOrder = [];\r\n    const dataIds = /* @__PURE__ */ new Set();\r\n    let nextRowTop = 0;\r\n    let i = -1;\r\n    for (const data of allData) {\r\n      const id = getRowId?.({ data, level: 0, rowPinned: floating }) ?? idPrefix + this.nextId++;\r\n      if (dataIds.has(id)) {\r\n        _warn(96, { id, data });\r\n        continue;\r\n      }\r\n      i++;\r\n      dataIds.add(id);\r\n      newOrder.push(id);\r\n      const existingNode = getById(nodes, id);\r\n      if (existingNode !== void 0) {\r\n        if (existingNode.data !== data) {\r\n          existingNode.updateData(data);\r\n        }\r\n        nextRowTop += this.setRowTopAndRowIndex(existingNode, nextRowTop, i);\r\n        nodesToRemove.delete(id);\r\n      } else {\r\n        const rowNode = new RowNode(this.beans);\r\n        rowNode.id = id;\r\n        rowNode.data = data;\r\n        rowNode.rowPinned = floating;\r\n        nextRowTop += this.setRowTopAndRowIndex(rowNode, nextRowTop, i);\r\n        nodes.cache[id] = rowNode;\r\n        nodes.order.push(id);\r\n      }\r\n    }\r\n    nodesToRemove.forEach((id) => {\r\n      getById(nodes, id)?.clearRowTopAndRowIndex();\r\n      delete nodes.cache[id];\r\n    });\r\n    nodes.order = newOrder;\r\n  }\r\n  setRowTopAndRowIndex(rowNode, rowTop, rowIndex) {\r\n    rowNode.setRowTop(rowTop);\r\n    rowNode.setRowHeight(_getRowHeightForNode(this.beans, rowNode).height);\r\n    rowNode.setRowIndex(rowIndex);\r\n    return rowNode.rowHeight;\r\n  }\r\n  getPinnedTopTotalHeight() {\r\n    return getTotalHeight2(this.pinnedTopRows);\r\n  }\r\n  getPinnedBottomTotalHeight() {\r\n    return getTotalHeight2(this.pinnedBottomRows);\r\n  }\r\n  getPinnedTopRowCount() {\r\n    return getSize(this.pinnedTopRows);\r\n  }\r\n  getPinnedBottomRowCount() {\r\n    return getSize(this.pinnedBottomRows);\r\n  }\r\n  getPinnedTopRow(index) {\r\n    return getByIndex(this.pinnedTopRows, index);\r\n  }\r\n  getPinnedBottomRow(index) {\r\n    return getByIndex(this.pinnedBottomRows, index);\r\n  }\r\n  getPinnedRowById(id, floating) {\r\n    return getById(this.getCache(floating), id);\r\n  }\r\n  forEachPinnedRow(floating, callback) {\r\n    return forEach(this.getCache(floating), callback);\r\n  }\r\n  getCache(floating) {\r\n    return floating === \"top\" ? this.pinnedTopRows : this.pinnedBottomRows;\r\n  }\r\n  getPinnedState() {\r\n    return { top: [], bottom: [] };\r\n  }\r\n  setPinnedState() {\r\n  }\r\n  getGrandTotalPinned() {\r\n    return;\r\n  }\r\n  setGrandTotalPinned() {\r\n  }\r\n};\r\nfunction getTotalHeight2(rowNodes) {\r\n  const size = getSize(rowNodes);\r\n  if (size === 0) {\r\n    return 0;\r\n  }\r\n  const node = getByIndex(rowNodes, size - 1);\r\n  if (node === void 0) {\r\n    return 0;\r\n  }\r\n  return node.rowTop + node.rowHeight;\r\n}\r\nfunction getById(cache, id) {\r\n  return cache.cache[id];\r\n}\r\nfunction getByIndex(cache, i) {\r\n  return getById(cache, cache.order[i]);\r\n}\r\nfunction forEach(cache, callback) {\r\n  cache.order.forEach((id, index) => {\r\n    const node = getById(cache, id);\r\n    node && callback(node, index);\r\n  });\r\n}\r\nfunction getSize(cache) {\r\n  return cache.order.length;\r\n}\r\n\r\n// packages/ag-grid-community/src/pinnedRowModel/pinnedRowModel.ts\r\nvar PinnedRowModel = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"pinnedRowModel\";\r\n  }\r\n  postConstruct() {\r\n    const { gos } = this;\r\n    const initialiseRowModel = () => {\r\n      const enableRowPinning = gos.get(\"enableRowPinning\");\r\n      const grandTotalRow = _getGrandTotalRow(gos);\r\n      const isGrandTotalRowPinned = grandTotalRow === \"pinnedBottom\" || grandTotalRow === \"pinnedTop\";\r\n      const useManualPinnedRowModel = !!enableRowPinning || isGrandTotalRowPinned;\r\n      const shouldDestroy = useManualPinnedRowModel ? this.inner instanceof StaticPinnedRowModel : this.inner instanceof ManualPinnedRowModel;\r\n      if (this.inner && shouldDestroy) {\r\n        this.destroyBean(this.inner);\r\n      }\r\n      if (shouldDestroy || !this.inner) {\r\n        this.inner = this.createManagedBean(\r\n          useManualPinnedRowModel ? new ManualPinnedRowModel() : new StaticPinnedRowModel()\r\n        );\r\n      }\r\n    };\r\n    this.addManagedPropertyListeners([\"enableRowPinning\", \"grandTotalRow\"], initialiseRowModel);\r\n    initialiseRowModel();\r\n  }\r\n  reset() {\r\n    return this.inner.reset();\r\n  }\r\n  isEmpty(container) {\r\n    return this.inner.isEmpty(container);\r\n  }\r\n  isManual() {\r\n    return this.inner.isManual();\r\n  }\r\n  isRowsToRender(container) {\r\n    return this.inner.isRowsToRender(container);\r\n  }\r\n  pinRow(node, container, column) {\r\n    return this.inner.pinRow(node, container, column);\r\n  }\r\n  ensureRowHeightsValid() {\r\n    return this.inner.ensureRowHeightsValid();\r\n  }\r\n  getPinnedRowById(id, container) {\r\n    return this.inner.getPinnedRowById(id, container);\r\n  }\r\n  getPinnedTopTotalHeight() {\r\n    return this.inner.getPinnedTopTotalHeight();\r\n  }\r\n  getPinnedBottomTotalHeight() {\r\n    return this.inner.getPinnedBottomTotalHeight();\r\n  }\r\n  getPinnedTopRowCount() {\r\n    return this.inner.getPinnedTopRowCount();\r\n  }\r\n  getPinnedBottomRowCount() {\r\n    return this.inner.getPinnedBottomRowCount();\r\n  }\r\n  getPinnedTopRow(index) {\r\n    return this.inner.getPinnedTopRow(index);\r\n  }\r\n  getPinnedBottomRow(index) {\r\n    return this.inner.getPinnedBottomRow(index);\r\n  }\r\n  forEachPinnedRow(container, callback) {\r\n    return this.inner.forEachPinnedRow(container, callback);\r\n  }\r\n  getPinnedState() {\r\n    return this.inner.getPinnedState();\r\n  }\r\n  setPinnedState(state) {\r\n    return this.inner.setPinnedState(state);\r\n  }\r\n  setGrandTotalPinned(value) {\r\n    return this.inner.setGrandTotalPinned(value);\r\n  }\r\n  getGrandTotalPinned() {\r\n    return this.inner.getGrandTotalPinned();\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/clientSideRowModel/abstractClientSideNodeManager.ts\r\nvar ROOT_NODE_ID = \"ROOT_NODE_ID\";\r\nvar AbstractClientSideNodeManager = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.nextId = 0;\r\n    this.allNodesMap = {};\r\n    this.rootNode = null;\r\n  }\r\n  getRowNode(id) {\r\n    return this.allNodesMap[id];\r\n  }\r\n  extractRowData() {\r\n    return this.rootNode?.allLeafChildren?.map((node) => node.data);\r\n  }\r\n  activate(rootNode) {\r\n    this.rootNode = rootNode;\r\n    rootNode.group = true;\r\n    rootNode.level = -1;\r\n    rootNode.id = ROOT_NODE_ID;\r\n    rootNode.allLeafChildren = [];\r\n    rootNode.childrenAfterGroup = [];\r\n    rootNode.childrenAfterSort = [];\r\n    rootNode.childrenAfterAggFilter = [];\r\n    rootNode.childrenAfterFilter = [];\r\n    this.updateRootSiblingArrays(rootNode);\r\n  }\r\n  deactivate() {\r\n    if (this.rootNode) {\r\n      this.allNodesMap = {};\r\n      this.rootNode = null;\r\n    }\r\n  }\r\n  destroy() {\r\n    super.destroy();\r\n    this.allNodesMap = {};\r\n    this.rootNode = null;\r\n  }\r\n  setNewRowData(rowData) {\r\n    const rootNode = this.rootNode;\r\n    if (!rootNode) {\r\n      return;\r\n    }\r\n    this.dispatchRowDataUpdateStartedEvent(rowData);\r\n    rootNode.childrenAfterFilter = null;\r\n    rootNode.childrenAfterGroup = null;\r\n    rootNode.childrenAfterAggFilter = null;\r\n    rootNode.childrenAfterSort = null;\r\n    rootNode.childrenMapped = null;\r\n    rootNode.updateHasChildren();\r\n    this.allNodesMap = {};\r\n    this.nextId = 0;\r\n    this.loadNewRowData(rowData);\r\n    this.updateRootSiblingArrays(rootNode);\r\n  }\r\n  updateRootSiblingArrays(rootNode) {\r\n    const sibling = rootNode.sibling;\r\n    if (sibling) {\r\n      sibling.childrenAfterFilter = rootNode.childrenAfterFilter;\r\n      sibling.childrenAfterGroup = rootNode.childrenAfterGroup;\r\n      sibling.childrenAfterAggFilter = rootNode.childrenAfterAggFilter;\r\n      sibling.childrenAfterSort = rootNode.childrenAfterSort;\r\n      sibling.childrenMapped = rootNode.childrenMapped;\r\n      sibling.allLeafChildren = rootNode.allLeafChildren;\r\n    }\r\n  }\r\n  loadNewRowData(rowData) {\r\n    this.rootNode.allLeafChildren = rowData?.map((dataItem, index) => this.createRowNode(dataItem, index)) ?? [];\r\n  }\r\n  setImmutableRowData(params, rowData) {\r\n    const getRowIdFunc = _getRowIdCallback(this.gos);\r\n    const reorder = !this.gos.get(\"suppressMaintainUnsortedOrder\");\r\n    const changedRowNodes = params.changedRowNodes;\r\n    const processedNodes = /* @__PURE__ */ new Set();\r\n    const rootNode = this.rootNode;\r\n    const oldAllLeafChildren = rootNode.allLeafChildren;\r\n    const oldAllLeafChildrenLen = oldAllLeafChildren.length;\r\n    let nodesAdded = false;\r\n    let nodesRemoved = false;\r\n    let nodesUpdated = false;\r\n    let orderChanged = false;\r\n    for (let i = 0, prevSourceRowIndex = -1, len = rowData.length; i < len; i++) {\r\n      const data = rowData[i];\r\n      let node = this.getRowNode(\r\n        getRowIdFunc({ data, level: 0 })\r\n      );\r\n      if (!node) {\r\n        nodesAdded = true;\r\n        node = this.createRowNode(data, -1);\r\n        changedRowNodes.add(node);\r\n      } else {\r\n        if (reorder) {\r\n          const sourceRowIndex = node.sourceRowIndex;\r\n          orderChanged || (orderChanged = sourceRowIndex <= prevSourceRowIndex || // A node was moved up, so order changed\r\n          nodesAdded);\r\n          prevSourceRowIndex = sourceRowIndex;\r\n        }\r\n        if (node.data !== data) {\r\n          nodesUpdated = true;\r\n          node.updateData(data);\r\n          changedRowNodes.update(node);\r\n        }\r\n      }\r\n      processedNodes.add(node);\r\n    }\r\n    const nodesToUnselect = [];\r\n    for (let i = 0; i < oldAllLeafChildrenLen; i++) {\r\n      const node = oldAllLeafChildren[i];\r\n      if (!processedNodes.has(node)) {\r\n        nodesRemoved = true;\r\n        if (node.isSelected()) {\r\n          nodesToUnselect.push(node);\r\n        }\r\n        if (node.pinnedSibling) {\r\n          this.beans.pinnedRowModel?.pinRow(node.pinnedSibling, null);\r\n        }\r\n        this.rowNodeDeleted(node);\r\n        changedRowNodes.remove(node);\r\n      }\r\n    }\r\n    if (nodesAdded || nodesRemoved || orderChanged) {\r\n      const newAllLeafChildren = new Array(processedNodes.size);\r\n      let writeIdx = 0;\r\n      if (!reorder) {\r\n        for (let i = 0; i < oldAllLeafChildrenLen; ++i) {\r\n          const node = oldAllLeafChildren[i];\r\n          if (processedNodes.delete(node)) {\r\n            node.sourceRowIndex = writeIdx;\r\n            newAllLeafChildren[writeIdx++] = node;\r\n          }\r\n        }\r\n      }\r\n      for (const node of processedNodes) {\r\n        node.sourceRowIndex = writeIdx;\r\n        newAllLeafChildren[writeIdx++] = node;\r\n      }\r\n      rootNode.allLeafChildren = newAllLeafChildren;\r\n      const sibling = rootNode.sibling;\r\n      if (sibling) {\r\n        sibling.allLeafChildren = newAllLeafChildren;\r\n      }\r\n      params.rowNodesOrderChanged || (params.rowNodesOrderChanged = orderChanged);\r\n    }\r\n    if (nodesAdded || nodesRemoved || orderChanged || nodesUpdated) {\r\n      this.deselectNodes(nodesToUnselect);\r\n      params.rowDataUpdated = true;\r\n    }\r\n  }\r\n  /** Called when a node needs to be deleted */\r\n  rowNodeDeleted(node) {\r\n    node.clearRowTopAndRowIndex();\r\n    const id = node.id;\r\n    const allNodesMap = this.allNodesMap;\r\n    if (allNodesMap[id] === node) {\r\n      delete allNodesMap[id];\r\n    }\r\n  }\r\n  updateRowData(rowDataTran, changedRowNodes) {\r\n    this.dispatchRowDataUpdateStartedEvent(rowDataTran.add);\r\n    const updateRowDataResult = {\r\n      changedRowNodes,\r\n      rowNodeTransaction: { remove: [], update: [], add: [] },\r\n      rowsInserted: false\r\n    };\r\n    const nodesToUnselect = [];\r\n    const getRowIdFunc = _getRowIdCallback(this.gos);\r\n    this.executeRemove(getRowIdFunc, rowDataTran, updateRowDataResult, nodesToUnselect);\r\n    this.executeUpdate(getRowIdFunc, rowDataTran, updateRowDataResult, nodesToUnselect);\r\n    this.executeAdd(rowDataTran, updateRowDataResult);\r\n    this.deselectNodes(nodesToUnselect);\r\n    return updateRowDataResult;\r\n  }\r\n  executeAdd(rowDataTran, result) {\r\n    const add = rowDataTran.add;\r\n    if (!add?.length) {\r\n      return;\r\n    }\r\n    let allLeafChildren = this.rootNode.allLeafChildren;\r\n    let addIndex = allLeafChildren.length;\r\n    if (typeof rowDataTran.addIndex === \"number\") {\r\n      addIndex = this.sanitizeAddIndex(rowDataTran.addIndex);\r\n      if (addIndex > 0) {\r\n        const getDataPath = this.gos.get(\"treeData\") && this.gos.get(\"getDataPath\");\r\n        if (getDataPath) {\r\n          for (let i = 0; i < allLeafChildren.length; i++) {\r\n            const node = allLeafChildren[i];\r\n            if (node?.rowIndex == addIndex - 1) {\r\n              addIndex = i + 1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    const addLength = add.length;\r\n    const changedRowNodes = result.changedRowNodes;\r\n    const newNodes = new Array(addLength);\r\n    for (let i = 0; i < addLength; i++) {\r\n      const newNode = this.createRowNode(add[i], addIndex + i);\r\n      changedRowNodes.add(newNode);\r\n      newNodes[i] = newNode;\r\n    }\r\n    const rootNode = this.rootNode;\r\n    if (addIndex < allLeafChildren.length) {\r\n      const nodesBeforeIndex = allLeafChildren.slice(0, addIndex);\r\n      const nodesAfterIndex = allLeafChildren.slice(addIndex, allLeafChildren.length);\r\n      const nodesAfterIndexFirstIndex = nodesBeforeIndex.length + newNodes.length;\r\n      for (let index = 0, length = nodesAfterIndex.length; index < length; ++index) {\r\n        nodesAfterIndex[index].sourceRowIndex = nodesAfterIndexFirstIndex + index;\r\n      }\r\n      allLeafChildren = [...nodesBeforeIndex, ...newNodes, ...nodesAfterIndex];\r\n      result.rowsInserted = true;\r\n    } else {\r\n      allLeafChildren = allLeafChildren.concat(newNodes);\r\n    }\r\n    rootNode.allLeafChildren = allLeafChildren;\r\n    const sibling = rootNode.sibling;\r\n    if (sibling) {\r\n      sibling.allLeafChildren = allLeafChildren;\r\n    }\r\n    result.rowNodeTransaction.add = newNodes;\r\n  }\r\n  executeRemove(getRowIdFunc, rowDataTran, { changedRowNodes, rowNodeTransaction }, nodesToUnselect) {\r\n    const { remove } = rowDataTran;\r\n    if (!remove?.length) {\r\n      return;\r\n    }\r\n    const rowIdsRemoved = {};\r\n    remove.forEach((item) => {\r\n      const rowNode = this.lookupRowNode(getRowIdFunc, item);\r\n      if (!rowNode) {\r\n        return;\r\n      }\r\n      if (rowNode.isSelected()) {\r\n        nodesToUnselect.push(rowNode);\r\n      }\r\n      if (rowNode.pinnedSibling) {\r\n        this.beans.pinnedRowModel?.pinRow(rowNode.pinnedSibling, null);\r\n      }\r\n      rowNode.clearRowTopAndRowIndex();\r\n      rowIdsRemoved[rowNode.id] = true;\r\n      delete this.allNodesMap[rowNode.id];\r\n      rowNodeTransaction.remove.push(rowNode);\r\n      changedRowNodes.remove(rowNode);\r\n    });\r\n    const rootNode = this.rootNode;\r\n    rootNode.allLeafChildren = rootNode.allLeafChildren?.filter((rowNode) => !rowIdsRemoved[rowNode.id]) ?? null;\r\n    rootNode.allLeafChildren?.forEach((node, idx) => {\r\n      node.sourceRowIndex = idx;\r\n    });\r\n    const sibling = rootNode.sibling;\r\n    if (sibling) {\r\n      sibling.allLeafChildren = rootNode.allLeafChildren;\r\n    }\r\n  }\r\n  executeUpdate(getRowIdFunc, rowDataTran, { changedRowNodes, rowNodeTransaction }, nodesToUnselect) {\r\n    const { update } = rowDataTran;\r\n    if (!update?.length) {\r\n      return;\r\n    }\r\n    update.forEach((item) => {\r\n      const rowNode = this.lookupRowNode(getRowIdFunc, item);\r\n      if (!rowNode) {\r\n        return;\r\n      }\r\n      rowNode.updateData(item);\r\n      if (!rowNode.selectable && rowNode.isSelected()) {\r\n        nodesToUnselect.push(rowNode);\r\n      }\r\n      rowNodeTransaction.update.push(rowNode);\r\n      changedRowNodes.update(rowNode);\r\n    });\r\n  }\r\n  dispatchRowDataUpdateStartedEvent(rowData) {\r\n    this.eventSvc.dispatchEvent({\r\n      type: \"rowDataUpdateStarted\",\r\n      firstRowData: rowData?.length ? rowData[0] : null\r\n    });\r\n  }\r\n  deselectNodes(nodesToUnselect) {\r\n    const source = \"rowDataChanged\";\r\n    const selectionSvc = this.beans.selectionSvc;\r\n    const selectionChanged = nodesToUnselect.length > 0;\r\n    if (selectionChanged) {\r\n      selectionSvc?.setNodesSelected({\r\n        newValue: false,\r\n        nodes: nodesToUnselect,\r\n        suppressFinishActions: true,\r\n        source\r\n      });\r\n    }\r\n    selectionSvc?.updateGroupsFromChildrenSelections?.(source);\r\n    if (selectionChanged) {\r\n      this.eventSvc.dispatchEvent({\r\n        type: \"selectionChanged\",\r\n        source,\r\n        selectedNodes: selectionSvc?.getSelectedNodes() ?? null,\r\n        serverSideState: null\r\n      });\r\n    }\r\n  }\r\n  sanitizeAddIndex(addIndex) {\r\n    const allChildrenCount = this.rootNode.allLeafChildren?.length ?? 0;\r\n    if (addIndex < 0 || addIndex >= allChildrenCount || Number.isNaN(addIndex)) {\r\n      return allChildrenCount;\r\n    }\r\n    return Math.ceil(addIndex);\r\n  }\r\n  createRowNode(data, sourceRowIndex) {\r\n    const node = new RowNode(this.beans);\r\n    node.parent = this.rootNode;\r\n    node.level = 0;\r\n    node.group = false;\r\n    node.expanded = false;\r\n    node.sourceRowIndex = sourceRowIndex;\r\n    node.setDataAndId(data, String(this.nextId));\r\n    if (this.allNodesMap[node.id]) {\r\n      _warn(2, { nodeId: node.id });\r\n    }\r\n    this.allNodesMap[node.id] = node;\r\n    this.nextId++;\r\n    return node;\r\n  }\r\n  lookupRowNode(getRowIdFunc, data) {\r\n    let rowNode;\r\n    if (getRowIdFunc) {\r\n      const id = getRowIdFunc({ data, level: 0 });\r\n      rowNode = this.allNodesMap[id];\r\n      if (!rowNode) {\r\n        _error(4, { id });\r\n        return null;\r\n      }\r\n    } else {\r\n      rowNode = this.rootNode?.allLeafChildren?.find((node) => node.data === data);\r\n      if (!rowNode) {\r\n        _error(5, { data });\r\n        return null;\r\n      }\r\n    }\r\n    return rowNode || null;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/interfaces/serverSideTransaction.ts\r\nvar ServerSideTransactionResultStatus = /* @__PURE__ */ ((ServerSideTransactionResultStatus2) => {\r\n  ServerSideTransactionResultStatus2[\"Applied\"] = \"Applied\";\r\n  ServerSideTransactionResultStatus2[\"StoreNotFound\"] = \"StoreNotFound\";\r\n  ServerSideTransactionResultStatus2[\"StoreLoading\"] = \"StoreLoading\";\r\n  ServerSideTransactionResultStatus2[\"StoreWaitingToLoad\"] = \"StoreWaitingToLoad\";\r\n  ServerSideTransactionResultStatus2[\"StoreLoadingFailed\"] = \"StoreLoadingFailed\";\r\n  ServerSideTransactionResultStatus2[\"StoreWrongType\"] = \"StoreWrongType\";\r\n  ServerSideTransactionResultStatus2[\"Cancelled\"] = \"Cancelled\";\r\n  ServerSideTransactionResultStatus2[\"StoreNotStarted\"] = \"StoreNotStarted\";\r\n  return ServerSideTransactionResultStatus2;\r\n})(ServerSideTransactionResultStatus || {});\r\n\r\n// packages/ag-grid-community/src/selection/checkboxSelectionComponent.ts\r\nvar CheckboxSelectionComponentElement = {\r\n  tag: \"div\",\r\n  cls: \"ag-selection-checkbox\",\r\n  role: \"presentation\",\r\n  children: [\r\n    {\r\n      tag: \"ag-checkbox\",\r\n      ref: \"eCheckbox\",\r\n      role: \"presentation\"\r\n    }\r\n  ]\r\n};\r\nvar CheckboxSelectionComponent = class extends Component {\r\n  constructor() {\r\n    super(CheckboxSelectionComponentElement, [AgCheckboxSelector]);\r\n    this.eCheckbox = RefPlaceholder;\r\n  }\r\n  postConstruct() {\r\n    this.eCheckbox.setPassive(true);\r\n  }\r\n  onDataChanged() {\r\n    this.onSelectionChanged();\r\n  }\r\n  onSelectableChanged() {\r\n    this.showOrHideSelect();\r\n  }\r\n  onSelectionChanged() {\r\n    const translate = this.getLocaleTextFunc();\r\n    const { rowNode, eCheckbox } = this;\r\n    const state = rowNode.isSelected();\r\n    const stateName = _getAriaCheckboxStateName(translate, state);\r\n    const [ariaKey, ariaLabel] = rowNode.selectable ? [\"ariaRowToggleSelection\", \"Press Space to toggle row selection\"] : [\"ariaRowSelectionDisabled\", \"Row Selection is disabled for this row\"];\r\n    const translatedLabel = translate(ariaKey, ariaLabel);\r\n    eCheckbox.setValue(state, true);\r\n    eCheckbox.setInputAriaLabel(`${translatedLabel} (${stateName})`);\r\n  }\r\n  init(params) {\r\n    this.rowNode = params.rowNode;\r\n    this.column = params.column;\r\n    this.overrides = params.overrides;\r\n    this.onSelectionChanged();\r\n    this.addManagedListeners(this.eCheckbox.getInputElement(), {\r\n      // we don't want double click on this icon to open a group\r\n      dblclick: _stopPropagationForAgGrid,\r\n      click: (event) => {\r\n        _stopPropagationForAgGrid(event);\r\n        this.beans.selectionSvc?.handleSelectionEvent(event, this.rowNode, \"checkboxSelected\");\r\n      }\r\n    });\r\n    this.addManagedListeners(this.rowNode, {\r\n      rowSelected: this.onSelectionChanged.bind(this),\r\n      dataChanged: this.onDataChanged.bind(this),\r\n      selectableChanged: this.onSelectableChanged.bind(this)\r\n    });\r\n    this.addManagedPropertyListener(\"rowSelection\", ({ currentValue, previousValue }) => {\r\n      const curr = typeof currentValue === \"object\" ? _getHideDisabledCheckboxes(currentValue) : void 0;\r\n      const prev = typeof previousValue === \"object\" ? _getHideDisabledCheckboxes(previousValue) : void 0;\r\n      if (curr !== prev) {\r\n        this.onSelectableChanged();\r\n      }\r\n    });\r\n    const isRowSelectableFunc = _getIsRowSelectable(this.gos);\r\n    const checkboxVisibleIsDynamic = isRowSelectableFunc || typeof this.getIsVisible() === \"function\";\r\n    if (checkboxVisibleIsDynamic) {\r\n      const showOrHideSelectListener = this.showOrHideSelect.bind(this);\r\n      this.addManagedEventListeners({ displayedColumnsChanged: showOrHideSelectListener });\r\n      this.addManagedListeners(this.rowNode, {\r\n        dataChanged: showOrHideSelectListener,\r\n        cellChanged: showOrHideSelectListener\r\n      });\r\n      this.showOrHideSelect();\r\n    }\r\n    this.eCheckbox.getInputElement().setAttribute(\"tabindex\", \"-1\");\r\n  }\r\n  showOrHideSelect() {\r\n    const { column, rowNode, overrides, gos } = this;\r\n    const selectable = rowNode.selectable;\r\n    const isVisible = this.getIsVisible();\r\n    let checkboxes = void 0;\r\n    if (typeof isVisible === \"function\") {\r\n      const extraParams = overrides?.callbackParams;\r\n      if (!column) {\r\n        checkboxes = isVisible({ ...extraParams, node: rowNode, data: rowNode.data });\r\n      } else {\r\n        const params = column.createColumnFunctionCallbackParams(rowNode);\r\n        checkboxes = isVisible({ ...extraParams, ...params });\r\n      }\r\n    } else {\r\n      checkboxes = isVisible ?? false;\r\n    }\r\n    const disabled = selectable && !checkboxes || !selectable && checkboxes;\r\n    const visible = selectable || checkboxes;\r\n    const so = gos.get(\"rowSelection\");\r\n    const showDisabledCheckboxes = so && typeof so !== \"string\" ? !_getHideDisabledCheckboxes(so) : !!column?.getColDef().showDisabledCheckboxes;\r\n    this.setVisible(visible && (disabled ? showDisabledCheckboxes : true));\r\n    this.setDisplayed(visible && (disabled ? showDisabledCheckboxes : true));\r\n    if (visible) {\r\n      this.eCheckbox.setDisabled(disabled);\r\n    }\r\n    if (overrides?.removeHidden) {\r\n      this.setDisplayed(visible);\r\n      return;\r\n    }\r\n  }\r\n  getIsVisible() {\r\n    const overrides = this.overrides;\r\n    if (overrides) {\r\n      return overrides.isVisible;\r\n    }\r\n    const so = this.gos.get(\"rowSelection\");\r\n    if (so && typeof so !== \"string\") {\r\n      return _getCheckboxes(so);\r\n    }\r\n    return this.column?.getColDef()?.checkboxSelection;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/selection/rowRangeSelectionContext.ts\r\nvar RowRangeSelectionContext = class {\r\n  constructor(rowModel, pinnedRowModel) {\r\n    this.rowModel = rowModel;\r\n    this.pinnedRowModel = pinnedRowModel;\r\n    /** Whether the user is currently selecting all nodes either via the header checkbox or API */\r\n    this.selectAll = false;\r\n    this.rootId = null;\r\n    /**\r\n     * Note that the \"end\" `RowNode` may come before or after the \"root\" `RowNode` in the\r\n     * actual grid.\r\n     */\r\n    this.endId = null;\r\n    this.cachedRange = [];\r\n  }\r\n  reset() {\r\n    this.rootId = null;\r\n    this.endId = null;\r\n    this.cachedRange.length = 0;\r\n  }\r\n  setRoot(node) {\r\n    this.rootId = node.id;\r\n    this.endId = null;\r\n    this.cachedRange.length = 0;\r\n  }\r\n  setEndRange(end) {\r\n    this.endId = end.id;\r\n    this.cachedRange.length = 0;\r\n  }\r\n  getRange() {\r\n    if (this.cachedRange.length === 0) {\r\n      const root = this.getRoot();\r\n      const end = this.getEnd();\r\n      if (root == null || end == null) {\r\n        return this.cachedRange;\r\n      }\r\n      this.cachedRange = this.getNodesInRange(root, end) ?? [];\r\n    }\r\n    return this.cachedRange;\r\n  }\r\n  isInRange(node) {\r\n    if (this.rootId === null) {\r\n      return false;\r\n    }\r\n    return this.getRange().some((nodeInRange) => nodeInRange.id === node.id);\r\n  }\r\n  getRoot(fallback) {\r\n    if (this.rootId) {\r\n      return this.getRowNode(this.rootId);\r\n    }\r\n    if (fallback) {\r\n      this.setRoot(fallback);\r\n      return fallback;\r\n    }\r\n  }\r\n  getEnd() {\r\n    if (this.endId) {\r\n      return this.getRowNode(this.endId);\r\n    }\r\n  }\r\n  getRowNode(id) {\r\n    let node;\r\n    const { rowModel, pinnedRowModel } = this;\r\n    node ?? (node = rowModel.getRowNode(id));\r\n    if (pinnedRowModel?.isManual()) {\r\n      node ?? (node = pinnedRowModel.getPinnedRowById(id, \"top\"));\r\n      node ?? (node = pinnedRowModel.getPinnedRowById(id, \"bottom\"));\r\n    }\r\n    return node;\r\n  }\r\n  /**\r\n   * Truncates the range to the given node (assumed to be within the current range).\r\n   * Returns nodes that remain in the current range and those that should be removed\r\n   *\r\n   * @param node - Node at which to truncate the range\r\n   * @returns Object of nodes to either keep or discard (i.e. deselect) from the range\r\n   */\r\n  truncate(node) {\r\n    const range = this.getRange();\r\n    if (range.length === 0) {\r\n      return { keep: [], discard: [] };\r\n    }\r\n    const discardAfter = range[0].id === this.rootId;\r\n    const idx = range.findIndex((rowNode) => rowNode.id === node.id);\r\n    if (idx > -1) {\r\n      const above = range.slice(0, idx);\r\n      const below = range.slice(idx + 1);\r\n      this.setEndRange(node);\r\n      return discardAfter ? { keep: above, discard: below } : { keep: below, discard: above };\r\n    } else {\r\n      return { keep: range, discard: [] };\r\n    }\r\n  }\r\n  /**\r\n   * Extends the range to the given node. Returns nodes that remain in the current range\r\n   * and those that should be removed.\r\n   *\r\n   * @param node - Node marking the new end of the range\r\n   * @returns Object of nodes to either keep or discard (i.e. deselect) from the range\r\n   */\r\n  extend(node, groupSelectsChildren = false) {\r\n    const root = this.getRoot();\r\n    if (root == null) {\r\n      const keep = this.getRange().slice();\r\n      if (groupSelectsChildren) {\r\n        node.depthFirstSearch((node2) => !node2.group && keep.push(node2));\r\n      }\r\n      keep.push(node);\r\n      this.setRoot(node);\r\n      return { keep, discard: [] };\r\n    }\r\n    const newRange = this.getNodesInRange(root, node);\r\n    if (!newRange) {\r\n      this.setRoot(node);\r\n      return { keep: [node], discard: [] };\r\n    }\r\n    if (newRange.find((newRangeNode) => newRangeNode.id === this.endId)) {\r\n      this.setEndRange(node);\r\n      return { keep: this.getRange(), discard: [] };\r\n    } else {\r\n      const discard = this.getRange().slice();\r\n      this.setEndRange(node);\r\n      return { keep: this.getRange(), discard };\r\n    }\r\n  }\r\n  getNodesInRange(start, end) {\r\n    const { pinnedRowModel, rowModel } = this;\r\n    if (!pinnedRowModel?.isManual()) {\r\n      return rowModel.getNodesInRangeForSelection(start, end);\r\n    }\r\n    if (start.rowPinned === \"top\" && !end.rowPinned) {\r\n      const pinnedRange = _getNodesInRangeForSelection(pinnedRowModel, \"top\", start, void 0);\r\n      return pinnedRange.concat(rowModel.getNodesInRangeForSelection(rowModel.getRow(0), end) ?? []);\r\n    }\r\n    if (start.rowPinned === \"bottom\" && !end.rowPinned) {\r\n      const pinnedRange = _getNodesInRangeForSelection(pinnedRowModel, \"bottom\", void 0, start);\r\n      const count = rowModel.getRowCount();\r\n      const lastMain = rowModel.getRow(count - 1);\r\n      return (rowModel.getNodesInRangeForSelection(end, lastMain) ?? []).concat(pinnedRange);\r\n    }\r\n    if (!start.rowPinned && !end.rowPinned) {\r\n      return rowModel.getNodesInRangeForSelection(start, end);\r\n    }\r\n    if (start.rowPinned === \"top\" && end.rowPinned === \"top\") {\r\n      return _getNodesInRangeForSelection(pinnedRowModel, \"top\", start, end);\r\n    }\r\n    if (start.rowPinned === \"bottom\" && end.rowPinned === \"top\") {\r\n      const top = _getNodesInRangeForSelection(pinnedRowModel, \"top\", end, void 0);\r\n      const bottom = _getNodesInRangeForSelection(pinnedRowModel, \"bottom\", void 0, start);\r\n      const first = rowModel.getRow(0);\r\n      const last = rowModel.getRow(rowModel.getRowCount() - 1);\r\n      return top.concat(rowModel.getNodesInRangeForSelection(first, last) ?? []).concat(bottom);\r\n    }\r\n    if (!start.rowPinned && end.rowPinned === \"top\") {\r\n      const pinned = _getNodesInRangeForSelection(pinnedRowModel, \"top\", end, void 0);\r\n      return pinned.concat(rowModel.getNodesInRangeForSelection(rowModel.getRow(0), start) ?? []);\r\n    }\r\n    if (start.rowPinned === \"top\" && end.rowPinned === \"bottom\") {\r\n      const top = _getNodesInRangeForSelection(pinnedRowModel, \"top\", start, void 0);\r\n      const bottom = _getNodesInRangeForSelection(pinnedRowModel, \"bottom\", void 0, end);\r\n      const first = rowModel.getRow(0);\r\n      const last = rowModel.getRow(rowModel.getRowCount() - 1);\r\n      return top.concat(rowModel.getNodesInRangeForSelection(first, last) ?? []).concat(bottom);\r\n    }\r\n    if (start.rowPinned === \"bottom\" && end.rowPinned === \"bottom\") {\r\n      return _getNodesInRangeForSelection(pinnedRowModel, \"bottom\", start, end);\r\n    }\r\n    if (!start.rowPinned && end.rowPinned === \"bottom\") {\r\n      const pinned = _getNodesInRangeForSelection(pinnedRowModel, \"bottom\", void 0, end);\r\n      const last = rowModel.getRow(rowModel.getRowCount());\r\n      return (rowModel.getNodesInRangeForSelection(start, last) ?? []).concat(pinned);\r\n    }\r\n    return null;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/selection/selectAllFeature.ts\r\nvar SelectAllFeature = class extends BeanStub {\r\n  constructor(column) {\r\n    super();\r\n    this.column = column;\r\n    this.cbSelectAllVisible = false;\r\n    this.processingEventFromCheckbox = false;\r\n  }\r\n  onSpaceKeyDown(e) {\r\n    const checkbox = this.cbSelectAll;\r\n    if (checkbox.isDisplayed() && !checkbox.getGui().contains(_getActiveDomElement(this.beans))) {\r\n      e.preventDefault();\r\n      checkbox.setValue(!checkbox.getValue());\r\n    }\r\n  }\r\n  getCheckboxGui() {\r\n    return this.cbSelectAll.getGui();\r\n  }\r\n  setComp(ctrl) {\r\n    this.headerCellCtrl = ctrl;\r\n    const cbSelectAll = this.createManagedBean(new AgCheckbox());\r\n    this.cbSelectAll = cbSelectAll;\r\n    cbSelectAll.addCss(\"ag-header-select-all\");\r\n    _setAriaRole(cbSelectAll.getGui(), \"presentation\");\r\n    this.showOrHideSelectAll();\r\n    const updateStateOfCheckbox = this.updateStateOfCheckbox.bind(this);\r\n    this.addManagedEventListeners({\r\n      newColumnsLoaded: () => this.showOrHideSelectAll(),\r\n      displayedColumnsChanged: this.onDisplayedColumnsChanged.bind(this),\r\n      selectionChanged: updateStateOfCheckbox,\r\n      paginationChanged: updateStateOfCheckbox,\r\n      modelUpdated: updateStateOfCheckbox\r\n    });\r\n    this.addManagedPropertyListener(\"rowSelection\", ({ currentValue, previousValue }) => {\r\n      const getSelectAll = (rowSelection) => typeof rowSelection === \"string\" || !rowSelection || rowSelection.mode === \"singleRow\" ? void 0 : rowSelection.selectAll;\r\n      if (getSelectAll(currentValue) !== getSelectAll(previousValue)) {\r\n        this.showOrHideSelectAll();\r\n      }\r\n      this.updateStateOfCheckbox();\r\n    });\r\n    this.addManagedListeners(cbSelectAll, { fieldValueChanged: this.onCbSelectAll.bind(this) });\r\n    cbSelectAll.getInputElement().setAttribute(\"tabindex\", \"-1\");\r\n    this.refreshSelectAllLabel();\r\n  }\r\n  onDisplayedColumnsChanged(e) {\r\n    if (!this.isAlive()) {\r\n      return;\r\n    }\r\n    this.showOrHideSelectAll(e.source === \"uiColumnMoved\");\r\n  }\r\n  showOrHideSelectAll(fromColumnMoved = false) {\r\n    const cbSelectAllVisible = this.isCheckboxSelection();\r\n    this.cbSelectAllVisible = cbSelectAllVisible;\r\n    this.cbSelectAll.setDisplayed(cbSelectAllVisible);\r\n    if (cbSelectAllVisible) {\r\n      this.checkRightRowModelType(\"selectAllCheckbox\");\r\n      this.checkSelectionType(\"selectAllCheckbox\");\r\n      this.updateStateOfCheckbox();\r\n    }\r\n    this.refreshSelectAllLabel(fromColumnMoved);\r\n  }\r\n  updateStateOfCheckbox() {\r\n    if (!this.cbSelectAllVisible || this.processingEventFromCheckbox) {\r\n      return;\r\n    }\r\n    this.processingEventFromCheckbox = true;\r\n    const selectAllMode = this.getSelectAllMode();\r\n    const selectionSvc = this.beans.selectionSvc;\r\n    const cbSelectAll = this.cbSelectAll;\r\n    const allSelected = selectionSvc.getSelectAllState(selectAllMode);\r\n    cbSelectAll.setValue(allSelected);\r\n    const hasNodesToSelect = selectionSvc.hasNodesToSelect(selectAllMode);\r\n    cbSelectAll.setDisabled(!hasNodesToSelect);\r\n    this.refreshSelectAllLabel();\r\n    this.processingEventFromCheckbox = false;\r\n  }\r\n  refreshSelectAllLabel(fromColumnMoved = false) {\r\n    const translate = this.getLocaleTextFunc();\r\n    const { headerCellCtrl, cbSelectAll, cbSelectAllVisible } = this;\r\n    const checked = cbSelectAll.getValue();\r\n    const ariaStatus = _getAriaCheckboxStateName(translate, checked);\r\n    const ariaLabel = translate(\"ariaRowSelectAll\", \"Press Space to toggle all rows selection\");\r\n    headerCellCtrl.setAriaDescriptionProperty(\r\n      \"selectAll\",\r\n      cbSelectAllVisible ? `${ariaLabel} (${ariaStatus})` : null\r\n    );\r\n    cbSelectAll.setInputAriaLabel(translate(\"ariaHeaderSelection\", \"Column with Header Selection\"));\r\n    if (!fromColumnMoved) {\r\n      headerCellCtrl.announceAriaDescription();\r\n    }\r\n  }\r\n  checkSelectionType(feature) {\r\n    const isMultiSelect = _isMultiRowSelection(this.gos);\r\n    if (!isMultiSelect) {\r\n      _warn(128, { feature });\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  checkRightRowModelType(feature) {\r\n    const { gos, rowModel } = this.beans;\r\n    const rowModelMatches = _isClientSideRowModel(gos) || _isServerSideRowModel(gos);\r\n    if (!rowModelMatches) {\r\n      _warn(129, { feature, rowModel: rowModel.getType() });\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  onCbSelectAll() {\r\n    if (this.processingEventFromCheckbox) {\r\n      return;\r\n    }\r\n    if (!this.cbSelectAllVisible) {\r\n      return;\r\n    }\r\n    const value = this.cbSelectAll.getValue();\r\n    const selectAll2 = this.getSelectAllMode();\r\n    let source = \"uiSelectAll\";\r\n    if (selectAll2 === \"currentPage\") {\r\n      source = \"uiSelectAllCurrentPage\";\r\n    } else if (selectAll2 === \"filtered\") {\r\n      source = \"uiSelectAllFiltered\";\r\n    }\r\n    const params = { source, selectAll: selectAll2 };\r\n    const selectionSvc = this.beans.selectionSvc;\r\n    if (value) {\r\n      selectionSvc.selectAllRowNodes(params);\r\n    } else {\r\n      selectionSvc.deselectAllRowNodes(params);\r\n    }\r\n  }\r\n  /**\r\n   * Checkbox is enabled when either the `headerCheckbox` option is enabled in the new selection API\r\n   * or `headerCheckboxSelection` is enabled in the legacy API.\r\n   */\r\n  isCheckboxSelection() {\r\n    const { column, gos, beans } = this;\r\n    const rowSelection = gos.get(\"rowSelection\");\r\n    const newHeaderCheckbox = typeof rowSelection === \"object\";\r\n    const featureName = newHeaderCheckbox ? \"headerCheckbox\" : \"headerCheckboxSelection\";\r\n    return isCheckboxSelection(beans, column) && this.checkRightRowModelType(featureName) && this.checkSelectionType(featureName);\r\n  }\r\n  getSelectAllMode() {\r\n    const selectAll2 = _getSelectAll(this.gos, false);\r\n    if (selectAll2) {\r\n      return selectAll2;\r\n    }\r\n    const { headerCheckboxSelectionCurrentPageOnly, headerCheckboxSelectionFilteredOnly } = this.column.getColDef();\r\n    if (headerCheckboxSelectionCurrentPageOnly) {\r\n      return \"currentPage\";\r\n    }\r\n    if (headerCheckboxSelectionFilteredOnly) {\r\n      return \"filtered\";\r\n    }\r\n    return \"all\";\r\n  }\r\n  destroy() {\r\n    super.destroy();\r\n    this.cbSelectAll = void 0;\r\n    this.headerCellCtrl = void 0;\r\n  }\r\n};\r\nfunction isCheckboxSelection({ gos, selectionColSvc }, column) {\r\n  const rowSelection = gos.get(\"rowSelection\");\r\n  const colDef = column.getColDef();\r\n  const { headerCheckboxSelection } = colDef;\r\n  let result = false;\r\n  const newHeaderCheckbox = typeof rowSelection === \"object\";\r\n  if (newHeaderCheckbox) {\r\n    const isSelectionCol = isColumnSelectionCol(column);\r\n    const isAutoCol = isColumnGroupAutoCol(column);\r\n    const location = _getCheckboxLocation(rowSelection);\r\n    if (location === \"autoGroupColumn\" && isAutoCol || isSelectionCol && selectionColSvc?.isSelectionColumnEnabled()) {\r\n      result = _getHeaderCheckbox(rowSelection);\r\n    }\r\n  } else {\r\n    if (typeof headerCheckboxSelection === \"function\") {\r\n      result = headerCheckboxSelection(_addGridCommonParams(gos, { column, colDef }));\r\n    } else {\r\n      result = !!headerCheckboxSelection;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n// packages/ag-grid-community/src/selection/baseSelectionService.ts\r\nvar BaseSelectionService = class extends BeanStub {\r\n  postConstruct() {\r\n    const { gos, beans } = this;\r\n    this.selectionCtx = new RowRangeSelectionContext(beans.rowModel, beans.pinnedRowModel);\r\n    this.addManagedPropertyListeners([\"isRowSelectable\", \"rowSelection\"], () => {\r\n      const callback = _getIsRowSelectable(gos);\r\n      if (callback !== this.isRowSelectable) {\r\n        this.isRowSelectable = callback;\r\n        this.updateSelectable();\r\n      }\r\n    });\r\n    this.isRowSelectable = _getIsRowSelectable(gos);\r\n    this.addManagedEventListeners({\r\n      cellValueChanged: (e) => this.updateRowSelectable(e.node),\r\n      rowNodeDataChanged: (e) => this.updateRowSelectable(e.node)\r\n    });\r\n  }\r\n  destroy() {\r\n    super.destroy();\r\n    this.selectionCtx.reset();\r\n  }\r\n  createCheckboxSelectionComponent() {\r\n    return new CheckboxSelectionComponent();\r\n  }\r\n  createSelectAllFeature(column) {\r\n    if (isCheckboxSelection(this.beans, column)) {\r\n      return new SelectAllFeature(column);\r\n    }\r\n  }\r\n  isMultiSelect() {\r\n    return _isMultiRowSelection(this.gos);\r\n  }\r\n  onRowCtrlSelected(rowCtrl, hasFocusFunc, gui) {\r\n    const selected = !!rowCtrl.rowNode.isSelected();\r\n    rowCtrl.forEachGui(gui, (gui2) => {\r\n      gui2.rowComp.toggleCss(\"ag-row-selected\", selected);\r\n      const element = gui2.element;\r\n      _setAriaSelected(element, selected);\r\n      const hasFocus = element.contains(_getActiveDomElement(this.beans));\r\n      if (hasFocus) {\r\n        hasFocusFunc(gui2);\r\n      }\r\n    });\r\n  }\r\n  announceAriaRowSelection(rowNode) {\r\n    if (this.isRowSelectionBlocked(rowNode)) {\r\n      return;\r\n    }\r\n    const selected = rowNode.isSelected();\r\n    if (!rowNode.selectable) {\r\n      return;\r\n    }\r\n    const translate = this.getLocaleTextFunc();\r\n    const label = translate(\r\n      selected ? \"ariaRowDeselect\" : \"ariaRowSelect\",\r\n      `Press SPACE to ${selected ? \"deselect\" : \"select\"} this row`\r\n    );\r\n    this.beans.ariaAnnounce?.announceValue(label, \"rowSelection\");\r\n  }\r\n  isRowSelectionBlocked(rowNode) {\r\n    return !rowNode.selectable || rowNode.rowPinned && !_isManualPinnedRow(rowNode) || !_isRowSelection(this.gos);\r\n  }\r\n  updateRowSelectable(rowNode, suppressSelectionUpdate) {\r\n    const selectable = rowNode.rowPinned && rowNode.pinnedSibling ? (\r\n      // If row node is pinned sibling, copy selectable status over from sibling row node\r\n      rowNode.pinnedSibling.selectable\r\n    ) : (\r\n      // otherwise calculate selectable state directly\r\n      this.isRowSelectable?.(rowNode) ?? true\r\n    );\r\n    this.setRowSelectable(rowNode, selectable, suppressSelectionUpdate);\r\n    return selectable;\r\n  }\r\n  setRowSelectable(rowNode, newVal, suppressSelectionUpdate) {\r\n    if (rowNode.selectable !== newVal) {\r\n      rowNode.selectable = newVal;\r\n      rowNode.dispatchRowEvent(\"selectableChanged\");\r\n      if (suppressSelectionUpdate) {\r\n        return;\r\n      }\r\n      const isGroupSelectsChildren = _getGroupSelectsDescendants(this.gos);\r\n      if (isGroupSelectsChildren) {\r\n        const selected = this.calculateSelectedFromChildren(rowNode);\r\n        this.setNodesSelected({ nodes: [rowNode], newValue: selected ?? false, source: \"selectableChanged\" });\r\n        return;\r\n      }\r\n      if (rowNode.isSelected() && !rowNode.selectable) {\r\n        this.setNodesSelected({ nodes: [rowNode], newValue: false, source: \"selectableChanged\" });\r\n      }\r\n    }\r\n  }\r\n  calculateSelectedFromChildren(rowNode) {\r\n    let atLeastOneSelected = false;\r\n    let atLeastOneDeSelected = false;\r\n    if (!rowNode.childrenAfterGroup?.length) {\r\n      return rowNode.selectable ? rowNode.__selected : null;\r\n    }\r\n    for (let i = 0; i < rowNode.childrenAfterGroup.length; i++) {\r\n      const child = rowNode.childrenAfterGroup[i];\r\n      let childState = child.isSelected();\r\n      if (!child.selectable) {\r\n        const selectable = this.calculateSelectedFromChildren(child);\r\n        if (selectable === null) {\r\n          continue;\r\n        }\r\n        childState = selectable;\r\n      }\r\n      switch (childState) {\r\n        case true:\r\n          atLeastOneSelected = true;\r\n          break;\r\n        case false:\r\n          atLeastOneDeSelected = true;\r\n          break;\r\n        default:\r\n          return void 0;\r\n      }\r\n    }\r\n    if (atLeastOneSelected && atLeastOneDeSelected) {\r\n      return void 0;\r\n    }\r\n    if (atLeastOneSelected) {\r\n      return true;\r\n    }\r\n    if (atLeastOneDeSelected) {\r\n      return false;\r\n    }\r\n    if (!rowNode.selectable) {\r\n      return null;\r\n    }\r\n    return rowNode.__selected;\r\n  }\r\n  selectRowNode(rowNode, newValue, e, source = \"api\") {\r\n    const selectionNotAllowed = !rowNode.selectable && newValue;\r\n    const selectionNotChanged = rowNode.__selected === newValue;\r\n    if (selectionNotAllowed || selectionNotChanged) {\r\n      return false;\r\n    }\r\n    rowNode.__selected = newValue;\r\n    rowNode.dispatchRowEvent(\"rowSelected\");\r\n    const sibling = rowNode.sibling;\r\n    if (sibling && sibling.footer && sibling.__localEventService) {\r\n      sibling.dispatchRowEvent(\"rowSelected\");\r\n    }\r\n    const pinnedSibling = rowNode.pinnedSibling;\r\n    if (pinnedSibling && pinnedSibling.rowPinned && pinnedSibling.__localEventService) {\r\n      pinnedSibling.dispatchRowEvent(\"rowSelected\");\r\n    }\r\n    this.eventSvc.dispatchEvent({\r\n      ..._createGlobalRowEvent(rowNode, this.gos, \"rowSelected\"),\r\n      event: e || null,\r\n      source\r\n    });\r\n    return true;\r\n  }\r\n  isCellCheckboxSelection(column, rowNode) {\r\n    const so = this.gos.get(\"rowSelection\");\r\n    if (so && typeof so !== \"string\") {\r\n      const checkbox = isColumnSelectionCol(column) && _getCheckboxes(so);\r\n      return column.isColumnFunc(rowNode, checkbox);\r\n    } else {\r\n      return column.isColumnFunc(rowNode, column.colDef.checkboxSelection);\r\n    }\r\n  }\r\n  inferNodeSelections(node, shiftKey, metaKey, source) {\r\n    const { gos, selectionCtx } = this;\r\n    const currentSelection = node.isSelected();\r\n    const groupSelectsDescendants = _getGroupSelectsDescendants(gos);\r\n    const enableClickSelection = _getEnableSelection(gos);\r\n    const enableDeselection = _getEnableDeselection(gos);\r\n    const isMultiSelect = this.isMultiSelect();\r\n    const isRowClicked = source === \"rowClicked\";\r\n    if (isRowClicked && !(enableClickSelection || enableDeselection))\r\n      return null;\r\n    if (shiftKey && metaKey && isMultiSelect) {\r\n      const root = selectionCtx.getRoot();\r\n      if (!root) {\r\n        return null;\r\n      } else if (!root.isSelected()) {\r\n        const partition = selectionCtx.extend(node, groupSelectsDescendants);\r\n        return {\r\n          select: [],\r\n          deselect: partition.keep,\r\n          reset: false\r\n        };\r\n      } else {\r\n        const partition = selectionCtx.isInRange(node) ? selectionCtx.truncate(node) : selectionCtx.extend(node, groupSelectsDescendants);\r\n        return {\r\n          deselect: partition.discard,\r\n          select: partition.keep,\r\n          reset: false\r\n        };\r\n      }\r\n    } else if (shiftKey && isMultiSelect) {\r\n      const fallback = selectionCtx.selectAll ? this.beans.rowModel.getRow(0) : void 0;\r\n      const root = selectionCtx.getRoot(fallback);\r\n      const partition = selectionCtx.isInRange(node) ? selectionCtx.truncate(node) : selectionCtx.extend(node, groupSelectsDescendants);\r\n      return {\r\n        select: partition.keep,\r\n        deselect: partition.discard,\r\n        reset: selectionCtx.selectAll || !!(root && !root.isSelected())\r\n      };\r\n    } else if (metaKey) {\r\n      if (isRowClicked) {\r\n        const newValue = !currentSelection;\r\n        const selectingWhenDisabled = newValue && !enableClickSelection;\r\n        const deselectingWhenDisabled = !newValue && !enableDeselection;\r\n        if (selectingWhenDisabled || deselectingWhenDisabled)\r\n          return null;\r\n        selectionCtx.setRoot(node);\r\n        return {\r\n          node,\r\n          newValue,\r\n          clearSelection: false\r\n        };\r\n      }\r\n      selectionCtx.setRoot(node);\r\n      return {\r\n        node,\r\n        newValue: !currentSelection,\r\n        clearSelection: !isMultiSelect\r\n      };\r\n    } else {\r\n      selectionCtx.setRoot(node);\r\n      const enableSelectionWithoutKeys = _getEnableSelectionWithoutKeys(gos);\r\n      const groupSelectsFiltered = _getGroupSelection(gos) === \"filteredDescendants\";\r\n      const shouldClear = isRowClicked && (!enableSelectionWithoutKeys || !enableClickSelection);\r\n      if (groupSelectsFiltered && currentSelection === void 0 && _isClientSideRowModel(gos)) {\r\n        return {\r\n          node,\r\n          newValue: false,\r\n          clearSelection: !isMultiSelect || shouldClear\r\n        };\r\n      }\r\n      if (isRowClicked) {\r\n        const newValue = currentSelection ? !enableSelectionWithoutKeys : enableClickSelection;\r\n        const selectingWhenDisabled = newValue && !enableClickSelection;\r\n        const deselectingWhenDisabled = !newValue && !enableDeselection;\r\n        const wouldStateBeUnchanged = newValue === currentSelection && !shouldClear;\r\n        if (wouldStateBeUnchanged || selectingWhenDisabled || deselectingWhenDisabled)\r\n          return null;\r\n        return {\r\n          node,\r\n          newValue,\r\n          clearSelection: !isMultiSelect || shouldClear,\r\n          keepDescendants: node.group && groupSelectsDescendants\r\n        };\r\n      }\r\n      return {\r\n        node,\r\n        newValue: !currentSelection,\r\n        clearSelection: !isMultiSelect || shouldClear\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/widgets/agRadioButton.ts\r\nvar AgRadioButton = class extends AgCheckbox {\r\n  constructor(config) {\r\n    super(config, \"ag-radio-button\", \"radio\");\r\n  }\r\n  isSelected() {\r\n    return this.eInput.checked;\r\n  }\r\n  toggle() {\r\n    if (this.eInput.disabled) {\r\n      return;\r\n    }\r\n    if (!this.isSelected()) {\r\n      this.setValue(true);\r\n    }\r\n  }\r\n  addInputListeners() {\r\n    super.addInputListeners();\r\n    this.addManagedEventListeners({ checkboxChanged: this.onChange.bind(this) });\r\n  }\r\n  /**\r\n   * This ensures that if another radio button in the same named group is selected, we deselect this radio button.\r\n   * By default the browser does this for you, but we are managing classes ourselves in order to ensure input\r\n   * elements are styled correctly in IE11, and the DOM 'changed' event is only fired when a button is selected,\r\n   * not deselected, so we need to use our own event.\r\n   */\r\n  onChange(event) {\r\n    const eInput = this.eInput;\r\n    if (event.selected && event.name && eInput.name && eInput.name === event.name && event.id && eInput.id !== event.id) {\r\n      this.setValue(false, true);\r\n    }\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/widgets/agToggleButton.css-GENERATED.ts\r\nvar agToggleButtonCSS = (\r\n  /*css*/\r\n  `.ag-toggle-button{flex:none;min-width:unset;width:unset}.ag-toggle-button-input-wrapper{background-color:var(--ag-toggle-button-off-background-color);border-radius:calc(var(--ag-toggle-button-height)*.5);flex:none;height:var(--ag-toggle-button-height);max-width:var(--ag-toggle-button-width);min-width:var(--ag-toggle-button-width);position:relative;transition:background-color .1s;:where(.ag-toggle-button-input){-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;display:block;height:var(--ag-toggle-button-height);margin:0;max-width:var(--ag-toggle-button-width);min-width:var(--ag-toggle-button-width);opacity:0}&:before{background-color:var(--ag-toggle-button-switch-background-color);border-radius:100%;content:\"\";display:block;height:calc(var(--ag-toggle-button-height) - var(--ag-toggle-button-switch-inset)*2);left:var(--ag-toggle-button-switch-inset);pointer-events:none;position:absolute;top:var(--ag-toggle-button-switch-inset);transition:left .1s;width:calc(var(--ag-toggle-button-height) - var(--ag-toggle-button-switch-inset)*2)}&.ag-checked{background-color:var(--ag-toggle-button-on-background-color);&:before{left:calc(100% - var(--ag-toggle-button-height) + var(--ag-toggle-button-switch-inset))}}&:focus-within{box-shadow:var(--ag-focus-shadow)}&.ag-disabled{opacity:.5}}`\r\n);\r\n\r\n// packages/ag-grid-community/src/widgets/agToggleButton.ts\r\nvar AgToggleButton = class extends AgCheckbox {\r\n  constructor(config) {\r\n    super(config, \"ag-toggle-button\");\r\n    this.registerCSS(agToggleButtonCSS);\r\n  }\r\n  setValue(value, silent) {\r\n    super.setValue(value, silent);\r\n    this.toggleCss(\"ag-selected\", this.getValue());\r\n    return this;\r\n  }\r\n};\r\nvar AgToggleButtonSelector = {\r\n  selector: \"AG-TOGGLE-BUTTON\",\r\n  component: AgToggleButton\r\n};\r\n\r\n// packages/ag-grid-community/src/widgets/agInputTextField.ts\r\nvar AgInputTextField = class extends AgAbstractInputField {\r\n  constructor(config, className = \"ag-text-field\", inputType = \"text\") {\r\n    super(config, className, inputType);\r\n  }\r\n  postConstruct() {\r\n    super.postConstruct();\r\n    if (this.config.allowedCharPattern) {\r\n      this.preventDisallowedCharacters();\r\n    }\r\n  }\r\n  setValue(value, silent) {\r\n    const eInput = this.eInput;\r\n    if (eInput.value !== value) {\r\n      eInput.value = _exists(value) ? value : \"\";\r\n    }\r\n    return super.setValue(value, silent);\r\n  }\r\n  /** Used to set an initial value into the input without necessarily setting `this.value` or triggering events (e.g. to set an invalid value) */\r\n  setStartValue(value) {\r\n    this.setValue(value, true);\r\n  }\r\n  preventDisallowedCharacters() {\r\n    const pattern = new RegExp(`[${this.config.allowedCharPattern}]`);\r\n    const preventCharacters = (event) => {\r\n      if (!_isEventFromPrintableCharacter(event)) {\r\n        return;\r\n      }\r\n      if (event.key && !pattern.test(event.key)) {\r\n        event.preventDefault();\r\n      }\r\n    };\r\n    this.addManagedListeners(this.eInput, {\r\n      keydown: preventCharacters,\r\n      paste: (e) => {\r\n        const text = e.clipboardData?.getData(\"text\");\r\n        if (text && text.split(\"\").some((c) => !pattern.test(c))) {\r\n          e.preventDefault();\r\n        }\r\n      }\r\n    });\r\n  }\r\n};\r\nvar AgInputTextFieldSelector = {\r\n  selector: \"AG-INPUT-TEXT-FIELD\",\r\n  component: AgInputTextField\r\n};\r\n\r\n// packages/ag-grid-community/src/widgets/agInputTextArea.ts\r\nvar AgInputTextArea = class extends AgAbstractInputField {\r\n  constructor(config) {\r\n    super(config, \"ag-text-area\", null, \"textarea\");\r\n  }\r\n  setValue(value, silent) {\r\n    const ret = super.setValue(value, silent);\r\n    this.eInput.value = value;\r\n    return ret;\r\n  }\r\n  setCols(cols) {\r\n    this.eInput.cols = cols;\r\n    return this;\r\n  }\r\n  setRows(rows) {\r\n    this.eInput.rows = rows;\r\n    return this;\r\n  }\r\n};\r\nvar AgInputTextAreaSelector = {\r\n  selector: \"AG-INPUT-TEXT-AREA\",\r\n  component: AgInputTextArea\r\n};\r\n\r\n// packages/ag-grid-community/src/widgets/agInputNumberField.ts\r\nvar AgInputNumberField = class extends AgInputTextField {\r\n  constructor(config) {\r\n    super(config, \"ag-number-field\", \"number\");\r\n  }\r\n  postConstruct() {\r\n    super.postConstruct();\r\n    const eInput = this.eInput;\r\n    this.addManagedListeners(eInput, {\r\n      blur: () => {\r\n        const floatedValue = parseFloat(eInput.value);\r\n        const value = isNaN(floatedValue) ? \"\" : this.normalizeValue(floatedValue.toString());\r\n        if (this.value !== value) {\r\n          this.setValue(value);\r\n        }\r\n      },\r\n      wheel: this.onWheel.bind(this)\r\n    });\r\n    eInput.step = \"any\";\r\n    const { precision, min, max, step } = this.config;\r\n    if (typeof precision === \"number\")\r\n      this.setPrecision(precision);\r\n    if (typeof min === \"number\")\r\n      this.setMin(min);\r\n    if (typeof max === \"number\")\r\n      this.setMax(max);\r\n    if (typeof step === \"number\")\r\n      this.setStep(step);\r\n  }\r\n  onWheel(e) {\r\n    if (_getActiveDomElement(this.beans) === this.eInput) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n  normalizeValue(value) {\r\n    if (value === \"\") {\r\n      return \"\";\r\n    }\r\n    if (this.precision != null) {\r\n      value = this.adjustPrecision(value);\r\n    }\r\n    return value;\r\n  }\r\n  adjustPrecision(value, isScientificNotation) {\r\n    const precision = this.precision;\r\n    if (precision == null) {\r\n      return value;\r\n    }\r\n    if (isScientificNotation) {\r\n      const floatString = parseFloat(value).toFixed(precision);\r\n      return parseFloat(floatString).toString();\r\n    }\r\n    const parts = String(value).split(\".\");\r\n    if (parts.length > 1) {\r\n      if (parts[1].length <= precision) {\r\n        return value;\r\n      } else if (precision > 0) {\r\n        return `${parts[0]}.${parts[1].slice(0, precision)}`;\r\n      }\r\n    }\r\n    return parts[0];\r\n  }\r\n  setMin(min) {\r\n    if (this.min === min) {\r\n      return this;\r\n    }\r\n    this.min = min;\r\n    _addOrRemoveAttribute(this.eInput, \"min\", min);\r\n    return this;\r\n  }\r\n  setMax(max) {\r\n    if (this.max === max) {\r\n      return this;\r\n    }\r\n    this.max = max;\r\n    _addOrRemoveAttribute(this.eInput, \"max\", max);\r\n    return this;\r\n  }\r\n  setPrecision(precision) {\r\n    this.precision = precision;\r\n    return this;\r\n  }\r\n  setStep(step) {\r\n    if (this.step === step) {\r\n      return this;\r\n    }\r\n    this.step = step;\r\n    _addOrRemoveAttribute(this.eInput, \"step\", step);\r\n    return this;\r\n  }\r\n  setValue(value, silent) {\r\n    return this.setValueOrInputValue(\r\n      (v) => super.setValue(v, silent),\r\n      () => this,\r\n      value\r\n    );\r\n  }\r\n  setStartValue(value) {\r\n    return this.setValueOrInputValue(\r\n      (v) => super.setValue(v, true),\r\n      (v) => {\r\n        this.eInput.value = v;\r\n      },\r\n      value\r\n    );\r\n  }\r\n  setValueOrInputValue(setValueFunc, setInputValueOnlyFunc, value) {\r\n    if (_exists(value)) {\r\n      let setInputValueOnly = this.isScientificNotation(value);\r\n      if (setInputValueOnly && this.eInput.validity.valid) {\r\n        return setValueFunc(value);\r\n      }\r\n      if (!setInputValueOnly) {\r\n        value = this.adjustPrecision(value);\r\n        const normalizedValue = this.normalizeValue(value);\r\n        setInputValueOnly = value != normalizedValue;\r\n      }\r\n      if (setInputValueOnly) {\r\n        return setInputValueOnlyFunc(value);\r\n      }\r\n    }\r\n    return setValueFunc(value);\r\n  }\r\n  getValue() {\r\n    const eInput = this.eInput;\r\n    if (!eInput.validity.valid) {\r\n      return void 0;\r\n    }\r\n    const inputValue = eInput.value;\r\n    if (this.isScientificNotation(inputValue)) {\r\n      return this.adjustPrecision(inputValue, true);\r\n    }\r\n    return super.getValue();\r\n  }\r\n  isScientificNotation(value) {\r\n    return typeof value === \"string\" && value.includes(\"e\");\r\n  }\r\n};\r\nvar AgInputNumberFieldSelector = {\r\n  selector: \"AG-INPUT-NUMBER-FIELD\",\r\n  component: AgInputNumberField\r\n};\r\n\r\n// packages/ag-grid-community/src/widgets/agInputDateField.ts\r\nvar AgInputDateField = class extends AgInputTextField {\r\n  constructor(config) {\r\n    super(config, \"ag-date-field\", \"date\");\r\n  }\r\n  postConstruct() {\r\n    super.postConstruct();\r\n    const usingSafari = _isBrowserSafari();\r\n    this.addManagedListeners(this.eInput, {\r\n      wheel: this.onWheel.bind(this),\r\n      mousedown: () => {\r\n        if (this.isDisabled() || usingSafari) {\r\n          return;\r\n        }\r\n        this.eInput.focus();\r\n      }\r\n    });\r\n    this.eInput.step = \"any\";\r\n  }\r\n  onWheel(e) {\r\n    if (_getActiveDomElement(this.beans) === this.eInput) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n  setMin(minDate) {\r\n    const min = minDate instanceof Date ? _serialiseDate(minDate ?? null, !!this.includeTime) ?? void 0 : minDate;\r\n    if (this.min === min) {\r\n      return this;\r\n    }\r\n    this.min = min;\r\n    _addOrRemoveAttribute(this.eInput, \"min\", min);\r\n    return this;\r\n  }\r\n  setMax(maxDate) {\r\n    const max = maxDate instanceof Date ? _serialiseDate(maxDate ?? null, !!this.includeTime) ?? void 0 : maxDate;\r\n    if (this.max === max) {\r\n      return this;\r\n    }\r\n    this.max = max;\r\n    _addOrRemoveAttribute(this.eInput, \"max\", max);\r\n    return this;\r\n  }\r\n  setStep(step) {\r\n    if (this.step === step) {\r\n      return this;\r\n    }\r\n    this.step = step;\r\n    _addOrRemoveAttribute(this.eInput, \"step\", step);\r\n    return this;\r\n  }\r\n  setIncludeTime(includeTime) {\r\n    if (this.includeTime === includeTime) {\r\n      return this;\r\n    }\r\n    this.includeTime = includeTime;\r\n    super.setInputType(includeTime ? \"datetime-local\" : \"date\");\r\n    if (includeTime)\r\n      this.setStep(1);\r\n    return this;\r\n  }\r\n  getDate() {\r\n    if (!this.eInput.validity.valid) {\r\n      return void 0;\r\n    }\r\n    return _parseDateTimeFromString(this.getValue()) ?? void 0;\r\n  }\r\n  setDate(date, silent) {\r\n    this.setValue(_serialiseDate(date ?? null, this.includeTime), silent);\r\n  }\r\n};\r\nvar AgInputDateFieldSelector = {\r\n  selector: \"AG-INPUT-DATE-FIELD\",\r\n  component: AgInputDateField\r\n};\r\n\r\n// packages/ag-grid-community/src/widgets/agList.ts\r\nvar AgList = class extends Component {\r\n  constructor(cssIdentifier = \"default\", unFocusable = false) {\r\n    super({ tag: \"div\", cls: `ag-list ag-${cssIdentifier}-list` });\r\n    this.cssIdentifier = cssIdentifier;\r\n    this.unFocusable = unFocusable;\r\n    this.activeClass = \"ag-active-item\";\r\n    this.options = [];\r\n    this.itemEls = [];\r\n  }\r\n  postConstruct() {\r\n    const eGui = this.getGui();\r\n    this.addManagedElementListeners(eGui, { mouseleave: () => this.clearHighlighted() });\r\n    if (this.unFocusable) {\r\n      return;\r\n    }\r\n    this.addManagedElementListeners(eGui, { keydown: this.handleKeyDown.bind(this) });\r\n  }\r\n  handleKeyDown(e) {\r\n    const key = e.key;\r\n    switch (key) {\r\n      case KeyCode.ENTER:\r\n        if (!this.highlightedEl) {\r\n          this.setValue(this.getValue());\r\n        } else {\r\n          const pos = this.itemEls.indexOf(this.highlightedEl);\r\n          this.setValueByIndex(pos);\r\n        }\r\n        break;\r\n      case KeyCode.DOWN:\r\n      case KeyCode.UP:\r\n        e.preventDefault();\r\n        this.navigate(key);\r\n        break;\r\n      case KeyCode.PAGE_DOWN:\r\n      case KeyCode.PAGE_UP:\r\n      case KeyCode.PAGE_HOME:\r\n      case KeyCode.PAGE_END:\r\n        e.preventDefault();\r\n        this.navigateToPage(key);\r\n        break;\r\n    }\r\n  }\r\n  navigate(key) {\r\n    const isDown = key === KeyCode.DOWN;\r\n    let itemToHighlight;\r\n    const { itemEls, highlightedEl } = this;\r\n    if (!highlightedEl) {\r\n      itemToHighlight = itemEls[isDown ? 0 : itemEls.length - 1];\r\n    } else {\r\n      const currentIdx = itemEls.indexOf(highlightedEl);\r\n      let nextPos = currentIdx + (isDown ? 1 : -1);\r\n      nextPos = Math.min(Math.max(nextPos, 0), itemEls.length - 1);\r\n      itemToHighlight = itemEls[nextPos];\r\n    }\r\n    this.highlightItem(itemToHighlight);\r\n  }\r\n  navigateToPage(key) {\r\n    const { itemEls, highlightedEl } = this;\r\n    if (!highlightedEl || itemEls.length === 0) {\r\n      return;\r\n    }\r\n    const currentIdx = itemEls.indexOf(highlightedEl);\r\n    const rowCount = this.options.length - 1;\r\n    const itemHeight = itemEls[0].clientHeight;\r\n    const pageSize = Math.floor(this.getGui().clientHeight / itemHeight);\r\n    let newIndex = -1;\r\n    if (key === KeyCode.PAGE_HOME) {\r\n      newIndex = 0;\r\n    } else if (key === KeyCode.PAGE_END) {\r\n      newIndex = rowCount;\r\n    } else if (key === KeyCode.PAGE_DOWN) {\r\n      newIndex = Math.min(currentIdx + pageSize, rowCount);\r\n    } else if (key === KeyCode.PAGE_UP) {\r\n      newIndex = Math.max(currentIdx - pageSize, 0);\r\n    }\r\n    if (newIndex === -1) {\r\n      return;\r\n    }\r\n    this.highlightItem(itemEls[newIndex]);\r\n  }\r\n  addOptions(listOptions) {\r\n    listOptions.forEach((listOption) => this.addOption(listOption));\r\n    return this;\r\n  }\r\n  addOption(listOption) {\r\n    const { value, text } = listOption;\r\n    const valueToRender = text ?? value;\r\n    this.options.push({ value, text: valueToRender });\r\n    this.renderOption(value, valueToRender);\r\n    this.updateIndices();\r\n    return this;\r\n  }\r\n  clearOptions() {\r\n    this.options = [];\r\n    this.reset(true);\r\n    this.itemEls.forEach((itemEl) => {\r\n      _removeFromParent(itemEl);\r\n    });\r\n    this.itemEls = [];\r\n    this.refreshAriaRole();\r\n  }\r\n  refreshAriaRole() {\r\n    const eGui = this.getGui();\r\n    _setAriaRole(eGui, this.options.length === 0 ? \"presentation\" : \"listbox\");\r\n  }\r\n  updateIndices() {\r\n    const options = this.getGui().querySelectorAll(\".ag-list-item\");\r\n    this.refreshAriaRole();\r\n    options.forEach((option, idx) => {\r\n      _setAriaPosInSet(option, idx + 1);\r\n      _setAriaSetSize(option, options.length);\r\n    });\r\n  }\r\n  renderOption(value, text) {\r\n    const itemEl = _createElement({\r\n      tag: \"div\",\r\n      cls: `ag-list-item ag-${this.cssIdentifier}-list-item`,\r\n      attrs: { role: \"option\" }\r\n    });\r\n    const span = _createElement({\r\n      tag: \"span\",\r\n      children: text\r\n    });\r\n    itemEl.appendChild(span);\r\n    if (!this.unFocusable) {\r\n      itemEl.tabIndex = -1;\r\n    }\r\n    this.itemEls.push(itemEl);\r\n    this.addManagedListeners(itemEl, {\r\n      mouseover: () => this.highlightItem(itemEl),\r\n      mousedown: (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        this.setValue(value);\r\n      }\r\n    });\r\n    this.createOptionalManagedBean(\r\n      this.beans.registry.createDynamicBean(\"tooltipFeature\", false, {\r\n        getTooltipValue: () => text,\r\n        getGui: () => itemEl,\r\n        getLocation: () => \"UNKNOWN\",\r\n        // only show tooltips for items where the text cannot be fully displayed\r\n        shouldDisplayTooltip: () => span.scrollWidth > span.clientWidth\r\n      })\r\n    );\r\n    this.getGui().appendChild(itemEl);\r\n  }\r\n  setValue(value, silent) {\r\n    if (this.value === value) {\r\n      this.fireItemSelected();\r\n      return this;\r\n    }\r\n    if (value == null) {\r\n      this.reset(silent);\r\n      return this;\r\n    }\r\n    const idx = this.options.findIndex((option) => option.value === value);\r\n    if (idx !== -1) {\r\n      const option = this.options[idx];\r\n      this.value = option.value;\r\n      this.displayValue = option.text;\r\n      this.highlightItem(this.itemEls[idx]);\r\n      if (!silent) {\r\n        this.fireChangeEvent();\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n  setValueByIndex(idx) {\r\n    return this.setValue(this.options[idx].value);\r\n  }\r\n  getValue() {\r\n    return this.value;\r\n  }\r\n  getDisplayValue() {\r\n    return this.displayValue;\r\n  }\r\n  refreshHighlighted() {\r\n    this.clearHighlighted();\r\n    const idx = this.options.findIndex((option) => option.value === this.value);\r\n    if (idx !== -1) {\r\n      this.highlightItem(this.itemEls[idx]);\r\n    }\r\n  }\r\n  reset(silent) {\r\n    this.value = null;\r\n    this.displayValue = null;\r\n    this.clearHighlighted();\r\n    if (!silent) {\r\n      this.fireChangeEvent();\r\n    }\r\n  }\r\n  highlightItem(el) {\r\n    if (!_isVisible(el)) {\r\n      return;\r\n    }\r\n    this.clearHighlighted();\r\n    this.highlightedEl = el;\r\n    el.classList.add(this.activeClass);\r\n    _setAriaSelected(el, true);\r\n    const eGui = this.getGui();\r\n    const { scrollTop, clientHeight } = eGui;\r\n    const { offsetTop, offsetHeight } = el;\r\n    if (offsetTop + offsetHeight > scrollTop + clientHeight || offsetTop < scrollTop) {\r\n      el.scrollIntoView({ block: \"nearest\" });\r\n    }\r\n    if (!this.unFocusable) {\r\n      el.focus();\r\n    }\r\n  }\r\n  clearHighlighted() {\r\n    const highlightedEl = this.highlightedEl;\r\n    if (!highlightedEl || !_isVisible(highlightedEl)) {\r\n      return;\r\n    }\r\n    highlightedEl.classList.remove(this.activeClass);\r\n    _setAriaSelected(highlightedEl, false);\r\n    this.highlightedEl = null;\r\n  }\r\n  fireChangeEvent() {\r\n    this.dispatchLocalEvent({ type: \"fieldValueChanged\" });\r\n    this.fireItemSelected();\r\n  }\r\n  fireItemSelected() {\r\n    this.dispatchLocalEvent({ type: \"selectedItem\" });\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/widgets/agPickerField.css-GENERATED.ts\r\nvar agPickerFieldCSS = (\r\n  /*css*/\r\n  `.ag-picker-field-display{flex:1 1 auto}.ag-picker-field{align-items:center;display:flex}.ag-picker-field-icon{border:0;cursor:pointer;display:flex;margin:0;padding:0}.ag-picker-field-wrapper{background-color:var(--ag-picker-button-background-color);border:var(--ag-picker-button-border);border-radius:5px;min-height:max(var(--ag-list-item-height),calc(var(--ag-spacing)*4));overflow:hidden;&:where(.ag-picker-has-focus),&:where(:focus-within){background-color:var(--ag-picker-button-focus-background-color);border:var(--ag-picker-button-focus-border);box-shadow:var(--ag-focus-shadow);&:where(.invalid){box-shadow:var(--ag-focus-error-shadow)}}&:where(.invalid){background-color:var(--ag-input-invalid-background-color);border:var(--ag-input-invalid-border);color:var(--ag-input-invalid-text-color)}&:disabled{opacity:.5}}`\r\n);\r\n\r\n// packages/ag-grid-community/src/widgets/agPickerField.ts\r\nvar AgPickerFieldElement = {\r\n  tag: \"div\",\r\n  cls: \"ag-picker-field\",\r\n  role: \"presentation\",\r\n  children: [\r\n    { tag: \"div\", ref: \"eLabel\" },\r\n    {\r\n      tag: \"div\",\r\n      ref: \"eWrapper\",\r\n      cls: \"ag-wrapper ag-picker-field-wrapper ag-picker-collapsed\",\r\n      children: [\r\n        { tag: \"div\", ref: \"eDisplayField\", cls: \"ag-picker-field-display\" },\r\n        { tag: \"div\", ref: \"eIcon\", cls: \"ag-picker-field-icon\", attrs: { \"aria-hidden\": \"true\" } }\r\n      ]\r\n    }\r\n  ]\r\n};\r\nvar AgPickerField = class extends AgAbstractField {\r\n  constructor(config) {\r\n    super(config, config?.template || AgPickerFieldElement, config?.agComponents || [], config?.className);\r\n    this.isPickerDisplayed = false;\r\n    this.skipClick = false;\r\n    this.pickerGap = 4;\r\n    this.hideCurrentPicker = null;\r\n    this.eLabel = RefPlaceholder;\r\n    this.eWrapper = RefPlaceholder;\r\n    this.eDisplayField = RefPlaceholder;\r\n    this.eIcon = RefPlaceholder;\r\n    this.registerCSS(agPickerFieldCSS);\r\n    this.ariaRole = config?.ariaRole;\r\n    this.onPickerFocusIn = this.onPickerFocusIn.bind(this);\r\n    this.onPickerFocusOut = this.onPickerFocusOut.bind(this);\r\n    if (!config) {\r\n      return;\r\n    }\r\n    const { pickerGap, maxPickerHeight, variableWidth, minPickerWidth, maxPickerWidth } = config;\r\n    if (pickerGap != null) {\r\n      this.pickerGap = pickerGap;\r\n    }\r\n    this.variableWidth = !!variableWidth;\r\n    if (maxPickerHeight != null) {\r\n      this.setPickerMaxHeight(maxPickerHeight);\r\n    }\r\n    if (minPickerWidth != null) {\r\n      this.setPickerMinWidth(minPickerWidth);\r\n    }\r\n    if (maxPickerWidth != null) {\r\n      this.setPickerMaxWidth(maxPickerWidth);\r\n    }\r\n  }\r\n  postConstruct() {\r\n    super.postConstruct();\r\n    this.setupAria();\r\n    const displayId = `ag-${this.getCompId()}-display`;\r\n    this.eDisplayField.setAttribute(\"id\", displayId);\r\n    const ariaEl = this.getAriaElement();\r\n    this.addManagedElementListeners(ariaEl, { keydown: this.onKeyDown.bind(this) });\r\n    this.addManagedElementListeners(this.eLabel, { mousedown: this.onLabelOrWrapperMouseDown.bind(this) });\r\n    this.addManagedElementListeners(this.eWrapper, { mousedown: this.onLabelOrWrapperMouseDown.bind(this) });\r\n    const { pickerIcon, inputWidth } = this.config;\r\n    if (pickerIcon) {\r\n      const icon = _createIconNoSpan(pickerIcon, this.beans);\r\n      if (icon) {\r\n        this.eIcon.appendChild(icon);\r\n      }\r\n    }\r\n    if (inputWidth != null) {\r\n      this.setInputWidth(inputWidth);\r\n    }\r\n  }\r\n  setupAria() {\r\n    const ariaEl = this.getAriaElement();\r\n    ariaEl.setAttribute(\"tabindex\", this.gos.get(\"tabIndex\").toString());\r\n    _setAriaExpanded(ariaEl, false);\r\n    if (this.ariaRole) {\r\n      _setAriaRole(ariaEl, this.ariaRole);\r\n    }\r\n  }\r\n  onLabelOrWrapperMouseDown(e) {\r\n    if (e) {\r\n      const focusableEl = this.getFocusableElement();\r\n      if (focusableEl !== this.eWrapper && e?.target === focusableEl) {\r\n        return;\r\n      }\r\n      e.preventDefault();\r\n      this.getFocusableElement().focus();\r\n    }\r\n    if (this.skipClick) {\r\n      this.skipClick = false;\r\n      return;\r\n    }\r\n    if (this.isDisabled()) {\r\n      return;\r\n    }\r\n    if (this.isPickerDisplayed) {\r\n      this.hidePicker();\r\n    } else {\r\n      this.showPicker();\r\n    }\r\n  }\r\n  onKeyDown(e) {\r\n    switch (e.key) {\r\n      case KeyCode.UP:\r\n      case KeyCode.DOWN:\r\n      case KeyCode.ENTER:\r\n      case KeyCode.SPACE:\r\n        e.preventDefault();\r\n        this.onLabelOrWrapperMouseDown();\r\n        break;\r\n      case KeyCode.ESCAPE:\r\n        if (this.isPickerDisplayed) {\r\n          e.preventDefault();\r\n          e.stopPropagation();\r\n          if (this.hideCurrentPicker) {\r\n            this.hideCurrentPicker();\r\n          }\r\n        }\r\n        break;\r\n    }\r\n  }\r\n  showPicker() {\r\n    this.isPickerDisplayed = true;\r\n    if (!this.pickerComponent) {\r\n      this.pickerComponent = this.createPickerComponent();\r\n    }\r\n    const pickerGui = this.pickerComponent.getGui();\r\n    pickerGui.addEventListener(\"focusin\", this.onPickerFocusIn);\r\n    pickerGui.addEventListener(\"focusout\", this.onPickerFocusOut);\r\n    this.hideCurrentPicker = this.renderAndPositionPicker();\r\n    this.toggleExpandedStyles(true);\r\n  }\r\n  renderAndPositionPicker() {\r\n    const ePicker = this.pickerComponent.getGui();\r\n    if (!this.gos.get(\"suppressScrollWhenPopupsAreOpen\")) {\r\n      [this.destroyMouseWheelFunc] = this.addManagedEventListeners({\r\n        bodyScroll: () => {\r\n          this.hidePicker();\r\n        }\r\n      });\r\n    }\r\n    const translate = this.getLocaleTextFunc();\r\n    const {\r\n      config: { pickerAriaLabelKey, pickerAriaLabelValue, modalPicker = true },\r\n      maxPickerHeight,\r\n      minPickerWidth,\r\n      maxPickerWidth,\r\n      variableWidth,\r\n      beans,\r\n      eWrapper\r\n    } = this;\r\n    const popupParams = {\r\n      modal: modalPicker,\r\n      eChild: ePicker,\r\n      closeOnEsc: true,\r\n      closedCallback: () => {\r\n        const shouldRestoreFocus = _isNothingFocused(beans);\r\n        this.beforeHidePicker();\r\n        if (shouldRestoreFocus && this.isAlive()) {\r\n          this.getFocusableElement().focus();\r\n        }\r\n      },\r\n      ariaLabel: translate(pickerAriaLabelKey, pickerAriaLabelValue),\r\n      anchorToElement: eWrapper\r\n    };\r\n    ePicker.style.position = \"absolute\";\r\n    const popupSvc = beans.popupSvc;\r\n    const addPopupRes = popupSvc.addPopup(popupParams);\r\n    if (variableWidth) {\r\n      if (minPickerWidth) {\r\n        ePicker.style.minWidth = minPickerWidth;\r\n      }\r\n      ePicker.style.width = _formatSize(_getAbsoluteWidth(eWrapper));\r\n      if (maxPickerWidth) {\r\n        ePicker.style.maxWidth = maxPickerWidth;\r\n      }\r\n    } else {\r\n      _setElementWidth(ePicker, maxPickerWidth ?? _getAbsoluteWidth(eWrapper));\r\n    }\r\n    const maxHeight = maxPickerHeight ?? `${_getInnerHeight(popupSvc.getPopupParent())}px`;\r\n    ePicker.style.setProperty(\"max-height\", maxHeight);\r\n    this.alignPickerToComponent();\r\n    return addPopupRes.hideFunc;\r\n  }\r\n  alignPickerToComponent() {\r\n    if (!this.pickerComponent) {\r\n      return;\r\n    }\r\n    const {\r\n      pickerGap,\r\n      config: { pickerType },\r\n      beans: { popupSvc, gos },\r\n      eWrapper,\r\n      pickerComponent\r\n    } = this;\r\n    const alignSide = gos.get(\"enableRtl\") ? \"right\" : \"left\";\r\n    popupSvc.positionPopupByComponent({\r\n      type: pickerType,\r\n      eventSource: eWrapper,\r\n      ePopup: pickerComponent.getGui(),\r\n      position: \"under\",\r\n      alignSide,\r\n      keepWithinBounds: true,\r\n      nudgeY: pickerGap\r\n    });\r\n  }\r\n  beforeHidePicker() {\r\n    if (this.destroyMouseWheelFunc) {\r\n      this.destroyMouseWheelFunc();\r\n      this.destroyMouseWheelFunc = void 0;\r\n    }\r\n    this.toggleExpandedStyles(false);\r\n    const pickerGui = this.pickerComponent.getGui();\r\n    pickerGui.removeEventListener(\"focusin\", this.onPickerFocusIn);\r\n    pickerGui.removeEventListener(\"focusout\", this.onPickerFocusOut);\r\n    this.isPickerDisplayed = false;\r\n    this.pickerComponent = void 0;\r\n    this.hideCurrentPicker = null;\r\n  }\r\n  toggleExpandedStyles(expanded) {\r\n    if (!this.isAlive()) {\r\n      return;\r\n    }\r\n    const ariaEl = this.getAriaElement();\r\n    _setAriaExpanded(ariaEl, expanded);\r\n    const classList = this.eWrapper.classList;\r\n    classList.toggle(\"ag-picker-expanded\", expanded);\r\n    classList.toggle(\"ag-picker-collapsed\", !expanded);\r\n  }\r\n  onPickerFocusIn() {\r\n    this.togglePickerHasFocus(true);\r\n  }\r\n  onPickerFocusOut(e) {\r\n    if (!this.pickerComponent?.getGui().contains(e.relatedTarget)) {\r\n      this.togglePickerHasFocus(false);\r\n    }\r\n  }\r\n  togglePickerHasFocus(focused) {\r\n    if (!this.pickerComponent) {\r\n      return;\r\n    }\r\n    this.eWrapper.classList.toggle(\"ag-picker-has-focus\", focused);\r\n  }\r\n  hidePicker() {\r\n    if (this.hideCurrentPicker) {\r\n      this.hideCurrentPicker();\r\n      this.dispatchLocalEvent({\r\n        type: \"pickerHidden\"\r\n      });\r\n    }\r\n  }\r\n  setInputWidth(width) {\r\n    _setElementWidth(this.eWrapper, width);\r\n    return this;\r\n  }\r\n  getFocusableElement() {\r\n    return this.eWrapper;\r\n  }\r\n  setPickerGap(gap) {\r\n    this.pickerGap = gap;\r\n    return this;\r\n  }\r\n  setPickerMinWidth(width) {\r\n    if (typeof width === \"number\") {\r\n      width = `${width}px`;\r\n    }\r\n    this.minPickerWidth = width == null ? void 0 : width;\r\n    return this;\r\n  }\r\n  setPickerMaxWidth(width) {\r\n    if (typeof width === \"number\") {\r\n      width = `${width}px`;\r\n    }\r\n    this.maxPickerWidth = width == null ? void 0 : width;\r\n    return this;\r\n  }\r\n  setPickerMaxHeight(height) {\r\n    if (typeof height === \"number\") {\r\n      height = `${height}px`;\r\n    }\r\n    this.maxPickerHeight = height == null ? void 0 : height;\r\n    return this;\r\n  }\r\n  destroy() {\r\n    this.hidePicker();\r\n    super.destroy();\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/widgets/agSelect.css-GENERATED.ts\r\nvar agSelectCSS = (\r\n  /*css*/\r\n  `.ag-select{align-items:center;display:flex;&.ag-disabled{opacity:.5}}:where(.ag-select){.ag-picker-field-wrapper{cursor:default}&.ag-disabled .ag-picker-field-wrapper:focus{box-shadow:none}&:not(.ag-cell-editor,.ag-label-align-top){min-height:var(--ag-list-item-height)}.ag-picker-field-display{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.ag-picker-field-icon{align-items:center;display:flex}}:where(.ag-ltr) :where(.ag-select){.ag-picker-field-wrapper{padding-left:calc(var(--ag-cell-horizontal-padding)/2);padding-right:var(--ag-spacing)}}:where(.ag-rtl) :where(.ag-select){.ag-picker-field-wrapper{padding-left:var(--ag-spacing);padding-right:calc(var(--ag-cell-horizontal-padding)/2)}}`\r\n);\r\n\r\n// packages/ag-grid-community/src/widgets/agSelect.ts\r\nvar AgSelect = class extends AgPickerField {\r\n  constructor(config) {\r\n    super({\r\n      pickerAriaLabelKey: \"ariaLabelSelectField\",\r\n      pickerAriaLabelValue: \"Select Field\",\r\n      pickerType: \"ag-list\",\r\n      className: \"ag-select\",\r\n      pickerIcon: \"selectOpen\",\r\n      ariaRole: \"combobox\",\r\n      ...config\r\n    });\r\n    this.registerCSS(agSelectCSS);\r\n  }\r\n  postConstruct() {\r\n    this.tooltipFeature = this.createOptionalManagedBean(\r\n      this.beans.registry.createDynamicBean(\"tooltipFeature\", false, {\r\n        shouldDisplayTooltip: _isElementOverflowingCallback(() => this.eDisplayField),\r\n        getGui: () => this.getGui()\r\n      })\r\n    );\r\n    super.postConstruct();\r\n    this.createListComponent();\r\n    this.eWrapper.tabIndex = this.gos.get(\"tabIndex\");\r\n    const { options, value, placeholder } = this.config;\r\n    if (options != null) {\r\n      this.addOptions(options);\r\n    }\r\n    if (value != null) {\r\n      this.setValue(value, true);\r\n    }\r\n    if (placeholder && value == null) {\r\n      this.eDisplayField.textContent = placeholder;\r\n    }\r\n    this.addManagedElementListeners(this.eWrapper, { focusout: this.onWrapperFocusOut.bind(this) });\r\n  }\r\n  onWrapperFocusOut(e) {\r\n    if (!this.eWrapper.contains(e.relatedTarget)) {\r\n      this.hidePicker();\r\n    }\r\n  }\r\n  createListComponent() {\r\n    const listComponent = this.createBean(new AgList(\"select\", true));\r\n    this.listComponent = listComponent;\r\n    listComponent.setParentComponent(this);\r\n    const eListAriaEl = listComponent.getAriaElement();\r\n    const listId = `ag-select-list-${listComponent.getCompId()}`;\r\n    eListAriaEl.setAttribute(\"id\", listId);\r\n    _setAriaControlsAndLabel(this.getAriaElement(), eListAriaEl);\r\n    listComponent.addManagedElementListeners(listComponent.getGui(), {\r\n      mousedown: (e) => {\r\n        e?.preventDefault();\r\n      }\r\n    });\r\n    listComponent.addManagedListeners(listComponent, {\r\n      selectedItem: () => {\r\n        this.hidePicker();\r\n        this.dispatchLocalEvent({ type: \"selectedItem\" });\r\n      },\r\n      fieldValueChanged: () => {\r\n        if (!this.listComponent) {\r\n          return;\r\n        }\r\n        this.setValue(this.listComponent.getValue(), false, true);\r\n        this.hidePicker();\r\n      }\r\n    });\r\n  }\r\n  createPickerComponent() {\r\n    return this.listComponent;\r\n  }\r\n  onKeyDown(e) {\r\n    const { key } = e;\r\n    if (key === KeyCode.TAB) {\r\n      this.hidePicker();\r\n    }\r\n    switch (key) {\r\n      case KeyCode.ENTER:\r\n      case KeyCode.UP:\r\n      case KeyCode.DOWN:\r\n      case KeyCode.PAGE_UP:\r\n      case KeyCode.PAGE_DOWN:\r\n      case KeyCode.PAGE_HOME:\r\n      case KeyCode.PAGE_END:\r\n        e.preventDefault();\r\n        if (this.isPickerDisplayed) {\r\n          this.listComponent?.handleKeyDown(e);\r\n        } else {\r\n          super.onKeyDown(e);\r\n        }\r\n        break;\r\n      case KeyCode.ESCAPE:\r\n        super.onKeyDown(e);\r\n        break;\r\n      case KeyCode.SPACE:\r\n        if (this.isPickerDisplayed) {\r\n          e.preventDefault();\r\n        } else {\r\n          super.onKeyDown(e);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n  showPicker() {\r\n    const listComponent = this.listComponent;\r\n    if (!listComponent) {\r\n      return;\r\n    }\r\n    super.showPicker();\r\n    listComponent.refreshHighlighted();\r\n  }\r\n  addOptions(options) {\r\n    options.forEach((option) => this.addOption(option));\r\n    return this;\r\n  }\r\n  addOption(option) {\r\n    this.listComponent.addOption(option);\r\n    return this;\r\n  }\r\n  clearOptions() {\r\n    this.listComponent?.clearOptions();\r\n    this.setValue(void 0, true);\r\n    return this;\r\n  }\r\n  setValue(value, silent, fromPicker) {\r\n    const {\r\n      listComponent,\r\n      config: { placeholder },\r\n      eDisplayField,\r\n      tooltipFeature\r\n    } = this;\r\n    if (this.value === value || !listComponent) {\r\n      return this;\r\n    }\r\n    if (!fromPicker) {\r\n      listComponent.setValue(value, true);\r\n    }\r\n    const newValue = listComponent.getValue();\r\n    if (newValue === this.getValue()) {\r\n      return this;\r\n    }\r\n    let displayValue = listComponent.getDisplayValue();\r\n    if (displayValue == null && placeholder) {\r\n      displayValue = placeholder;\r\n    }\r\n    eDisplayField.textContent = displayValue;\r\n    tooltipFeature?.setTooltipAndRefresh(displayValue ?? null);\r\n    return super.setValue(value, silent);\r\n  }\r\n  destroy() {\r\n    this.listComponent = this.destroyBean(this.listComponent);\r\n    super.destroy();\r\n  }\r\n};\r\nvar AgSelectSelector = {\r\n  selector: \"AG-SELECT\",\r\n  component: AgSelect\r\n};\r\n\r\n// packages/ag-grid-community/src/widgets/tabGuardCtrl.ts\r\nvar TabGuardClassNames = {\r\n  TAB_GUARD: \"ag-tab-guard\",\r\n  TAB_GUARD_TOP: \"ag-tab-guard-top\",\r\n  TAB_GUARD_BOTTOM: \"ag-tab-guard-bottom\"\r\n};\r\nvar TabGuardCtrl = class extends BeanStub {\r\n  constructor(params) {\r\n    super();\r\n    this.skipTabGuardFocus = false;\r\n    this.forcingFocusOut = false;\r\n    // Used when `isFocusableContainer` enabled\r\n    this.allowFocus = false;\r\n    const {\r\n      comp,\r\n      eTopGuard,\r\n      eBottomGuard,\r\n      focusTrapActive,\r\n      forceFocusOutWhenTabGuardsAreEmpty,\r\n      isFocusableContainer,\r\n      focusInnerElement,\r\n      onFocusIn,\r\n      onFocusOut,\r\n      shouldStopEventPropagation,\r\n      onTabKeyDown,\r\n      handleKeyDown,\r\n      isEmpty,\r\n      eFocusableElement\r\n    } = params;\r\n    this.comp = comp;\r\n    this.eTopGuard = eTopGuard;\r\n    this.eBottomGuard = eBottomGuard;\r\n    this.providedFocusInnerElement = focusInnerElement;\r\n    this.eFocusableElement = eFocusableElement;\r\n    this.focusTrapActive = !!focusTrapActive;\r\n    this.forceFocusOutWhenTabGuardsAreEmpty = !!forceFocusOutWhenTabGuardsAreEmpty;\r\n    this.isFocusableContainer = !!isFocusableContainer;\r\n    this.providedFocusIn = onFocusIn;\r\n    this.providedFocusOut = onFocusOut;\r\n    this.providedShouldStopEventPropagation = shouldStopEventPropagation;\r\n    this.providedOnTabKeyDown = onTabKeyDown;\r\n    this.providedHandleKeyDown = handleKeyDown;\r\n    this.providedIsEmpty = isEmpty;\r\n  }\r\n  postConstruct() {\r\n    this.createManagedBean(\r\n      new ManagedFocusFeature(this.eFocusableElement, {\r\n        shouldStopEventPropagation: () => this.shouldStopEventPropagation(),\r\n        onTabKeyDown: (e) => this.onTabKeyDown(e),\r\n        handleKeyDown: (e) => this.handleKeyDown(e),\r\n        onFocusIn: (e) => this.onFocusIn(e),\r\n        onFocusOut: (e) => this.onFocusOut(e)\r\n      })\r\n    );\r\n    this.activateTabGuards();\r\n    [this.eTopGuard, this.eBottomGuard].forEach(\r\n      (guard) => this.addManagedElementListeners(guard, { focus: this.onFocus.bind(this) })\r\n    );\r\n  }\r\n  handleKeyDown(e) {\r\n    if (this.providedHandleKeyDown) {\r\n      this.providedHandleKeyDown(e);\r\n    }\r\n  }\r\n  tabGuardsAreActive() {\r\n    return !!this.eTopGuard && this.eTopGuard.hasAttribute(\"tabIndex\");\r\n  }\r\n  shouldStopEventPropagation() {\r\n    if (this.providedShouldStopEventPropagation) {\r\n      return this.providedShouldStopEventPropagation();\r\n    }\r\n    return false;\r\n  }\r\n  activateTabGuards() {\r\n    if (this.forcingFocusOut) {\r\n      return;\r\n    }\r\n    const tabIndex = this.gos.get(\"tabIndex\");\r\n    this.comp.setTabIndex(tabIndex.toString());\r\n  }\r\n  deactivateTabGuards() {\r\n    this.comp.setTabIndex();\r\n  }\r\n  onFocus(e) {\r\n    if (this.isFocusableContainer && !this.eFocusableElement.contains(e.relatedTarget)) {\r\n      if (!this.allowFocus) {\r\n        this.findNextElementOutsideAndFocus(e.target === this.eBottomGuard);\r\n        return;\r\n      }\r\n    }\r\n    if (this.skipTabGuardFocus) {\r\n      this.skipTabGuardFocus = false;\r\n      return;\r\n    }\r\n    if (this.forceFocusOutWhenTabGuardsAreEmpty) {\r\n      const isEmpty = this.providedIsEmpty ? this.providedIsEmpty() : _findFocusableElements(this.eFocusableElement, \".ag-tab-guard\").length === 0;\r\n      if (isEmpty) {\r\n        this.findNextElementOutsideAndFocus(e.target === this.eBottomGuard);\r\n        return;\r\n      }\r\n    }\r\n    if (this.isFocusableContainer && this.eFocusableElement.contains(e.relatedTarget)) {\r\n      return;\r\n    }\r\n    const fromBottom = e.target === this.eBottomGuard;\r\n    const hasFocusedInnerElement = this.providedFocusInnerElement ? this.providedFocusInnerElement(fromBottom) : this.focusInnerElement(fromBottom);\r\n    if (!hasFocusedInnerElement && this.forceFocusOutWhenTabGuardsAreEmpty) {\r\n      this.findNextElementOutsideAndFocus(e.target === this.eBottomGuard);\r\n    }\r\n  }\r\n  findNextElementOutsideAndFocus(up) {\r\n    const eDocument = _getDocument(this.beans);\r\n    const focusableEls = _findFocusableElements(eDocument.body, null, true);\r\n    const index = focusableEls.indexOf(up ? this.eTopGuard : this.eBottomGuard);\r\n    if (index === -1) {\r\n      return;\r\n    }\r\n    let start;\r\n    let end;\r\n    if (up) {\r\n      start = 0;\r\n      end = index;\r\n    } else {\r\n      start = index + 1;\r\n      end = focusableEls.length;\r\n    }\r\n    const focusableRange = focusableEls.slice(start, end);\r\n    const targetTabIndex = this.gos.get(\"tabIndex\");\r\n    focusableRange.sort((a, b) => {\r\n      const indexA = parseInt(a.getAttribute(\"tabindex\") || \"0\");\r\n      const indexB = parseInt(b.getAttribute(\"tabindex\") || \"0\");\r\n      if (indexB === targetTabIndex) {\r\n        return 1;\r\n      }\r\n      if (indexA === targetTabIndex) {\r\n        return -1;\r\n      }\r\n      if (indexA === 0) {\r\n        return 1;\r\n      }\r\n      if (indexB === 0) {\r\n        return -1;\r\n      }\r\n      return indexA - indexB;\r\n    });\r\n    focusableRange[up ? focusableRange.length - 1 : 0]?.focus();\r\n  }\r\n  onFocusIn(e) {\r\n    if (this.focusTrapActive || this.forcingFocusOut) {\r\n      return;\r\n    }\r\n    if (this.providedFocusIn) {\r\n      this.providedFocusIn(e);\r\n    }\r\n    if (!this.isFocusableContainer) {\r\n      this.deactivateTabGuards();\r\n    }\r\n  }\r\n  onFocusOut(e) {\r\n    if (this.focusTrapActive) {\r\n      return;\r\n    }\r\n    if (this.providedFocusOut) {\r\n      this.providedFocusOut(e);\r\n    }\r\n    if (!this.eFocusableElement.contains(e.relatedTarget)) {\r\n      this.activateTabGuards();\r\n    }\r\n  }\r\n  onTabKeyDown(e) {\r\n    if (this.providedOnTabKeyDown) {\r\n      this.providedOnTabKeyDown(e);\r\n      return;\r\n    }\r\n    if (this.focusTrapActive) {\r\n      return;\r\n    }\r\n    if (e.defaultPrevented) {\r\n      return;\r\n    }\r\n    const tabGuardsAreActive = this.tabGuardsAreActive();\r\n    if (tabGuardsAreActive) {\r\n      this.deactivateTabGuards();\r\n    }\r\n    const nextRoot = this.getNextFocusableElement(e.shiftKey);\r\n    if (tabGuardsAreActive) {\r\n      setTimeout(() => this.activateTabGuards(), 0);\r\n    }\r\n    if (!nextRoot) {\r\n      return;\r\n    }\r\n    nextRoot.focus();\r\n    e.preventDefault();\r\n  }\r\n  focusInnerElement(fromBottom = false) {\r\n    const focusable = _findFocusableElements(this.eFocusableElement);\r\n    if (this.tabGuardsAreActive()) {\r\n      focusable.splice(0, 1);\r\n      focusable.splice(focusable.length - 1, 1);\r\n    }\r\n    if (!focusable.length) {\r\n      return false;\r\n    }\r\n    focusable[fromBottom ? focusable.length - 1 : 0].focus({ preventScroll: true });\r\n    return true;\r\n  }\r\n  getNextFocusableElement(backwards) {\r\n    return _findNextFocusableElement(this.beans, this.eFocusableElement, false, backwards);\r\n  }\r\n  forceFocusOutOfContainer(up = false) {\r\n    if (this.forcingFocusOut) {\r\n      return;\r\n    }\r\n    const tabGuardToFocus = up ? this.eTopGuard : this.eBottomGuard;\r\n    this.activateTabGuards();\r\n    this.skipTabGuardFocus = true;\r\n    this.forcingFocusOut = true;\r\n    tabGuardToFocus.focus();\r\n    window.setTimeout(() => {\r\n      this.forcingFocusOut = false;\r\n      this.activateTabGuards();\r\n    });\r\n  }\r\n  isTabGuard(element, bottom) {\r\n    return element === this.eTopGuard && !bottom || element === this.eBottomGuard && (bottom ?? true);\r\n  }\r\n  setAllowFocus(allowFocus) {\r\n    this.allowFocus = allowFocus;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/widgets/tabGuardFeature.ts\r\nvar TabGuardFeature = class extends BeanStub {\r\n  constructor(comp) {\r\n    super();\r\n    this.comp = comp;\r\n  }\r\n  initialiseTabGuard(params) {\r\n    this.eTopGuard = this.createTabGuard(\"top\");\r\n    this.eBottomGuard = this.createTabGuard(\"bottom\");\r\n    this.eFocusableElement = this.comp.getFocusableElement();\r\n    const { eTopGuard, eBottomGuard, eFocusableElement } = this;\r\n    const tabGuards = [eTopGuard, eBottomGuard];\r\n    const compProxy = {\r\n      setTabIndex: (tabIndex) => {\r\n        tabGuards.forEach(\r\n          (tabGuard) => tabIndex != null ? tabGuard.setAttribute(\"tabindex\", tabIndex) : tabGuard.removeAttribute(\"tabindex\")\r\n        );\r\n      }\r\n    };\r\n    this.addTabGuards(eTopGuard, eBottomGuard);\r\n    const {\r\n      focusTrapActive = false,\r\n      onFocusIn,\r\n      onFocusOut,\r\n      focusInnerElement,\r\n      handleKeyDown,\r\n      onTabKeyDown,\r\n      shouldStopEventPropagation,\r\n      isEmpty,\r\n      forceFocusOutWhenTabGuardsAreEmpty,\r\n      isFocusableContainer\r\n    } = params;\r\n    this.tabGuardCtrl = this.createManagedBean(\r\n      new TabGuardCtrl({\r\n        comp: compProxy,\r\n        focusTrapActive,\r\n        eTopGuard,\r\n        eBottomGuard,\r\n        eFocusableElement,\r\n        onFocusIn,\r\n        onFocusOut,\r\n        focusInnerElement,\r\n        handleKeyDown,\r\n        onTabKeyDown,\r\n        shouldStopEventPropagation,\r\n        isEmpty,\r\n        forceFocusOutWhenTabGuardsAreEmpty,\r\n        isFocusableContainer\r\n      })\r\n    );\r\n  }\r\n  getTabGuardCtrl() {\r\n    return this.tabGuardCtrl;\r\n  }\r\n  createTabGuard(side) {\r\n    const tabGuard = _getDocument(this.beans).createElement(\"div\");\r\n    const cls = side === \"top\" ? TabGuardClassNames.TAB_GUARD_TOP : TabGuardClassNames.TAB_GUARD_BOTTOM;\r\n    tabGuard.classList.add(TabGuardClassNames.TAB_GUARD, cls);\r\n    _setAriaRole(tabGuard, \"presentation\");\r\n    return tabGuard;\r\n  }\r\n  addTabGuards(topTabGuard, bottomTabGuard) {\r\n    const eFocusableElement = this.eFocusableElement;\r\n    eFocusableElement.insertAdjacentElement(\"afterbegin\", topTabGuard);\r\n    eFocusableElement.insertAdjacentElement(\"beforeend\", bottomTabGuard);\r\n  }\r\n  removeAllChildrenExceptTabGuards() {\r\n    const tabGuards = [this.eTopGuard, this.eBottomGuard];\r\n    _clearElement(this.comp.getFocusableElement());\r\n    this.addTabGuards(...tabGuards);\r\n  }\r\n  forceFocusOutOfContainer(up = false) {\r\n    this.tabGuardCtrl.forceFocusOutOfContainer(up);\r\n  }\r\n  appendChild(appendChild, newChild, container) {\r\n    if (!_isNodeOrElement(newChild)) {\r\n      newChild = newChild.getGui();\r\n    }\r\n    const { eBottomGuard: bottomTabGuard } = this;\r\n    if (bottomTabGuard) {\r\n      bottomTabGuard.insertAdjacentElement(\"beforebegin\", newChild);\r\n    } else {\r\n      appendChild(newChild, container);\r\n    }\r\n  }\r\n  destroy() {\r\n    const { eTopGuard, eBottomGuard } = this;\r\n    _removeFromParent(eTopGuard);\r\n    _removeFromParent(eBottomGuard);\r\n    super.destroy();\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/widgets/tabGuardComp.ts\r\nvar TabGuardComp = class extends Component {\r\n  initialiseTabGuard(params) {\r\n    this.tabGuardFeature = this.createManagedBean(new TabGuardFeature(this));\r\n    this.tabGuardFeature.initialiseTabGuard(params);\r\n  }\r\n  forceFocusOutOfContainer(up = false) {\r\n    this.tabGuardFeature.forceFocusOutOfContainer(up);\r\n  }\r\n  appendChild(newChild, container) {\r\n    this.tabGuardFeature.appendChild(super.appendChild.bind(this), newChild, container);\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/widgets/touchListener.ts\r\nvar TouchListener = class {\r\n  constructor(eElement, preventMouseClick = false) {\r\n    this.DOUBLE_TAP_MILLIS = 500;\r\n    this.destroyFuncs = [];\r\n    this.touching = false;\r\n    this.localEventService = new LocalEventService();\r\n    this.preventMouseClick = preventMouseClick;\r\n    const startListener = this.onTouchStart.bind(this);\r\n    const moveListener = this.onTouchMove.bind(this);\r\n    const endListener = this.onTouchEnd.bind(this);\r\n    eElement.addEventListener(\"touchstart\", startListener, { passive: true });\r\n    eElement.addEventListener(\"touchmove\", moveListener, { passive: true });\r\n    eElement.addEventListener(\"touchend\", endListener, { passive: false });\r\n    this.destroyFuncs.push(() => {\r\n      eElement.removeEventListener(\"touchstart\", startListener, { passive: true });\r\n      eElement.removeEventListener(\"touchmove\", moveListener, { passive: true });\r\n      eElement.removeEventListener(\"touchend\", endListener, { passive: false });\r\n    });\r\n  }\r\n  getActiveTouch(touchList) {\r\n    for (let i = 0; i < touchList.length; i++) {\r\n      const matches = touchList[i].identifier === this.touchStart.identifier;\r\n      if (matches) {\r\n        return touchList[i];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  addEventListener(eventType, listener) {\r\n    this.localEventService.addEventListener(eventType, listener);\r\n  }\r\n  removeEventListener(eventType, listener) {\r\n    this.localEventService.removeEventListener(eventType, listener);\r\n  }\r\n  onTouchStart(touchEvent) {\r\n    if (this.touching) {\r\n      return;\r\n    }\r\n    this.touchStart = touchEvent.touches[0];\r\n    this.touching = true;\r\n    this.moved = false;\r\n    const touchStartCopy = this.touchStart;\r\n    window.setTimeout(() => {\r\n      const touchesMatch = this.touchStart === touchStartCopy;\r\n      if (this.touching && touchesMatch && !this.moved) {\r\n        this.moved = true;\r\n        const event = {\r\n          type: \"longTap\",\r\n          touchStart: this.touchStart,\r\n          touchEvent\r\n        };\r\n        this.localEventService.dispatchEvent(event);\r\n      }\r\n    }, 500);\r\n  }\r\n  onTouchMove(touchEvent) {\r\n    if (!this.touching) {\r\n      return;\r\n    }\r\n    const touch = this.getActiveTouch(touchEvent.touches);\r\n    if (!touch) {\r\n      return;\r\n    }\r\n    const eventIsFarAway = !_areEventsNear(touch, this.touchStart, 4);\r\n    if (eventIsFarAway) {\r\n      this.moved = true;\r\n    }\r\n  }\r\n  onTouchEnd(touchEvent) {\r\n    if (!this.touching) {\r\n      return;\r\n    }\r\n    if (!this.moved) {\r\n      const event = {\r\n        type: \"tap\",\r\n        touchStart: this.touchStart\r\n      };\r\n      this.localEventService.dispatchEvent(event);\r\n      this.checkForDoubleTap();\r\n    }\r\n    if (this.preventMouseClick && touchEvent.cancelable) {\r\n      touchEvent.preventDefault();\r\n    }\r\n    this.touching = false;\r\n  }\r\n  checkForDoubleTap() {\r\n    const now = Date.now();\r\n    if (this.lastTapTime && this.lastTapTime > 0) {\r\n      const interval = now - this.lastTapTime;\r\n      if (interval > this.DOUBLE_TAP_MILLIS) {\r\n        const event = {\r\n          type: \"doubleTap\",\r\n          touchStart: this.touchStart\r\n        };\r\n        this.localEventService.dispatchEvent(event);\r\n        this.lastTapTime = null;\r\n      } else {\r\n        this.lastTapTime = now;\r\n      }\r\n    } else {\r\n      this.lastTapTime = now;\r\n    }\r\n  }\r\n  destroy() {\r\n    this.destroyFuncs.forEach((func) => func());\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/interfaces/IRangeService.ts\r\nvar CellRangeType = /* @__PURE__ */ ((CellRangeType2) => {\r\n  CellRangeType2[CellRangeType2[\"VALUE\"] = 0] = \"VALUE\";\r\n  CellRangeType2[CellRangeType2[\"DIMENSION\"] = 1] = \"DIMENSION\";\r\n  return CellRangeType2;\r\n})(CellRangeType || {});\r\n\r\n// packages/ag-grid-community/src/autoScrollService.ts\r\nvar AutoScrollService = class {\r\n  constructor(params) {\r\n    this.tickingInterval = null;\r\n    this.onScrollCallback = null;\r\n    this.scrollContainer = params.scrollContainer;\r\n    this.scrollHorizontally = params.scrollAxis.indexOf(\"x\") !== -1;\r\n    this.scrollVertically = params.scrollAxis.indexOf(\"y\") !== -1;\r\n    this.scrollByTick = params.scrollByTick != null ? params.scrollByTick : 20;\r\n    if (params.onScrollCallback) {\r\n      this.onScrollCallback = params.onScrollCallback;\r\n    }\r\n    if (this.scrollVertically) {\r\n      this.getVerticalPosition = params.getVerticalPosition;\r\n      this.setVerticalPosition = params.setVerticalPosition;\r\n    }\r\n    if (this.scrollHorizontally) {\r\n      this.getHorizontalPosition = params.getHorizontalPosition;\r\n      this.setHorizontalPosition = params.setHorizontalPosition;\r\n    }\r\n    this.shouldSkipVerticalScroll = params.shouldSkipVerticalScroll || (() => false);\r\n    this.shouldSkipHorizontalScroll = params.shouldSkipHorizontalScroll || (() => false);\r\n  }\r\n  check(mouseEvent, forceSkipVerticalScroll = false) {\r\n    const skipVerticalScroll = forceSkipVerticalScroll || this.shouldSkipVerticalScroll();\r\n    if (skipVerticalScroll && this.shouldSkipHorizontalScroll()) {\r\n      return;\r\n    }\r\n    const rect = this.scrollContainer.getBoundingClientRect();\r\n    const scrollTick = this.scrollByTick;\r\n    this.tickLeft = mouseEvent.clientX < rect.left + scrollTick;\r\n    this.tickRight = mouseEvent.clientX > rect.right - scrollTick;\r\n    this.tickUp = mouseEvent.clientY < rect.top + scrollTick && !skipVerticalScroll;\r\n    this.tickDown = mouseEvent.clientY > rect.bottom - scrollTick && !skipVerticalScroll;\r\n    if (this.tickLeft || this.tickRight || this.tickUp || this.tickDown) {\r\n      this.ensureTickingStarted();\r\n    } else {\r\n      this.ensureCleared();\r\n    }\r\n  }\r\n  ensureTickingStarted() {\r\n    if (this.tickingInterval === null) {\r\n      this.tickingInterval = window.setInterval(this.doTick.bind(this), 100);\r\n      this.tickCount = 0;\r\n    }\r\n  }\r\n  doTick() {\r\n    this.tickCount++;\r\n    const tickAmount = this.tickCount > 20 ? 200 : this.tickCount > 10 ? 80 : 40;\r\n    if (this.scrollVertically) {\r\n      const vScrollPosition = this.getVerticalPosition();\r\n      if (this.tickUp) {\r\n        this.setVerticalPosition(vScrollPosition - tickAmount);\r\n      }\r\n      if (this.tickDown) {\r\n        this.setVerticalPosition(vScrollPosition + tickAmount);\r\n      }\r\n    }\r\n    if (this.scrollHorizontally) {\r\n      const hScrollPosition = this.getHorizontalPosition();\r\n      if (this.tickLeft) {\r\n        this.setHorizontalPosition(hScrollPosition - tickAmount);\r\n      }\r\n      if (this.tickRight) {\r\n        this.setHorizontalPosition(hScrollPosition + tickAmount);\r\n      }\r\n    }\r\n    if (this.onScrollCallback) {\r\n      this.onScrollCallback();\r\n    }\r\n  }\r\n  ensureCleared() {\r\n    if (this.tickingInterval) {\r\n      window.clearInterval(this.tickingInterval);\r\n      this.tickingInterval = null;\r\n    }\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/vanillaFrameworkOverrides.ts\r\nvar VanillaFrameworkOverrides = class {\r\n  constructor(frameworkName = \"javascript\") {\r\n    this.frameworkName = frameworkName;\r\n    this.renderingEngine = \"vanilla\";\r\n    this.batchFrameworkComps = false;\r\n    this.wrapIncoming = (callback) => callback();\r\n    this.wrapOutgoing = (callback) => callback();\r\n    this.baseDocLink = `${BASE_URL}/${this.frameworkName}-data-grid`;\r\n    setValidationDocLink(this.baseDocLink);\r\n  }\r\n  setInterval(action, timeout) {\r\n    return new AgPromise((resolve) => {\r\n      resolve(window.setInterval(action, timeout));\r\n    });\r\n  }\r\n  // for Vanilla JS, we just add the event to the element\r\n  addEventListener(element, type, listener, options) {\r\n    let eventListenerOptions = {};\r\n    if (typeof options === \"object\") {\r\n      eventListenerOptions = options;\r\n    } else if (typeof options === \"boolean\") {\r\n      eventListenerOptions = { capture: options };\r\n    }\r\n    if (eventListenerOptions.passive == null) {\r\n      const passive = getPassiveStateForEvent(type);\r\n      if (passive != null) {\r\n        eventListenerOptions.passive = passive;\r\n      }\r\n    }\r\n    element.addEventListener(type, listener, eventListenerOptions);\r\n  }\r\n  frameworkComponent(_) {\r\n    return null;\r\n  }\r\n  isFrameworkComponent(_) {\r\n    return false;\r\n  }\r\n  getDocLink(path) {\r\n    return `${this.baseDocLink}${path ? `/${path}` : \"\"}`;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/api/apiUtils.ts\r\nfunction createGridApi(context) {\r\n  return {\r\n    beanName: \"gridApi\",\r\n    bean: context.getBean(\"apiFunctionSvc\").api\r\n  };\r\n}\r\n\r\n// packages/ag-grid-community/src/context/gridBeanComparator.ts\r\nvar orderedCoreBeans = [\r\n  // Validate license first\r\n  \"licenseManager\",\r\n  // core beans only\r\n  \"environment\",\r\n  \"eventSvc\",\r\n  \"gos\",\r\n  \"paginationAutoPageSizeSvc\",\r\n  \"apiFunctionSvc\",\r\n  \"gridApi\",\r\n  \"registry\",\r\n  \"agCompUtils\",\r\n  \"userCompFactory\",\r\n  \"rowContainerHeight\",\r\n  \"horizontalResizeSvc\",\r\n  \"localeSvc\",\r\n  \"pinnedRowModel\",\r\n  \"dragSvc\",\r\n  \"colGroupSvc\",\r\n  \"visibleCols\",\r\n  \"popupSvc\",\r\n  \"selectionSvc\",\r\n  \"colFilter\",\r\n  \"quickFilter\",\r\n  \"filterManager\",\r\n  \"colModel\",\r\n  \"headerNavigation\",\r\n  \"pageBounds\",\r\n  \"pagination\",\r\n  \"pageBoundsListener\",\r\n  \"rowSpanSvc\",\r\n  \"stickyRowSvc\",\r\n  \"rowRenderer\",\r\n  \"expressionSvc\",\r\n  \"alignedGridsSvc\",\r\n  \"navigation\",\r\n  \"valueCache\",\r\n  \"valueSvc\",\r\n  \"autoWidthCalc\",\r\n  \"filterMenuFactory\",\r\n  \"dragAndDrop\",\r\n  \"focusSvc\",\r\n  \"cellNavigation\",\r\n  \"cellStyles\",\r\n  \"scrollVisibleSvc\",\r\n  \"sortSvc\",\r\n  \"colHover\",\r\n  \"colAnimation\",\r\n  \"autoColSvc\",\r\n  \"selectionColSvc\",\r\n  \"changeDetectionSvc\",\r\n  \"animationFrameSvc\",\r\n  \"undoRedo\",\r\n  \"colDefFactory\",\r\n  \"rowStyleSvc\",\r\n  \"rowNodeBlockLoader\",\r\n  \"rowNodeSorter\",\r\n  \"ctrlsSvc\",\r\n  \"pinnedCols\",\r\n  \"dataTypeSvc\",\r\n  \"syncSvc\",\r\n  \"overlays\",\r\n  \"stateSvc\",\r\n  \"expansionSvc\",\r\n  \"apiEventSvc\",\r\n  \"ariaAnnounce\",\r\n  \"menuSvc\",\r\n  \"colMoves\",\r\n  \"colAutosize\",\r\n  \"colFlex\",\r\n  \"colResize\",\r\n  \"pivotColsSvc\",\r\n  \"valueColsSvc\",\r\n  \"rowGroupColsSvc\",\r\n  \"funcColsSvc\",\r\n  \"colNames\",\r\n  \"colViewport\",\r\n  \"pivotResultCols\",\r\n  \"showRowGroupCols\",\r\n  \"validation\"\r\n  // Have validations run last\r\n];\r\nvar beanNamePosition = Object.fromEntries(\r\n  orderedCoreBeans.map((beanName, index) => [beanName, index])\r\n);\r\nfunction gridBeanInitComparator(bean1, bean2) {\r\n  const index1 = (bean1.beanName ? beanNamePosition[bean1.beanName] : void 0) ?? Number.MAX_SAFE_INTEGER;\r\n  const index2 = (bean2.beanName ? beanNamePosition[bean2.beanName] : void 0) ?? Number.MAX_SAFE_INTEGER;\r\n  return index1 - index2;\r\n}\r\nfunction gridBeanDestroyComparator(bean1, bean2) {\r\n  if (bean1?.beanName === \"gridDestroySvc\") {\r\n    return -1;\r\n  }\r\n  if (bean2?.beanName === \"gridDestroySvc\") {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\n// packages/ag-grid-community/src/headerRendering/rowContainer/headerRowContainerComp.ts\r\nvar PinnedLeftElement = { tag: \"div\", cls: \"ag-pinned-left-header\", role: \"rowgroup\" };\r\nvar PinnedRightElement = { tag: \"div\", cls: \"ag-pinned-right-header\", role: \"rowgroup\" };\r\nvar CenterElement = {\r\n  tag: \"div\",\r\n  cls: \"ag-header-viewport\",\r\n  role: \"presentation\",\r\n  attrs: { tabindex: \"-1\" },\r\n  children: [{ tag: \"div\", ref: \"eCenterContainer\", cls: \"ag-header-container\", role: \"rowgroup\" }]\r\n};\r\nvar HeaderRowContainerComp = class extends Component {\r\n  constructor(pinned) {\r\n    super();\r\n    this.eCenterContainer = RefPlaceholder;\r\n    this.headerRowComps = {};\r\n    this.rowCompsList = [];\r\n    this.pinned = pinned;\r\n  }\r\n  postConstruct() {\r\n    this.selectAndSetTemplate();\r\n    const compProxy = {\r\n      setDisplayed: (displayed) => this.setDisplayed(displayed),\r\n      setCtrls: (ctrls) => this.setCtrls(ctrls),\r\n      // only gets called for center section\r\n      setCenterWidth: (width) => this.eCenterContainer.style.width = width,\r\n      setViewportScrollLeft: (left) => this.getGui().scrollLeft = left,\r\n      // only gets called for pinned sections\r\n      setPinnedContainerWidth: (width) => {\r\n        const eGui = this.getGui();\r\n        eGui.style.width = width;\r\n        eGui.style.maxWidth = width;\r\n        eGui.style.minWidth = width;\r\n      }\r\n    };\r\n    const ctrl = this.createManagedBean(new HeaderRowContainerCtrl(this.pinned));\r\n    ctrl.setComp(compProxy, this.getGui());\r\n  }\r\n  selectAndSetTemplate() {\r\n    const pinnedLeft = this.pinned == \"left\";\r\n    const pinnedRight = this.pinned == \"right\";\r\n    const template = pinnedLeft ? PinnedLeftElement : pinnedRight ? PinnedRightElement : CenterElement;\r\n    this.setTemplate(template);\r\n    this.eRowContainer = this.eCenterContainer !== RefPlaceholder ? this.eCenterContainer : this.getGui();\r\n  }\r\n  destroy() {\r\n    this.setCtrls([]);\r\n    super.destroy();\r\n  }\r\n  destroyRowComp(rowComp) {\r\n    this.destroyBean(rowComp);\r\n    this.eRowContainer.removeChild(rowComp.getGui());\r\n  }\r\n  setCtrls(ctrls) {\r\n    const oldRowComps = this.headerRowComps;\r\n    this.headerRowComps = {};\r\n    this.rowCompsList = [];\r\n    let prevGui;\r\n    const appendEnsuringDomOrder = (rowComp) => {\r\n      const eGui = rowComp.getGui();\r\n      const notAlreadyIn = eGui.parentElement != this.eRowContainer;\r\n      if (notAlreadyIn) {\r\n        this.eRowContainer.appendChild(eGui);\r\n      }\r\n      if (prevGui) {\r\n        _ensureDomOrder(this.eRowContainer, eGui, prevGui);\r\n      }\r\n      prevGui = eGui;\r\n    };\r\n    ctrls.forEach((ctrl) => {\r\n      const ctrlId = ctrl.instanceId;\r\n      const existingComp = oldRowComps[ctrlId];\r\n      delete oldRowComps[ctrlId];\r\n      const rowComp = existingComp ? existingComp : this.createBean(new HeaderRowComp(ctrl));\r\n      this.headerRowComps[ctrlId] = rowComp;\r\n      this.rowCompsList.push(rowComp);\r\n      appendEnsuringDomOrder(rowComp);\r\n    });\r\n    Object.values(oldRowComps).forEach((c) => this.destroyRowComp(c));\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/headerRendering/gridHeaderComp.ts\r\nvar GridHeaderElement = { tag: \"div\", cls: \"ag-header\", role: \"presentation\" };\r\nvar GridHeaderComp = class extends Component {\r\n  constructor() {\r\n    super(GridHeaderElement);\r\n  }\r\n  postConstruct() {\r\n    const compProxy = {\r\n      toggleCss: (cssClassName, on) => this.toggleCss(cssClassName, on),\r\n      setHeightAndMinHeight: (height) => {\r\n        this.getGui().style.height = height;\r\n        this.getGui().style.minHeight = height;\r\n      }\r\n    };\r\n    const ctrl = this.createManagedBean(new GridHeaderCtrl());\r\n    ctrl.setComp(compProxy, this.getGui(), this.getFocusableElement());\r\n    const addContainer = (container) => {\r\n      this.createManagedBean(container);\r\n      this.appendChild(container);\r\n    };\r\n    addContainer(new HeaderRowContainerComp(\"left\"));\r\n    addContainer(new HeaderRowContainerComp(null));\r\n    addContainer(new HeaderRowContainerComp(\"right\"));\r\n  }\r\n};\r\nvar GridHeaderSelector = {\r\n  selector: \"AG-HEADER-ROOT\",\r\n  component: GridHeaderComp\r\n};\r\n\r\n// packages/ag-grid-community/src/rendering/cell/cellComp.ts\r\nvar CellComp = class extends Component {\r\n  constructor(beans, cellCtrl, printLayout, eRow, editingCell) {\r\n    super();\r\n    this.cellCtrl = cellCtrl;\r\n    // every time we go into edit mode, or back again, this gets incremented.\r\n    // it's the components way of dealing with the async nature of framework components,\r\n    // so if a framework component takes a while to be created, we know if the object\r\n    // is still relevant when creating is finished. eg we could click edit / un-edit 20\r\n    // times before the first React edit component comes back - we should discard\r\n    // the first 19.\r\n    this.rendererVersion = 0;\r\n    this.editorVersion = 0;\r\n    this.beans = beans;\r\n    this.gos = beans.gos;\r\n    this.column = cellCtrl.column;\r\n    this.rowNode = cellCtrl.rowNode;\r\n    this.eRow = eRow;\r\n    const cellDiv = _createElement({\r\n      tag: \"div\",\r\n      role: cellCtrl.getCellAriaRole(),\r\n      attrs: {\r\n        \"comp-id\": `${this.getCompId()}`,\r\n        \"col-id\": cellCtrl.column.colIdSanitised\r\n      }\r\n    });\r\n    this.eCell = cellDiv;\r\n    let wrapperDiv;\r\n    if (cellCtrl.isCellSpanning()) {\r\n      wrapperDiv = _createElement({\r\n        tag: \"div\",\r\n        cls: \"ag-spanned-cell-wrapper\",\r\n        role: \"presentation\"\r\n      });\r\n      wrapperDiv.appendChild(cellDiv);\r\n      this.setTemplateFromElement(wrapperDiv);\r\n    } else {\r\n      this.setTemplateFromElement(cellDiv);\r\n    }\r\n    this.cellCssManager = new CssClassManager(() => cellDiv);\r\n    this.forceWrapper = cellCtrl.isForceWrapper();\r\n    this.refreshWrapper(false);\r\n    const compProxy = {\r\n      toggleCss: (cssClassName, on) => this.cellCssManager.toggleCss(cssClassName, on),\r\n      setUserStyles: (styles) => _addStylesToElement(cellDiv, styles),\r\n      getFocusableElement: () => cellDiv,\r\n      setIncludeSelection: (include) => this.includeSelection = include,\r\n      setIncludeRowDrag: (include) => this.includeRowDrag = include,\r\n      setIncludeDndSource: (include) => this.includeDndSource = include,\r\n      setRenderDetails: (compDetails, valueToDisplay, force) => this.setRenderDetails(compDetails, valueToDisplay, force),\r\n      setEditDetails: (compDetails, popup, position) => this.setEditDetails(compDetails, popup, position),\r\n      getCellEditor: () => this.cellEditor || null,\r\n      getCellRenderer: () => this.cellRenderer || null,\r\n      getParentOfValue: () => this.getParentOfValue(),\r\n      refreshEditStyles: (editing, isPopup) => this.refreshEditStyles(editing, isPopup)\r\n    };\r\n    cellCtrl.setComp(compProxy, cellDiv, wrapperDiv, this.eCellWrapper, printLayout, editingCell, void 0);\r\n  }\r\n  getParentOfValue() {\r\n    return this.eCellValue ?? this.eCellWrapper ?? this.eCell;\r\n  }\r\n  setRenderDetails(compDetails, valueToDisplay, forceNewCellRendererInstance) {\r\n    const isInlineEditing = this.cellEditor && !this.cellEditorPopupWrapper;\r\n    if (isInlineEditing) {\r\n      return;\r\n    }\r\n    this.firstRender = this.firstRender == null;\r\n    const controlWrapperChanged = this.refreshWrapper(false);\r\n    this.refreshEditStyles(false);\r\n    if (compDetails) {\r\n      const neverRefresh = forceNewCellRendererInstance || controlWrapperChanged;\r\n      const cellRendererRefreshSuccessful = neverRefresh ? false : this.refreshCellRenderer(compDetails);\r\n      if (!cellRendererRefreshSuccessful) {\r\n        this.destroyRenderer();\r\n        this.createCellRendererInstance(compDetails);\r\n      }\r\n    } else {\r\n      this.destroyRenderer();\r\n      this.insertValueWithoutCellRenderer(valueToDisplay);\r\n    }\r\n  }\r\n  setEditDetails(compDetails, popup, position) {\r\n    if (compDetails) {\r\n      this.createCellEditorInstance(compDetails, popup, position);\r\n    } else {\r\n      this.destroyEditor();\r\n    }\r\n  }\r\n  removeControls() {\r\n    const context = this.beans.context;\r\n    this.checkboxSelectionComp = context.destroyBean(this.checkboxSelectionComp);\r\n    this.dndSourceComp = context.destroyBean(this.dndSourceComp);\r\n    this.rowDraggingComp = context.destroyBean(this.rowDraggingComp);\r\n  }\r\n  // returns true if wrapper was changed\r\n  refreshWrapper(editing) {\r\n    const providingControls = this.includeRowDrag || this.includeDndSource || this.includeSelection;\r\n    const usingWrapper = providingControls || this.forceWrapper;\r\n    const putWrapperIn = usingWrapper && this.eCellWrapper == null;\r\n    if (putWrapperIn) {\r\n      this.eCellWrapper = _createElement({ tag: \"div\", cls: \"ag-cell-wrapper\", role: \"presentation\" });\r\n      this.eCell.appendChild(this.eCellWrapper);\r\n    }\r\n    const takeWrapperOut = !usingWrapper && this.eCellWrapper != null;\r\n    if (takeWrapperOut) {\r\n      _removeFromParent(this.eCellWrapper);\r\n      this.eCellWrapper = void 0;\r\n    }\r\n    this.cellCssManager.toggleCss(\"ag-cell-value\", !usingWrapper);\r\n    const usingCellValue = !editing && usingWrapper;\r\n    const putCellValueIn = usingCellValue && this.eCellValue == null;\r\n    if (putCellValueIn) {\r\n      this.eCellValue = _createElement({ tag: \"span\", cls: \"ag-cell-value\", role: \"presentation\" });\r\n      this.eCellWrapper.appendChild(this.eCellValue);\r\n    }\r\n    const takeCellValueOut = !usingCellValue && this.eCellValue != null;\r\n    if (takeCellValueOut) {\r\n      _removeFromParent(this.eCellValue);\r\n      this.eCellValue = void 0;\r\n    }\r\n    const templateChanged = putWrapperIn || takeWrapperOut || putCellValueIn || takeCellValueOut;\r\n    if (templateChanged) {\r\n      this.removeControls();\r\n    }\r\n    if (!editing && providingControls) {\r\n      this.addControls();\r\n    }\r\n    return templateChanged;\r\n  }\r\n  addControls() {\r\n    const { cellCtrl, eCellWrapper, eCellValue, includeRowDrag, includeDndSource, includeSelection } = this;\r\n    const insertBefore = (comp) => {\r\n      if (comp) {\r\n        eCellWrapper.insertBefore(comp.getGui(), eCellValue);\r\n      }\r\n    };\r\n    if (includeRowDrag && this.rowDraggingComp == null) {\r\n      this.rowDraggingComp = cellCtrl.createRowDragComp();\r\n      insertBefore(this.rowDraggingComp);\r\n    }\r\n    if (includeDndSource && this.dndSourceComp == null) {\r\n      this.dndSourceComp = cellCtrl.createDndSource();\r\n      insertBefore(this.dndSourceComp);\r\n    }\r\n    if (includeSelection && this.checkboxSelectionComp == null) {\r\n      this.checkboxSelectionComp = cellCtrl.createSelectionCheckbox();\r\n      insertBefore(this.checkboxSelectionComp);\r\n    }\r\n  }\r\n  createCellEditorInstance(compDetails, popup, position) {\r\n    const versionCopy = this.editorVersion;\r\n    const cellEditorPromise = compDetails.newAgStackInstance();\r\n    const { params } = compDetails;\r\n    cellEditorPromise.then((c) => this.afterCellEditorCreated(versionCopy, c, params, popup, position));\r\n    const cellEditorAsync = _missing(this.cellEditor);\r\n    if (cellEditorAsync && params.cellStartedEdit) {\r\n      this.cellCtrl.focusCell(true);\r\n    }\r\n  }\r\n  insertValueWithoutCellRenderer(valueToDisplay) {\r\n    const eParent = this.getParentOfValue();\r\n    _clearElement(eParent);\r\n    const escapedValue = _toString(valueToDisplay);\r\n    if (escapedValue != null) {\r\n      eParent.textContent = escapedValue;\r\n    }\r\n  }\r\n  destroyRenderer() {\r\n    const { context } = this.beans;\r\n    this.cellRenderer = context.destroyBean(this.cellRenderer);\r\n    _removeFromParent(this.cellRendererGui);\r\n    this.cellRendererGui = null;\r\n    this.rendererVersion++;\r\n  }\r\n  destroyEditor() {\r\n    const { context } = this.beans;\r\n    const recoverFocus = this.cellEditorPopupWrapper?.getGui().contains(_getActiveDomElement(this.beans)) || this.cellCtrl.hasBrowserFocus();\r\n    if (recoverFocus) {\r\n      this.eCell.focus({ preventScroll: true });\r\n    }\r\n    this.hideEditorPopup?.();\r\n    this.hideEditorPopup = void 0;\r\n    this.cellEditor = context.destroyBean(this.cellEditor);\r\n    this.cellEditorPopupWrapper = context.destroyBean(this.cellEditorPopupWrapper);\r\n    _removeFromParent(this.cellEditorGui);\r\n    this.cellCtrl.disableEditorTooltipFeature();\r\n    this.cellEditorGui = null;\r\n    this.editorVersion++;\r\n  }\r\n  refreshCellRenderer(compClassAndParams) {\r\n    if (this.cellRenderer?.refresh == null) {\r\n      return false;\r\n    }\r\n    if (this.cellRendererClass !== compClassAndParams.componentClass) {\r\n      return false;\r\n    }\r\n    const result = this.cellRenderer.refresh(compClassAndParams.params);\r\n    return result === true || result === void 0;\r\n  }\r\n  createCellRendererInstance(compDetails) {\r\n    const displayComponentVersionCopy = this.rendererVersion;\r\n    const createCellRendererFunc = (details) => (_) => {\r\n      const staleTask = this.rendererVersion !== displayComponentVersionCopy || !this.isAlive();\r\n      if (staleTask) {\r\n        return;\r\n      }\r\n      const componentPromise = details.newAgStackInstance();\r\n      const callback = this.afterCellRendererCreated.bind(\r\n        this,\r\n        displayComponentVersionCopy,\r\n        details.componentClass\r\n      );\r\n      componentPromise?.then(callback);\r\n    };\r\n    const { animationFrameSvc } = this.beans;\r\n    let createTask;\r\n    if (animationFrameSvc?.active && this.firstRender) {\r\n      createTask = (details, isDeferred = false) => {\r\n        animationFrameSvc.createTask(\r\n          createCellRendererFunc(details),\r\n          this.rowNode.rowIndex,\r\n          \"p2\",\r\n          details.componentFromFramework,\r\n          isDeferred\r\n        );\r\n      };\r\n    } else {\r\n      createTask = (details) => createCellRendererFunc(details)();\r\n    }\r\n    if (compDetails.params?.deferRender && !this.cellCtrl.rowNode.group) {\r\n      const { loadingComp, onReady } = this.cellCtrl.getDeferLoadingCellRenderer();\r\n      if (loadingComp) {\r\n        createTask(loadingComp);\r\n        onReady.then(() => createTask(compDetails, true));\r\n      }\r\n    } else {\r\n      createTask(compDetails);\r\n    }\r\n  }\r\n  afterCellRendererCreated(cellRendererVersion, cellRendererClass, cellRenderer) {\r\n    const staleTask = !this.isAlive() || cellRendererVersion !== this.rendererVersion;\r\n    if (staleTask) {\r\n      this.beans.context.destroyBean(cellRenderer);\r\n      return;\r\n    }\r\n    this.cellRenderer = cellRenderer;\r\n    this.cellRendererClass = cellRendererClass;\r\n    const cellGui = cellRenderer.getGui();\r\n    this.cellRendererGui = cellGui;\r\n    if (cellGui != null) {\r\n      const eParent = this.getParentOfValue();\r\n      _clearElement(eParent);\r\n      eParent.appendChild(cellGui);\r\n    }\r\n  }\r\n  afterCellEditorCreated(requestVersion, cellEditor, params, popup, position) {\r\n    const staleComp = requestVersion !== this.editorVersion;\r\n    const { context } = this.beans;\r\n    if (staleComp) {\r\n      context.destroyBean(cellEditor);\r\n      return;\r\n    }\r\n    const editingCancelledByUserComp = cellEditor.isCancelBeforeStart && cellEditor.isCancelBeforeStart();\r\n    if (editingCancelledByUserComp) {\r\n      context.destroyBean(cellEditor);\r\n      this.cellCtrl.stopEditing(true);\r\n      return;\r\n    }\r\n    if (!cellEditor.getGui) {\r\n      _warn(97, { colId: this.column.getId() });\r\n      context.destroyBean(cellEditor);\r\n      return;\r\n    }\r\n    this.cellEditor = cellEditor;\r\n    this.cellEditorGui = cellEditor.getGui();\r\n    const cellEditorInPopup = popup || cellEditor.isPopup !== void 0 && cellEditor.isPopup();\r\n    if (cellEditorInPopup) {\r\n      this.addPopupCellEditor(params, position);\r\n    } else {\r\n      this.addInCellEditor();\r\n    }\r\n    this.refreshEditStyles(true, cellEditorInPopup);\r\n    cellEditor.afterGuiAttached?.();\r\n    this.cellCtrl.enableEditorTooltipFeature(cellEditor);\r\n    this.cellCtrl.cellEditorAttached();\r\n  }\r\n  refreshEditStyles(editing, isPopup) {\r\n    const { cellCssManager } = this;\r\n    cellCssManager.toggleCss(\"ag-cell-inline-editing\", editing && !isPopup);\r\n    cellCssManager.toggleCss(\"ag-cell-popup-editing\", editing && !!isPopup);\r\n    cellCssManager.toggleCss(\"ag-cell-not-inline-editing\", !editing || !!isPopup);\r\n  }\r\n  addInCellEditor() {\r\n    const { eCell } = this;\r\n    if (eCell.contains(_getActiveDomElement(this.beans))) {\r\n      eCell.focus();\r\n    }\r\n    this.destroyRenderer();\r\n    this.refreshWrapper(true);\r\n    _clearElement(this.getParentOfValue());\r\n    if (this.cellEditorGui) {\r\n      const eParent = this.getParentOfValue();\r\n      eParent.appendChild(this.cellEditorGui);\r\n    }\r\n  }\r\n  addPopupCellEditor(params, position) {\r\n    const { gos, context, popupSvc, editSvc } = this.beans;\r\n    if (gos.get(\"editType\") === \"fullRow\") {\r\n      _warn(98);\r\n    }\r\n    const cellEditorPopupWrapper = this.cellEditorPopupWrapper = context.createBean(\r\n      editSvc.createPopupEditorWrapper(params)\r\n    );\r\n    const { cellEditor, cellEditorGui, eCell, rowNode, column, cellCtrl } = this;\r\n    const ePopupGui = cellEditorPopupWrapper.getGui();\r\n    if (cellEditorGui) {\r\n      ePopupGui.appendChild(cellEditorGui);\r\n    }\r\n    const useModelPopup = gos.get(\"stopEditingWhenCellsLoseFocus\");\r\n    const positionToUse = position != null ? position : cellEditor.getPopupPosition?.() ?? \"over\";\r\n    const isRtl = gos.get(\"enableRtl\");\r\n    const positionParams = {\r\n      ePopup: ePopupGui,\r\n      column,\r\n      rowNode,\r\n      type: \"popupCellEditor\",\r\n      eventSource: eCell,\r\n      position: positionToUse,\r\n      alignSide: isRtl ? \"right\" : \"left\",\r\n      keepWithinBounds: true\r\n    };\r\n    const positionCallback = popupSvc.positionPopupByComponent.bind(popupSvc, positionParams);\r\n    const addPopupRes = popupSvc.addPopup({\r\n      modal: useModelPopup,\r\n      eChild: ePopupGui,\r\n      closeOnEsc: true,\r\n      closedCallback: () => {\r\n        cellCtrl.onPopupEditorClosed();\r\n      },\r\n      anchorToElement: eCell,\r\n      positionCallback,\r\n      ariaOwns: eCell\r\n    });\r\n    if (addPopupRes) {\r\n      this.hideEditorPopup = addPopupRes.hideFunc;\r\n    }\r\n  }\r\n  detach() {\r\n    this.eRow.removeChild(this.getGui());\r\n  }\r\n  // if the row is also getting destroyed, then we don't need to remove from dom,\r\n  // as the row will also get removed, so no need to take out the cells from the row\r\n  // if the row is going (removing is an expensive operation, so only need to remove\r\n  // the top part)\r\n  //\r\n  // note - this is NOT called by context, as we don't wire / unwire the CellComp for performance reasons.\r\n  destroy() {\r\n    this.destroyRenderer();\r\n    this.destroyEditor();\r\n    this.removeControls();\r\n    super.destroy();\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/rendering/row/rowComp.ts\r\nvar RowComp = class extends Component {\r\n  constructor(ctrl, beans, containerType) {\r\n    super();\r\n    this.cellComps = /* @__PURE__ */ new Map();\r\n    this.beans = beans;\r\n    this.rowCtrl = ctrl;\r\n    const rowDiv = _createElement({ tag: \"div\", role: \"row\", attrs: { \"comp-id\": `${this.getCompId()}` } });\r\n    this.setInitialStyle(rowDiv, containerType);\r\n    this.setTemplateFromElement(rowDiv);\r\n    const style = rowDiv.style;\r\n    this.domOrder = this.rowCtrl.getDomOrder();\r\n    const compProxy = {\r\n      setDomOrder: (domOrder) => this.domOrder = domOrder,\r\n      setCellCtrls: (cellCtrls) => this.setCellCtrls(cellCtrls),\r\n      showFullWidth: (compDetails) => this.showFullWidth(compDetails),\r\n      getFullWidthCellRenderer: () => this.fullWidthCellRenderer,\r\n      toggleCss: (name, on) => this.toggleCss(name, on),\r\n      setUserStyles: (styles) => _addStylesToElement(rowDiv, styles),\r\n      setTop: (top) => style.top = top,\r\n      setTransform: (transform) => style.transform = transform,\r\n      setRowIndex: (rowIndex) => rowDiv.setAttribute(\"row-index\", rowIndex),\r\n      setRowId: (rowId) => rowDiv.setAttribute(\"row-id\", rowId),\r\n      setRowBusinessKey: (businessKey) => rowDiv.setAttribute(\"row-business-key\", businessKey),\r\n      refreshFullWidth: (getUpdatedParams) => this.fullWidthCellRenderer?.refresh?.(getUpdatedParams()) ?? false\r\n    };\r\n    ctrl.setComp(compProxy, this.getGui(), containerType, void 0);\r\n    this.addDestroyFunc(() => {\r\n      ctrl.unsetComp(containerType);\r\n    });\r\n  }\r\n  setInitialStyle(container, containerType) {\r\n    const transform = this.rowCtrl.getInitialTransform(containerType);\r\n    if (transform) {\r\n      container.style.setProperty(\"transform\", transform);\r\n    } else {\r\n      const top = this.rowCtrl.getInitialRowTop(containerType);\r\n      if (top) {\r\n        container.style.setProperty(\"top\", top);\r\n      }\r\n    }\r\n  }\r\n  showFullWidth(compDetails) {\r\n    const callback = (cellRenderer) => {\r\n      if (this.isAlive()) {\r\n        const eGui = cellRenderer.getGui();\r\n        this.getGui().appendChild(eGui);\r\n        this.rowCtrl.setupDetailRowAutoHeight(eGui);\r\n        this.setFullWidthRowComp(cellRenderer);\r\n      } else {\r\n        this.beans.context.destroyBean(cellRenderer);\r\n      }\r\n    };\r\n    const res = compDetails.newAgStackInstance();\r\n    res.then(callback);\r\n  }\r\n  setCellCtrls(cellCtrls) {\r\n    const cellsToRemove = new Map(this.cellComps);\r\n    for (const cellCtrl of cellCtrls) {\r\n      const key = cellCtrl.instanceId;\r\n      if (!this.cellComps.has(key)) {\r\n        this.newCellComp(cellCtrl);\r\n      } else {\r\n        cellsToRemove.delete(key);\r\n      }\r\n    }\r\n    this.destroyCells(cellsToRemove);\r\n    this.ensureDomOrder(cellCtrls);\r\n  }\r\n  ensureDomOrder(cellCtrls) {\r\n    if (!this.domOrder) {\r\n      return;\r\n    }\r\n    const elementsInOrder = [];\r\n    for (const cellCtrl of cellCtrls) {\r\n      const cellComp = this.cellComps.get(cellCtrl.instanceId);\r\n      if (cellComp) {\r\n        elementsInOrder.push(cellComp.getGui());\r\n      }\r\n    }\r\n    _setDomChildOrder(this.getGui(), elementsInOrder);\r\n  }\r\n  newCellComp(cellCtrl) {\r\n    const editing = this.beans.editSvc?.isEditing(cellCtrl, { withOpenEditor: true }) ?? false;\r\n    const cellComp = new CellComp(this.beans, cellCtrl, this.rowCtrl.printLayout, this.getGui(), editing);\r\n    this.cellComps.set(cellCtrl.instanceId, cellComp);\r\n    this.getGui().appendChild(cellComp.getGui());\r\n  }\r\n  destroy() {\r\n    super.destroy();\r\n    this.destroyCells(this.cellComps);\r\n  }\r\n  setFullWidthRowComp(fullWidthRowComponent) {\r\n    this.fullWidthCellRenderer = fullWidthRowComponent;\r\n    this.addDestroyFunc(() => {\r\n      this.fullWidthCellRenderer = this.beans.context.destroyBean(this.fullWidthCellRenderer);\r\n    });\r\n  }\r\n  destroyCells(cellComps) {\r\n    for (const cellComp of cellComps.values()) {\r\n      if (!cellComp) {\r\n        return;\r\n      }\r\n      const instanceId = cellComp.cellCtrl.instanceId;\r\n      if (this.cellComps.get(instanceId) !== cellComp) {\r\n        return;\r\n      }\r\n      cellComp.detach();\r\n      cellComp.destroy();\r\n      this.cellComps.delete(instanceId);\r\n    }\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/gridBodyComp/rowContainer/rowContainerComp.ts\r\nfunction getElementParams(name, options, beans) {\r\n  const isCellSpanning = !!beans.gos.get(\"enableCellSpan\") && !!options.getSpannedRowCtrls;\r\n  const eContainerElement = {\r\n    tag: \"div\",\r\n    ref: \"eContainer\",\r\n    cls: _getRowContainerClass(name),\r\n    role: \"rowgroup\"\r\n  };\r\n  if (options.type === \"center\" || isCellSpanning) {\r\n    const eSpannedContainerElement = {\r\n      tag: \"div\",\r\n      ref: \"eSpannedContainer\",\r\n      cls: `ag-spanning-container ${_getRowSpanContainerClass(name)}`,\r\n      role: \"rowgroup\"\r\n    };\r\n    return {\r\n      tag: \"div\",\r\n      ref: \"eViewport\",\r\n      cls: `ag-viewport ${_getRowViewportClass(name)}`,\r\n      role: \"presentation\",\r\n      children: [eContainerElement, isCellSpanning ? eSpannedContainerElement : null]\r\n    };\r\n  }\r\n  return eContainerElement;\r\n}\r\nvar RowContainerComp = class extends Component {\r\n  constructor(params) {\r\n    super();\r\n    this.eViewport = RefPlaceholder;\r\n    this.eContainer = RefPlaceholder;\r\n    this.eSpannedContainer = RefPlaceholder;\r\n    this.rowCompsNoSpan = {};\r\n    this.rowCompsWithSpan = {};\r\n    this.name = params?.name;\r\n    this.options = _getRowContainerOptions(this.name);\r\n  }\r\n  postConstruct() {\r\n    this.setTemplate(getElementParams(this.name, this.options, this.beans));\r\n    const compProxy = {\r\n      setHorizontalScroll: (offset) => this.eViewport.scrollLeft = offset,\r\n      setViewportHeight: (height) => this.eViewport.style.height = height,\r\n      setRowCtrls: ({ rowCtrls }) => this.setRowCtrls(rowCtrls),\r\n      setSpannedRowCtrls: (rowCtrls) => this.setRowCtrls(rowCtrls, true),\r\n      setDomOrder: (domOrder) => {\r\n        this.domOrder = domOrder;\r\n      },\r\n      setContainerWidth: (width) => {\r\n        this.eContainer.style.width = width;\r\n        if (this.eSpannedContainer) {\r\n          this.eSpannedContainer.style.width = width;\r\n        }\r\n      },\r\n      setOffsetTop: (offset) => {\r\n        const top = `translateY(${offset})`;\r\n        this.eContainer.style.transform = top;\r\n        if (this.eSpannedContainer) {\r\n          this.eSpannedContainer.style.transform = top;\r\n        }\r\n      }\r\n    };\r\n    const ctrl = this.createManagedBean(new RowContainerCtrl(this.name));\r\n    ctrl.setComp(compProxy, this.eContainer, this.eSpannedContainer, this.eViewport);\r\n  }\r\n  destroy() {\r\n    this.setRowCtrls([]);\r\n    this.setRowCtrls([], true);\r\n    super.destroy();\r\n    this.lastPlacedElement = null;\r\n  }\r\n  setRowCtrls(rowCtrls, spanContainer) {\r\n    const { beans, options } = this;\r\n    const container = spanContainer ? this.eSpannedContainer : this.eContainer;\r\n    const oldRows = spanContainer ? { ...this.rowCompsWithSpan } : { ...this.rowCompsNoSpan };\r\n    const newComps = {};\r\n    if (spanContainer) {\r\n      this.rowCompsWithSpan = newComps;\r\n    } else {\r\n      this.rowCompsNoSpan = newComps;\r\n    }\r\n    this.lastPlacedElement = null;\r\n    const orderedRows = [];\r\n    for (const rowCtrl of rowCtrls) {\r\n      const instanceId = rowCtrl.instanceId;\r\n      const existingRowComp = oldRows[instanceId];\r\n      let rowComp;\r\n      if (existingRowComp) {\r\n        rowComp = existingRowComp;\r\n        delete oldRows[instanceId];\r\n      } else {\r\n        if (!rowCtrl.rowNode.displayed) {\r\n          continue;\r\n        }\r\n        rowComp = new RowComp(rowCtrl, beans, options.type);\r\n      }\r\n      newComps[instanceId] = rowComp;\r\n      orderedRows.push([rowComp, !existingRowComp]);\r\n    }\r\n    this.removeOldRows(Object.values(oldRows), container);\r\n    this.addRowNodes(orderedRows, container);\r\n  }\r\n  addRowNodes(rows, container) {\r\n    const { domOrder } = this;\r\n    for (const [rowComp, isNew] of rows) {\r\n      const eGui = rowComp.getGui();\r\n      if (!domOrder) {\r\n        if (isNew) {\r\n          container.appendChild(eGui);\r\n        }\r\n      } else {\r\n        this.ensureDomOrder(eGui, container);\r\n      }\r\n    }\r\n  }\r\n  removeOldRows(rowComps, container) {\r\n    for (const oldRowComp of rowComps) {\r\n      container.removeChild(oldRowComp.getGui());\r\n      oldRowComp.destroy();\r\n    }\r\n  }\r\n  ensureDomOrder(eRow, container) {\r\n    _ensureDomOrder(container, eRow, this.lastPlacedElement);\r\n    this.lastPlacedElement = eRow;\r\n  }\r\n};\r\nvar RowContainerSelector = {\r\n  selector: \"AG-ROW-CONTAINER\",\r\n  component: RowContainerComp\r\n};\r\n\r\n// packages/ag-grid-community/src/gridBodyComp/gridBodyComp.ts\r\nfunction makeRowContainers(paramsMap, names) {\r\n  return names.map((name) => {\r\n    const refName = `e${name[0].toUpperCase() + name.substring(1)}RowContainer`;\r\n    paramsMap[refName] = { name };\r\n    return {\r\n      tag: \"ag-row-container\",\r\n      ref: refName,\r\n      attrs: { name }\r\n    };\r\n  });\r\n}\r\nfunction getGridBodyTemplate(includeOverlay) {\r\n  const paramsMap = {};\r\n  const elementParams = {\r\n    tag: \"div\",\r\n    ref: \"eGridRoot\",\r\n    cls: \"ag-root ag-unselectable\",\r\n    children: [\r\n      { tag: \"ag-header-root\" },\r\n      {\r\n        tag: \"div\",\r\n        ref: \"eTop\",\r\n        cls: \"ag-floating-top\",\r\n        role: \"presentation\",\r\n        children: makeRowContainers(paramsMap, [\"topLeft\", \"topCenter\", \"topRight\", \"topFullWidth\"])\r\n      },\r\n      {\r\n        tag: \"div\",\r\n        ref: \"eBody\",\r\n        cls: \"ag-body\",\r\n        role: \"presentation\",\r\n        children: [\r\n          {\r\n            tag: \"div\",\r\n            ref: \"eBodyViewport\",\r\n            cls: \"ag-body-viewport\",\r\n            role: \"presentation\",\r\n            children: makeRowContainers(paramsMap, [\"left\", \"center\", \"right\", \"fullWidth\"])\r\n          },\r\n          { tag: \"ag-fake-vertical-scroll\" }\r\n        ]\r\n      },\r\n      {\r\n        tag: \"div\",\r\n        ref: \"eStickyTop\",\r\n        cls: \"ag-sticky-top\",\r\n        role: \"presentation\",\r\n        children: makeRowContainers(paramsMap, [\r\n          \"stickyTopLeft\",\r\n          \"stickyTopCenter\",\r\n          \"stickyTopRight\",\r\n          \"stickyTopFullWidth\"\r\n        ])\r\n      },\r\n      {\r\n        tag: \"div\",\r\n        ref: \"eStickyBottom\",\r\n        cls: \"ag-sticky-bottom\",\r\n        role: \"presentation\",\r\n        children: makeRowContainers(paramsMap, [\r\n          \"stickyBottomLeft\",\r\n          \"stickyBottomCenter\",\r\n          \"stickyBottomRight\",\r\n          \"stickyBottomFullWidth\"\r\n        ])\r\n      },\r\n      {\r\n        tag: \"div\",\r\n        ref: \"eBottom\",\r\n        cls: \"ag-floating-bottom\",\r\n        role: \"presentation\",\r\n        children: makeRowContainers(paramsMap, [\r\n          \"bottomLeft\",\r\n          \"bottomCenter\",\r\n          \"bottomRight\",\r\n          \"bottomFullWidth\"\r\n        ])\r\n      },\r\n      { tag: \"ag-fake-horizontal-scroll\" },\r\n      includeOverlay ? { tag: \"ag-overlay-wrapper\" } : null\r\n    ]\r\n  };\r\n  return { paramsMap, elementParams };\r\n}\r\nvar GridBodyComp = class extends Component {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.eGridRoot = RefPlaceholder;\r\n    this.eBodyViewport = RefPlaceholder;\r\n    this.eStickyTop = RefPlaceholder;\r\n    this.eStickyBottom = RefPlaceholder;\r\n    this.eTop = RefPlaceholder;\r\n    this.eBottom = RefPlaceholder;\r\n    this.eBody = RefPlaceholder;\r\n  }\r\n  postConstruct() {\r\n    const { overlays, rangeSvc } = this.beans;\r\n    const overlaySelector = overlays?.getOverlayWrapperSelector();\r\n    const { paramsMap, elementParams } = getGridBodyTemplate(!!overlaySelector);\r\n    this.setTemplate(\r\n      elementParams,\r\n      [\r\n        ...overlaySelector ? [overlaySelector] : [],\r\n        FakeHScrollSelector,\r\n        FakeVScrollSelector,\r\n        GridHeaderSelector,\r\n        RowContainerSelector\r\n      ],\r\n      paramsMap\r\n    );\r\n    const setHeight = (height, element) => {\r\n      const heightString = `${height}px`;\r\n      element.style.minHeight = heightString;\r\n      element.style.height = heightString;\r\n    };\r\n    const compProxy = {\r\n      setRowAnimationCssOnBodyViewport: (cssClass, animate) => this.setRowAnimationCssOnBodyViewport(cssClass, animate),\r\n      setColumnCount: (count) => _setAriaColCount(this.getGui(), count),\r\n      setRowCount: (count) => _setAriaRowCount(this.getGui(), count),\r\n      setTopHeight: (height) => setHeight(height, this.eTop),\r\n      setBottomHeight: (height) => setHeight(height, this.eBottom),\r\n      setTopInvisible: (invisible) => this.eTop.classList.toggle(\"ag-invisible\", invisible),\r\n      setBottomInvisible: (invisible) => this.eBottom.classList.toggle(\"ag-invisible\", invisible),\r\n      setStickyTopHeight: (height) => this.eStickyTop.style.height = height,\r\n      setStickyTopTop: (top) => this.eStickyTop.style.top = top,\r\n      setStickyTopWidth: (width) => this.eStickyTop.style.width = width,\r\n      setStickyBottomHeight: (height) => {\r\n        this.eStickyBottom.style.height = height;\r\n        this.eStickyBottom.classList.toggle(\"ag-invisible\", height === \"0px\");\r\n      },\r\n      setStickyBottomBottom: (bottom) => this.eStickyBottom.style.bottom = bottom,\r\n      setStickyBottomWidth: (width) => this.eStickyBottom.style.width = width,\r\n      setColumnMovingCss: (cssClass, flag) => this.toggleCss(cssClass, flag),\r\n      updateLayoutClasses: (cssClass, params) => {\r\n        const classLists = [this.eBodyViewport.classList, this.eBody.classList];\r\n        for (const classList of classLists) {\r\n          classList.toggle(LayoutCssClasses.AUTO_HEIGHT, params.autoHeight);\r\n          classList.toggle(LayoutCssClasses.NORMAL, params.normal);\r\n          classList.toggle(LayoutCssClasses.PRINT, params.print);\r\n        }\r\n        this.toggleCss(LayoutCssClasses.AUTO_HEIGHT, params.autoHeight);\r\n        this.toggleCss(LayoutCssClasses.NORMAL, params.normal);\r\n        this.toggleCss(LayoutCssClasses.PRINT, params.print);\r\n      },\r\n      setAlwaysVerticalScrollClass: (cssClass, on) => this.eBodyViewport.classList.toggle(CSS_CLASS_FORCE_VERTICAL_SCROLL, on),\r\n      registerBodyViewportResizeListener: (listener) => {\r\n        const unsubscribeFromResize = _observeResize(this.beans, this.eBodyViewport, listener);\r\n        this.addDestroyFunc(() => unsubscribeFromResize());\r\n      },\r\n      setPinnedTopBottomOverflowY: (overflow) => this.eTop.style.overflowY = this.eBottom.style.overflowY = overflow,\r\n      setCellSelectableCss: (cssClass, selectable) => {\r\n        [this.eTop, this.eBodyViewport, this.eBottom].forEach(\r\n          (ct) => ct.classList.toggle(cssClass, selectable)\r\n        );\r\n      },\r\n      setBodyViewportWidth: (width) => this.eBodyViewport.style.width = width,\r\n      setGridRootRole: (role) => _setAriaRole(this.eGridRoot, role)\r\n    };\r\n    this.ctrl = this.createManagedBean(new GridBodyCtrl());\r\n    this.ctrl.setComp(\r\n      compProxy,\r\n      this.getGui(),\r\n      this.eBodyViewport,\r\n      this.eTop,\r\n      this.eBottom,\r\n      this.eStickyTop,\r\n      this.eStickyBottom\r\n    );\r\n    if (rangeSvc && _isCellSelectionEnabled(this.gos) || _isMultiRowSelection(this.gos)) {\r\n      _setAriaMultiSelectable(this.getGui(), true);\r\n    }\r\n  }\r\n  setRowAnimationCssOnBodyViewport(cssClass, animateRows) {\r\n    const bodyViewportClassList = this.eBodyViewport.classList;\r\n    bodyViewportClassList.toggle(\"ag-row-animation\", animateRows);\r\n    bodyViewportClassList.toggle(\"ag-row-no-animation\", !animateRows);\r\n  }\r\n};\r\nvar GridBodySelector = {\r\n  selector: \"AG-GRID-BODY\",\r\n  component: GridBodyComp\r\n};\r\n\r\n// packages/ag-grid-community/src/gridComp/gridCtrl.ts\r\nvar GridCtrl = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.additionalFocusableContainers = /* @__PURE__ */ new Set();\r\n  }\r\n  setComp(view, eGridDiv, eGui) {\r\n    this.view = view;\r\n    this.eGridHostDiv = eGridDiv;\r\n    this.eGui = eGui;\r\n    this.eGui.setAttribute(\"grid-id\", this.beans.context.getGridId());\r\n    const { dragAndDrop, ctrlsSvc } = this.beans;\r\n    dragAndDrop?.registerGridDropTarget(() => this.eGui, this);\r\n    _stampTopLevelGridCompWithGridInstance(this.gos, eGridDiv);\r\n    this.createManagedBean(new LayoutFeature(this.view));\r\n    this.view.setRtlClass(this.gos.get(\"enableRtl\") ? \"ag-rtl\" : \"ag-ltr\");\r\n    const unsubscribeFromResize = _observeResize(this.beans, this.eGridHostDiv, this.onGridSizeChanged.bind(this));\r\n    this.addDestroyFunc(() => unsubscribeFromResize());\r\n    ctrlsSvc.register(\"gridCtrl\", this);\r\n  }\r\n  isDetailGrid() {\r\n    const el = _findTabbableParent(this.getGui());\r\n    return el?.getAttribute(\"row-id\")?.startsWith(\"detail\") || false;\r\n  }\r\n  getOptionalSelectors() {\r\n    const beans = this.beans;\r\n    return {\r\n      paginationSelector: beans.pagination?.getPaginationSelector(),\r\n      gridHeaderDropZonesSelector: beans.registry?.getSelector(\"AG-GRID-HEADER-DROP-ZONES\"),\r\n      sideBarSelector: beans.sideBar?.getSelector(),\r\n      statusBarSelector: beans.registry?.getSelector(\"AG-STATUS-BAR\"),\r\n      watermarkSelector: beans.licenseManager?.getWatermarkSelector()\r\n    };\r\n  }\r\n  onGridSizeChanged() {\r\n    this.eventSvc.dispatchEvent({\r\n      type: \"gridSizeChanged\",\r\n      clientWidth: this.eGridHostDiv.clientWidth,\r\n      clientHeight: this.eGridHostDiv.clientHeight\r\n    });\r\n  }\r\n  destroyGridUi() {\r\n    this.view.destroyGridUi();\r\n  }\r\n  getGui() {\r\n    return this.eGui;\r\n  }\r\n  setResizeCursor(direction) {\r\n    const { view } = this;\r\n    if (direction === false) {\r\n      view.setCursor(null);\r\n    } else {\r\n      const cursor = direction === 1 /* Horizontal */ ? \"ew-resize\" : \"ns-resize\";\r\n      view.setCursor(cursor);\r\n    }\r\n  }\r\n  disableUserSelect(on) {\r\n    this.view.setUserSelect(on ? \"none\" : null);\r\n  }\r\n  focusNextInnerContainer(backwards) {\r\n    const focusableContainers = this.getFocusableContainers();\r\n    const { indexWithFocus, nextIndex } = this.getNextFocusableIndex(focusableContainers, backwards);\r\n    if (nextIndex < 0 || nextIndex >= focusableContainers.length) {\r\n      return false;\r\n    }\r\n    if (nextIndex === 0) {\r\n      if (indexWithFocus > 0) {\r\n        const { visibleCols, focusSvc } = this.beans;\r\n        const allColumns = visibleCols.allCols;\r\n        const lastColumn = _last(allColumns);\r\n        if (focusSvc.focusGridView({ column: lastColumn, backwards: true })) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n    return this.focusContainer(focusableContainers[nextIndex], backwards);\r\n  }\r\n  focusInnerElement(fromBottom) {\r\n    const userCallbackFunction = this.gos.getCallback(\"focusGridInnerElement\");\r\n    if (userCallbackFunction && userCallbackFunction({ fromBottom: !!fromBottom })) {\r\n      return true;\r\n    }\r\n    const focusableContainers = this.getFocusableContainers();\r\n    const { focusSvc, visibleCols } = this.beans;\r\n    const allColumns = visibleCols.allCols;\r\n    if (fromBottom) {\r\n      if (focusableContainers.length > 1) {\r\n        return this.focusContainer(_last(focusableContainers), fromBottom);\r\n      }\r\n      const lastColumn = _last(allColumns);\r\n      if (focusSvc.focusGridView({ column: lastColumn, backwards: fromBottom })) {\r\n        return true;\r\n      }\r\n    }\r\n    if (this.gos.get(\"headerHeight\") === 0 || _isHeaderFocusSuppressed(this.beans)) {\r\n      if (focusSvc.focusGridView({ column: allColumns[0], backwards: fromBottom })) {\r\n        return true;\r\n      }\r\n      for (let i = 1; i < focusableContainers.length; i++) {\r\n        if (_focusInto(focusableContainers[i].getGui(), fromBottom)) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n    return focusSvc.focusFirstHeader();\r\n  }\r\n  forceFocusOutOfContainer(up = false) {\r\n    this.view.forceFocusOutOfContainer(up);\r\n  }\r\n  addFocusableContainer(container) {\r\n    this.additionalFocusableContainers.add(container);\r\n  }\r\n  removeFocusableContainer(container) {\r\n    this.additionalFocusableContainers.delete(container);\r\n  }\r\n  allowFocusForNextCoreContainer(up) {\r\n    const coreContainers = this.view.getFocusableContainers();\r\n    const { nextIndex, indexWithFocus } = this.getNextFocusableIndex(coreContainers, up);\r\n    if (indexWithFocus === -1 || nextIndex < 0 || nextIndex >= coreContainers.length) {\r\n      return;\r\n    }\r\n    const comp = coreContainers[nextIndex];\r\n    comp.setAllowFocus?.(true);\r\n    setTimeout(() => {\r\n      comp.setAllowFocus?.(false);\r\n    });\r\n  }\r\n  isFocusable() {\r\n    const beans = this.beans;\r\n    return !_isCellFocusSuppressed(beans) || !_isHeaderFocusSuppressed(beans) || !!beans.sideBar?.comp?.isDisplayed();\r\n  }\r\n  getNextFocusableIndex(focusableContainers, backwards) {\r\n    const activeEl = _getActiveDomElement(this.beans);\r\n    const indexWithFocus = focusableContainers.findIndex((container) => container.getGui().contains(activeEl));\r\n    const nextIndex = indexWithFocus + (backwards ? -1 : 1);\r\n    return {\r\n      indexWithFocus,\r\n      nextIndex\r\n    };\r\n  }\r\n  focusContainer(comp, up) {\r\n    comp.setAllowFocus?.(true);\r\n    const result = _focusInto(comp.getGui(), up, false, true);\r\n    comp.setAllowFocus?.(false);\r\n    return result;\r\n  }\r\n  getFocusableContainers() {\r\n    return [...this.view.getFocusableContainers(), ...this.additionalFocusableContainers];\r\n  }\r\n  destroy() {\r\n    this.additionalFocusableContainers.clear();\r\n    super.destroy();\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/gridComp/gridComp.ts\r\nvar GridComp = class extends TabGuardComp {\r\n  constructor(eGridDiv) {\r\n    super();\r\n    this.gridBody = RefPlaceholder;\r\n    this.sideBar = RefPlaceholder;\r\n    this.pagination = RefPlaceholder;\r\n    this.rootWrapperBody = RefPlaceholder;\r\n    this.eGridDiv = eGridDiv;\r\n  }\r\n  postConstruct() {\r\n    const compProxy = {\r\n      destroyGridUi: () => this.destroyBean(this),\r\n      setRtlClass: (cssClass) => this.addCss(cssClass),\r\n      forceFocusOutOfContainer: this.forceFocusOutOfContainer.bind(this),\r\n      updateLayoutClasses: this.updateLayoutClasses.bind(this),\r\n      getFocusableContainers: this.getFocusableContainers.bind(this),\r\n      setUserSelect: (value) => {\r\n        this.getGui().style.userSelect = value != null ? value : \"\";\r\n        this.getGui().style.webkitUserSelect = value != null ? value : \"\";\r\n      },\r\n      setCursor: (value) => {\r\n        this.getGui().style.cursor = value != null ? value : \"\";\r\n      }\r\n    };\r\n    const ctrl = this.createManagedBean(new GridCtrl());\r\n    const comps = ctrl.getOptionalSelectors();\r\n    const template = this.createTemplate(comps);\r\n    const requiredComps = [GridBodySelector, ...Object.values(comps).filter((c) => !!c)];\r\n    this.setTemplate(template, requiredComps);\r\n    ctrl.setComp(compProxy, this.eGridDiv, this.getGui());\r\n    this.insertGridIntoDom();\r\n    this.initialiseTabGuard({\r\n      // we want to override the default behaviour to do nothing for onTabKeyDown\r\n      onTabKeyDown: () => void 0,\r\n      focusInnerElement: (fromBottom) => ctrl.focusInnerElement(fromBottom),\r\n      forceFocusOutWhenTabGuardsAreEmpty: true,\r\n      isEmpty: () => !ctrl.isFocusable()\r\n    });\r\n  }\r\n  insertGridIntoDom() {\r\n    const eGui = this.getGui();\r\n    this.eGridDiv.appendChild(eGui);\r\n    this.addDestroyFunc(() => {\r\n      this.eGridDiv.removeChild(eGui);\r\n      _logIfDebug(this.gos, \"Grid removed from DOM\");\r\n    });\r\n  }\r\n  updateLayoutClasses(cssClass, params) {\r\n    const eRootWrapperBodyClassList = this.rootWrapperBody.classList;\r\n    const { AUTO_HEIGHT, NORMAL, PRINT } = LayoutCssClasses;\r\n    const { autoHeight, normal, print } = params;\r\n    eRootWrapperBodyClassList.toggle(AUTO_HEIGHT, autoHeight);\r\n    eRootWrapperBodyClassList.toggle(NORMAL, normal);\r\n    eRootWrapperBodyClassList.toggle(PRINT, print);\r\n    this.toggleCss(AUTO_HEIGHT, autoHeight);\r\n    this.toggleCss(NORMAL, normal);\r\n    this.toggleCss(PRINT, print);\r\n  }\r\n  createTemplate(params) {\r\n    const dropZones = params.gridHeaderDropZonesSelector ? { tag: \"ag-grid-header-drop-zones\" } : null;\r\n    const sideBar = params.sideBarSelector ? {\r\n      tag: \"ag-side-bar\",\r\n      ref: \"sideBar\"\r\n    } : null;\r\n    const statusBar = params.statusBarSelector ? { tag: \"ag-status-bar\" } : null;\r\n    const watermark = params.watermarkSelector ? { tag: \"ag-watermark\" } : null;\r\n    const pagination = params.paginationSelector ? { tag: \"ag-pagination\", ref: \"pagination\" } : null;\r\n    return {\r\n      tag: \"div\",\r\n      cls: \"ag-root-wrapper\",\r\n      role: \"presentation\",\r\n      children: [\r\n        dropZones,\r\n        {\r\n          tag: \"div\",\r\n          ref: \"rootWrapperBody\",\r\n          cls: \"ag-root-wrapper-body\",\r\n          role: \"presentation\",\r\n          children: [{ tag: \"ag-grid-body\", ref: \"gridBody\" }, sideBar]\r\n        },\r\n        statusBar,\r\n        pagination,\r\n        watermark\r\n      ]\r\n    };\r\n  }\r\n  getFocusableElement() {\r\n    return this.rootWrapperBody;\r\n  }\r\n  forceFocusOutOfContainer(up = false) {\r\n    if (!up && this.pagination?.isDisplayed()) {\r\n      this.pagination.forceFocusOutOfContainer(up);\r\n      return;\r\n    }\r\n    super.forceFocusOutOfContainer(up);\r\n  }\r\n  getFocusableContainers() {\r\n    const focusableContainers = [this.gridBody];\r\n    [this.sideBar, this.pagination].forEach((comp) => {\r\n      if (comp) {\r\n        focusableContainers.push(comp);\r\n      }\r\n    });\r\n    return focusableContainers.filter((el) => _isVisible(el.getGui()));\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/api/gridApiFunctions.ts\r\nvar mod = (moduleName, input) => {\r\n  for (const key of Object.keys(input)) {\r\n    input[key] = moduleName;\r\n  }\r\n  return input;\r\n};\r\nvar gridApiFunctionsMap = {\r\n  dispatchEvent: \"CommunityCore\",\r\n  // this is always registered\r\n  ...mod(\"CommunityCore\", {\r\n    destroy: 0,\r\n    getGridId: 0,\r\n    getGridOption: 0,\r\n    isDestroyed: 0,\r\n    setGridOption: 0,\r\n    updateGridOptions: 0,\r\n    isModuleRegistered: 0\r\n  }),\r\n  ...mod(\"GridState\", {\r\n    getState: 0,\r\n    setState: 0\r\n  }),\r\n  ...mod(\"SharedRowSelection\", {\r\n    setNodesSelected: 0,\r\n    selectAll: 0,\r\n    deselectAll: 0,\r\n    selectAllFiltered: 0,\r\n    deselectAllFiltered: 0,\r\n    selectAllOnCurrentPage: 0,\r\n    deselectAllOnCurrentPage: 0,\r\n    getSelectedNodes: 0,\r\n    getSelectedRows: 0\r\n  }),\r\n  ...mod(\"RowApi\", {\r\n    redrawRows: 0,\r\n    setRowNodeExpanded: 0,\r\n    getRowNode: 0,\r\n    addRenderedRowListener: 0,\r\n    getRenderedNodes: 0,\r\n    forEachNode: 0,\r\n    getFirstDisplayedRowIndex: 0,\r\n    getLastDisplayedRowIndex: 0,\r\n    getDisplayedRowAtIndex: 0,\r\n    getDisplayedRowCount: 0\r\n  }),\r\n  ...mod(\"ScrollApi\", {\r\n    getVerticalPixelRange: 0,\r\n    getHorizontalPixelRange: 0,\r\n    ensureColumnVisible: 0,\r\n    ensureIndexVisible: 0,\r\n    ensureNodeVisible: 0\r\n  }),\r\n  ...mod(\"KeyboardNavigation\", {\r\n    getFocusedCell: 0,\r\n    clearFocusedCell: 0,\r\n    setFocusedCell: 0,\r\n    tabToNextCell: 0,\r\n    tabToPreviousCell: 0,\r\n    setFocusedHeader: 0\r\n  }),\r\n  ...mod(\"EventApi\", {\r\n    addEventListener: 0,\r\n    addGlobalListener: 0,\r\n    removeEventListener: 0,\r\n    removeGlobalListener: 0\r\n  }),\r\n  ...mod(\"ValueCache\", {\r\n    expireValueCache: 0\r\n  }),\r\n  ...mod(\"CellApi\", {\r\n    getCellValue: 0\r\n  }),\r\n  ...mod(\"SharedMenu\", {\r\n    showColumnMenu: 0,\r\n    hidePopupMenu: 0\r\n  }),\r\n  ...mod(\"Sort\", {\r\n    onSortChanged: 0\r\n  }),\r\n  ...mod(\"PinnedRow\", {\r\n    getPinnedTopRowCount: 0,\r\n    getPinnedBottomRowCount: 0,\r\n    getPinnedTopRow: 0,\r\n    getPinnedBottomRow: 0,\r\n    forEachPinnedRow: 0\r\n  }),\r\n  ...mod(\"Overlay\", {\r\n    showLoadingOverlay: 0,\r\n    showNoRowsOverlay: 0,\r\n    hideOverlay: 0\r\n  }),\r\n  ...mod(\"RenderApi\", {\r\n    setGridAriaProperty: 0,\r\n    refreshCells: 0,\r\n    refreshHeader: 0,\r\n    isAnimationFrameQueueEmpty: 0,\r\n    flushAllAnimationFrames: 0,\r\n    getSizesForCurrentTheme: 0,\r\n    getCellRendererInstances: 0\r\n  }),\r\n  ...mod(\"HighlightChanges\", {\r\n    flashCells: 0\r\n  }),\r\n  ...mod(\"RowDrag\", {\r\n    addRowDropZone: 0,\r\n    removeRowDropZone: 0,\r\n    getRowDropZoneParams: 0,\r\n    getRowDropPositionIndicator: 0,\r\n    setRowDropPositionIndicator: 0\r\n  }),\r\n  ...mod(\"ColumnApi\", {\r\n    getColumnDefs: 0,\r\n    getColumnDef: 0,\r\n    getDisplayNameForColumn: 0,\r\n    getColumn: 0,\r\n    getColumns: 0,\r\n    applyColumnState: 0,\r\n    getColumnState: 0,\r\n    resetColumnState: 0,\r\n    isPinning: 0,\r\n    isPinningLeft: 0,\r\n    isPinningRight: 0,\r\n    getDisplayedColAfter: 0,\r\n    getDisplayedColBefore: 0,\r\n    setColumnsVisible: 0,\r\n    setColumnsPinned: 0,\r\n    getAllGridColumns: 0,\r\n    getDisplayedLeftColumns: 0,\r\n    getDisplayedCenterColumns: 0,\r\n    getDisplayedRightColumns: 0,\r\n    getAllDisplayedColumns: 0,\r\n    getAllDisplayedVirtualColumns: 0\r\n  }),\r\n  ...mod(\"ColumnAutoSize\", {\r\n    sizeColumnsToFit: 0,\r\n    autoSizeColumns: 0,\r\n    autoSizeAllColumns: 0\r\n  }),\r\n  ...mod(\"ColumnGroup\", {\r\n    setColumnGroupOpened: 0,\r\n    getColumnGroup: 0,\r\n    getProvidedColumnGroup: 0,\r\n    getDisplayNameForColumnGroup: 0,\r\n    getColumnGroupState: 0,\r\n    setColumnGroupState: 0,\r\n    resetColumnGroupState: 0,\r\n    getLeftDisplayedColumnGroups: 0,\r\n    getCenterDisplayedColumnGroups: 0,\r\n    getRightDisplayedColumnGroups: 0,\r\n    getAllDisplayedColumnGroups: 0\r\n  }),\r\n  ...mod(\"ColumnMove\", {\r\n    moveColumnByIndex: 0,\r\n    moveColumns: 0\r\n  }),\r\n  ...mod(\"ColumnResize\", {\r\n    setColumnWidths: 0\r\n  }),\r\n  ...mod(\"ColumnHover\", {\r\n    isColumnHovered: 0\r\n  }),\r\n  ...mod(\"EditCore\", {\r\n    getCellEditorInstances: 0,\r\n    getEditingCells: 0,\r\n    stopEditing: 0,\r\n    startEditingCell: 0,\r\n    isEditing: 0,\r\n    validateEdit: 0\r\n  }),\r\n  ...mod(\"BatchEdit\", {\r\n    startBatchEdit: 0,\r\n    cancelBatchEdit: 0,\r\n    commitBatchEdit: 0,\r\n    isBatchEditing: 0\r\n  }),\r\n  ...mod(\"UndoRedoEdit\", {\r\n    undoCellEditing: 0,\r\n    redoCellEditing: 0,\r\n    getCurrentUndoSize: 0,\r\n    getCurrentRedoSize: 0\r\n  }),\r\n  ...mod(\"FilterCore\", {\r\n    isAnyFilterPresent: 0,\r\n    onFilterChanged: 0\r\n  }),\r\n  ...mod(\"ColumnFilter\", {\r\n    isColumnFilterPresent: 0,\r\n    getColumnFilterInstance: 0,\r\n    destroyFilter: 0,\r\n    setFilterModel: 0,\r\n    getFilterModel: 0,\r\n    getColumnFilterModel: 0,\r\n    setColumnFilterModel: 0,\r\n    showColumnFilter: 0,\r\n    hideColumnFilter: 0,\r\n    getColumnFilterHandler: 0,\r\n    doFilterAction: 0\r\n  }),\r\n  ...mod(\"QuickFilter\", {\r\n    isQuickFilterPresent: 0,\r\n    getQuickFilter: 0,\r\n    resetQuickFilter: 0\r\n  }),\r\n  ...mod(\"Find\", {\r\n    findGetActiveMatch: 0,\r\n    findGetTotalMatches: 0,\r\n    findGoTo: 0,\r\n    findNext: 0,\r\n    findPrevious: 0,\r\n    findGetNumMatches: 0,\r\n    findGetParts: 0,\r\n    findClearActive: 0,\r\n    findRefresh: 0\r\n  }),\r\n  ...mod(\"Pagination\", {\r\n    paginationIsLastPageFound: 0,\r\n    paginationGetPageSize: 0,\r\n    paginationGetCurrentPage: 0,\r\n    paginationGetTotalPages: 0,\r\n    paginationGetRowCount: 0,\r\n    paginationGoToNextPage: 0,\r\n    paginationGoToPreviousPage: 0,\r\n    paginationGoToFirstPage: 0,\r\n    paginationGoToLastPage: 0,\r\n    paginationGoToPage: 0\r\n  }),\r\n  ...mod(\"CsrmSsrmSharedApi\", {\r\n    expandAll: 0,\r\n    collapseAll: 0,\r\n    onRowHeightChanged: 0\r\n  }),\r\n  ...mod(\"SsrmInfiniteSharedApi\", {\r\n    setRowCount: 0,\r\n    getCacheBlockState: 0,\r\n    isLastRowIndexKnown: 0\r\n  }),\r\n  ...mod(\"ClientSideRowModelApi\", {\r\n    onGroupExpandedOrCollapsed: 0,\r\n    refreshClientSideRowModel: 0,\r\n    isRowDataEmpty: 0,\r\n    forEachLeafNode: 0,\r\n    forEachNodeAfterFilter: 0,\r\n    forEachNodeAfterFilterAndSort: 0,\r\n    resetRowHeights: 0,\r\n    applyTransaction: 0,\r\n    applyTransactionAsync: 0,\r\n    flushAsyncTransactions: 0,\r\n    getBestCostNodeSelection: 0\r\n  }),\r\n  ...mod(\"CsvExport\", {\r\n    getDataAsCsv: 0,\r\n    exportDataAsCsv: 0\r\n  }),\r\n  ...mod(\"InfiniteRowModel\", {\r\n    refreshInfiniteCache: 0,\r\n    purgeInfiniteCache: 0,\r\n    getInfiniteRowCount: 0\r\n  }),\r\n  ...mod(\"AdvancedFilter\", {\r\n    getAdvancedFilterModel: 0,\r\n    setAdvancedFilterModel: 0,\r\n    showAdvancedFilterBuilder: 0,\r\n    hideAdvancedFilterBuilder: 0\r\n  }),\r\n  ...mod(\"IntegratedCharts\", {\r\n    getChartModels: 0,\r\n    getChartRef: 0,\r\n    getChartImageDataURL: 0,\r\n    downloadChart: 0,\r\n    openChartToolPanel: 0,\r\n    closeChartToolPanel: 0,\r\n    createRangeChart: 0,\r\n    createPivotChart: 0,\r\n    createCrossFilterChart: 0,\r\n    updateChart: 0,\r\n    restoreChart: 0\r\n  }),\r\n  ...mod(\"Clipboard\", {\r\n    copyToClipboard: 0,\r\n    cutToClipboard: 0,\r\n    copySelectedRowsToClipboard: 0,\r\n    copySelectedRangeToClipboard: 0,\r\n    copySelectedRangeDown: 0,\r\n    pasteFromClipboard: 0\r\n  }),\r\n  ...mod(\"ExcelExport\", {\r\n    getDataAsExcel: 0,\r\n    exportDataAsExcel: 0,\r\n    getSheetDataForExcel: 0,\r\n    getMultipleSheetsAsExcel: 0,\r\n    exportMultipleSheetsAsExcel: 0\r\n  }),\r\n  ...mod(\"SharedMasterDetail\", {\r\n    addDetailGridInfo: 0,\r\n    removeDetailGridInfo: 0,\r\n    getDetailGridInfo: 0,\r\n    forEachDetailGridInfo: 0\r\n  }),\r\n  ...mod(\"ContextMenu\", {\r\n    showContextMenu: 0\r\n  }),\r\n  ...mod(\"ColumnMenu\", {\r\n    showColumnChooser: 0,\r\n    hideColumnChooser: 0\r\n  }),\r\n  ...mod(\"CellSelection\", {\r\n    getCellRanges: 0,\r\n    addCellRange: 0,\r\n    clearRangeSelection: 0,\r\n    clearCellSelection: 0\r\n  }),\r\n  ...mod(\"SharedRowGrouping\", {\r\n    setRowGroupColumns: 0,\r\n    removeRowGroupColumns: 0,\r\n    addRowGroupColumns: 0,\r\n    getRowGroupColumns: 0,\r\n    moveRowGroupColumn: 0\r\n  }),\r\n  ...mod(\"SharedAggregation\", {\r\n    addAggFuncs: 0,\r\n    clearAggFuncs: 0,\r\n    setColumnAggFunc: 0\r\n  }),\r\n  ...mod(\"SharedPivot\", {\r\n    isPivotMode: 0,\r\n    getPivotResultColumn: 0,\r\n    setValueColumns: 0,\r\n    getValueColumns: 0,\r\n    removeValueColumns: 0,\r\n    addValueColumns: 0,\r\n    setPivotColumns: 0,\r\n    removePivotColumns: 0,\r\n    addPivotColumns: 0,\r\n    getPivotColumns: 0,\r\n    setPivotResultColumns: 0,\r\n    getPivotResultColumns: 0\r\n  }),\r\n  ...mod(\"ServerSideRowModelApi\", {\r\n    getServerSideSelectionState: 0,\r\n    setServerSideSelectionState: 0,\r\n    applyServerSideTransaction: 0,\r\n    applyServerSideTransactionAsync: 0,\r\n    applyServerSideRowData: 0,\r\n    retryServerSideLoads: 0,\r\n    flushServerSideAsyncTransactions: 0,\r\n    refreshServerSide: 0,\r\n    getServerSideGroupLevelState: 0\r\n  }),\r\n  ...mod(\"SideBar\", {\r\n    isSideBarVisible: 0,\r\n    setSideBarVisible: 0,\r\n    setSideBarPosition: 0,\r\n    openToolPanel: 0,\r\n    closeToolPanel: 0,\r\n    getOpenedToolPanel: 0,\r\n    refreshToolPanel: 0,\r\n    isToolPanelShowing: 0,\r\n    getToolPanelInstance: 0,\r\n    getSideBar: 0\r\n  }),\r\n  ...mod(\"StatusBar\", {\r\n    getStatusPanel: 0\r\n  })\r\n};\r\n\r\n// packages/ag-grid-community/src/api/apiFunctionService.ts\r\nvar defaultFns = {\r\n  isDestroyed: () => true,\r\n  destroy() {\r\n  },\r\n  preConstruct() {\r\n  },\r\n  postConstruct() {\r\n  },\r\n  preWireBeans() {\r\n  },\r\n  wireBeans() {\r\n  }\r\n};\r\nvar dispatchEvent = (beans, event) => beans.eventSvc.dispatchEvent(event);\r\nvar GridApiClass = class {\r\n};\r\nReflect.defineProperty(GridApiClass, \"name\", { value: \"GridApi\" });\r\nvar ApiFunctionService = class extends BeanStub {\r\n  constructor() {\r\n    super();\r\n    this.beanName = \"apiFunctionSvc\";\r\n    this.api = new GridApiClass();\r\n    this.fns = {\r\n      ...defaultFns,\r\n      // dispatchEvent is used by frameworks, also used by aligned grids to identify a grid api instance\r\n      dispatchEvent\r\n    };\r\n    this.preDestroyLink = \"\";\r\n    const { api } = this;\r\n    for (const key of Object.keys(gridApiFunctionsMap)) {\r\n      api[key] = this.makeApi(key)[key];\r\n    }\r\n  }\r\n  postConstruct() {\r\n    this.preDestroyLink = this.beans.frameworkOverrides.getDocLink(\"grid-lifecycle/#grid-pre-destroyed\");\r\n  }\r\n  addFunction(functionName, func) {\r\n    const { fns, beans } = this;\r\n    if (fns !== defaultFns) {\r\n      fns[functionName] = beans?.validation?.validateApiFunction(functionName, func) ?? func;\r\n    }\r\n  }\r\n  makeApi(apiName) {\r\n    return {\r\n      [apiName]: (...args) => {\r\n        const {\r\n          beans,\r\n          fns: { [apiName]: fn }\r\n        } = this;\r\n        return fn ? fn(beans, ...args) : this.apiNotFound(apiName);\r\n      }\r\n    };\r\n  }\r\n  apiNotFound(fnName) {\r\n    const { beans, gos, preDestroyLink } = this;\r\n    if (!beans) {\r\n      _warn(26, { fnName, preDestroyLink });\r\n    } else {\r\n      const module = gridApiFunctionsMap[fnName];\r\n      if (gos.assertModuleRegistered(module, `api.${fnName}`)) {\r\n        _warn(27, { fnName, module });\r\n      }\r\n    }\r\n  }\r\n  destroy() {\r\n    super.destroy();\r\n    this.fns = defaultFns;\r\n    this.beans = null;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/api/coreApi.ts\r\nfunction getGridId(beans) {\r\n  return beans.context.getGridId();\r\n}\r\nfunction destroy(beans) {\r\n  beans.gridDestroySvc.destroy();\r\n}\r\nfunction isDestroyed(beans) {\r\n  return beans.gridDestroySvc.destroyCalled;\r\n}\r\nfunction getGridOption(beans, key) {\r\n  return beans.gos.get(key);\r\n}\r\nfunction setGridOption(beans, key, value) {\r\n  updateGridOptions(beans, { [key]: value });\r\n}\r\nfunction updateGridOptions(beans, options) {\r\n  beans.gos.updateGridOptions({ options });\r\n}\r\nfunction isModuleRegistered(beans, moduleName) {\r\n  const withoutSuffix = moduleName.replace(/Module$/, \"\");\r\n  return beans.gos.isModuleRegistered(withoutSuffix);\r\n}\r\n\r\n// packages/ag-grid-community/src/rendering/dndSourceComp.ts\r\nvar DndSourceElement = { tag: \"div\", cls: \"ag-drag-handle ag-row-drag\", attrs: { draggable: \"true\" } };\r\nvar DndSourceComp = class extends Component {\r\n  constructor(rowNode, column, eCell) {\r\n    super(DndSourceElement);\r\n    this.rowNode = rowNode;\r\n    this.column = column;\r\n    this.eCell = eCell;\r\n  }\r\n  postConstruct() {\r\n    const eGui = this.getGui();\r\n    eGui.appendChild(_createIconNoSpan(\"rowDrag\", this.beans, null));\r\n    this.addGuiEventListener(\"mousedown\", (e) => {\r\n      e.stopPropagation();\r\n    });\r\n    this.addDragSource();\r\n    this.checkVisibility();\r\n  }\r\n  addDragSource() {\r\n    this.addGuiEventListener(\"dragstart\", this.onDragStart.bind(this));\r\n  }\r\n  onDragStart(dragEvent) {\r\n    const { rowNode, column, eCell, gos } = this;\r\n    const providedOnRowDrag = column.getColDef().dndSourceOnRowDrag;\r\n    const dataTransfer = dragEvent.dataTransfer;\r\n    dataTransfer.setDragImage(eCell, 0, 0);\r\n    if (providedOnRowDrag) {\r\n      const params = _addGridCommonParams(gos, {\r\n        rowNode,\r\n        dragEvent\r\n      });\r\n      providedOnRowDrag(params);\r\n    } else {\r\n      try {\r\n        const jsonData = JSON.stringify(rowNode.data);\r\n        dataTransfer.setData(\"application/json\", jsonData);\r\n        dataTransfer.setData(\"text/plain\", jsonData);\r\n      } catch (e) {\r\n      }\r\n    }\r\n  }\r\n  checkVisibility() {\r\n    const visible = this.column.isDndSource(this.rowNode);\r\n    this.setDisplayed(visible);\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/dragAndDrop/dragApi.ts\r\nfunction addRowDropZone(beans, params) {\r\n  beans.rowDragSvc?.rowDragFeature?.addRowDropZone(params);\r\n}\r\nfunction removeRowDropZone(beans, params) {\r\n  const activeDropTarget = beans.dragAndDrop?.findExternalZone(params);\r\n  if (activeDropTarget) {\r\n    beans.dragAndDrop?.removeDropTarget(activeDropTarget);\r\n  }\r\n}\r\nfunction getRowDropZoneParams(beans, events) {\r\n  return beans.rowDragSvc?.rowDragFeature?.getRowDropZone(events);\r\n}\r\nfunction getRowDropPositionIndicator(beans) {\r\n  const rowDropHighlightSvc = beans.rowDropHighlightSvc;\r\n  return rowDropHighlightSvc ? { row: rowDropHighlightSvc.row, dropIndicatorPosition: rowDropHighlightSvc.position } : { row: null, dropIndicatorPosition: \"none\" };\r\n}\r\nfunction setRowDropPositionIndicator(beans, params) {\r\n  const rowDropHighlightSvc = beans.rowDropHighlightSvc;\r\n  if (!rowDropHighlightSvc) {\r\n    return;\r\n  }\r\n  const rowNode = params?.row;\r\n  let position = params?.dropIndicatorPosition;\r\n  if (position !== \"above\" && position !== \"below\" && position !== \"inside\") {\r\n    position = \"none\";\r\n  }\r\n  const rowIndex = rowNode?.rowIndex;\r\n  if (rowIndex === null || rowIndex === void 0 || position === \"none\") {\r\n    rowDropHighlightSvc.clear();\r\n  } else {\r\n    rowDropHighlightSvc.set(rowNode, position);\r\n  }\r\n}\r\n\r\n// packages/ag-grid-community/src/dragAndDrop/horizontalResizeService.ts\r\nvar HorizontalResizeService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"horizontalResizeSvc\";\r\n  }\r\n  addResizeBar(params) {\r\n    const dragSource = {\r\n      dragStartPixels: params.dragStartPixels || 0,\r\n      eElement: params.eResizeBar,\r\n      onDragStart: this.onDragStart.bind(this, params),\r\n      onDragStop: this.onDragStop.bind(this, params),\r\n      onDragging: this.onDragging.bind(this, params),\r\n      onDragCancel: this.onDragStop.bind(this, params),\r\n      includeTouch: true,\r\n      stopPropagationForTouch: true\r\n    };\r\n    const { dragSvc } = this.beans;\r\n    dragSvc.addDragSource(dragSource);\r\n    const finishedWithResizeFunc = () => dragSvc.removeDragSource(dragSource);\r\n    return finishedWithResizeFunc;\r\n  }\r\n  onDragStart(params, mouseEvent) {\r\n    this.dragStartX = mouseEvent.clientX;\r\n    this.setResizeIcons();\r\n    const shiftKey = mouseEvent instanceof MouseEvent && mouseEvent.shiftKey === true;\r\n    params.onResizeStart(shiftKey);\r\n  }\r\n  setResizeIcons() {\r\n    const ctrl = this.beans.ctrlsSvc.get(\"gridCtrl\");\r\n    ctrl.setResizeCursor(1 /* Horizontal */);\r\n    ctrl.disableUserSelect(true);\r\n  }\r\n  onDragStop(params) {\r\n    params.onResizeEnd(this.resizeAmount);\r\n    this.resetIcons();\r\n  }\r\n  resetIcons() {\r\n    const ctrl = this.beans.ctrlsSvc.get(\"gridCtrl\");\r\n    ctrl.setResizeCursor(false);\r\n    ctrl.disableUserSelect(false);\r\n  }\r\n  onDragging(params, mouseEvent) {\r\n    this.resizeAmount = mouseEvent.clientX - this.dragStartX;\r\n    params.onResizing(this.resizeAmount);\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/dragAndDrop/rowDragComp.ts\r\nvar RowDragElement = {\r\n  tag: \"div\",\r\n  cls: \"ag-drag-handle ag-row-drag\",\r\n  attrs: { \"aria-hidden\": \"true\" }\r\n};\r\nvar RowDragComp = class extends Component {\r\n  constructor(cellValueFn, rowNode, column, customGui, dragStartPixels, suppressVisibilityChange) {\r\n    super();\r\n    this.cellValueFn = cellValueFn;\r\n    this.rowNode = rowNode;\r\n    this.column = column;\r\n    this.customGui = customGui;\r\n    this.dragStartPixels = dragStartPixels;\r\n    this.suppressVisibilityChange = suppressVisibilityChange;\r\n    this.dragSource = null;\r\n  }\r\n  isCustomGui() {\r\n    return this.customGui != null;\r\n  }\r\n  postConstruct() {\r\n    const { beans, rowNode, column, gos } = this;\r\n    if (!this.customGui) {\r\n      this.setTemplate(RowDragElement);\r\n      this.getGui().appendChild(_createIconNoSpan(\"rowDrag\", beans, null));\r\n      this.addDragSource();\r\n    } else {\r\n      this.setDragElement(this.customGui, this.dragStartPixels);\r\n    }\r\n    if (!this.suppressVisibilityChange) {\r\n      const strategy = gos.get(\"rowDragManaged\") ? new ManagedVisibilityStrategy(this, rowNode, column) : new NonManagedVisibilityStrategy(this, rowNode, column);\r\n      this.createManagedBean(strategy, this.beans.context);\r\n    }\r\n  }\r\n  setDragElement(dragElement, dragStartPixels) {\r\n    this.setTemplateFromElement(dragElement, void 0, void 0, true);\r\n    this.addDragSource(dragStartPixels);\r\n  }\r\n  getSelectedNodes() {\r\n    const rowNode = this.rowNode;\r\n    const isRowDragMultiRow = this.gos.get(\"rowDragMultiRow\");\r\n    if (!isRowDragMultiRow) {\r\n      return [rowNode];\r\n    }\r\n    const selection = this.beans.selectionSvc?.getSelectedNodes() ?? [];\r\n    return selection.indexOf(rowNode) !== -1 ? selection : [rowNode];\r\n  }\r\n  getDragItem() {\r\n    const { column, rowNode } = this;\r\n    return {\r\n      rowNode,\r\n      rowNodes: this.getSelectedNodes(),\r\n      columns: column ? [column] : void 0,\r\n      defaultTextValue: this.cellValueFn()\r\n    };\r\n  }\r\n  getRowDragText(column) {\r\n    if (column) {\r\n      const colDef = column.getColDef();\r\n      if (colDef.rowDragText) {\r\n        return colDef.rowDragText;\r\n      }\r\n    }\r\n    return this.gos.get(\"rowDragText\");\r\n  }\r\n  addDragSource(dragStartPixels = 4) {\r\n    if (this.dragSource) {\r\n      this.removeDragSource();\r\n    }\r\n    if (this.gos.get(\"rowDragManaged\") && this.rowNode.footer) {\r\n      return;\r\n    }\r\n    const eGui = this.getGui();\r\n    if (this.gos.get(\"enableCellTextSelection\")) {\r\n      this.removeMouseDownListener();\r\n      this.mouseDownListener = this.addManagedElementListeners(eGui, {\r\n        mousedown: (e) => {\r\n          e?.preventDefault();\r\n        }\r\n      })[0];\r\n    }\r\n    const translate = this.getLocaleTextFunc();\r\n    this.dragSource = {\r\n      type: 2 /* RowDrag */,\r\n      eElement: eGui,\r\n      dragItemName: () => {\r\n        const dragItem = this.getDragItem();\r\n        const dragItemCount = dragItem.rowNodes?.length || 1;\r\n        const rowDragText = this.getRowDragText(this.column);\r\n        if (rowDragText) {\r\n          return rowDragText(dragItem, dragItemCount);\r\n        }\r\n        return dragItemCount === 1 ? this.cellValueFn() : `${dragItemCount} ${translate(\"rowDragRows\", \"rows\")}`;\r\n      },\r\n      getDragItem: () => this.getDragItem(),\r\n      dragStartPixels,\r\n      dragSourceDomDataKey: this.gos.getDomDataKey()\r\n    };\r\n    this.beans.dragAndDrop.addDragSource(this.dragSource, true);\r\n  }\r\n  destroy() {\r\n    this.removeDragSource();\r\n    this.removeMouseDownListener();\r\n    super.destroy();\r\n  }\r\n  removeDragSource() {\r\n    if (!this.dragSource) {\r\n      return;\r\n    }\r\n    this.beans.dragAndDrop.removeDragSource(this.dragSource);\r\n    this.dragSource = null;\r\n  }\r\n  removeMouseDownListener() {\r\n    if (!this.mouseDownListener) {\r\n      return;\r\n    }\r\n    this.mouseDownListener();\r\n    this.mouseDownListener = void 0;\r\n  }\r\n};\r\nvar VisibilityStrategy = class extends BeanStub {\r\n  constructor(parent, rowNode, column) {\r\n    super();\r\n    this.parent = parent;\r\n    this.rowNode = rowNode;\r\n    this.column = column;\r\n  }\r\n  setDisplayedOrVisible(neverDisplayed, alwaysHidden = false) {\r\n    const displayedOptions = { skipAriaHidden: true };\r\n    if (neverDisplayed) {\r\n      this.parent.setDisplayed(false, displayedOptions);\r\n    } else {\r\n      let shown = !alwaysHidden;\r\n      let isShownSometimes = false;\r\n      const { column, rowNode, parent } = this;\r\n      if (column) {\r\n        const rowDrag = column.getColDef().rowDrag;\r\n        isShownSometimes = typeof rowDrag === \"function\";\r\n        shown = (alwaysHidden ? !!rowDrag : column.isRowDrag(rowNode)) || parent.isCustomGui();\r\n      }\r\n      if (isShownSometimes) {\r\n        parent.setDisplayed(true, displayedOptions);\r\n        parent.setVisible(shown && !alwaysHidden, displayedOptions);\r\n      } else {\r\n        parent.setDisplayed(shown, displayedOptions);\r\n        parent.setVisible(!alwaysHidden, displayedOptions);\r\n      }\r\n    }\r\n  }\r\n};\r\nvar NonManagedVisibilityStrategy = class extends VisibilityStrategy {\r\n  postConstruct() {\r\n    this.addManagedPropertyListener(\"suppressRowDrag\", this.onSuppressRowDrag.bind(this));\r\n    const listener = this.workOutVisibility.bind(this);\r\n    this.addManagedListeners(this.rowNode, {\r\n      dataChanged: listener,\r\n      cellChanged: listener\r\n    });\r\n    this.addManagedListeners(this.beans.eventSvc, { newColumnsLoaded: listener });\r\n    this.workOutVisibility();\r\n  }\r\n  onSuppressRowDrag() {\r\n    this.workOutVisibility();\r\n  }\r\n  workOutVisibility() {\r\n    const neverDisplayed = this.gos.get(\"suppressRowDrag\");\r\n    this.setDisplayedOrVisible(neverDisplayed);\r\n  }\r\n};\r\nvar ManagedVisibilityStrategy = class extends VisibilityStrategy {\r\n  postConstruct() {\r\n    const listener = this.workOutVisibility.bind(this);\r\n    this.addManagedListeners(this.beans.eventSvc, {\r\n      sortChanged: listener,\r\n      filterChanged: listener,\r\n      columnRowGroupChanged: listener,\r\n      newColumnsLoaded: listener\r\n    });\r\n    this.addManagedListeners(this.rowNode, {\r\n      dataChanged: listener,\r\n      cellChanged: listener\r\n    });\r\n    this.addManagedPropertyListener(\"suppressRowDrag\", this.onSuppressRowDrag.bind(this));\r\n    this.workOutVisibility();\r\n  }\r\n  onSuppressRowDrag() {\r\n    this.workOutVisibility();\r\n  }\r\n  workOutVisibility() {\r\n    const { rowDragSvc, dragAndDrop, gos } = this.beans;\r\n    const rowDragFeature = rowDragSvc.rowDragFeature;\r\n    const shouldPreventRowMove = rowDragFeature && rowDragFeature.shouldPreventRowMove();\r\n    const suppressRowDrag = gos.get(\"suppressRowDrag\");\r\n    const hasExternalDropZones = dragAndDrop.hasExternalDropZones();\r\n    const neverDisplayed = shouldPreventRowMove && !hasExternalDropZones || suppressRowDrag;\r\n    this.setDisplayedOrVisible(neverDisplayed, this.rowNode.footer);\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/utils/changedPath.ts\r\nvar ChangedPath = class {\r\n  constructor(keepingColumns, rootNode) {\r\n    // whether changed path is active of not. it is active when a) doing\r\n    // a transaction update or b) doing change detection. if we are doing\r\n    // a CSRM refresh for other reasons (after sort or filter, or user calling\r\n    // setRowData() without delta mode) then we are not active. we are also\r\n    // marked as not active if secondary columns change in pivot (as this impacts\r\n    // aggregations).\r\n    // can be set inactive by:\r\n    // a) ClientSideRowModel, if no transactions or\r\n    // b) PivotService, if secondary columns changed\r\n    this.active = true;\r\n    // for each node in the change path, we also store which columns need\r\n    // to be re-aggregated.\r\n    this.nodeIdsToColumns = {};\r\n    // for quick lookup, all items in the change path are mapped by nodeId\r\n    this.mapToItems = {};\r\n    this.keepingColumns = keepingColumns;\r\n    this.pathRoot = {\r\n      rowNode: rootNode,\r\n      children: null\r\n    };\r\n    this.mapToItems[rootNode.id] = this.pathRoot;\r\n  }\r\n  depthFirstSearchChangedPath(pathItem, callback) {\r\n    const { rowNode, children } = pathItem;\r\n    if (children) {\r\n      for (let i = 0; i < children.length; ++i) {\r\n        this.depthFirstSearchChangedPath(children[i], callback);\r\n      }\r\n    }\r\n    callback(rowNode);\r\n  }\r\n  depthFirstSearchEverything(rowNode, callback, traverseEverything) {\r\n    const childrenAfterGroup = rowNode.childrenAfterGroup;\r\n    if (childrenAfterGroup) {\r\n      for (let i = 0, len = childrenAfterGroup.length; i < len; ++i) {\r\n        const childNode = childrenAfterGroup[i];\r\n        if (childNode.childrenAfterGroup) {\r\n          this.depthFirstSearchEverything(childNode, callback, traverseEverything);\r\n        } else if (traverseEverything) {\r\n          callback(childNode);\r\n        }\r\n      }\r\n    }\r\n    callback(rowNode);\r\n  }\r\n  // traverseLeafNodes -> used when NOT doing changed path, ie traversing everything. the callback\r\n  // will be called for child nodes in addition to parent nodes.\r\n  forEachChangedNodeDepthFirst(callback, traverseLeafNodes = false, includeUnchangedNodes = false) {\r\n    if (this.active && !includeUnchangedNodes) {\r\n      this.depthFirstSearchChangedPath(this.pathRoot, callback);\r\n    } else {\r\n      this.depthFirstSearchEverything(this.pathRoot.rowNode, callback, traverseLeafNodes);\r\n    }\r\n  }\r\n  executeFromRootNode(callback) {\r\n    callback(this.pathRoot.rowNode);\r\n  }\r\n  createPathItems(rowNode) {\r\n    let pointer = rowNode;\r\n    let newEntryCount = 0;\r\n    while (!this.mapToItems[pointer.id]) {\r\n      const newEntry = {\r\n        rowNode: pointer,\r\n        children: null\r\n      };\r\n      this.mapToItems[pointer.id] = newEntry;\r\n      newEntryCount++;\r\n      pointer = pointer.parent;\r\n    }\r\n    return newEntryCount;\r\n  }\r\n  populateColumnsMap(rowNode, columns) {\r\n    if (!this.keepingColumns || !columns) {\r\n      return;\r\n    }\r\n    let pointer = rowNode;\r\n    while (pointer) {\r\n      if (!this.nodeIdsToColumns[pointer.id]) {\r\n        this.nodeIdsToColumns[pointer.id] = {};\r\n      }\r\n      columns.forEach((col) => this.nodeIdsToColumns[pointer.id][col.getId()] = true);\r\n      pointer = pointer.parent;\r\n    }\r\n  }\r\n  linkPathItems(rowNode, newEntryCount) {\r\n    let pointer = rowNode;\r\n    for (let i = 0; i < newEntryCount; i++) {\r\n      const thisItem = this.mapToItems[pointer.id];\r\n      const parentItem = this.mapToItems[pointer.parent.id];\r\n      if (!parentItem.children) {\r\n        parentItem.children = [];\r\n      }\r\n      parentItem.children.push(thisItem);\r\n      pointer = pointer.parent;\r\n    }\r\n  }\r\n  // called by\r\n  // 1) change detection (provides cols) and\r\n  // 2) groupStage if doing transaction update (doesn't provide cols)\r\n  addParentNode(rowNode, columns) {\r\n    if (!rowNode || rowNode.isRowPinned()) {\r\n      return;\r\n    }\r\n    const newEntryCount = this.createPathItems(rowNode);\r\n    this.linkPathItems(rowNode, newEntryCount);\r\n    this.populateColumnsMap(rowNode, columns);\r\n  }\r\n  canSkip(rowNode) {\r\n    return this.active && !this.mapToItems[rowNode.id];\r\n  }\r\n  getValueColumnsForNode(rowNode, valueColumns) {\r\n    if (!this.keepingColumns) {\r\n      return valueColumns;\r\n    }\r\n    const colsForThisNode = this.nodeIdsToColumns[rowNode.id];\r\n    const result = valueColumns.filter((col) => colsForThisNode[col.getId()]);\r\n    return result;\r\n  }\r\n  getNotValueColumnsForNode(rowNode, valueColumns) {\r\n    if (!this.keepingColumns) {\r\n      return null;\r\n    }\r\n    const colsForThisNode = this.nodeIdsToColumns[rowNode.id];\r\n    const result = valueColumns.filter((col) => !colsForThisNode[col.getId()]);\r\n    return result;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/dragAndDrop/rowDragFeature.ts\r\nvar RowDragFeature = class extends BeanStub {\r\n  constructor(eContainer) {\r\n    super();\r\n    this.eContainer = null;\r\n    this.lastDraggingEvent = null;\r\n    this.autoScrollService = null;\r\n    this.makeGroupThrottleTimer = null;\r\n    this.makeGroupThrottleTarget = null;\r\n    this.makeGroupThrottled = false;\r\n    this.makeGroupThrottleCallback = () => {\r\n      this.makeGroupThrottleTimer = null;\r\n      const event = this.lastDraggingEvent;\r\n      if (event) {\r\n        this.makeGroupThrottled = true;\r\n        this.doManagedDrag(event, false);\r\n        this.makeGroupExpanded(this.makeGroupThrottleTarget);\r\n      }\r\n    };\r\n    this.eContainer = eContainer;\r\n  }\r\n  postConstruct() {\r\n    const { rowModel, gos, ctrlsSvc } = this.beans;\r\n    if (_isClientSideRowModel(gos, rowModel)) {\r\n      this.clientSideRowModel = rowModel;\r\n    }\r\n    ctrlsSvc.whenReady(this, (p) => {\r\n      const gridBodyCon = p.gridBodyCtrl;\r\n      let oldVScroll = 0;\r\n      const getVScroll2 = () => gridBodyCon.scrollFeature.getVScrollPosition().top;\r\n      this.autoScrollService = new AutoScrollService({\r\n        scrollContainer: gridBodyCon.eBodyViewport,\r\n        scrollAxis: \"y\",\r\n        getVerticalPosition: getVScroll2,\r\n        setVerticalPosition: (position) => gridBodyCon.scrollFeature.setVerticalScrollPosition(position),\r\n        onScrollCallback: () => {\r\n          const newVScroll = getVScroll2();\r\n          if (oldVScroll !== newVScroll) {\r\n            oldVScroll = newVScroll;\r\n            const lastDraggingEvent = this.lastDraggingEvent;\r\n            if (lastDraggingEvent) {\r\n              this.onDragging(lastDraggingEvent);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n  destroy() {\r\n    super.destroy();\r\n    this.eContainer = null;\r\n    this.lastDraggingEvent = null;\r\n    this.makeGroupThrottleClear();\r\n    const autoScrollService = this.autoScrollService;\r\n    if (autoScrollService) {\r\n      this.autoScrollService = null;\r\n      autoScrollService?.ensureCleared();\r\n    }\r\n  }\r\n  getContainer() {\r\n    return this.eContainer;\r\n  }\r\n  isInterestedIn(type) {\r\n    return type === 2 /* RowDrag */;\r\n  }\r\n  getIconName() {\r\n    const managedDrag = this.gos.get(\"rowDragManaged\");\r\n    if (managedDrag && this.shouldPreventRowMove()) {\r\n      return \"notAllowed\";\r\n    }\r\n    return \"move\";\r\n  }\r\n  shouldPreventRowMove() {\r\n    const { rowGroupColsSvc, filterManager, sortSvc } = this.beans;\r\n    const rowGroupCols = rowGroupColsSvc?.columns ?? [];\r\n    if (rowGroupCols.length) {\r\n      return true;\r\n    }\r\n    const isFilterPresent = filterManager?.isAnyFilterPresent();\r\n    if (isFilterPresent) {\r\n      return true;\r\n    }\r\n    const isSortActive = sortSvc?.isSortActive();\r\n    if (isSortActive) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  getRowNodes(draggingEvent) {\r\n    if (!this.isFromThisGrid(draggingEvent)) {\r\n      return draggingEvent.dragItem.rowNodes || [];\r\n    }\r\n    const currentNode = draggingEvent.dragItem.rowNode;\r\n    const isRowDragMultiRow = this.gos.get(\"rowDragMultiRow\");\r\n    if (isRowDragMultiRow) {\r\n      const selectedNodes = [...this.beans.selectionSvc?.getSelectedNodes() ?? []].sort((a, b) => {\r\n        if (a.rowIndex == null || b.rowIndex == null) {\r\n          return 0;\r\n        }\r\n        return this.getRowIndexNumber(a) - this.getRowIndexNumber(b);\r\n      });\r\n      if (selectedNodes.indexOf(currentNode) !== -1) {\r\n        return selectedNodes;\r\n      }\r\n    }\r\n    return [currentNode];\r\n  }\r\n  onDragEnter(draggingEvent) {\r\n    draggingEvent.dragItem.rowNodes = this.getRowNodes(draggingEvent);\r\n    this.dispatchGridEvent(\"rowDragEnter\", draggingEvent);\r\n    this.getRowNodes(draggingEvent).forEach((rowNode) => {\r\n      this.setRowNodeDragging(rowNode, true);\r\n    });\r\n    this.onEnterOrDragging(draggingEvent);\r\n  }\r\n  onDragging(draggingEvent) {\r\n    this.onEnterOrDragging(draggingEvent);\r\n  }\r\n  isFromThisGrid(draggingEvent) {\r\n    const { dragSourceDomDataKey } = draggingEvent.dragSource;\r\n    return dragSourceDomDataKey === this.gos.getDomDataKey();\r\n  }\r\n  onEnterOrDragging(draggingEvent) {\r\n    if (!this.autoScrollService) {\r\n      return;\r\n    }\r\n    this.dispatchGridEvent(\"rowDragMove\", draggingEvent);\r\n    this.lastDraggingEvent = draggingEvent;\r\n    if (this.gos.get(\"rowDragManaged\")) {\r\n      this.doManagedDrag(draggingEvent, true);\r\n    }\r\n    this.autoScrollService.check(draggingEvent.event);\r\n  }\r\n  doManagedDrag(draggingEvent, throttleMakeGroup) {\r\n    const { dragAndDrop, gos } = this.beans;\r\n    const isFromThisGrid = this.isFromThisGrid(draggingEvent);\r\n    const managedDrag = gos.get(\"rowDragManaged\");\r\n    if (managedDrag && this.shouldPreventRowMove()) {\r\n      return;\r\n    }\r\n    if (gos.get(\"suppressMoveWhenRowDragging\") || !isFromThisGrid) {\r\n      if (dragAndDrop.isDropZoneWithinThisGrid(draggingEvent)) {\r\n        const rowsDrop = this.managedRowsDrop(draggingEvent, throttleMakeGroup);\r\n        const target = rowsDrop?.target;\r\n        const rowDropHighlightSvc = this.beans.rowDropHighlightSvc;\r\n        if (target && rowsDrop.rows.length) {\r\n          rowDropHighlightSvc.set(target, rowsDrop.position);\r\n        } else {\r\n          rowDropHighlightSvc.clear();\r\n        }\r\n      }\r\n    } else {\r\n      const rowsDrop = this.managedRowsDrop(draggingEvent, throttleMakeGroup);\r\n      if (rowsDrop) {\r\n        this.dropRows(rowsDrop);\r\n      }\r\n    }\r\n  }\r\n  getRowIndexNumber(rowNode) {\r\n    const rowIndexStr = rowNode.getRowIndexString();\r\n    return parseInt(_last(rowIndexStr.split(\"-\")), 10);\r\n  }\r\n  managedRowsDrop(draggingEvent, throttleMakeGroup) {\r\n    const { rowNode, rowNodes: rows } = draggingEvent.dragItem;\r\n    const rowsLen = rows?.length;\r\n    const source = rowsLen && (rowNode ?? rows[0]);\r\n    if (!source) {\r\n      this.makeGroupThrottleClear();\r\n      return null;\r\n    }\r\n    const { beans, gos, clientSideRowModel } = this;\r\n    const rootNode = clientSideRowModel.rootNode;\r\n    const y = _getNormalisedMousePosition(beans, draggingEvent).y;\r\n    let targetRowIndex = clientSideRowModel.getRowIndexAtPixel(y);\r\n    let target = clientSideRowModel.getRow(targetRowIndex) ?? null;\r\n    const moved = source !== target;\r\n    let yDelta = target ? (y - target.rowTop - target.rowHeight / 2) / target.rowHeight || 0 : 1;\r\n    const sameGrid = this.isFromThisGrid(draggingEvent);\r\n    const groupingApproach = _getGroupingApproach(gos);\r\n    const canSetParent = (\r\n      // We don't yet support drag and drop with grouping\r\n      groupingApproach !== \"group\" && // We don't yet support moving tree rows from a different grid in a structured way\r\n      sameGrid\r\n    );\r\n    let newParent = null;\r\n    if (canSetParent && target?.footer) {\r\n      newParent = target.sibling ?? rootNode;\r\n      const found = getPrevOrNext(clientSideRowModel, -1, target) ?? getPrevOrNext(clientSideRowModel, 1, target);\r\n      yDelta = found && found.rowIndex > target.rowIndex ? -0.5 : 0.5;\r\n      target = found ?? null;\r\n    }\r\n    let above = yDelta < 0;\r\n    let targetInRows = false;\r\n    if (sameGrid && target) {\r\n      if (!moved) {\r\n        if (Math.abs(yDelta) <= 0.5) {\r\n          this.makeGroupThrottleClear();\r\n          return null;\r\n        }\r\n        targetInRows = true;\r\n      } else {\r\n        targetInRows = rows.indexOf(target) >= 0;\r\n        if (targetInRows) {\r\n          const newTarget = getRowsPrevOrNext(clientSideRowModel, targetRowIndex < source.rowIndex, rows);\r\n          if (newTarget?.parent === target.parent) {\r\n            target = newTarget;\r\n            targetRowIndex = target.rowIndex;\r\n          }\r\n        }\r\n      }\r\n      if (targetInRows || !canSetParent && Math.abs(targetRowIndex - source.rowIndex) === 1) {\r\n        above = targetRowIndex < source.rowIndex;\r\n      }\r\n    }\r\n    const makeGroupThrottleTarget = this.makeGroupThrottleTarget;\r\n    if (makeGroupThrottleTarget !== null && makeGroupThrottleTarget !== target) {\r\n      this.makeGroupThrottleClear();\r\n    }\r\n    if (target?.expanded && target.childrenAfterSort?.length) {\r\n      this.makeGroupThrottled = true;\r\n      this.makeGroupThrottleTarget = target;\r\n    }\r\n    if (newParent === null && canSetParent) {\r\n      if (!target || yDelta >= 0.5 && target.rowIndex === beans.pageBounds.getLastRow()) {\r\n        newParent = rootNode;\r\n      } else if (this.targetShouldBeParent(target, yDelta, targetInRows, rows)) {\r\n        if (this.makeGroupThrottled) {\r\n          newParent = target;\r\n        }\r\n        if (throttleMakeGroup && (newParent === null || !target.expanded)) {\r\n          this.makeGroupThrottleTarget = target;\r\n          this.makeGroupThrottleStart();\r\n        }\r\n      }\r\n      newParent ?? (newParent = target?.parent ?? rootNode);\r\n    }\r\n    let inside = false;\r\n    if (newParent !== null) {\r\n      if (newParent === target && newParent !== rootNode) {\r\n        inside = true;\r\n        const firstRow = newParent.expanded ? getPrevOrNext(clientSideRowModel, 1, target) : null;\r\n        if (firstRow?.parent === newParent) {\r\n          target = firstRow;\r\n          inside = false;\r\n          above = true;\r\n        }\r\n      }\r\n      if (target && !inside) {\r\n        let current = target;\r\n        while (current && current !== rootNode && current !== newParent) {\r\n          target = current;\r\n          current = current.parent;\r\n        }\r\n      }\r\n      if (rowsHaveSameParent(rows, newParent)) {\r\n        newParent = null;\r\n      }\r\n    }\r\n    if (!newParent && targetInRows && (canSetParent || source === target)) {\r\n      return null;\r\n    }\r\n    const position = inside ? \"inside\" : above ? \"above\" : \"below\";\r\n    const result = {\r\n      api: this.beans.gridApi,\r\n      context: this.beans.gridOptions.context,\r\n      draggingEvent,\r\n      sameGrid,\r\n      position,\r\n      source,\r\n      target,\r\n      newParent,\r\n      rows\r\n    };\r\n    let customPosition = false;\r\n    const isRowValidDropPosition = gos.get(\"isRowValidDropPosition\");\r\n    if (isRowValidDropPosition) {\r\n      const canDropResult = isRowValidDropPosition(result);\r\n      if (!canDropResult) {\r\n        result.rows = _EmptyArray;\r\n      } else if (typeof canDropResult === \"object\") {\r\n        if (canDropResult.rows !== void 0) {\r\n          result.rows = canDropResult.rows ?? _EmptyArray;\r\n        }\r\n        if (canDropResult.newParent !== void 0) {\r\n          result.newParent = canDropResult.newParent;\r\n        }\r\n        if (canDropResult.target !== void 0) {\r\n          result.target = canDropResult.target;\r\n        }\r\n        if (canDropResult.position) {\r\n          customPosition = true;\r\n          result.position = canDropResult.position;\r\n        }\r\n      }\r\n    }\r\n    if ((!result.newParent || !result.rows.length) && !customPosition) {\r\n      result.position = above ? \"above\" : \"below\";\r\n    }\r\n    return result;\r\n  }\r\n  makeGroupThrottleStart() {\r\n    if (this.makeGroupThrottleTimer === null) {\r\n      this.makeGroupThrottleTimer = window.setTimeout(\r\n        this.makeGroupThrottleCallback,\r\n        this.gos.get(\"rowDragInsertDelay\")\r\n      );\r\n    }\r\n  }\r\n  makeGroupExpanded(target) {\r\n    if (target && !target.expanded && target.childrenAfterSort?.length && target.isExpandable()) {\r\n      target.setExpanded(true, this.lastDraggingEvent?.event, true);\r\n    }\r\n  }\r\n  makeGroupThrottleClear() {\r\n    this.makeGroupThrottled = false;\r\n    this.makeGroupThrottleTarget = null;\r\n    const timer = this.makeGroupThrottleTimer;\r\n    if (timer !== null) {\r\n      this.makeGroupThrottleTimer = null;\r\n      clearTimeout(timer);\r\n    }\r\n  }\r\n  targetShouldBeParent(target, yDelta, targetInRows, rows) {\r\n    const targetRowIndex = target?.rowIndex;\r\n    if (targetInRows || targetRowIndex === null) {\r\n      return false;\r\n    }\r\n    const INSIDE_THRESHOLD = 0.25;\r\n    if (yDelta < -0.5 + INSIDE_THRESHOLD) {\r\n      return false;\r\n    }\r\n    if (yDelta < 0.5 - INSIDE_THRESHOLD) {\r\n      return true;\r\n    }\r\n    let nextRow;\r\n    let nextRowIndex = targetRowIndex + 1;\r\n    const clientSideRowModel = this.clientSideRowModel;\r\n    do {\r\n      nextRow = clientSideRowModel.getRow(nextRowIndex++);\r\n    } while (nextRow && nextRow.footer);\r\n    const childrenAfterGroup = target.childrenAfterGroup;\r\n    if (nextRow && nextRow.parent === target && childrenAfterGroup?.length) {\r\n      const rowsSet = new Set(rows);\r\n      for (const child of childrenAfterGroup) {\r\n        if (child.rowIndex !== null && !rowsSet.has(child)) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  addRowDropZone(params) {\r\n    if (!params.getContainer()) {\r\n      _warn(55);\r\n      return;\r\n    }\r\n    const dragAndDrop = this.beans.dragAndDrop;\r\n    if (dragAndDrop.findExternalZone(params)) {\r\n      _warn(56);\r\n      return;\r\n    }\r\n    let processedParams = {\r\n      getContainer: params.getContainer\r\n    };\r\n    if (params.fromGrid) {\r\n      processedParams = params;\r\n    } else {\r\n      if (params.onDragEnter) {\r\n        processedParams.onDragEnter = (e) => {\r\n          params.onDragEnter(this.draggingToRowDragEvent(\"rowDragEnter\", e));\r\n        };\r\n      }\r\n      if (params.onDragLeave) {\r\n        processedParams.onDragLeave = (e) => {\r\n          params.onDragLeave(this.draggingToRowDragEvent(\"rowDragLeave\", e));\r\n        };\r\n      }\r\n      if (params.onDragging) {\r\n        processedParams.onDragging = (e) => {\r\n          params.onDragging(this.draggingToRowDragEvent(\"rowDragMove\", e));\r\n        };\r\n      }\r\n      if (params.onDragStop) {\r\n        processedParams.onDragStop = (e) => {\r\n          params.onDragStop(this.draggingToRowDragEvent(\"rowDragEnd\", e));\r\n        };\r\n      }\r\n      if (params.onDragCancel) {\r\n        processedParams.onDragCancel = (e) => {\r\n          params.onDragCancel(this.draggingToRowDragEvent(\"rowDragCancel\", e));\r\n        };\r\n      }\r\n    }\r\n    const dropTarget = {\r\n      isInterestedIn: (type) => type === 2 /* RowDrag */,\r\n      getIconName: () => \"move\",\r\n      external: true,\r\n      ...processedParams\r\n    };\r\n    dragAndDrop.addDropTarget(dropTarget);\r\n    this.addDestroyFunc(() => dragAndDrop.removeDropTarget(dropTarget));\r\n  }\r\n  getRowDropZone(events) {\r\n    const getContainer = this.getContainer.bind(this);\r\n    const onDragEnter = this.onDragEnter.bind(this);\r\n    const onDragLeave = this.onDragLeave.bind(this);\r\n    const onDragging = this.onDragging.bind(this);\r\n    const onDragStop = this.onDragStop.bind(this);\r\n    const onDragCancel = this.onDragCancel.bind(this);\r\n    let params;\r\n    if (!events) {\r\n      params = {\r\n        getContainer,\r\n        onDragEnter,\r\n        onDragLeave,\r\n        onDragging,\r\n        onDragStop,\r\n        onDragCancel,\r\n        /* @private */\r\n        fromGrid: true\r\n      };\r\n    } else {\r\n      params = {\r\n        getContainer,\r\n        onDragEnter: events.onDragEnter ? (e) => {\r\n          onDragEnter(e);\r\n          events.onDragEnter(this.draggingToRowDragEvent(\"rowDragEnter\", e));\r\n        } : onDragEnter,\r\n        onDragLeave: events.onDragLeave ? (e) => {\r\n          onDragLeave(e);\r\n          events.onDragLeave(this.draggingToRowDragEvent(\"rowDragLeave\", e));\r\n        } : onDragLeave,\r\n        onDragging: events.onDragging ? (e) => {\r\n          onDragging(e);\r\n          events.onDragging(this.draggingToRowDragEvent(\"rowDragMove\", e));\r\n        } : onDragging,\r\n        onDragStop: events.onDragStop ? (e) => {\r\n          onDragStop(e);\r\n          events.onDragStop(this.draggingToRowDragEvent(\"rowDragEnd\", e));\r\n        } : onDragStop,\r\n        onDragCancel: events.onDragCancel ? (e) => {\r\n          onDragCancel(e);\r\n          events.onDragCancel(this.draggingToRowDragEvent(\"rowDragCancel\", e));\r\n        } : onDragCancel,\r\n        fromGrid: true\r\n      };\r\n    }\r\n    return params;\r\n  }\r\n  draggingToRowDragEvent(type, draggingEvent) {\r\n    const beans = this.beans;\r\n    const { pageBounds, rowModel, gos } = beans;\r\n    const y = _getNormalisedMousePosition(this.beans, draggingEvent).y;\r\n    const mouseIsPastLastRow = y > pageBounds.getCurrentPagePixelRange().pageLastPixel;\r\n    let overIndex = -1;\r\n    let overNode;\r\n    if (!mouseIsPastLastRow) {\r\n      overIndex = rowModel.getRowIndexAtPixel(y);\r\n      overNode = rowModel.getRow(overIndex);\r\n    }\r\n    const event = _addGridCommonParams(gos, {\r\n      type,\r\n      event: draggingEvent.event,\r\n      node: draggingEvent.dragItem.rowNode,\r\n      nodes: draggingEvent.dragItem.rowNodes,\r\n      overIndex,\r\n      overNode,\r\n      y,\r\n      vDirection: draggingEvent.vDirection\r\n    });\r\n    return event;\r\n  }\r\n  dispatchGridEvent(type, draggingEvent) {\r\n    const event = this.draggingToRowDragEvent(type, draggingEvent);\r\n    this.eventSvc.dispatchEvent(event);\r\n  }\r\n  onDragLeave(draggingEvent) {\r\n    this.dispatchGridEvent(\"rowDragLeave\", draggingEvent);\r\n    this.stopDragging(draggingEvent);\r\n    if (this.gos.get(\"rowDragManaged\")) {\r\n      this.beans.rowDropHighlightSvc.clear();\r\n    }\r\n    this.makeGroupThrottleClear();\r\n  }\r\n  onDragStop(draggingEvent) {\r\n    this.dispatchGridEvent(\"rowDragEnd\", draggingEvent);\r\n    this.stopDragging(draggingEvent);\r\n    const { dragAndDrop, gos } = this.beans;\r\n    if (gos.get(\"rowDragManaged\") && (gos.get(\"suppressMoveWhenRowDragging\") || !this.isFromThisGrid(draggingEvent)) && dragAndDrop.isDropZoneWithinThisGrid(draggingEvent)) {\r\n      const rowsDrop = this.managedRowsDrop(draggingEvent, false);\r\n      if (rowsDrop) {\r\n        this.dropRows(rowsDrop);\r\n      }\r\n      this.beans.rowDropHighlightSvc.clear();\r\n    }\r\n    this.makeGroupThrottleClear();\r\n  }\r\n  onDragCancel(draggingEvent) {\r\n    this.dispatchGridEvent(\"rowDragCancel\", draggingEvent);\r\n    this.stopDragging(draggingEvent);\r\n    const { dragAndDrop, gos } = this.beans;\r\n    if (gos.get(\"rowDragManaged\") && (gos.get(\"suppressMoveWhenRowDragging\") || !this.isFromThisGrid(draggingEvent)) && dragAndDrop.isDropZoneWithinThisGrid(draggingEvent)) {\r\n      this.beans.rowDropHighlightSvc.clear();\r\n    }\r\n    this.makeGroupThrottleClear();\r\n  }\r\n  stopDragging(draggingEvent) {\r\n    this.autoScrollService?.ensureCleared();\r\n    this.getRowNodes(draggingEvent).forEach((rowNode) => {\r\n      this.setRowNodeDragging(rowNode, false);\r\n    });\r\n  }\r\n  setRowNodeDragging(rowNode, dragging) {\r\n    if (rowNode.dragging !== dragging) {\r\n      rowNode.dragging = dragging;\r\n      rowNode.dispatchRowEvent(\"draggingChanged\");\r\n    }\r\n  }\r\n  /** Drag and drop. Returns false if at least a row was moved, otherwise true */\r\n  dropRows(rowsDrop) {\r\n    return rowsDrop.sameGrid ? this.moveRows(rowsDrop) : this.addRows(rowsDrop);\r\n  }\r\n  addRows({ position, target, rows }) {\r\n    const getRowIdFunc = _getRowIdCallback(this.gos);\r\n    const clientSideRowModel = this.clientSideRowModel;\r\n    const add = rows.filter(\r\n      ({ data, rowPinned }) => !clientSideRowModel.getRowNode(getRowIdFunc?.({ data, level: 0, rowPinned }) ?? data.id)\r\n    ).map(({ data }) => data);\r\n    if (add.length === 0) {\r\n      return false;\r\n    }\r\n    const addIndex = target ? getLeafSourceRowIndex(target) + (position === \"above\" ? 0 : 1) : void 0;\r\n    clientSideRowModel.updateRowData({ add, addIndex });\r\n    return true;\r\n  }\r\n  refreshModelAfterDrop() {\r\n    this.clientSideRowModel.refreshModel({\r\n      step: \"group\",\r\n      keepRenderedRows: true,\r\n      animate: !this.gos.get(\"suppressAnimationFrame\"),\r\n      changedPath: new ChangedPath(false, this.clientSideRowModel.rootNode),\r\n      rowNodesOrderChanged: true\r\n    });\r\n  }\r\n  moveRows({ position, target, rows, newParent }) {\r\n    let changed = false;\r\n    const clientSideRowModel = this.clientSideRowModel;\r\n    const leafs = /* @__PURE__ */ new Set();\r\n    for (const row of rows) {\r\n      if (row.footer || row.rowTop === null && row !== clientSideRowModel.getRowNode(row.id)) {\r\n        continue;\r\n      }\r\n      if (newParent && row.parent !== newParent) {\r\n        if (wouldFormCycle(row, newParent)) {\r\n          continue;\r\n        }\r\n        row.treeParent = newParent;\r\n        changed = true;\r\n      }\r\n      const leafRow = getLeafRow(row);\r\n      if (leafRow) {\r\n        leafs.add(leafRow);\r\n      }\r\n    }\r\n    if (!changed && leafs.size === 0) {\r\n      return false;\r\n    }\r\n    const focusSvc = this.beans.focusSvc;\r\n    const cellPosition = focusSvc.getFocusedCell();\r\n    const cellCtrl = cellPosition && _getCellByPosition(this.beans, cellPosition);\r\n    if (leafs.size && this.reorderLeafChildren(leafs, ...this.getMoveRowsBounds(leafs, target, position === \"above\"))) {\r\n      changed = true;\r\n    }\r\n    if (!changed) {\r\n      return false;\r\n    }\r\n    this.refreshModelAfterDrop();\r\n    if (cellCtrl) {\r\n      cellCtrl.focusCell();\r\n    } else {\r\n      focusSvc.clearFocusedCell();\r\n    }\r\n    return true;\r\n  }\r\n  /** For reorderLeafChildren, returns min index of the rows to move, the target index and the max index of the rows to move. */\r\n  getMoveRowsBounds(leafs, target, above) {\r\n    const totalRows = this.clientSideRowModel.rootNode?.allLeafChildren.length ?? 0;\r\n    let targetPositionIdx = getLeafSourceRowIndex(target);\r\n    if (targetPositionIdx < 0 || targetPositionIdx >= totalRows) {\r\n      targetPositionIdx = totalRows;\r\n    } else if (!above) {\r\n      ++targetPositionIdx;\r\n    }\r\n    let firstAffectedLeafIdx = targetPositionIdx;\r\n    let lastAffectedLeafIndex = Math.min(targetPositionIdx, totalRows - 1);\r\n    for (const row of leafs) {\r\n      const sourceRowIndex = row.sourceRowIndex;\r\n      if (sourceRowIndex < firstAffectedLeafIdx)\r\n        firstAffectedLeafIdx = sourceRowIndex;\r\n      if (sourceRowIndex > lastAffectedLeafIndex)\r\n        lastAffectedLeafIndex = sourceRowIndex;\r\n    }\r\n    return [firstAffectedLeafIdx, targetPositionIdx, lastAffectedLeafIndex];\r\n  }\r\n  /** Reorders the children of the root node, so that the rows to move are in the correct order.\r\n   * @param leafs The valid set of rows to move, as returned by getValidRowsToMove\r\n   * @param firstAffectedLeafIdx The first index of the rows to move\r\n   * @param targetPositionIdx The target index, where the rows will be moved\r\n   * @param lastAffectedLeafIndex The last index of the rows to move\r\n   * @returns True if the order of the rows changed, false otherwise\r\n   */\r\n  reorderLeafChildren(leafs, firstAffectedLeafIdx, targetPositionIdx, lastAffectedLeafIndex) {\r\n    let orderChanged = false;\r\n    const allLeafChildren = this.clientSideRowModel.rootNode?.allLeafChildren;\r\n    if (!leafs.size || !allLeafChildren) {\r\n      return false;\r\n    }\r\n    let writeIdxLeft = firstAffectedLeafIdx;\r\n    for (let readIdx = firstAffectedLeafIdx; readIdx < targetPositionIdx; ++readIdx) {\r\n      const row = allLeafChildren[readIdx];\r\n      if (!leafs.has(row)) {\r\n        if (row.sourceRowIndex !== writeIdxLeft) {\r\n          row.sourceRowIndex = writeIdxLeft;\r\n          allLeafChildren[writeIdxLeft] = row;\r\n          orderChanged = true;\r\n        }\r\n        ++writeIdxLeft;\r\n      }\r\n    }\r\n    let writeIdxRight = lastAffectedLeafIndex;\r\n    for (let readIdx = lastAffectedLeafIndex; readIdx >= targetPositionIdx; --readIdx) {\r\n      const row = allLeafChildren[readIdx];\r\n      if (!leafs.has(row)) {\r\n        if (row.sourceRowIndex !== writeIdxRight) {\r\n          row.sourceRowIndex = writeIdxRight;\r\n          allLeafChildren[writeIdxRight] = row;\r\n          orderChanged = true;\r\n        }\r\n        --writeIdxRight;\r\n      }\r\n    }\r\n    for (const row of leafs) {\r\n      if (row.sourceRowIndex !== writeIdxLeft) {\r\n        row.sourceRowIndex = writeIdxLeft;\r\n        allLeafChildren[writeIdxLeft] = row;\r\n        orderChanged = true;\r\n      }\r\n      ++writeIdxLeft;\r\n    }\r\n    return orderChanged;\r\n  }\r\n};\r\nvar getRowsPrevOrNext = (clientSideRowModel, above, rows) => {\r\n  return above ? getPrevOrNext(clientSideRowModel, -1, rows[0]) : getPrevOrNext(clientSideRowModel, 1, _last(rows));\r\n};\r\nvar getPrevOrNext = (clientSideRowModel, increment, initialRow) => {\r\n  if (initialRow) {\r\n    const rowCount = clientSideRowModel.getRowCount();\r\n    let rowIndex = initialRow.rowIndex + increment;\r\n    while (rowIndex >= 0 && rowIndex < rowCount) {\r\n      const row = clientSideRowModel.getRow(rowIndex);\r\n      if (!row || !row.footer) {\r\n        return row;\r\n      }\r\n      rowIndex += increment;\r\n    }\r\n  }\r\n  return void 0;\r\n};\r\nvar wouldFormCycle = (row, newParent) => {\r\n  let parent = newParent;\r\n  while (parent) {\r\n    if (parent === row) {\r\n      return true;\r\n    }\r\n    parent = parent.parent;\r\n  }\r\n  return false;\r\n};\r\nvar rowsHaveSameParent = (rows, newParent) => {\r\n  for (let i = 0, len = rows.length; i < len; ++i) {\r\n    if (rows[i].parent !== newParent) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\nvar getLeafSourceRowIndex = (row) => {\r\n  const leaf = getLeafRow(row);\r\n  return leaf !== void 0 ? leaf.sourceRowIndex : -1;\r\n};\r\nvar getLeafRow = (row) => {\r\n  while (row) {\r\n    if (row.sourceRowIndex >= 0) {\r\n      return row;\r\n    }\r\n    const childrenAfterGroup = row.childrenAfterGroup;\r\n    if (!childrenAfterGroup?.length) {\r\n      return void 0;\r\n    }\r\n    row = childrenAfterGroup[0];\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/dragAndDrop/rowDragService.ts\r\nvar RowDragService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"rowDragSvc\";\r\n  }\r\n  setupRowDrag(element, ctrl) {\r\n    const rowDragFeature = ctrl.createManagedBean(new RowDragFeature(element));\r\n    const dragAndDrop = this.beans.dragAndDrop;\r\n    dragAndDrop.addDropTarget(rowDragFeature);\r\n    ctrl.addDestroyFunc(() => dragAndDrop.removeDropTarget(rowDragFeature));\r\n    this.rowDragFeature = rowDragFeature;\r\n  }\r\n  createRowDragComp(cellValueFn, rowNode, column, customGui, dragStartPixels, suppressVisibilityChange) {\r\n    return new RowDragComp(cellValueFn, rowNode, column, customGui, dragStartPixels, suppressVisibilityChange);\r\n  }\r\n  createRowDragCompForRow(rowNode, element) {\r\n    if (_isCellSelectionEnabled(this.gos)) {\r\n      return void 0;\r\n    }\r\n    const translate = this.getLocaleTextFunc();\r\n    return this.createRowDragComp(\r\n      () => `1 ${translate(\"rowDragRow\", \"row\")}`,\r\n      rowNode,\r\n      void 0,\r\n      element,\r\n      void 0,\r\n      true\r\n    );\r\n  }\r\n  createRowDragCompForCell(rowNode, column, cellValueFn, element, dragStartPixels, suppressVisibilityChange) {\r\n    const gos = this.gos;\r\n    if (gos.get(\"rowDragManaged\")) {\r\n      if (!_isClientSideRowModel(gos) || gos.get(\"pagination\")) {\r\n        return void 0;\r\n      }\r\n    }\r\n    const rowDragComp = this.createRowDragComp(\r\n      cellValueFn,\r\n      rowNode,\r\n      column,\r\n      element,\r\n      dragStartPixels,\r\n      suppressVisibilityChange\r\n    );\r\n    return rowDragComp;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/dragAndDrop/rowDropHighlightService.ts\r\nvar RowDropHighlightService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"rowDropHighlightSvc\";\r\n    this.uiLevel = 0;\r\n    this.row = null;\r\n    this.position = \"none\";\r\n  }\r\n  postConstruct() {\r\n    this.addManagedEventListeners({\r\n      modelUpdated: this.onModelUpdated.bind(this)\r\n    });\r\n  }\r\n  onModelUpdated() {\r\n    const row = this.row;\r\n    if (!row || row.rowIndex === null || this.position === \"none\") {\r\n      this.clear();\r\n    } else {\r\n      this.set(row, this.position);\r\n    }\r\n  }\r\n  destroy() {\r\n    this.clear();\r\n    super.destroy();\r\n  }\r\n  clear() {\r\n    const last = this.row;\r\n    if (last) {\r\n      this.uiLevel = 0;\r\n      this.position = \"none\";\r\n      this.row = null;\r\n      last.dispatchRowEvent(\"rowHighlightChanged\");\r\n    }\r\n  }\r\n  set(row, dropIndicatorPosition) {\r\n    const nodeChanged = row !== this.row;\r\n    const uiLevel = row.uiLevel;\r\n    const highlightChanged = dropIndicatorPosition !== this.position;\r\n    const uiLevelChanged = uiLevel !== this.uiLevel;\r\n    if (nodeChanged || highlightChanged || uiLevelChanged) {\r\n      if (nodeChanged) {\r\n        this.clear();\r\n      }\r\n      this.uiLevel = uiLevel;\r\n      this.position = dropIndicatorPosition;\r\n      this.row = row;\r\n      row.dispatchRowEvent(\"rowHighlightChanged\");\r\n    }\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/dragAndDrop/dragModule.ts\r\nvar DragModule = {\r\n  moduleName: \"Drag\",\r\n  version: VERSION,\r\n  beans: [DragService]\r\n};\r\nvar DragAndDropModule = {\r\n  moduleName: \"DragAndDrop\",\r\n  version: VERSION,\r\n  dynamicBeans: {\r\n    dndSourceComp: DndSourceComp\r\n  },\r\n  icons: {\r\n    // drag handle used to pick up draggable rows\r\n    rowDrag: \"grip\"\r\n  }\r\n};\r\nvar SharedDragAndDropModule = {\r\n  moduleName: \"SharedDragAndDrop\",\r\n  version: VERSION,\r\n  beans: [DragAndDropService],\r\n  dependsOn: [DragModule],\r\n  userComponents: {\r\n    agDragAndDropImage: DragAndDropImageComponent2\r\n  },\r\n  icons: {\r\n    // shown on drag and drop image component icon while dragging column to the side of the grid to pin\r\n    columnMovePin: \"pin\",\r\n    // shown on drag and drop image component icon while dragging over part of the page that is not a drop zone\r\n    columnMoveHide: \"eye-slash\",\r\n    // shown on drag and drop image component icon while dragging columns to reorder\r\n    columnMoveMove: \"arrows\",\r\n    // animating icon shown when dragging a column to the right of the grid causes horizontal scrolling\r\n    columnMoveLeft: \"left\",\r\n    // animating icon shown when dragging a column to the left of the grid causes horizontal scrolling\r\n    columnMoveRight: \"right\",\r\n    // shown on drag and drop image component icon while dragging over Row Groups drop zone\r\n    columnMoveGroup: \"group\",\r\n    // shown on drag and drop image component icon while dragging over Values drop zone\r\n    columnMoveValue: \"aggregation\",\r\n    // shown on drag and drop image component icon while dragging over pivot drop zone\r\n    columnMovePivot: \"pivot\",\r\n    // shown on drag and drop image component icon while dragging over drop zone that doesn't support it, e.g.\r\n    // string column over aggregation drop zone\r\n    dropNotAllowed: \"not-allowed\",\r\n    // drag handle used to pick up draggable rows\r\n    rowDrag: \"grip\"\r\n  }\r\n};\r\nvar RowDragModule = {\r\n  moduleName: \"RowDrag\",\r\n  version: VERSION,\r\n  beans: [RowDropHighlightService, RowDragService],\r\n  apiFunctions: {\r\n    addRowDropZone,\r\n    removeRowDropZone,\r\n    getRowDropZoneParams,\r\n    getRowDropPositionIndicator,\r\n    setRowDropPositionIndicator\r\n  },\r\n  dependsOn: [SharedDragAndDropModule]\r\n};\r\nvar HorizontalResizeModule = {\r\n  moduleName: \"HorizontalResize\",\r\n  version: VERSION,\r\n  beans: [HorizontalResizeService],\r\n  dependsOn: [DragModule]\r\n};\r\n\r\n// packages/ag-grid-community/src/columnMove/column-moving.css-GENERATED.ts\r\nvar columnMovingCSS = (\r\n  /*css*/\r\n  `:where(.ag-ltr) :where(.ag-column-moving){.ag-cell,.ag-header-cell,.ag-spanned-cell-wrapper{transition:left .2s}.ag-header-group-cell{transition:left .2s,width .2s}}:where(.ag-rtl) :where(.ag-column-moving){.ag-cell,.ag-header-cell,.ag-spanned-cell-wrapper{transition:right .2s}.ag-header-group-cell{transition:right .2s,width .2s}}`\r\n);\r\n\r\n// packages/ag-grid-community/src/columnMove/columnAnimationService.ts\r\nvar ColumnAnimationService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"colAnimation\";\r\n    this.executeNextFuncs = [];\r\n    this.executeLaterFuncs = [];\r\n    this.active = false;\r\n    // activeNext starts with active but it is reset earlier after the nextFuncs are cleared\r\n    // to prevent calls made to executeNextVMTurn from queuing functions after executeNextFuncs has already been flushed,\r\n    this.activeNext = false;\r\n    this.suppressAnimation = false;\r\n    this.animationThreadCount = 0;\r\n  }\r\n  postConstruct() {\r\n    this.beans.ctrlsSvc.whenReady(this, (p) => this.gridBodyCtrl = p.gridBodyCtrl);\r\n  }\r\n  isActive() {\r\n    return this.active && !this.suppressAnimation;\r\n  }\r\n  setSuppressAnimation(suppress) {\r\n    this.suppressAnimation = suppress;\r\n  }\r\n  start() {\r\n    if (this.active) {\r\n      return;\r\n    }\r\n    const { gos } = this;\r\n    if (gos.get(\"suppressColumnMoveAnimation\")) {\r\n      return;\r\n    }\r\n    if (gos.get(\"enableRtl\")) {\r\n      return;\r\n    }\r\n    this.ensureAnimationCssClassPresent();\r\n    this.active = true;\r\n    this.activeNext = true;\r\n  }\r\n  finish() {\r\n    if (!this.active) {\r\n      return;\r\n    }\r\n    this.flush(\r\n      () => this.activeNext = false,\r\n      () => this.active = false\r\n    );\r\n  }\r\n  executeNextVMTurn(func) {\r\n    if (this.activeNext) {\r\n      this.executeNextFuncs.push(func);\r\n    } else {\r\n      func();\r\n    }\r\n  }\r\n  executeLaterVMTurn(func) {\r\n    if (this.active) {\r\n      this.executeLaterFuncs.push(func);\r\n    } else {\r\n      func();\r\n    }\r\n  }\r\n  ensureAnimationCssClassPresent() {\r\n    this.animationThreadCount++;\r\n    const animationThreadCountCopy = this.animationThreadCount;\r\n    const { gridBodyCtrl } = this;\r\n    gridBodyCtrl.setColumnMovingCss(true);\r\n    this.executeLaterFuncs.push(() => {\r\n      if (this.animationThreadCount === animationThreadCountCopy) {\r\n        gridBodyCtrl.setColumnMovingCss(false);\r\n      }\r\n    });\r\n  }\r\n  flush(callbackNext, callbackLater) {\r\n    const { executeNextFuncs, executeLaterFuncs } = this;\r\n    if (executeNextFuncs.length === 0 && executeLaterFuncs.length === 0) {\r\n      callbackNext();\r\n      callbackLater();\r\n      return;\r\n    }\r\n    const runFuncs = (queue) => {\r\n      while (queue.length) {\r\n        const func = queue.pop();\r\n        if (func) {\r\n          func();\r\n        }\r\n      }\r\n    };\r\n    this.beans.frameworkOverrides.wrapIncoming(() => {\r\n      window.setTimeout(() => {\r\n        callbackNext();\r\n        runFuncs(executeNextFuncs);\r\n      }, 0);\r\n      window.setTimeout(() => {\r\n        callbackLater();\r\n        runFuncs(executeLaterFuncs);\r\n      }, 200);\r\n    });\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/columnMove/columnMoveApi.ts\r\nfunction moveColumnByIndex(beans, fromIndex, toIndex) {\r\n  beans.colMoves?.moveColumnByIndex(fromIndex, toIndex, \"api\");\r\n}\r\nfunction moveColumns(beans, columnsToMoveKeys, toIndex) {\r\n  beans.colMoves?.moveColumns(columnsToMoveKeys, toIndex, \"api\");\r\n}\r\n\r\n// packages/ag-grid-community/src/columnMove/columnDrag/bodyDropPivotTarget.ts\r\nvar BodyDropPivotTarget = class extends BeanStub {\r\n  constructor(pinned) {\r\n    super();\r\n    this.pinned = pinned;\r\n    this.columnsToAggregate = [];\r\n    this.columnsToGroup = [];\r\n    this.columnsToPivot = [];\r\n  }\r\n  /** Callback for when drag enters */\r\n  onDragEnter(draggingEvent) {\r\n    this.clearColumnsList();\r\n    if (this.gos.get(\"functionsReadOnly\")) {\r\n      return;\r\n    }\r\n    const dragColumns = draggingEvent.dragItem.columns;\r\n    if (!dragColumns) {\r\n      return;\r\n    }\r\n    dragColumns.forEach((column) => {\r\n      if (!column.isPrimary()) {\r\n        return;\r\n      }\r\n      if (column.isAnyFunctionActive()) {\r\n        return;\r\n      }\r\n      if (column.isAllowValue()) {\r\n        this.columnsToAggregate.push(column);\r\n      } else if (column.isAllowRowGroup()) {\r\n        this.columnsToGroup.push(column);\r\n      } else if (column.isAllowPivot()) {\r\n        this.columnsToPivot.push(column);\r\n      }\r\n    });\r\n  }\r\n  getIconName() {\r\n    const totalColumns = this.columnsToAggregate.length + this.columnsToGroup.length + this.columnsToPivot.length;\r\n    if (totalColumns > 0) {\r\n      return this.pinned ? \"pinned\" : \"move\";\r\n    }\r\n    return null;\r\n  }\r\n  /** Callback for when drag leaves */\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  onDragLeave(draggingEvent) {\r\n    this.clearColumnsList();\r\n  }\r\n  clearColumnsList() {\r\n    this.columnsToAggregate.length = 0;\r\n    this.columnsToGroup.length = 0;\r\n    this.columnsToPivot.length = 0;\r\n  }\r\n  /** Callback for when dragging */\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  onDragging(draggingEvent) {\r\n  }\r\n  /** Callback for when drag stops */\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  onDragStop(draggingEvent) {\r\n    const { valueColsSvc, rowGroupColsSvc, pivotColsSvc } = this.beans;\r\n    if (this.columnsToAggregate.length > 0) {\r\n      valueColsSvc?.addColumns(this.columnsToAggregate, \"toolPanelDragAndDrop\");\r\n    }\r\n    if (this.columnsToGroup.length > 0) {\r\n      rowGroupColsSvc?.addColumns(this.columnsToGroup, \"toolPanelDragAndDrop\");\r\n    }\r\n    if (this.columnsToPivot.length > 0) {\r\n      pivotColsSvc?.addColumns(this.columnsToPivot, \"toolPanelDragAndDrop\");\r\n    }\r\n  }\r\n  onDragCancel() {\r\n    this.clearColumnsList();\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/columnMove/internalColumnMoveUtils.ts\r\nfunction sortColsLikeCols(colsList, cols) {\r\n  if (!cols || cols.length <= 1) {\r\n    return;\r\n  }\r\n  const notAllColsPresent = cols.filter((c) => colsList.indexOf(c) < 0).length > 0;\r\n  if (notAllColsPresent) {\r\n    return;\r\n  }\r\n  cols.sort((a, b) => {\r\n    const indexA = colsList.indexOf(a);\r\n    const indexB = colsList.indexOf(b);\r\n    return indexA - indexB;\r\n  });\r\n}\r\nfunction getColsToMove(allMovingColumns) {\r\n  const newCols = [...allMovingColumns];\r\n  allMovingColumns.forEach((col) => {\r\n    let movingGroup = null;\r\n    let parent = col.getParent();\r\n    while (parent != null && parent.getDisplayedLeafColumns().length === 1) {\r\n      movingGroup = parent;\r\n      parent = parent.getParent();\r\n    }\r\n    if (movingGroup != null) {\r\n      const isMarryChildren = !!movingGroup.getColGroupDef()?.marryChildren;\r\n      const columnsToMove = isMarryChildren ? (\r\n        // when marry children is true, we also have to move hidden\r\n        // columns within the group, so grab them from the `providedColumnGroup`\r\n        movingGroup.getProvidedColumnGroup().getLeafColumns()\r\n      ) : movingGroup.getLeafColumns();\r\n      columnsToMove.forEach((newCol) => {\r\n        if (!newCols.includes(newCol)) {\r\n          newCols.push(newCol);\r\n        }\r\n      });\r\n    }\r\n  });\r\n  return newCols;\r\n}\r\nfunction getLowestFragMove(validMoves, allMovingColumnsOrdered, colMoves, visibleCols) {\r\n  const displayedCols = visibleCols.allCols;\r\n  let lowestFragMove = null;\r\n  let targetOrder = null;\r\n  for (let i = 0; i < validMoves.length; i++) {\r\n    const move = validMoves[i];\r\n    const order = colMoves.getProposedColumnOrder(allMovingColumnsOrdered, move);\r\n    if (!colMoves.doesOrderPassRules(order)) {\r\n      continue;\r\n    }\r\n    const displayedOrder = order.filter((col) => displayedCols.includes(col));\r\n    if (targetOrder === null) {\r\n      targetOrder = displayedOrder;\r\n    } else if (!_areEqual(displayedOrder, targetOrder)) {\r\n      break;\r\n    }\r\n    const fragCount = groupFragCount(order);\r\n    if (lowestFragMove === null || fragCount < lowestFragMove.fragCount) {\r\n      lowestFragMove = { move, fragCount };\r\n    }\r\n  }\r\n  return lowestFragMove;\r\n}\r\nfunction getBestColumnMoveIndexFromXPosition(params) {\r\n  const { isFromHeader, fromLeft, xPosition, fromEnter, fakeEvent, pinned, gos, colModel, colMoves, visibleCols } = params;\r\n  let { allMovingColumns } = params;\r\n  if (isFromHeader) {\r\n    allMovingColumns = getColsToMove(allMovingColumns);\r\n  }\r\n  const allMovingColumnsOrdered = allMovingColumns.slice();\r\n  sortColsLikeCols(colModel.getCols(), allMovingColumnsOrdered);\r\n  const validMoves = calculateValidMoves({\r\n    movingCols: allMovingColumnsOrdered,\r\n    draggingRight: fromLeft,\r\n    xPosition,\r\n    pinned,\r\n    gos,\r\n    colModel,\r\n    visibleCols\r\n  });\r\n  const oldIndex = calculateOldIndex(allMovingColumnsOrdered, colModel);\r\n  if (validMoves.length === 0) {\r\n    return;\r\n  }\r\n  const firstValidMove = validMoves[0];\r\n  const constrainDirection = oldIndex !== null && (isFromHeader || !fromEnter);\r\n  if (constrainDirection && !fakeEvent) {\r\n    if (!fromLeft && firstValidMove >= oldIndex) {\r\n      return;\r\n    }\r\n    if (fromLeft && firstValidMove <= oldIndex) {\r\n      return;\r\n    }\r\n  }\r\n  const lowestFragMove = getLowestFragMove(validMoves, allMovingColumnsOrdered, colMoves, visibleCols);\r\n  if (!lowestFragMove) {\r\n    return;\r\n  }\r\n  const toIndex = lowestFragMove.move;\r\n  if (toIndex > colModel.getCols().length - allMovingColumnsOrdered.length) {\r\n    return;\r\n  }\r\n  return { columns: allMovingColumnsOrdered, toIndex };\r\n}\r\nfunction attemptMoveColumns(params) {\r\n  const { columns, toIndex } = getBestColumnMoveIndexFromXPosition(params) || {};\r\n  const { finished, colMoves } = params;\r\n  if (!columns || toIndex == null) {\r\n    return null;\r\n  }\r\n  colMoves.moveColumns(columns, toIndex, \"uiColumnMoved\", finished);\r\n  return finished ? null : { columns, toIndex };\r\n}\r\nfunction calculateOldIndex(movingCols, colModel) {\r\n  const gridCols = colModel.getCols();\r\n  const indexes = movingCols.map((col) => gridCols.indexOf(col)).sort((a, b) => a - b);\r\n  const firstIndex = indexes[0];\r\n  const lastIndex = _last(indexes);\r\n  const spread = lastIndex - firstIndex;\r\n  const gapsExist = spread !== indexes.length - 1;\r\n  return gapsExist ? null : firstIndex;\r\n}\r\nfunction groupFragCount(columns) {\r\n  function parents(col) {\r\n    const result = [];\r\n    let parent = col.getOriginalParent();\r\n    while (parent != null) {\r\n      result.push(parent);\r\n      parent = parent.getOriginalParent();\r\n    }\r\n    return result;\r\n  }\r\n  let count = 0;\r\n  for (let i = 0; i < columns.length - 1; i++) {\r\n    let a = parents(columns[i]);\r\n    let b = parents(columns[i + 1]);\r\n    [a, b] = a.length > b.length ? [a, b] : [b, a];\r\n    a.forEach((parent) => {\r\n      if (b.indexOf(parent) === -1) {\r\n        count++;\r\n      }\r\n    });\r\n  }\r\n  return count;\r\n}\r\nfunction getDisplayedColumns(visibleCols, type) {\r\n  switch (type) {\r\n    case \"left\":\r\n      return visibleCols.leftCols;\r\n    case \"right\":\r\n      return visibleCols.rightCols;\r\n    default:\r\n      return visibleCols.centerCols;\r\n  }\r\n}\r\nfunction calculateValidMoves(params) {\r\n  const { movingCols, draggingRight, xPosition, pinned, gos, colModel, visibleCols } = params;\r\n  const isMoveBlocked = gos.get(\"suppressMovableColumns\") || movingCols.some((col) => col.getColDef().suppressMovable);\r\n  if (isMoveBlocked) {\r\n    return [];\r\n  }\r\n  const allDisplayedCols = getDisplayedColumns(visibleCols, pinned);\r\n  const allGridCols = colModel.getCols();\r\n  const movingDisplayedCols = allDisplayedCols.filter((col) => movingCols.includes(col));\r\n  const otherDisplayedCols = allDisplayedCols.filter((col) => !movingCols.includes(col));\r\n  const otherGridCols = allGridCols.filter((col) => !movingCols.includes(col));\r\n  let displayIndex = 0;\r\n  let availableWidth = xPosition;\r\n  if (draggingRight) {\r\n    let widthOfMovingDisplayedCols = 0;\r\n    movingDisplayedCols.forEach((col) => widthOfMovingDisplayedCols += col.getActualWidth());\r\n    availableWidth -= widthOfMovingDisplayedCols;\r\n  }\r\n  if (availableWidth > 0) {\r\n    for (let i = 0; i < otherDisplayedCols.length; i++) {\r\n      const col = otherDisplayedCols[i];\r\n      availableWidth -= col.getActualWidth();\r\n      if (availableWidth < 0) {\r\n        break;\r\n      }\r\n      displayIndex++;\r\n    }\r\n    if (draggingRight) {\r\n      displayIndex++;\r\n    }\r\n  }\r\n  let firstValidMove;\r\n  if (displayIndex > 0) {\r\n    const leftColumn = otherDisplayedCols[displayIndex - 1];\r\n    firstValidMove = otherGridCols.indexOf(leftColumn) + 1;\r\n  } else {\r\n    firstValidMove = otherGridCols.indexOf(otherDisplayedCols[0]);\r\n    if (firstValidMove === -1) {\r\n      firstValidMove = 0;\r\n    }\r\n  }\r\n  const validMoves = [firstValidMove];\r\n  const numberComparator = (a, b) => a - b;\r\n  if (draggingRight) {\r\n    let pointer = firstValidMove + 1;\r\n    const lastIndex = allGridCols.length - 1;\r\n    while (pointer <= lastIndex) {\r\n      validMoves.push(pointer);\r\n      pointer++;\r\n    }\r\n    validMoves.sort(numberComparator);\r\n  } else {\r\n    let pointer = firstValidMove;\r\n    const lastIndex = allGridCols.length - 1;\r\n    let displacedCol = allGridCols[pointer];\r\n    while (pointer <= lastIndex && allDisplayedCols.indexOf(displacedCol) < 0) {\r\n      pointer++;\r\n      validMoves.push(pointer);\r\n      displacedCol = allGridCols[pointer];\r\n    }\r\n    pointer = firstValidMove - 1;\r\n    const firstDisplayIndex = 0;\r\n    while (pointer >= firstDisplayIndex) {\r\n      validMoves.push(pointer);\r\n      pointer--;\r\n    }\r\n    validMoves.sort(numberComparator).reverse();\r\n  }\r\n  return validMoves;\r\n}\r\nfunction normaliseX(params) {\r\n  const { pinned, fromKeyboard, gos, ctrlsSvc, useHeaderRow, skipScrollPadding } = params;\r\n  let eViewport = ctrlsSvc.getHeaderRowContainerCtrl(pinned)?.eViewport;\r\n  let { x } = params;\r\n  if (!eViewport) {\r\n    return 0;\r\n  }\r\n  if (fromKeyboard) {\r\n    x -= eViewport.getBoundingClientRect().left;\r\n  }\r\n  if (gos.get(\"enableRtl\")) {\r\n    if (useHeaderRow) {\r\n      eViewport = eViewport.querySelector(\".ag-header-row\");\r\n    }\r\n    x = eViewport.clientWidth - x;\r\n  }\r\n  if (pinned == null && !skipScrollPadding) {\r\n    x += ctrlsSvc.get(\"center\").getCenterViewportScrollLeft();\r\n  }\r\n  return x;\r\n}\r\nfunction setColumnsMoving(columns, isMoving) {\r\n  for (const column of columns) {\r\n    column.moving = isMoving;\r\n    column.dispatchColEvent(\"movingChanged\", \"uiColumnMoved\");\r\n  }\r\n}\r\n\r\n// packages/ag-grid-community/src/columnMove/columnDrag/moveColumnFeature.ts\r\nvar MOVE_FAIL_THRESHOLD = 7;\r\nvar SCROLL_MOVE_WIDTH = 100;\r\nvar SCROLL_GAP_NEEDED_BEFORE_MOVE = SCROLL_MOVE_WIDTH / 2;\r\nvar SCROLL_ACCELERATION_RATE = 5;\r\nvar SCROLL_TIME_INTERVAL = 100;\r\nvar MoveColumnFeature = class extends BeanStub {\r\n  constructor(pinned) {\r\n    super();\r\n    this.pinned = pinned;\r\n    this.needToMoveLeft = false;\r\n    this.needToMoveRight = false;\r\n    this.lastMovedInfo = null;\r\n    this.isCenterContainer = !_exists(pinned);\r\n  }\r\n  postConstruct() {\r\n    this.beans.ctrlsSvc.whenReady(this, (p) => {\r\n      this.gridBodyCon = p.gridBodyCtrl;\r\n    });\r\n  }\r\n  getIconName() {\r\n    const { pinned, lastDraggingEvent } = this;\r\n    const { dragItem } = lastDraggingEvent || {};\r\n    const columns = dragItem?.columns ?? [];\r\n    for (const col of columns) {\r\n      const colPinned = col.getPinned();\r\n      if (col.getColDef().lockPinned) {\r\n        if (colPinned == pinned) {\r\n          return \"move\";\r\n        }\r\n        continue;\r\n      }\r\n      const initialPinnedState = dragItem?.containerType;\r\n      if (initialPinnedState === pinned || !pinned) {\r\n        return \"move\";\r\n      }\r\n      if (pinned && (!colPinned || initialPinnedState !== pinned)) {\r\n        return \"pinned\";\r\n      }\r\n    }\r\n    return \"notAllowed\";\r\n  }\r\n  onDragEnter(draggingEvent) {\r\n    const dragItem = draggingEvent.dragItem;\r\n    const columns = dragItem.columns;\r\n    const dragCameFromToolPanel = draggingEvent.dragSource.type === 0 /* ToolPanel */;\r\n    if (dragCameFromToolPanel) {\r\n      this.setColumnsVisible(columns, true, \"uiColumnDragged\");\r\n    } else {\r\n      const visibleState = dragItem.visibleState;\r\n      const visibleColumns = (columns || []).filter(\r\n        (column) => visibleState[column.getId()] && !column.isVisible()\r\n      );\r\n      this.setColumnsVisible(visibleColumns, true, \"uiColumnDragged\");\r\n    }\r\n    if (!this.gos.get(\"suppressMoveWhenColumnDragging\")) {\r\n      this.attemptToPinColumns(columns, this.pinned);\r\n    }\r\n    this.onDragging(draggingEvent, true, true);\r\n  }\r\n  onDragging(draggingEvent = this.lastDraggingEvent, fromEnter = false, fakeEvent = false, finished = false) {\r\n    const { gos, ctrlsSvc } = this.beans;\r\n    const isSuppressMoveWhenDragging = gos.get(\"suppressMoveWhenColumnDragging\");\r\n    if (finished && !isSuppressMoveWhenDragging) {\r\n      this.finishColumnMoving();\r\n      return;\r\n    }\r\n    this.lastDraggingEvent = draggingEvent;\r\n    if (!draggingEvent || !finished && _missing(draggingEvent.hDirection)) {\r\n      return;\r\n    }\r\n    const mouseX = normaliseX({\r\n      x: draggingEvent.x,\r\n      pinned: this.pinned,\r\n      gos,\r\n      ctrlsSvc\r\n    });\r\n    if (!fromEnter) {\r\n      this.checkCenterForScrolling(mouseX);\r\n    }\r\n    if (isSuppressMoveWhenDragging) {\r\n      this.handleColumnDragWhileSuppressingMovement(draggingEvent, fromEnter, fakeEvent, mouseX, finished);\r\n    } else {\r\n      this.handleColumnDragWhileAllowingMovement(draggingEvent, fromEnter, fakeEvent, mouseX, finished);\r\n    }\r\n  }\r\n  onDragLeave() {\r\n    this.ensureIntervalCleared();\r\n    this.clearHighlighted();\r\n    this.updateDragItemContainerType();\r\n    this.lastMovedInfo = null;\r\n  }\r\n  onDragStop() {\r\n    this.onDragging(this.lastDraggingEvent, false, true, true);\r\n    this.ensureIntervalCleared();\r\n    this.lastMovedInfo = null;\r\n  }\r\n  onDragCancel() {\r\n    this.clearHighlighted();\r\n    this.ensureIntervalCleared();\r\n    this.lastMovedInfo = null;\r\n  }\r\n  setColumnsVisible(columns, visible, source) {\r\n    if (!columns?.length) {\r\n      return;\r\n    }\r\n    const allowedCols = columns.filter((c) => !c.getColDef().lockVisible);\r\n    if (!allowedCols.length) {\r\n      return;\r\n    }\r\n    this.beans.colModel.setColsVisible(allowedCols, visible, source);\r\n  }\r\n  finishColumnMoving() {\r\n    this.clearHighlighted();\r\n    const lastMovedInfo = this.lastMovedInfo;\r\n    if (!lastMovedInfo) {\r\n      return;\r\n    }\r\n    const { columns, toIndex } = lastMovedInfo;\r\n    this.beans.colMoves.moveColumns(columns, toIndex, \"uiColumnMoved\", true);\r\n  }\r\n  updateDragItemContainerType() {\r\n    const { lastDraggingEvent } = this;\r\n    if (this.gos.get(\"suppressMoveWhenColumnDragging\") || !lastDraggingEvent) {\r\n      return;\r\n    }\r\n    const dragItem = lastDraggingEvent.dragItem;\r\n    if (!dragItem) {\r\n      return;\r\n    }\r\n    dragItem.containerType = this.pinned;\r\n  }\r\n  handleColumnDragWhileSuppressingMovement(draggingEvent, fromEnter, fakeEvent, mouseX, finished) {\r\n    const allMovingColumns = this.getAllMovingColumns(draggingEvent, true);\r\n    if (finished) {\r\n      const isAttemptingToPin = this.isAttemptingToPin(allMovingColumns);\r\n      if (isAttemptingToPin) {\r\n        this.attemptToPinColumns(allMovingColumns, void 0, true);\r\n      }\r\n      const { fromLeft, xPosition } = this.getNormalisedXPositionInfo(allMovingColumns, isAttemptingToPin) || {};\r\n      if (fromLeft == null || xPosition == null) {\r\n        this.finishColumnMoving();\r\n        return;\r\n      }\r\n      this.moveColumnsAfterHighlight({\r\n        allMovingColumns,\r\n        xPosition,\r\n        fromEnter,\r\n        fakeEvent,\r\n        fromLeft\r\n      });\r\n    } else {\r\n      if (!this.beans.dragAndDrop.isDropZoneWithinThisGrid(draggingEvent)) {\r\n        return;\r\n      }\r\n      this.highlightHoveredColumn(allMovingColumns, mouseX);\r\n    }\r\n  }\r\n  handleColumnDragWhileAllowingMovement(draggingEvent, fromEnter, fakeEvent, mouseX, finished) {\r\n    const allMovingColumns = this.getAllMovingColumns(draggingEvent);\r\n    const fromLeft = this.normaliseDirection(draggingEvent.hDirection) === \"right\";\r\n    const isFromHeader = draggingEvent.dragSource.type === 1 /* HeaderCell */;\r\n    const params = this.getMoveColumnParams({\r\n      allMovingColumns,\r\n      isFromHeader,\r\n      xPosition: mouseX,\r\n      fromLeft,\r\n      fromEnter,\r\n      fakeEvent\r\n    });\r\n    const lastMovedInfo = attemptMoveColumns({ ...params, finished });\r\n    if (lastMovedInfo) {\r\n      this.lastMovedInfo = lastMovedInfo;\r\n    }\r\n  }\r\n  getAllMovingColumns(draggingEvent, useSplit = false) {\r\n    const dragItem = draggingEvent.dragSource.getDragItem();\r\n    let columns = null;\r\n    if (useSplit) {\r\n      columns = dragItem.columnsInSplit;\r\n      if (!columns) {\r\n        columns = dragItem.columns;\r\n      }\r\n    } else {\r\n      columns = dragItem.columns;\r\n    }\r\n    const conditionCallback = (col) => col.getColDef().lockPinned ? col.getPinned() == this.pinned : true;\r\n    if (!columns) {\r\n      return [];\r\n    }\r\n    return columns.filter(conditionCallback);\r\n  }\r\n  getMoveColumnParams(params) {\r\n    const { allMovingColumns, isFromHeader, xPosition, fromLeft, fromEnter, fakeEvent } = params;\r\n    const { gos, colModel, colMoves, visibleCols } = this.beans;\r\n    return {\r\n      allMovingColumns,\r\n      isFromHeader,\r\n      fromLeft,\r\n      xPosition,\r\n      pinned: this.pinned,\r\n      fromEnter,\r\n      fakeEvent,\r\n      gos,\r\n      colModel,\r\n      colMoves,\r\n      visibleCols\r\n    };\r\n  }\r\n  highlightHoveredColumn(movingColumns, mouseX) {\r\n    const { gos, colModel } = this.beans;\r\n    const isRtl = gos.get(\"enableRtl\");\r\n    const consideredColumns = colModel.getCols().filter((col) => col.isVisible() && col.getPinned() === this.pinned);\r\n    let start = null;\r\n    let width = null;\r\n    let targetColumn = null;\r\n    for (const col of consideredColumns) {\r\n      width = col.getActualWidth();\r\n      start = this.getNormalisedColumnLeft(col, 0, isRtl);\r\n      if (start != null) {\r\n        const end = start + width;\r\n        if (start <= mouseX && end >= mouseX) {\r\n          targetColumn = col;\r\n          break;\r\n        }\r\n      }\r\n      start = null;\r\n      width = null;\r\n    }\r\n    if (!targetColumn) {\r\n      for (let i = consideredColumns.length - 1; i >= 0; i--) {\r\n        const currentColumn = consideredColumns[i];\r\n        const parent = consideredColumns[i].getParent();\r\n        if (!parent) {\r\n          targetColumn = currentColumn;\r\n          break;\r\n        }\r\n        const leafDisplayedCols = parent?.getDisplayedLeafColumns();\r\n        if (leafDisplayedCols.length) {\r\n          targetColumn = _last(leafDisplayedCols);\r\n          break;\r\n        }\r\n      }\r\n      if (!targetColumn) {\r\n        return;\r\n      }\r\n      start = this.getNormalisedColumnLeft(targetColumn, 0, isRtl);\r\n      width = targetColumn.getActualWidth();\r\n    } else if (movingColumns.indexOf(targetColumn) !== -1) {\r\n      targetColumn = null;\r\n    }\r\n    if (this.lastHighlightedColumn?.column !== targetColumn) {\r\n      this.clearHighlighted();\r\n    }\r\n    if (targetColumn == null || start == null || width == null) {\r\n      return;\r\n    }\r\n    let position;\r\n    if (mouseX - start < width / 2 !== isRtl) {\r\n      position = 0 /* Before */;\r\n    } else {\r\n      position = 1 /* After */;\r\n    }\r\n    setColumnHighlighted(targetColumn, position);\r\n    this.lastHighlightedColumn = { column: targetColumn, position };\r\n  }\r\n  getNormalisedXPositionInfo(allMovingColumns, isAttemptingToPin) {\r\n    const { gos, visibleCols } = this.beans;\r\n    const isRtl = gos.get(\"enableRtl\");\r\n    const { firstMovingCol, column, position } = this.getColumnMoveAndTargetInfo(\r\n      allMovingColumns,\r\n      isAttemptingToPin,\r\n      isRtl\r\n    );\r\n    if (!firstMovingCol || !column || position == null) {\r\n      return;\r\n    }\r\n    const visibleColumns = visibleCols.allCols;\r\n    const movingColIndex = visibleColumns.indexOf(firstMovingCol);\r\n    const targetIndex = visibleColumns.indexOf(column);\r\n    const isBefore = position === 0 /* Before */ !== isRtl;\r\n    const fromLeft = movingColIndex < targetIndex || movingColIndex === targetIndex && !isBefore;\r\n    let diff = 0;\r\n    if (isBefore) {\r\n      if (fromLeft) {\r\n        diff -= 1;\r\n      }\r\n    } else {\r\n      if (!fromLeft) {\r\n        diff += 1;\r\n      }\r\n    }\r\n    if (targetIndex + diff === movingColIndex) {\r\n      return;\r\n    }\r\n    const targetColumn = visibleColumns[targetIndex + diff];\r\n    if (!targetColumn) {\r\n      return;\r\n    }\r\n    const xPosition = this.getNormalisedColumnLeft(targetColumn, 20, isRtl);\r\n    return { fromLeft, xPosition };\r\n  }\r\n  getColumnMoveAndTargetInfo(allMovingColumns, isAttemptingToPin, isRtl) {\r\n    const lastHighlightedColumn = this.lastHighlightedColumn || {};\r\n    const { firstMovingCol, lastMovingCol } = findFirstAndLastMovingColumns(allMovingColumns);\r\n    if (!firstMovingCol || !lastMovingCol || lastHighlightedColumn.column || !isAttemptingToPin) {\r\n      return {\r\n        firstMovingCol,\r\n        ...lastHighlightedColumn\r\n      };\r\n    }\r\n    const pinned = this.getPinDirection();\r\n    const isLeft = pinned === \"left\";\r\n    return {\r\n      firstMovingCol,\r\n      position: isLeft ? 1 /* After */ : 0 /* Before */,\r\n      column: isLeft !== isRtl ? firstMovingCol : lastMovingCol\r\n    };\r\n  }\r\n  normaliseDirection(hDirection) {\r\n    if (this.gos.get(\"enableRtl\")) {\r\n      switch (hDirection) {\r\n        case \"left\":\r\n          return \"right\";\r\n        case \"right\":\r\n          return \"left\";\r\n      }\r\n    }\r\n    return hDirection;\r\n  }\r\n  getNormalisedColumnLeft(col, padding, isRtl) {\r\n    const { gos, ctrlsSvc } = this.beans;\r\n    const left = col.getLeft();\r\n    if (left == null) {\r\n      return null;\r\n    }\r\n    const width = col.getActualWidth();\r\n    return normaliseX({\r\n      x: isRtl ? left + width - padding : left + padding,\r\n      pinned: col.getPinned(),\r\n      useHeaderRow: isRtl,\r\n      skipScrollPadding: true,\r\n      gos,\r\n      ctrlsSvc\r\n    });\r\n  }\r\n  isAttemptingToPin(columns) {\r\n    const isMovingHorizontally = this.needToMoveLeft || this.needToMoveRight;\r\n    const isFailedMoreThanThreshold = this.failedMoveAttempts > MOVE_FAIL_THRESHOLD;\r\n    return isMovingHorizontally && isFailedMoreThanThreshold || columns.some((col) => col.getPinned() !== this.pinned);\r\n  }\r\n  moveColumnsAfterHighlight(params) {\r\n    const { allMovingColumns, xPosition, fromEnter, fakeEvent, fromLeft } = params;\r\n    const columnMoveParams = this.getMoveColumnParams({\r\n      allMovingColumns,\r\n      isFromHeader: true,\r\n      xPosition,\r\n      fromLeft,\r\n      fromEnter,\r\n      fakeEvent\r\n    });\r\n    const { columns, toIndex } = getBestColumnMoveIndexFromXPosition(columnMoveParams) || {};\r\n    if (columns && toIndex != null) {\r\n      this.lastMovedInfo = {\r\n        columns,\r\n        toIndex\r\n      };\r\n    }\r\n    this.finishColumnMoving();\r\n  }\r\n  clearHighlighted() {\r\n    const { lastHighlightedColumn } = this;\r\n    if (!lastHighlightedColumn) {\r\n      return;\r\n    }\r\n    setColumnHighlighted(lastHighlightedColumn.column, null);\r\n    this.lastHighlightedColumn = null;\r\n  }\r\n  checkCenterForScrolling(xAdjustedForScroll) {\r\n    if (!this.isCenterContainer) {\r\n      return;\r\n    }\r\n    const centerCtrl = this.beans.ctrlsSvc.get(\"center\");\r\n    const firstVisiblePixel = centerCtrl.getCenterViewportScrollLeft();\r\n    const lastVisiblePixel = firstVisiblePixel + centerCtrl.getCenterWidth();\r\n    let needToMoveRight;\r\n    let needToMoveLeft;\r\n    if (this.gos.get(\"enableRtl\")) {\r\n      needToMoveRight = xAdjustedForScroll < firstVisiblePixel + SCROLL_GAP_NEEDED_BEFORE_MOVE;\r\n      needToMoveLeft = xAdjustedForScroll > lastVisiblePixel - SCROLL_GAP_NEEDED_BEFORE_MOVE;\r\n    } else {\r\n      needToMoveLeft = xAdjustedForScroll < firstVisiblePixel + SCROLL_GAP_NEEDED_BEFORE_MOVE;\r\n      needToMoveRight = xAdjustedForScroll > lastVisiblePixel - SCROLL_GAP_NEEDED_BEFORE_MOVE;\r\n    }\r\n    this.needToMoveRight = needToMoveRight;\r\n    this.needToMoveLeft = needToMoveLeft;\r\n    if (needToMoveLeft || needToMoveRight) {\r\n      this.ensureIntervalStarted();\r\n    } else {\r\n      this.ensureIntervalCleared();\r\n    }\r\n  }\r\n  ensureIntervalStarted() {\r\n    if (this.movingIntervalId) {\r\n      return;\r\n    }\r\n    this.intervalCount = 0;\r\n    this.failedMoveAttempts = 0;\r\n    this.movingIntervalId = window.setInterval(this.moveInterval.bind(this), SCROLL_TIME_INTERVAL);\r\n    this.beans.dragAndDrop.getDragAndDropImageComponent()?.setIcon(this.needToMoveLeft ? \"left\" : \"right\", true);\r\n  }\r\n  ensureIntervalCleared() {\r\n    if (!this.movingIntervalId) {\r\n      return;\r\n    }\r\n    window.clearInterval(this.movingIntervalId);\r\n    this.movingIntervalId = null;\r\n    this.failedMoveAttempts = 0;\r\n    this.beans.dragAndDrop.getDragAndDropImageComponent()?.setIcon(this.getIconName(), false);\r\n  }\r\n  moveInterval() {\r\n    let pixelsToMove;\r\n    this.intervalCount++;\r\n    pixelsToMove = 10 + this.intervalCount * SCROLL_ACCELERATION_RATE;\r\n    if (pixelsToMove > SCROLL_MOVE_WIDTH) {\r\n      pixelsToMove = SCROLL_MOVE_WIDTH;\r\n    }\r\n    let pixelsMoved = null;\r\n    const scrollFeature = this.gridBodyCon.scrollFeature;\r\n    if (this.needToMoveLeft) {\r\n      pixelsMoved = scrollFeature.scrollHorizontally(-pixelsToMove);\r\n    } else if (this.needToMoveRight) {\r\n      pixelsMoved = scrollFeature.scrollHorizontally(pixelsToMove);\r\n    }\r\n    if (pixelsMoved !== 0) {\r\n      this.onDragging(this.lastDraggingEvent);\r\n      this.failedMoveAttempts = 0;\r\n    } else {\r\n      this.failedMoveAttempts++;\r\n      const { pinnedCols, dragAndDrop, gos } = this.beans;\r\n      if (this.failedMoveAttempts <= MOVE_FAIL_THRESHOLD + 1 || !pinnedCols) {\r\n        return;\r\n      }\r\n      dragAndDrop.getDragAndDropImageComponent()?.setIcon(\"pinned\", false);\r\n      if (!gos.get(\"suppressMoveWhenColumnDragging\")) {\r\n        const columns = this.lastDraggingEvent?.dragItem.columns;\r\n        this.attemptToPinColumns(columns, void 0, true);\r\n      }\r\n    }\r\n  }\r\n  getPinDirection() {\r\n    if (this.needToMoveLeft || this.pinned === \"left\") {\r\n      return \"left\";\r\n    }\r\n    if (this.needToMoveRight || this.pinned === \"right\") {\r\n      return \"right\";\r\n    }\r\n  }\r\n  attemptToPinColumns(columns, pinned, fromMoving = false) {\r\n    const allowedCols = (columns || []).filter((c) => !c.getColDef().lockPinned);\r\n    if (!allowedCols.length) {\r\n      return 0;\r\n    }\r\n    if (fromMoving) {\r\n      pinned = this.getPinDirection();\r\n    }\r\n    const { pinnedCols, dragAndDrop } = this.beans;\r\n    pinnedCols?.setColsPinned(allowedCols, pinned, \"uiColumnDragged\");\r\n    if (fromMoving) {\r\n      dragAndDrop.nudge();\r\n    }\r\n    return allowedCols.length;\r\n  }\r\n  destroy() {\r\n    super.destroy();\r\n    this.lastDraggingEvent = null;\r\n    this.clearHighlighted();\r\n    this.lastMovedInfo = null;\r\n  }\r\n};\r\nfunction setColumnHighlighted(column, highlighted) {\r\n  if (column.highlighted === highlighted) {\r\n    return;\r\n  }\r\n  column.highlighted = highlighted;\r\n  column.dispatchColEvent(\"headerHighlightChanged\", \"uiColumnMoved\");\r\n}\r\nfunction findFirstAndLastMovingColumns(allMovingColumns) {\r\n  const moveLen = allMovingColumns.length;\r\n  let firstMovingCol;\r\n  let lastMovingCol;\r\n  for (let i = 0; i < moveLen; i++) {\r\n    if (!firstMovingCol) {\r\n      const leftCol = allMovingColumns[i];\r\n      if (leftCol.getLeft() != null) {\r\n        firstMovingCol = leftCol;\r\n      }\r\n    }\r\n    if (!lastMovingCol) {\r\n      const rightCol = allMovingColumns[moveLen - 1 - i];\r\n      if (rightCol.getLeft() != null) {\r\n        lastMovingCol = rightCol;\r\n      }\r\n    }\r\n    if (firstMovingCol && lastMovingCol) {\r\n      break;\r\n    }\r\n  }\r\n  return { firstMovingCol, lastMovingCol };\r\n}\r\n\r\n// packages/ag-grid-community/src/columnMove/columnDrag/bodyDropTarget.ts\r\nvar BodyDropTarget = class extends BeanStub {\r\n  constructor(pinned, eContainer) {\r\n    super();\r\n    this.pinned = pinned;\r\n    this.eContainer = eContainer;\r\n  }\r\n  postConstruct() {\r\n    const { ctrlsSvc, dragAndDrop } = this.beans;\r\n    const pinned = this.pinned;\r\n    ctrlsSvc.whenReady(this, (p) => {\r\n      let eSecondaryContainers;\r\n      const eBodyViewport = p.gridBodyCtrl.eBodyViewport;\r\n      switch (pinned) {\r\n        case \"left\":\r\n          eSecondaryContainers = [\r\n            [eBodyViewport, p.left.eContainer],\r\n            [p.bottomLeft.eContainer],\r\n            [p.topLeft.eContainer]\r\n          ];\r\n          break;\r\n        case \"right\":\r\n          eSecondaryContainers = [\r\n            [eBodyViewport, p.right.eContainer],\r\n            [p.bottomRight.eContainer],\r\n            [p.topRight.eContainer]\r\n          ];\r\n          break;\r\n        default:\r\n          eSecondaryContainers = [\r\n            [eBodyViewport, p.center.eViewport],\r\n            [p.bottomCenter.eViewport],\r\n            [p.topCenter.eViewport]\r\n          ];\r\n          break;\r\n      }\r\n      this.eSecondaryContainers = eSecondaryContainers;\r\n    });\r\n    this.moveColumnFeature = this.createManagedBean(new MoveColumnFeature(pinned));\r\n    this.bodyDropPivotTarget = this.createManagedBean(new BodyDropPivotTarget(pinned));\r\n    dragAndDrop.addDropTarget(this);\r\n    this.addDestroyFunc(() => dragAndDrop.removeDropTarget(this));\r\n  }\r\n  isInterestedIn(type) {\r\n    return type === 1 /* HeaderCell */ || type === 0 /* ToolPanel */ && this.gos.get(\"allowDragFromColumnsToolPanel\");\r\n  }\r\n  getSecondaryContainers() {\r\n    return this.eSecondaryContainers;\r\n  }\r\n  getContainer() {\r\n    return this.eContainer;\r\n  }\r\n  getIconName() {\r\n    return this.currentDropListener.getIconName();\r\n  }\r\n  // we want to use the bodyPivotTarget if the user is dragging columns in from the toolPanel\r\n  // and we are in pivot mode, as it has to logic to set pivot/value/group on the columns when\r\n  // dropped into the grid's body.\r\n  isDropColumnInPivotMode(draggingEvent) {\r\n    return this.beans.colModel.isPivotMode() && draggingEvent.dragSource.type === 0 /* ToolPanel */;\r\n  }\r\n  onDragEnter(draggingEvent) {\r\n    this.currentDropListener = this.isDropColumnInPivotMode(draggingEvent) ? this.bodyDropPivotTarget : this.moveColumnFeature;\r\n    this.currentDropListener.onDragEnter(draggingEvent);\r\n  }\r\n  onDragLeave(params) {\r\n    this.currentDropListener.onDragLeave(params);\r\n  }\r\n  onDragging(params) {\r\n    this.currentDropListener.onDragging(params);\r\n  }\r\n  onDragStop(params) {\r\n    this.currentDropListener.onDragStop(params);\r\n  }\r\n  onDragCancel() {\r\n    this.currentDropListener.onDragCancel();\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/columnMove/columnMoveService.ts\r\nvar ColumnMoveService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"colMoves\";\r\n  }\r\n  moveColumnByIndex(fromIndex, toIndex, source) {\r\n    const gridColumns = this.beans.colModel.getCols();\r\n    if (!gridColumns) {\r\n      return;\r\n    }\r\n    const column = gridColumns[fromIndex];\r\n    this.moveColumns([column], toIndex, source);\r\n  }\r\n  moveColumns(columnsToMoveKeys, toIndex, source, finished = true) {\r\n    const { colModel, colAnimation, visibleCols, eventSvc } = this.beans;\r\n    const gridColumns = colModel.getCols();\r\n    if (!gridColumns) {\r\n      return;\r\n    }\r\n    if (toIndex > gridColumns.length - columnsToMoveKeys.length) {\r\n      _warn(30, { toIndex });\r\n      return;\r\n    }\r\n    colAnimation?.start();\r\n    const movedColumns = colModel.getColsForKeys(columnsToMoveKeys);\r\n    if (this.doesMovePassRules(movedColumns, toIndex)) {\r\n      _moveInArray(colModel.getCols(), movedColumns, toIndex);\r\n      visibleCols.refresh(source);\r\n      eventSvc.dispatchEvent({\r\n        type: \"columnMoved\",\r\n        columns: movedColumns,\r\n        column: movedColumns.length === 1 ? movedColumns[0] : null,\r\n        toIndex,\r\n        finished,\r\n        source\r\n      });\r\n    }\r\n    colAnimation?.finish();\r\n  }\r\n  doesMovePassRules(columnsToMove, toIndex) {\r\n    const proposedColumnOrder = this.getProposedColumnOrder(columnsToMove, toIndex);\r\n    return this.doesOrderPassRules(proposedColumnOrder);\r\n  }\r\n  doesOrderPassRules(gridOrder) {\r\n    const { colModel, gos } = this.beans;\r\n    if (!doesMovePassMarryChildren(gridOrder, colModel.getColTree())) {\r\n      return false;\r\n    }\r\n    const doesMovePassLockedPositions = (proposedColumnOrder) => {\r\n      const lockPositionToPlacement = (position) => {\r\n        if (!position) {\r\n          return 0 /* NONE */;\r\n        }\r\n        return position === \"left\" || position === true ? -1 /* LEFT */ : 1 /* RIGHT */;\r\n      };\r\n      const isRtl = gos.get(\"enableRtl\");\r\n      let lastPlacement = isRtl ? 1 /* RIGHT */ : -1 /* LEFT */;\r\n      let rulePassed = true;\r\n      proposedColumnOrder.forEach((col) => {\r\n        const placement = lockPositionToPlacement(col.getColDef().lockPosition);\r\n        if (isRtl) {\r\n          if (placement > lastPlacement) {\r\n            rulePassed = false;\r\n          }\r\n        } else {\r\n          if (placement < lastPlacement) {\r\n            rulePassed = false;\r\n          }\r\n        }\r\n        lastPlacement = placement;\r\n      });\r\n      return rulePassed;\r\n    };\r\n    if (!doesMovePassLockedPositions(gridOrder)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  getProposedColumnOrder(columnsToMove, toIndex) {\r\n    const gridColumns = this.beans.colModel.getCols();\r\n    const proposedColumnOrder = gridColumns.slice();\r\n    _moveInArray(proposedColumnOrder, columnsToMove, toIndex);\r\n    return proposedColumnOrder;\r\n  }\r\n  createBodyDropTarget(pinned, dropContainer) {\r\n    return new BodyDropTarget(pinned, dropContainer);\r\n  }\r\n  moveHeader(hDirection, eGui, column, pinned, bean) {\r\n    const { ctrlsSvc, gos, colModel, visibleCols, focusSvc } = this.beans;\r\n    const rect = eGui.getBoundingClientRect();\r\n    const left = rect.left;\r\n    const isGroup = isColumnGroup(column);\r\n    const width = isGroup ? rect.width : column.getActualWidth();\r\n    const isLeft = hDirection === \"left\" !== gos.get(\"enableRtl\");\r\n    const xPosition = normaliseX({\r\n      x: isLeft ? left - 20 : left + width + 20,\r\n      pinned,\r\n      fromKeyboard: true,\r\n      gos,\r\n      ctrlsSvc\r\n    });\r\n    const headerPosition = focusSvc.focusedHeader;\r\n    attemptMoveColumns({\r\n      allMovingColumns: isGroup ? column.getLeafColumns() : [column],\r\n      isFromHeader: true,\r\n      fromLeft: hDirection === \"right\",\r\n      xPosition,\r\n      pinned,\r\n      fromEnter: false,\r\n      fakeEvent: false,\r\n      gos,\r\n      colModel,\r\n      colMoves: this,\r\n      visibleCols,\r\n      finished: true\r\n    });\r\n    let targetColumn;\r\n    if (isGroup) {\r\n      const displayedLeafColumns = column.getDisplayedLeafColumns();\r\n      targetColumn = isLeft ? displayedLeafColumns[0] : _last(displayedLeafColumns);\r\n    } else {\r\n      targetColumn = column;\r\n    }\r\n    ctrlsSvc.getScrollFeature().ensureColumnVisible(targetColumn, \"auto\");\r\n    if ((!bean.isAlive() || gos.get(\"ensureDomOrder\")) && headerPosition) {\r\n      let restoreFocusColumn;\r\n      if (isGroup) {\r\n        const groupId = column.getGroupId();\r\n        const leafCols = column.getLeafColumns();\r\n        if (!leafCols.length) {\r\n          return;\r\n        }\r\n        const parent = leafCols[0].getParent();\r\n        if (!parent) {\r\n          return;\r\n        }\r\n        restoreFocusColumn = findGroupWidthId(parent, groupId);\r\n      } else {\r\n        restoreFocusColumn = column;\r\n      }\r\n      if (restoreFocusColumn) {\r\n        focusSvc.focusHeaderPosition({\r\n          headerPosition: {\r\n            ...headerPosition,\r\n            column: restoreFocusColumn\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  setDragSourceForHeader(eSource, column, displayName) {\r\n    const { gos, colModel, dragAndDrop, visibleCols } = this.beans;\r\n    let hideColumnOnExit = !gos.get(\"suppressDragLeaveHidesColumns\");\r\n    const isGroup = isColumnGroup(column);\r\n    const columns = isGroup ? column.getProvidedColumnGroup().getLeafColumns() : [column];\r\n    const getDragItem = isGroup ? () => createDragItemForGroup(column, visibleCols.allCols) : () => createDragItem(column);\r\n    const dragSource = {\r\n      type: 1 /* HeaderCell */,\r\n      eElement: eSource,\r\n      getDefaultIconName: () => hideColumnOnExit ? \"hide\" : \"notAllowed\",\r\n      getDragItem,\r\n      dragItemName: displayName,\r\n      onDragStarted: () => {\r\n        hideColumnOnExit = !gos.get(\"suppressDragLeaveHidesColumns\");\r\n        setColumnsMoving(columns, true);\r\n      },\r\n      onDragStopped: () => setColumnsMoving(columns, false),\r\n      onDragCancelled: () => setColumnsMoving(columns, false),\r\n      onGridEnter: (dragItem) => {\r\n        if (hideColumnOnExit) {\r\n          const { columns: columns2 = [], visibleState } = dragItem ?? {};\r\n          const hasVisibleState = isGroup ? (col) => !visibleState || visibleState[col.getColId()] : () => true;\r\n          const unlockedColumns = columns2.filter(\r\n            (col) => !col.getColDef().lockVisible && hasVisibleState(col)\r\n          );\r\n          colModel.setColsVisible(unlockedColumns, true, \"uiColumnMoved\");\r\n        }\r\n      },\r\n      onGridExit: (dragItem) => {\r\n        if (hideColumnOnExit) {\r\n          const unlockedColumns = dragItem?.columns?.filter((col) => !col.getColDef().lockVisible) || [];\r\n          colModel.setColsVisible(unlockedColumns, false, \"uiColumnMoved\");\r\n        }\r\n      }\r\n    };\r\n    dragAndDrop.addDragSource(dragSource, true);\r\n    return dragSource;\r\n  }\r\n};\r\nfunction findGroupWidthId(columnGroup, id) {\r\n  while (columnGroup) {\r\n    if (columnGroup.getGroupId() === id) {\r\n      return columnGroup;\r\n    }\r\n    columnGroup = columnGroup.getParent();\r\n  }\r\n  return void 0;\r\n}\r\nfunction createDragItem(column) {\r\n  const visibleState = {};\r\n  visibleState[column.getId()] = column.isVisible();\r\n  return {\r\n    columns: [column],\r\n    visibleState,\r\n    containerType: column.pinned\r\n  };\r\n}\r\nfunction createDragItemForGroup(columnGroup, allCols) {\r\n  const allColumnsOriginalOrder = columnGroup.getProvidedColumnGroup().getLeafColumns();\r\n  const visibleState = {};\r\n  allColumnsOriginalOrder.forEach((column) => visibleState[column.getId()] = column.isVisible());\r\n  const allColumnsCurrentOrder = [];\r\n  allCols.forEach((column) => {\r\n    if (allColumnsOriginalOrder.indexOf(column) >= 0) {\r\n      allColumnsCurrentOrder.push(column);\r\n      _removeFromArray(allColumnsOriginalOrder, column);\r\n    }\r\n  });\r\n  allColumnsOriginalOrder.forEach((column) => allColumnsCurrentOrder.push(column));\r\n  const columnsInSplit = [];\r\n  const columnGroupColumns = columnGroup.getLeafColumns();\r\n  for (const col of allColumnsCurrentOrder) {\r\n    if (columnGroupColumns.indexOf(col) !== -1) {\r\n      columnsInSplit.push(col);\r\n    }\r\n  }\r\n  return {\r\n    columns: allColumnsCurrentOrder,\r\n    columnsInSplit,\r\n    visibleState,\r\n    containerType: columnsInSplit[0]?.pinned\r\n  };\r\n}\r\n\r\n// packages/ag-grid-community/src/columnMove/columnMoveModule.ts\r\nvar ColumnMoveModule = {\r\n  moduleName: \"ColumnMove\",\r\n  version: VERSION,\r\n  beans: [ColumnMoveService, ColumnAnimationService],\r\n  apiFunctions: {\r\n    moveColumnByIndex,\r\n    moveColumns\r\n  },\r\n  dependsOn: [SharedDragAndDropModule],\r\n  css: [columnMovingCSS]\r\n};\r\n\r\n// packages/ag-grid-community/src/rendering/autoWidthCalculator.ts\r\nvar AutoWidthCalculator = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"autoWidthCalc\";\r\n  }\r\n  postConstruct() {\r\n    this.beans.ctrlsSvc.whenReady(this, (p) => {\r\n      this.centerRowContainerCtrl = p.center;\r\n    });\r\n  }\r\n  // this is the trick: we create a dummy container and clone all the cells\r\n  // into the dummy, then check the dummy's width. then destroy the dummy\r\n  // as we don't need it any more.\r\n  // drawback: only the cells visible on the screen are considered\r\n  getPreferredWidthForColumn(column, skipHeader) {\r\n    const eHeaderCell = this.getHeaderCellForColumn(column);\r\n    if (!eHeaderCell) {\r\n      return -1;\r\n    }\r\n    const elements = this.beans.rowRenderer.getAllCellsNotSpanningForColumn(column);\r\n    if (!skipHeader) {\r\n      elements.push(eHeaderCell);\r\n    }\r\n    return this.getPreferredWidthForElements(elements);\r\n  }\r\n  getPreferredWidthForColumnGroup(columnGroup) {\r\n    const eHeaderCell = this.getHeaderCellForColumn(columnGroup);\r\n    if (!eHeaderCell) {\r\n      return -1;\r\n    }\r\n    return this.getPreferredWidthForElements([eHeaderCell]);\r\n  }\r\n  getPreferredWidthForElements(elements, extraPadding) {\r\n    const eDummyContainer = document.createElement(\"form\");\r\n    eDummyContainer.style.position = \"fixed\";\r\n    const eBodyContainer = this.centerRowContainerCtrl.eContainer;\r\n    elements.forEach((el) => this.cloneItemIntoDummy(el, eDummyContainer));\r\n    eBodyContainer.appendChild(eDummyContainer);\r\n    const dummyContainerWidth = eDummyContainer.offsetWidth;\r\n    eBodyContainer.removeChild(eDummyContainer);\r\n    extraPadding = extraPadding ?? this.gos.get(\"autoSizePadding\");\r\n    return dummyContainerWidth + extraPadding;\r\n  }\r\n  getHeaderCellForColumn(column) {\r\n    let element = null;\r\n    this.beans.ctrlsSvc.getHeaderRowContainerCtrls().forEach((container) => {\r\n      const res = container.getHtmlElementForColumnHeader(column);\r\n      if (res != null) {\r\n        element = res;\r\n      }\r\n    });\r\n    return element;\r\n  }\r\n  cloneItemIntoDummy(eCell, eDummyContainer) {\r\n    const eCellClone = eCell.cloneNode(true);\r\n    eCellClone.style.width = \"\";\r\n    eCellClone.style.position = \"static\";\r\n    eCellClone.style.left = \"\";\r\n    const eCloneParent = document.createElement(\"div\");\r\n    const eCloneParentClassList = eCloneParent.classList;\r\n    const isHeader = [\"ag-header-cell\", \"ag-header-group-cell\"].some((cls) => eCellClone.classList.contains(cls));\r\n    if (isHeader) {\r\n      eCloneParentClassList.add(\"ag-header\", \"ag-header-row\");\r\n      eCloneParent.style.position = \"static\";\r\n    } else {\r\n      eCloneParentClassList.add(\"ag-row\");\r\n    }\r\n    let pointer = eCell.parentElement;\r\n    while (pointer) {\r\n      const isRow = [\"ag-header-row\", \"ag-row\"].some((cls) => pointer.classList.contains(cls));\r\n      if (isRow) {\r\n        for (let i = 0; i < pointer.classList.length; i++) {\r\n          const item = pointer.classList[i];\r\n          if (item != \"ag-row-position-absolute\") {\r\n            eCloneParentClassList.add(item);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n      pointer = pointer.parentElement;\r\n    }\r\n    eCloneParent.appendChild(eCellClone);\r\n    eDummyContainer.appendChild(eCloneParent);\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/rendering/autoWidthModule.ts\r\nvar AutoWidthModule = {\r\n  moduleName: \"AutoWidth\",\r\n  version: VERSION,\r\n  beans: [AutoWidthCalculator]\r\n};\r\n\r\n// packages/ag-grid-community/src/columnResize/columnResizeApi.ts\r\nfunction setColumnWidths(beans, columnWidths, finished = true, source = \"api\") {\r\n  beans.colResize?.setColumnWidths(columnWidths, false, finished, source);\r\n}\r\n\r\n// packages/ag-grid-community/src/columnResize/groupResizeFeature.ts\r\nvar GroupResizeFeature = class extends BeanStub {\r\n  constructor(comp, eResize, pinned, columnGroup) {\r\n    super();\r\n    this.comp = comp;\r\n    this.eResize = eResize;\r\n    this.pinned = pinned;\r\n    this.columnGroup = columnGroup;\r\n  }\r\n  postConstruct() {\r\n    if (!this.columnGroup.isResizable()) {\r\n      this.comp.setResizableDisplayed(false);\r\n      return;\r\n    }\r\n    const { horizontalResizeSvc, gos, colAutosize } = this.beans;\r\n    const finishedWithResizeFunc = horizontalResizeSvc.addResizeBar({\r\n      eResizeBar: this.eResize,\r\n      onResizeStart: this.onResizeStart.bind(this),\r\n      onResizing: this.onResizing.bind(this, false),\r\n      onResizeEnd: this.onResizing.bind(this, true)\r\n    });\r\n    this.addDestroyFunc(finishedWithResizeFunc);\r\n    if (!gos.get(\"suppressAutoSize\") && colAutosize) {\r\n      this.addDestroyFunc(\r\n        colAutosize.addColumnGroupResize(\r\n          this.eResize,\r\n          this.columnGroup,\r\n          () => this.resizeLeafColumnsToFit(\"uiColumnResized\")\r\n        )\r\n      );\r\n    }\r\n  }\r\n  onResizeStart(shiftKey) {\r\n    const {\r\n      columnsToResize,\r\n      resizeStartWidth,\r\n      resizeRatios,\r\n      groupAfterColumns,\r\n      groupAfterStartWidth,\r\n      groupAfterRatios\r\n    } = this.getInitialValues(shiftKey);\r\n    this.resizeCols = columnsToResize;\r\n    this.resizeStartWidth = resizeStartWidth;\r\n    this.resizeRatios = resizeRatios;\r\n    this.resizeTakeFromCols = groupAfterColumns;\r\n    this.resizeTakeFromStartWidth = groupAfterStartWidth;\r\n    this.resizeTakeFromRatios = groupAfterRatios;\r\n    this.toggleColumnResizing(true);\r\n  }\r\n  onResizing(finished, resizeAmount, source = \"uiColumnResized\") {\r\n    const resizeAmountNormalised = this.normaliseDragChange(resizeAmount);\r\n    const width = this.resizeStartWidth + resizeAmountNormalised;\r\n    this.resizeColumnsFromLocalValues(width, source, finished);\r\n  }\r\n  getInitialValues(shiftKey) {\r\n    const getInitialSizeOfColumns = (columns) => columns.reduce((totalWidth, column) => totalWidth + column.getActualWidth(), 0);\r\n    const getSizeRatiosOfColumns = (columns, initialSizeOfColumns) => columns.map((column) => column.getActualWidth() / initialSizeOfColumns);\r\n    const columnsToResize = this.getColumnsToResize();\r\n    const resizeStartWidth = getInitialSizeOfColumns(columnsToResize);\r\n    const resizeRatios = getSizeRatiosOfColumns(columnsToResize, resizeStartWidth);\r\n    const columnSizeAndRatios = {\r\n      columnsToResize,\r\n      resizeStartWidth,\r\n      resizeRatios\r\n    };\r\n    let groupAfter = null;\r\n    if (shiftKey) {\r\n      groupAfter = this.beans.colGroupSvc?.getGroupAtDirection(this.columnGroup, \"After\") ?? null;\r\n    }\r\n    if (groupAfter) {\r\n      const takeFromLeafCols = groupAfter.getDisplayedLeafColumns();\r\n      const groupAfterColumns = columnSizeAndRatios.groupAfterColumns = takeFromLeafCols.filter(\r\n        (col) => col.isResizable()\r\n      );\r\n      const groupAfterStartWidth = columnSizeAndRatios.groupAfterStartWidth = getInitialSizeOfColumns(groupAfterColumns);\r\n      columnSizeAndRatios.groupAfterRatios = getSizeRatiosOfColumns(groupAfterColumns, groupAfterStartWidth);\r\n    } else {\r\n      columnSizeAndRatios.groupAfterColumns = void 0;\r\n      columnSizeAndRatios.groupAfterStartWidth = void 0;\r\n      columnSizeAndRatios.groupAfterRatios = void 0;\r\n    }\r\n    return columnSizeAndRatios;\r\n  }\r\n  resizeLeafColumnsToFit(source) {\r\n    const preferredSize = this.beans.autoWidthCalc.getPreferredWidthForColumnGroup(this.columnGroup);\r\n    const initialValues = this.getInitialValues();\r\n    if (preferredSize > initialValues.resizeStartWidth) {\r\n      this.resizeColumns(initialValues, preferredSize, source, true);\r\n    }\r\n  }\r\n  resizeColumnsFromLocalValues(totalWidth, source, finished = true) {\r\n    if (!this.resizeCols || !this.resizeRatios) {\r\n      return;\r\n    }\r\n    const initialValues = {\r\n      columnsToResize: this.resizeCols,\r\n      resizeStartWidth: this.resizeStartWidth,\r\n      resizeRatios: this.resizeRatios,\r\n      groupAfterColumns: this.resizeTakeFromCols,\r\n      groupAfterStartWidth: this.resizeTakeFromStartWidth,\r\n      groupAfterRatios: this.resizeTakeFromRatios\r\n    };\r\n    this.resizeColumns(initialValues, totalWidth, source, finished);\r\n  }\r\n  resizeColumns(initialValues, totalWidth, source, finished = true) {\r\n    const {\r\n      columnsToResize,\r\n      resizeStartWidth,\r\n      resizeRatios,\r\n      groupAfterColumns,\r\n      groupAfterStartWidth,\r\n      groupAfterRatios\r\n    } = initialValues;\r\n    const resizeSets = [];\r\n    resizeSets.push({\r\n      columns: columnsToResize,\r\n      ratios: resizeRatios,\r\n      width: totalWidth\r\n    });\r\n    if (groupAfterColumns) {\r\n      const diff = totalWidth - resizeStartWidth;\r\n      resizeSets.push({\r\n        columns: groupAfterColumns,\r\n        ratios: groupAfterRatios,\r\n        width: groupAfterStartWidth - diff\r\n      });\r\n    }\r\n    this.beans.colResize?.resizeColumnSets({\r\n      resizeSets,\r\n      finished,\r\n      source\r\n    });\r\n    if (finished) {\r\n      this.toggleColumnResizing(false);\r\n    }\r\n  }\r\n  toggleColumnResizing(resizing) {\r\n    this.comp.toggleCss(\"ag-column-resizing\", resizing);\r\n  }\r\n  getColumnsToResize() {\r\n    const leafCols = this.columnGroup.getDisplayedLeafColumns();\r\n    return leafCols.filter((col) => col.isResizable());\r\n  }\r\n  // optionally inverts the drag, depending on pinned and RTL\r\n  // note - this method is duplicated in RenderedHeaderCell - should refactor out?\r\n  normaliseDragChange(dragChange) {\r\n    let result = dragChange;\r\n    if (this.gos.get(\"enableRtl\")) {\r\n      if (this.pinned !== \"left\") {\r\n        result *= -1;\r\n      }\r\n    } else if (this.pinned === \"right\") {\r\n      result *= -1;\r\n    }\r\n    return result;\r\n  }\r\n  destroy() {\r\n    super.destroy();\r\n    this.resizeCols = void 0;\r\n    this.resizeRatios = void 0;\r\n    this.resizeTakeFromCols = void 0;\r\n    this.resizeTakeFromRatios = void 0;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/columnResize/resizeFeature.ts\r\nvar ResizeFeature = class extends BeanStub {\r\n  constructor(pinned, column, eResize, comp, ctrl) {\r\n    super();\r\n    this.pinned = pinned;\r\n    this.column = column;\r\n    this.eResize = eResize;\r\n    this.comp = comp;\r\n    this.ctrl = ctrl;\r\n  }\r\n  postConstruct() {\r\n    const destroyResizeFuncs = [];\r\n    let canResize;\r\n    let canAutosize;\r\n    const addResize = () => {\r\n      _setDisplayed(this.eResize, canResize);\r\n      if (!canResize) {\r\n        return;\r\n      }\r\n      const { horizontalResizeSvc, colAutosize } = this.beans;\r\n      const finishedWithResizeFunc = horizontalResizeSvc.addResizeBar({\r\n        eResizeBar: this.eResize,\r\n        onResizeStart: this.onResizeStart.bind(this),\r\n        onResizing: this.onResizing.bind(this, false),\r\n        onResizeEnd: this.onResizing.bind(this, true)\r\n      });\r\n      destroyResizeFuncs.push(finishedWithResizeFunc);\r\n      if (canAutosize && colAutosize) {\r\n        destroyResizeFuncs.push(colAutosize.addColumnAutosize(this.eResize, this.column));\r\n      }\r\n    };\r\n    const removeResize = () => {\r\n      destroyResizeFuncs.forEach((f) => f());\r\n      destroyResizeFuncs.length = 0;\r\n    };\r\n    const refresh = () => {\r\n      const resize = this.column.isResizable();\r\n      const autoSize = !this.gos.get(\"suppressAutoSize\") && !this.column.getColDef().suppressAutoSize;\r\n      const propertyChange = resize !== canResize || autoSize !== canAutosize;\r\n      if (propertyChange) {\r\n        canResize = resize;\r\n        canAutosize = autoSize;\r\n        removeResize();\r\n        addResize();\r\n      }\r\n    };\r\n    refresh();\r\n    this.addDestroyFunc(removeResize);\r\n    this.ctrl.setRefreshFunction(\"resize\", refresh);\r\n  }\r\n  onResizing(finished, resizeAmount) {\r\n    const { column: key, lastResizeAmount, resizeStartWidth, beans } = this;\r\n    const resizeAmountNormalised = this.normaliseResizeAmount(resizeAmount);\r\n    const newWidth = resizeStartWidth + resizeAmountNormalised;\r\n    const columnWidths = [{ key, newWidth }];\r\n    const { pinnedCols, ctrlsSvc, colResize } = beans;\r\n    if (this.column.getPinned()) {\r\n      const leftWidth = pinnedCols?.leftWidth ?? 0;\r\n      const rightWidth = pinnedCols?.rightWidth ?? 0;\r\n      const bodyWidth = _getInnerWidth(ctrlsSvc.getGridBodyCtrl().eBodyViewport) - 50;\r\n      if (leftWidth + rightWidth + (resizeAmountNormalised - lastResizeAmount) > bodyWidth) {\r\n        return;\r\n      }\r\n    }\r\n    this.lastResizeAmount = resizeAmountNormalised;\r\n    colResize?.setColumnWidths(columnWidths, this.resizeWithShiftKey, finished, \"uiColumnResized\");\r\n    if (finished) {\r\n      this.toggleColumnResizing(false);\r\n    }\r\n  }\r\n  onResizeStart(shiftKey) {\r\n    this.resizeStartWidth = this.column.getActualWidth();\r\n    this.lastResizeAmount = 0;\r\n    this.resizeWithShiftKey = shiftKey;\r\n    this.toggleColumnResizing(true);\r\n  }\r\n  toggleColumnResizing(resizing) {\r\n    this.column.resizing = resizing;\r\n    this.comp.toggleCss(\"ag-column-resizing\", resizing);\r\n  }\r\n  // optionally inverts the drag, depending on pinned and RTL\r\n  // note - this method is duplicated in RenderedHeaderGroupCell - should refactor out?\r\n  normaliseResizeAmount(dragChange) {\r\n    let result = dragChange;\r\n    const notPinningLeft = this.pinned !== \"left\";\r\n    const pinningRight = this.pinned === \"right\";\r\n    if (this.gos.get(\"enableRtl\")) {\r\n      if (notPinningLeft) {\r\n        result *= -1;\r\n      }\r\n    } else {\r\n      if (pinningRight) {\r\n        result *= -1;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/columnResize/columnResizeService.ts\r\nvar ColumnResizeService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"colResize\";\r\n  }\r\n  setColumnWidths(columnWidths, shiftKey, finished, source) {\r\n    const sets = [];\r\n    const { colModel, gos, visibleCols } = this.beans;\r\n    columnWidths.forEach((columnWidth) => {\r\n      const col = colModel.getColDefCol(columnWidth.key) || colModel.getCol(columnWidth.key);\r\n      if (!col) {\r\n        return;\r\n      }\r\n      sets.push({\r\n        width: columnWidth.newWidth,\r\n        ratios: [1],\r\n        columns: [col]\r\n      });\r\n      const defaultIsShift = gos.get(\"colResizeDefault\") === \"shift\";\r\n      if (defaultIsShift) {\r\n        shiftKey = !shiftKey;\r\n      }\r\n      if (shiftKey) {\r\n        const otherCol = visibleCols.getColAfter(col);\r\n        if (!otherCol) {\r\n          return;\r\n        }\r\n        const widthDiff = col.getActualWidth() - columnWidth.newWidth;\r\n        const otherColWidth = otherCol.getActualWidth() + widthDiff;\r\n        sets.push({\r\n          width: otherColWidth,\r\n          ratios: [1],\r\n          columns: [otherCol]\r\n        });\r\n      }\r\n    });\r\n    if (sets.length === 0) {\r\n      return;\r\n    }\r\n    this.resizeColumnSets({\r\n      resizeSets: sets,\r\n      finished,\r\n      source\r\n    });\r\n  }\r\n  // method takes sets of columns and resizes them. either all sets will be resized, or nothing\r\n  // be resized. this is used for example when user tries to resize a group and holds shift key,\r\n  // then both the current group (grows), and the adjacent group (shrinks), will get resized,\r\n  // so that's two sets for this method.\r\n  resizeColumnSets(params) {\r\n    const { resizeSets, finished, source } = params;\r\n    const passMinMaxCheck = !resizeSets || resizeSets.every((columnResizeSet) => checkMinAndMaxWidthsForSet(columnResizeSet));\r\n    if (!passMinMaxCheck) {\r\n      if (finished) {\r\n        const columns = resizeSets && resizeSets.length > 0 ? resizeSets[0].columns : null;\r\n        dispatchColumnResizedEvent(this.eventSvc, columns, finished, source);\r\n      }\r\n      return;\r\n    }\r\n    const changedCols = [];\r\n    const allResizedCols = [];\r\n    resizeSets.forEach((set) => {\r\n      const { width, columns, ratios } = set;\r\n      const newWidths = {};\r\n      const finishedCols = {};\r\n      columns.forEach((col) => allResizedCols.push(col));\r\n      let finishedColsGrew = true;\r\n      let loopCount = 0;\r\n      while (finishedColsGrew) {\r\n        loopCount++;\r\n        if (loopCount > 1e3) {\r\n          _error(31);\r\n          break;\r\n        }\r\n        finishedColsGrew = false;\r\n        const subsetCols = [];\r\n        let subsetRatioTotal = 0;\r\n        let pixelsToDistribute = width;\r\n        columns.forEach((col, index) => {\r\n          const thisColFinished = finishedCols[col.getId()];\r\n          if (thisColFinished) {\r\n            pixelsToDistribute -= newWidths[col.getId()];\r\n          } else {\r\n            subsetCols.push(col);\r\n            const ratioThisCol = ratios[index];\r\n            subsetRatioTotal += ratioThisCol;\r\n          }\r\n        });\r\n        const ratioScale = 1 / subsetRatioTotal;\r\n        subsetCols.forEach((col, index) => {\r\n          const lastCol = index === subsetCols.length - 1;\r\n          let colNewWidth;\r\n          if (lastCol) {\r\n            colNewWidth = pixelsToDistribute;\r\n          } else {\r\n            colNewWidth = Math.round(ratios[index] * width * ratioScale);\r\n            pixelsToDistribute -= colNewWidth;\r\n          }\r\n          const minWidth = col.getMinWidth();\r\n          const maxWidth = col.getMaxWidth();\r\n          if (colNewWidth < minWidth) {\r\n            colNewWidth = minWidth;\r\n            finishedCols[col.getId()] = true;\r\n            finishedColsGrew = true;\r\n          } else if (maxWidth > 0 && colNewWidth > maxWidth) {\r\n            colNewWidth = maxWidth;\r\n            finishedCols[col.getId()] = true;\r\n            finishedColsGrew = true;\r\n          }\r\n          newWidths[col.getId()] = colNewWidth;\r\n        });\r\n      }\r\n      columns.forEach((col) => {\r\n        const newWidth = newWidths[col.getId()];\r\n        const actualWidth = col.getActualWidth();\r\n        if (actualWidth !== newWidth) {\r\n          col.setActualWidth(newWidth, source);\r\n          changedCols.push(col);\r\n        }\r\n      });\r\n    });\r\n    const atLeastOneColChanged = changedCols.length > 0;\r\n    let flexedCols = [];\r\n    if (atLeastOneColChanged) {\r\n      const { colFlex, visibleCols, colViewport } = this.beans;\r\n      flexedCols = colFlex?.refreshFlexedColumns({\r\n        resizingCols: allResizedCols,\r\n        skipSetLeft: true\r\n      }) ?? [];\r\n      visibleCols.setLeftValues(source);\r\n      visibleCols.updateBodyWidths();\r\n      colViewport.checkViewportColumns();\r\n    }\r\n    const colsForEvent = allResizedCols.concat(flexedCols);\r\n    if (atLeastOneColChanged || finished) {\r\n      dispatchColumnResizedEvent(this.eventSvc, colsForEvent, finished, source, flexedCols);\r\n    }\r\n  }\r\n  resizeHeader(column, delta, shiftKey) {\r\n    if (!column.isResizable()) {\r\n      return;\r\n    }\r\n    const actualWidth = column.getActualWidth();\r\n    const minWidth = column.getMinWidth();\r\n    const maxWidth = column.getMaxWidth();\r\n    const newWidth = Math.min(Math.max(actualWidth + delta, minWidth), maxWidth);\r\n    this.setColumnWidths([{ key: column, newWidth }], shiftKey, true, \"uiColumnResized\");\r\n  }\r\n  createResizeFeature(pinned, column, eResize, comp, ctrl) {\r\n    return new ResizeFeature(pinned, column, eResize, comp, ctrl);\r\n  }\r\n  createGroupResizeFeature(comp, eResize, pinned, columnGroup) {\r\n    return new GroupResizeFeature(comp, eResize, pinned, columnGroup);\r\n  }\r\n};\r\nfunction checkMinAndMaxWidthsForSet(columnResizeSet) {\r\n  const { columns, width } = columnResizeSet;\r\n  let minWidthAccumulated = 0;\r\n  let maxWidthAccumulated = 0;\r\n  let maxWidthActive = true;\r\n  columns.forEach((col) => {\r\n    const minWidth = col.getMinWidth();\r\n    minWidthAccumulated += minWidth || 0;\r\n    const maxWidth = col.getMaxWidth();\r\n    if (maxWidth > 0) {\r\n      maxWidthAccumulated += maxWidth;\r\n    } else {\r\n      maxWidthActive = false;\r\n    }\r\n  });\r\n  const minWidthPasses = width >= minWidthAccumulated;\r\n  const maxWidthPasses = !maxWidthActive || width <= maxWidthAccumulated;\r\n  return minWidthPasses && maxWidthPasses;\r\n}\r\n\r\n// packages/ag-grid-community/src/columnResize/columnResizeModule.ts\r\nvar ColumnResizeModule = {\r\n  moduleName: \"ColumnResize\",\r\n  version: VERSION,\r\n  beans: [ColumnResizeService],\r\n  apiFunctions: {\r\n    setColumnWidths\r\n  },\r\n  dependsOn: [HorizontalResizeModule, AutoWidthModule]\r\n};\r\n\r\n// packages/ag-grid-community/src/headerRendering/cells/columnGroup/groupWidthFeature.ts\r\nvar GroupWidthFeature = class extends BeanStub {\r\n  constructor(comp, columnGroup) {\r\n    super();\r\n    // the children can change, we keep destroy functions related to listening to the children here\r\n    this.removeChildListenersFuncs = [];\r\n    this.columnGroup = columnGroup;\r\n    this.comp = comp;\r\n  }\r\n  postConstruct() {\r\n    this.addListenersToChildrenColumns();\r\n    this.addManagedListeners(this.columnGroup, {\r\n      displayedChildrenChanged: this.onDisplayedChildrenChanged.bind(this)\r\n    });\r\n    this.onWidthChanged();\r\n    this.addDestroyFunc(this.removeListenersOnChildrenColumns.bind(this));\r\n  }\r\n  addListenersToChildrenColumns() {\r\n    this.removeListenersOnChildrenColumns();\r\n    const widthChangedListener = this.onWidthChanged.bind(this);\r\n    this.columnGroup.getLeafColumns().forEach((column) => {\r\n      column.__addEventListener(\"widthChanged\", widthChangedListener);\r\n      column.__addEventListener(\"visibleChanged\", widthChangedListener);\r\n      this.removeChildListenersFuncs.push(() => {\r\n        column.__removeEventListener(\"widthChanged\", widthChangedListener);\r\n        column.__removeEventListener(\"visibleChanged\", widthChangedListener);\r\n      });\r\n    });\r\n  }\r\n  removeListenersOnChildrenColumns() {\r\n    this.removeChildListenersFuncs.forEach((func) => func());\r\n    this.removeChildListenersFuncs = [];\r\n  }\r\n  onDisplayedChildrenChanged() {\r\n    this.addListenersToChildrenColumns();\r\n    this.onWidthChanged();\r\n  }\r\n  onWidthChanged() {\r\n    const columnWidth = this.columnGroup.getActualWidth();\r\n    this.comp.setWidth(`${columnWidth}px`);\r\n    this.comp.toggleCss(\"ag-hidden\", columnWidth === 0);\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/headerRendering/cells/columnGroup/headerGroupCellCtrl.ts\r\nvar HeaderGroupCellCtrl = class extends AbstractHeaderCellCtrl {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.onSuppressColMoveChange = () => {\r\n      if (!this.isAlive() || this.isSuppressMoving()) {\r\n        this.removeDragSource();\r\n      } else {\r\n        if (!this.dragSource) {\r\n          this.setDragSource(this.eGui);\r\n        }\r\n      }\r\n    };\r\n  }\r\n  setComp(comp, eGui, eResize, eHeaderCompWrapper, compBean) {\r\n    const { column, beans } = this;\r\n    const { context, colNames, colHover, rangeSvc, colResize } = beans;\r\n    this.comp = comp;\r\n    compBean = setupCompBean(this, context, compBean);\r\n    this.setGui(eGui, compBean);\r\n    this.displayName = colNames.getDisplayNameForColumnGroup(column, \"header\");\r\n    this.refreshHeaderStyles();\r\n    this.addClasses();\r\n    this.setupMovingCss(compBean);\r\n    this.setupExpandable(compBean);\r\n    this.setupTooltip();\r\n    this.setupAutoHeight({\r\n      wrapperElement: eHeaderCompWrapper,\r\n      compBean\r\n    });\r\n    this.setupUserComp();\r\n    this.addHeaderMouseListeners(compBean);\r\n    this.addManagedPropertyListener(\"groupHeaderHeight\", this.refreshMaxHeaderHeight.bind(this));\r\n    this.refreshMaxHeaderHeight();\r\n    const pinned = this.rowCtrl.pinned;\r\n    const leafCols = column.getProvidedColumnGroup().getLeafColumns();\r\n    colHover?.createHoverFeature(compBean, leafCols, eGui);\r\n    rangeSvc?.createRangeHighlightFeature(compBean, column, comp);\r\n    compBean.createManagedBean(new SetLeftFeature(column, eGui, beans));\r\n    compBean.createManagedBean(new GroupWidthFeature(comp, column));\r\n    if (colResize) {\r\n      this.resizeFeature = compBean.createManagedBean(\r\n        colResize.createGroupResizeFeature(comp, eResize, pinned, column)\r\n      );\r\n    } else {\r\n      comp.setResizableDisplayed(false);\r\n    }\r\n    compBean.createManagedBean(\r\n      new ManagedFocusFeature(eGui, {\r\n        shouldStopEventPropagation: this.shouldStopEventPropagation.bind(this),\r\n        onTabKeyDown: () => void 0,\r\n        handleKeyDown: this.handleKeyDown.bind(this),\r\n        onFocusIn: this.onFocusIn.bind(this)\r\n      })\r\n    );\r\n    this.addHighlightListeners(compBean, leafCols);\r\n    compBean.addManagedPropertyListener(\"suppressMovableColumns\", this.onSuppressColMoveChange);\r\n    this.addResizeAndMoveKeyboardListeners(compBean);\r\n    compBean.addDestroyFunc(() => this.clearComponent());\r\n  }\r\n  getHeaderClassParams() {\r\n    const { column, beans } = this;\r\n    const colDef = column.getDefinition();\r\n    return _addGridCommonParams(beans.gos, {\r\n      colDef,\r\n      columnGroup: column,\r\n      floatingFilter: false\r\n    });\r\n  }\r\n  refreshMaxHeaderHeight() {\r\n    const { gos, comp } = this;\r\n    const groupHeaderHeight = gos.get(\"groupHeaderHeight\");\r\n    if (groupHeaderHeight != null) {\r\n      if (groupHeaderHeight === 0) {\r\n        comp.setHeaderWrapperHidden(true);\r\n      } else {\r\n        comp.setHeaderWrapperMaxHeight(groupHeaderHeight);\r\n      }\r\n    } else {\r\n      comp.setHeaderWrapperHidden(false);\r\n      comp.setHeaderWrapperMaxHeight(null);\r\n    }\r\n  }\r\n  addHighlightListeners(compBean, columns) {\r\n    if (!this.beans.gos.get(\"suppressMoveWhenColumnDragging\")) {\r\n      return;\r\n    }\r\n    for (const column of columns) {\r\n      compBean.addManagedListeners(column, {\r\n        headerHighlightChanged: this.onLeafColumnHighlightChanged.bind(this, column)\r\n      });\r\n    }\r\n  }\r\n  onLeafColumnHighlightChanged(column) {\r\n    const displayedColumns = this.column.getDisplayedLeafColumns();\r\n    const isFirst = displayedColumns[0] === column;\r\n    const isLast = _last(displayedColumns) === column;\r\n    if (!isFirst && !isLast) {\r\n      return;\r\n    }\r\n    const highlighted = column.getHighlighted();\r\n    const isColumnMoveAtThisLevel = !!this.rowCtrl.getHeaderCellCtrls().find((ctrl) => {\r\n      return ctrl.column.isMoving();\r\n    });\r\n    let beforeOn = false;\r\n    let afterOn = false;\r\n    if (isColumnMoveAtThisLevel) {\r\n      const isRtl = this.beans.gos.get(\"enableRtl\");\r\n      const isHighlightAfter = highlighted === 1 /* After */;\r\n      const isHighlightBefore = highlighted === 0 /* Before */;\r\n      if (isFirst) {\r\n        if (isRtl) {\r\n          afterOn = isHighlightAfter;\r\n        } else {\r\n          beforeOn = isHighlightBefore;\r\n        }\r\n      }\r\n      if (isLast) {\r\n        if (isRtl) {\r\n          beforeOn = isHighlightBefore;\r\n        } else {\r\n          afterOn = isHighlightAfter;\r\n        }\r\n      }\r\n    }\r\n    this.comp.toggleCss(\"ag-header-highlight-before\", beforeOn);\r\n    this.comp.toggleCss(\"ag-header-highlight-after\", afterOn);\r\n  }\r\n  resizeHeader(delta, shiftKey) {\r\n    const { resizeFeature } = this;\r\n    if (!resizeFeature) {\r\n      return;\r\n    }\r\n    const initialValues = resizeFeature.getInitialValues(shiftKey);\r\n    resizeFeature.resizeColumns(initialValues, initialValues.resizeStartWidth + delta, \"uiColumnResized\", true);\r\n  }\r\n  resizeLeafColumnsToFit(source) {\r\n    this.resizeFeature?.resizeLeafColumnsToFit(source);\r\n  }\r\n  setupUserComp() {\r\n    const { colGroupSvc, userCompFactory, gos, enterpriseMenuFactory } = this.beans;\r\n    const columnGroup = this.column;\r\n    const providedColumnGroup = columnGroup.getProvidedColumnGroup();\r\n    const params = _addGridCommonParams(gos, {\r\n      displayName: this.displayName,\r\n      columnGroup,\r\n      setExpanded: (expanded) => {\r\n        colGroupSvc.setColumnGroupOpened(providedColumnGroup, expanded, \"gridInitializing\");\r\n      },\r\n      setTooltip: (value, shouldDisplayTooltip) => {\r\n        gos.assertModuleRegistered(\"Tooltip\", 3);\r\n        this.setupTooltip(value, shouldDisplayTooltip);\r\n      },\r\n      showColumnMenu: (buttonElement, onClosedCallback) => enterpriseMenuFactory?.showMenuAfterButtonClick(\r\n        providedColumnGroup,\r\n        buttonElement,\r\n        \"columnMenu\",\r\n        onClosedCallback\r\n      ),\r\n      showColumnMenuAfterMouseClick: (mouseEvent, onClosedCallback) => enterpriseMenuFactory?.showMenuAfterMouseEvent(\r\n        providedColumnGroup,\r\n        mouseEvent,\r\n        \"columnMenu\",\r\n        onClosedCallback\r\n      ),\r\n      eGridHeader: this.eGui\r\n    });\r\n    const compDetails = _getHeaderGroupCompDetails(userCompFactory, params);\r\n    if (compDetails) {\r\n      this.comp.setUserCompDetails(compDetails);\r\n    }\r\n  }\r\n  addHeaderMouseListeners(compBean) {\r\n    const listener = (e) => this.handleMouseOverChange(e.type === \"mouseenter\");\r\n    const clickListener = () => this.dispatchColumnMouseEvent(\"columnHeaderClicked\", this.column.getProvidedColumnGroup());\r\n    const contextMenuListener = (event) => this.handleContextMenuMouseEvent(event, void 0, this.column.getProvidedColumnGroup());\r\n    compBean.addManagedListeners(this.eGui, {\r\n      mouseenter: listener,\r\n      mouseleave: listener,\r\n      click: clickListener,\r\n      contextmenu: contextMenuListener\r\n    });\r\n  }\r\n  handleMouseOverChange(isMouseOver) {\r\n    this.eventSvc.dispatchEvent({\r\n      type: isMouseOver ? \"columnHeaderMouseOver\" : \"columnHeaderMouseLeave\",\r\n      column: this.column.getProvidedColumnGroup()\r\n    });\r\n  }\r\n  setupTooltip(value, shouldDisplayTooltip) {\r\n    this.tooltipFeature = this.beans.tooltipSvc?.setupHeaderGroupTooltip(\r\n      this.tooltipFeature,\r\n      this,\r\n      value,\r\n      shouldDisplayTooltip\r\n    );\r\n  }\r\n  setupExpandable(compBean) {\r\n    const providedColGroup = this.column.getProvidedColumnGroup();\r\n    this.refreshExpanded();\r\n    const listener = this.refreshExpanded.bind(this);\r\n    compBean.addManagedListeners(providedColGroup, {\r\n      expandedChanged: listener,\r\n      expandableChanged: listener\r\n    });\r\n  }\r\n  refreshExpanded() {\r\n    const { column } = this;\r\n    this.expandable = column.isExpandable();\r\n    const expanded = column.isExpanded();\r\n    if (this.expandable) {\r\n      this.comp.setAriaExpanded(expanded ? \"true\" : \"false\");\r\n    } else {\r\n      this.comp.setAriaExpanded(void 0);\r\n    }\r\n    this.refreshHeaderStyles();\r\n  }\r\n  addClasses() {\r\n    const { column } = this;\r\n    const colGroupDef = column.getColGroupDef();\r\n    const classes = _getHeaderClassesFromColDef(colGroupDef, this.gos, null, column);\r\n    if (column.isPadding()) {\r\n      classes.push(\"ag-header-group-cell-no-group\");\r\n      const leafCols = column.getLeafColumns();\r\n      if (leafCols.every((col) => col.isSpanHeaderHeight())) {\r\n        classes.push(\"ag-header-span-height\");\r\n      }\r\n    } else {\r\n      classes.push(\"ag-header-group-cell-with-group\");\r\n      if (colGroupDef?.wrapHeaderText) {\r\n        classes.push(\"ag-header-cell-wrap-text\");\r\n      }\r\n    }\r\n    classes.forEach((c) => this.comp.toggleCss(c, true));\r\n  }\r\n  setupMovingCss(compBean) {\r\n    const { column } = this;\r\n    const providedColumnGroup = column.getProvidedColumnGroup();\r\n    const leafColumns = providedColumnGroup.getLeafColumns();\r\n    const listener = () => this.comp.toggleCss(\"ag-header-cell-moving\", column.isMoving());\r\n    leafColumns.forEach((col) => {\r\n      compBean.addManagedListeners(col, { movingChanged: listener });\r\n    });\r\n    listener();\r\n  }\r\n  onFocusIn(e) {\r\n    if (!this.eGui.contains(e.relatedTarget)) {\r\n      this.focusThis();\r\n    }\r\n  }\r\n  handleKeyDown(e) {\r\n    super.handleKeyDown(e);\r\n    const wrapperHasFocus = this.getWrapperHasFocus();\r\n    if (!this.expandable || !wrapperHasFocus) {\r\n      return;\r\n    }\r\n    if (e.key === KeyCode.ENTER) {\r\n      const column = this.column;\r\n      const newExpandedValue = !column.isExpanded();\r\n      this.beans.colGroupSvc.setColumnGroupOpened(\r\n        column.getProvidedColumnGroup(),\r\n        newExpandedValue,\r\n        \"uiColumnExpanded\"\r\n      );\r\n    }\r\n  }\r\n  // unlike columns, this will only get called once, as we don't react on props on column groups\r\n  // (we will always destroy and recreate this comp if something changes)\r\n  setDragSource(eHeaderGroup) {\r\n    if (!this.isAlive() || this.isSuppressMoving()) {\r\n      return;\r\n    }\r\n    this.removeDragSource();\r\n    if (!eHeaderGroup) {\r\n      return;\r\n    }\r\n    this.dragSource = this.beans.colMoves?.setDragSourceForHeader(eHeaderGroup, this.column, this.displayName) ?? null;\r\n  }\r\n  isSuppressMoving() {\r\n    return this.gos.get(\"suppressMovableColumns\") || this.column.getLeafColumns().some((column) => column.getColDef().suppressMovable || column.getColDef().lockPosition);\r\n  }\r\n  destroy() {\r\n    this.tooltipFeature = this.destroyBean(this.tooltipFeature);\r\n    super.destroy();\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/columns/columnGroups/columnGroupApi.ts\r\nfunction setColumnGroupOpened(beans, group, newValue) {\r\n  beans.colGroupSvc?.setColumnGroupOpened(group, newValue, \"api\");\r\n}\r\nfunction getColumnGroup(beans, name, instanceId) {\r\n  return beans.colGroupSvc?.getColumnGroup(name, instanceId) ?? null;\r\n}\r\nfunction getProvidedColumnGroup(beans, name) {\r\n  return beans.colGroupSvc?.getProvidedColGroup(name) ?? null;\r\n}\r\nfunction getDisplayNameForColumnGroup(beans, columnGroup, location) {\r\n  return beans.colNames.getDisplayNameForColumnGroup(columnGroup, location) || \"\";\r\n}\r\nfunction getColumnGroupState(beans) {\r\n  return beans.colGroupSvc?.getColumnGroupState() ?? [];\r\n}\r\nfunction setColumnGroupState(beans, stateItems) {\r\n  beans.colGroupSvc?.setColumnGroupState(stateItems, \"api\");\r\n}\r\nfunction resetColumnGroupState(beans) {\r\n  beans.colGroupSvc?.resetColumnGroupState(\"api\");\r\n}\r\nfunction getLeftDisplayedColumnGroups(beans) {\r\n  return beans.visibleCols.treeLeft;\r\n}\r\nfunction getCenterDisplayedColumnGroups(beans) {\r\n  return beans.visibleCols.treeCenter;\r\n}\r\nfunction getRightDisplayedColumnGroups(beans) {\r\n  return beans.visibleCols.treeRight;\r\n}\r\nfunction getAllDisplayedColumnGroups(beans) {\r\n  return beans.visibleCols.getAllTrees();\r\n}\r\n\r\n// packages/ag-grid-community/src/columns/visibleColsService.ts\r\nfunction _removeAllFromUnorderedArray(array, toRemove) {\r\n  for (let i = 0; i < toRemove.length; i++) {\r\n    const index = array.indexOf(toRemove[i]);\r\n    if (index >= 0) {\r\n      array[index] = array[array.length - 1];\r\n      array.pop();\r\n    }\r\n  }\r\n}\r\nvar VisibleColsService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"visibleCols\";\r\n    // for fast lookup, to see if a column or group is still visible\r\n    this.colsAndGroupsMap = {};\r\n    // leave level columns of the displayed trees\r\n    this.leftCols = [];\r\n    this.rightCols = [];\r\n    this.centerCols = [];\r\n    // all three lists above combined\r\n    this.allCols = [];\r\n    this.headerGroupRowCount = 0;\r\n    // used by:\r\n    // + angularGrid -> for setting body width\r\n    // + rowController -> setting main row widths (when inserting and resizing)\r\n    // need to cache this\r\n    this.bodyWidth = 0;\r\n    this.leftWidth = 0;\r\n    this.rightWidth = 0;\r\n    this.isBodyWidthDirty = true;\r\n  }\r\n  refresh(source, skipTreeBuild = false) {\r\n    const { colFlex, colModel, colGroupSvc, colViewport, selectionColSvc } = this.beans;\r\n    if (!skipTreeBuild) {\r\n      this.buildTrees(colModel, colGroupSvc);\r\n    }\r\n    colGroupSvc?.updateOpenClosedVisibility();\r\n    this.leftCols = pickDisplayedCols(this.treeLeft);\r\n    this.centerCols = pickDisplayedCols(this.treeCenter);\r\n    this.rightCols = pickDisplayedCols(this.treeRight);\r\n    selectionColSvc?.refreshVisibility(this.leftCols, this.centerCols, this.rightCols);\r\n    this.joinColsAriaOrder(colModel);\r\n    this.joinCols();\r\n    this.headerGroupRowCount = this.getHeaderRowCount();\r\n    this.setLeftValues(source);\r\n    this.autoHeightCols = this.allCols.filter((col) => col.isAutoHeight());\r\n    colFlex?.refreshFlexedColumns();\r\n    this.updateBodyWidths();\r\n    this.setFirstRightAndLastLeftPinned(colModel, this.leftCols, this.rightCols, source);\r\n    colViewport.checkViewportColumns(false);\r\n    this.eventSvc.dispatchEvent({\r\n      type: \"displayedColumnsChanged\",\r\n      source\r\n    });\r\n  }\r\n  getHeaderRowCount() {\r\n    if (!this.gos.get(\"hidePaddedHeaderRows\")) {\r\n      return this.beans.colModel.cols.treeDepth;\r\n    }\r\n    let headerGroupRowCount = 0;\r\n    for (const col of this.allCols) {\r\n      let parent = col.getParent();\r\n      while (parent) {\r\n        if (!parent.isPadding()) {\r\n          const level = parent.getProvidedColumnGroup().getLevel() + 1;\r\n          if (level > headerGroupRowCount) {\r\n            headerGroupRowCount = level;\r\n          }\r\n          break;\r\n        }\r\n        parent = parent.getParent();\r\n      }\r\n    }\r\n    return headerGroupRowCount;\r\n  }\r\n  // after setColumnWidth or updateGroupsAndPresentedCols\r\n  updateBodyWidths() {\r\n    const newBodyWidth = getWidthOfColsInList(this.centerCols);\r\n    const newLeftWidth = getWidthOfColsInList(this.leftCols);\r\n    const newRightWidth = getWidthOfColsInList(this.rightCols);\r\n    this.isBodyWidthDirty = this.bodyWidth !== newBodyWidth;\r\n    const atLeastOneChanged = this.bodyWidth !== newBodyWidth || this.leftWidth !== newLeftWidth || this.rightWidth !== newRightWidth;\r\n    if (atLeastOneChanged) {\r\n      this.bodyWidth = newBodyWidth;\r\n      this.leftWidth = newLeftWidth;\r\n      this.rightWidth = newRightWidth;\r\n      this.eventSvc.dispatchEvent({\r\n        type: \"columnContainerWidthChanged\"\r\n      });\r\n      this.eventSvc.dispatchEvent({\r\n        type: \"displayedColumnsWidthChanged\"\r\n      });\r\n    }\r\n  }\r\n  // sets the left pixel position of each column\r\n  setLeftValues(source) {\r\n    this.setLeftValuesOfCols(source);\r\n    this.setLeftValuesOfGroups();\r\n  }\r\n  setFirstRightAndLastLeftPinned(colModel, leftCols, rightCols, source) {\r\n    let lastLeft;\r\n    let firstRight;\r\n    if (this.gos.get(\"enableRtl\")) {\r\n      lastLeft = leftCols ? leftCols[0] : null;\r\n      firstRight = rightCols ? _last(rightCols) : null;\r\n    } else {\r\n      lastLeft = leftCols ? _last(leftCols) : null;\r\n      firstRight = rightCols ? rightCols[0] : null;\r\n    }\r\n    colModel.getCols().forEach((col) => {\r\n      col.setLastLeftPinned(col === lastLeft, source);\r\n      col.setFirstRightPinned(col === firstRight, source);\r\n    });\r\n  }\r\n  buildTrees(colModel, columnGroupSvc) {\r\n    const cols = colModel.getColsToShow();\r\n    const leftCols = cols.filter((col) => col.getPinned() == \"left\");\r\n    const rightCols = cols.filter((col) => col.getPinned() == \"right\");\r\n    const centerCols = cols.filter((col) => col.getPinned() != \"left\" && col.getPinned() != \"right\");\r\n    const idCreator = new GroupInstanceIdCreator();\r\n    const createGroups = (params) => {\r\n      return columnGroupSvc ? columnGroupSvc.createColumnGroups(params) : params.columns;\r\n    };\r\n    this.treeLeft = createGroups({\r\n      columns: leftCols,\r\n      idCreator,\r\n      pinned: \"left\",\r\n      oldDisplayedGroups: this.treeLeft\r\n    });\r\n    this.treeRight = createGroups({\r\n      columns: rightCols,\r\n      idCreator,\r\n      pinned: \"right\",\r\n      oldDisplayedGroups: this.treeRight\r\n    });\r\n    this.treeCenter = createGroups({\r\n      columns: centerCols,\r\n      idCreator,\r\n      pinned: null,\r\n      oldDisplayedGroups: this.treeCenter\r\n    });\r\n    this.updateColsAndGroupsMap();\r\n  }\r\n  clear() {\r\n    this.leftCols = [];\r\n    this.rightCols = [];\r\n    this.centerCols = [];\r\n    this.allCols = [];\r\n    this.ariaOrderColumns = [];\r\n  }\r\n  joinColsAriaOrder(colModel) {\r\n    const allColumns = colModel.getCols();\r\n    const pinnedLeft = [];\r\n    const center = [];\r\n    const pinnedRight = [];\r\n    for (const col of allColumns) {\r\n      const pinned = col.getPinned();\r\n      if (!pinned) {\r\n        center.push(col);\r\n      } else if (pinned === true || pinned === \"left\") {\r\n        pinnedLeft.push(col);\r\n      } else {\r\n        pinnedRight.push(col);\r\n      }\r\n    }\r\n    this.ariaOrderColumns = pinnedLeft.concat(center).concat(pinnedRight);\r\n  }\r\n  getAriaColIndex(colOrGroup) {\r\n    let col;\r\n    if (isColumnGroup(colOrGroup)) {\r\n      col = colOrGroup.getLeafColumns()[0];\r\n    } else {\r\n      col = colOrGroup;\r\n    }\r\n    return this.ariaOrderColumns.indexOf(col) + 1;\r\n  }\r\n  setLeftValuesOfGroups() {\r\n    [this.treeLeft, this.treeRight, this.treeCenter].forEach((columns) => {\r\n      columns.forEach((column) => {\r\n        if (isColumnGroup(column)) {\r\n          const columnGroup = column;\r\n          columnGroup.checkLeft();\r\n        }\r\n      });\r\n    });\r\n  }\r\n  setLeftValuesOfCols(source) {\r\n    const { colModel } = this.beans;\r\n    const primaryCols = colModel.getColDefCols();\r\n    if (!primaryCols) {\r\n      return;\r\n    }\r\n    const allColumns = colModel.getCols().slice(0);\r\n    const doingRtl = this.gos.get(\"enableRtl\");\r\n    [this.leftCols, this.rightCols, this.centerCols].forEach((columns) => {\r\n      if (doingRtl) {\r\n        let left = getWidthOfColsInList(columns);\r\n        columns.forEach((column) => {\r\n          left -= column.getActualWidth();\r\n          column.setLeft(left, source);\r\n        });\r\n      } else {\r\n        let left = 0;\r\n        columns.forEach((column) => {\r\n          column.setLeft(left, source);\r\n          left += column.getActualWidth();\r\n        });\r\n      }\r\n      _removeAllFromUnorderedArray(allColumns, columns);\r\n    });\r\n    allColumns.forEach((column) => {\r\n      column.setLeft(null, source);\r\n    });\r\n  }\r\n  joinCols() {\r\n    if (this.gos.get(\"enableRtl\")) {\r\n      this.allCols = this.rightCols.concat(this.centerCols).concat(this.leftCols);\r\n    } else {\r\n      this.allCols = this.leftCols.concat(this.centerCols).concat(this.rightCols);\r\n    }\r\n  }\r\n  getAllTrees() {\r\n    if (this.treeLeft && this.treeRight && this.treeCenter) {\r\n      return this.treeLeft.concat(this.treeCenter).concat(this.treeRight);\r\n    }\r\n    return null;\r\n  }\r\n  // gridPanel -> ensureColumnVisible\r\n  isColDisplayed(column) {\r\n    return this.allCols.indexOf(column) >= 0;\r\n  }\r\n  getLeftColsForRow(rowNode) {\r\n    const {\r\n      leftCols,\r\n      beans: { colModel }\r\n    } = this;\r\n    const colSpanActive = colModel.colSpanActive;\r\n    if (!colSpanActive) {\r\n      return leftCols;\r\n    }\r\n    return this.getColsForRow(rowNode, leftCols);\r\n  }\r\n  getRightColsForRow(rowNode) {\r\n    const {\r\n      rightCols,\r\n      beans: { colModel }\r\n    } = this;\r\n    const colSpanActive = colModel.colSpanActive;\r\n    if (!colSpanActive) {\r\n      return rightCols;\r\n    }\r\n    return this.getColsForRow(rowNode, rightCols);\r\n  }\r\n  getColsForRow(rowNode, displayedColumns, filterCallback, emptySpaceBeforeColumn) {\r\n    const result = [];\r\n    let lastConsideredCol = null;\r\n    for (let i = 0; i < displayedColumns.length; i++) {\r\n      const col = displayedColumns[i];\r\n      const maxAllowedColSpan = displayedColumns.length - i;\r\n      const colSpan = Math.min(col.getColSpan(rowNode), maxAllowedColSpan);\r\n      const columnsToCheckFilter = [col];\r\n      if (colSpan > 1) {\r\n        const colsToRemove = colSpan - 1;\r\n        for (let j = 1; j <= colsToRemove; j++) {\r\n          columnsToCheckFilter.push(displayedColumns[i + j]);\r\n        }\r\n        i += colsToRemove;\r\n      }\r\n      let filterPasses;\r\n      if (filterCallback) {\r\n        filterPasses = false;\r\n        columnsToCheckFilter.forEach((colForFilter) => {\r\n          if (filterCallback(colForFilter)) {\r\n            filterPasses = true;\r\n          }\r\n        });\r\n      } else {\r\n        filterPasses = true;\r\n      }\r\n      if (filterPasses) {\r\n        if (result.length === 0 && lastConsideredCol) {\r\n          const gapBeforeColumn = emptySpaceBeforeColumn ? emptySpaceBeforeColumn(col) : false;\r\n          if (gapBeforeColumn) {\r\n            result.push(lastConsideredCol);\r\n          }\r\n        }\r\n        result.push(col);\r\n      }\r\n      lastConsideredCol = col;\r\n    }\r\n    return result;\r\n  }\r\n  getContainerWidth(pinned) {\r\n    switch (pinned) {\r\n      case \"left\":\r\n        return this.leftWidth;\r\n      case \"right\":\r\n        return this.rightWidth;\r\n      default:\r\n        return this.bodyWidth;\r\n    }\r\n  }\r\n  getColBefore(col) {\r\n    const allDisplayedColumns = this.allCols;\r\n    const oldIndex = allDisplayedColumns.indexOf(col);\r\n    if (oldIndex > 0) {\r\n      return allDisplayedColumns[oldIndex - 1];\r\n    }\r\n    return null;\r\n  }\r\n  isPinningLeft() {\r\n    return this.leftCols.length > 0;\r\n  }\r\n  isPinningRight() {\r\n    return this.rightCols.length > 0;\r\n  }\r\n  updateColsAndGroupsMap() {\r\n    this.colsAndGroupsMap = {};\r\n    const func = (child) => {\r\n      this.colsAndGroupsMap[child.getUniqueId()] = child;\r\n    };\r\n    depthFirstAllColumnTreeSearch(this.treeCenter, false, func);\r\n    depthFirstAllColumnTreeSearch(this.treeLeft, false, func);\r\n    depthFirstAllColumnTreeSearch(this.treeRight, false, func);\r\n  }\r\n  isVisible(item) {\r\n    const fromMap = this.colsAndGroupsMap[item.getUniqueId()];\r\n    return fromMap === item;\r\n  }\r\n  getFirstColumn() {\r\n    const isRtl = this.gos.get(\"enableRtl\");\r\n    const queryOrder = [\"leftCols\", \"centerCols\", \"rightCols\"];\r\n    if (isRtl) {\r\n      queryOrder.reverse();\r\n    }\r\n    for (let i = 0; i < queryOrder.length; i++) {\r\n      const container = this[queryOrder[i]];\r\n      if (container.length) {\r\n        return isRtl ? _last(container) : container[0];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  // used by:\r\n  // + rowRenderer -> for navigation\r\n  getColAfter(col) {\r\n    const allDisplayedColumns = this.allCols;\r\n    const oldIndex = allDisplayedColumns.indexOf(col);\r\n    if (oldIndex < allDisplayedColumns.length - 1) {\r\n      return allDisplayedColumns[oldIndex + 1];\r\n    }\r\n    return null;\r\n  }\r\n  // used by:\r\n  // + angularGrid -> setting pinned body width\r\n  // note: this should be cached\r\n  getColsLeftWidth() {\r\n    return getWidthOfColsInList(this.leftCols);\r\n  }\r\n  // note: this should be cached\r\n  getDisplayedColumnsRightWidth() {\r\n    return getWidthOfColsInList(this.rightCols);\r\n  }\r\n  isColAtEdge(col, edge) {\r\n    const allColumns = this.allCols;\r\n    if (!allColumns.length) {\r\n      return false;\r\n    }\r\n    const isFirst = edge === \"first\";\r\n    let columnToCompare;\r\n    if (isColumnGroup(col)) {\r\n      const leafColumns = col.getDisplayedLeafColumns();\r\n      if (!leafColumns.length) {\r\n        return false;\r\n      }\r\n      columnToCompare = isFirst ? leafColumns[0] : _last(leafColumns);\r\n    } else {\r\n      columnToCompare = col;\r\n    }\r\n    return (isFirst ? allColumns[0] : _last(allColumns)) === columnToCompare;\r\n  }\r\n};\r\nfunction depthFirstAllColumnTreeSearch(tree, useDisplayedChildren, callback) {\r\n  if (!tree) {\r\n    return;\r\n  }\r\n  for (let i = 0; i < tree.length; i++) {\r\n    const child = tree[i];\r\n    if (isColumnGroup(child)) {\r\n      const childTree = useDisplayedChildren ? child.getDisplayedChildren() : child.getChildren();\r\n      depthFirstAllColumnTreeSearch(childTree, useDisplayedChildren, callback);\r\n    }\r\n    callback(child);\r\n  }\r\n}\r\nfunction pickDisplayedCols(tree) {\r\n  const res = [];\r\n  depthFirstAllColumnTreeSearch(tree, true, (child) => {\r\n    if (isColumn(child)) {\r\n      res.push(child);\r\n    }\r\n  });\r\n  return res;\r\n}\r\n\r\n// packages/ag-grid-community/src/columns/columnGroups/columnGroupService.ts\r\nvar ColumnGroupService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"colGroupSvc\";\r\n  }\r\n  getColumnGroupState() {\r\n    const columnGroupState = [];\r\n    const gridBalancedTree = this.beans.colModel.getColTree();\r\n    depthFirstOriginalTreeSearch(null, gridBalancedTree, (node) => {\r\n      if (isProvidedColumnGroup(node)) {\r\n        columnGroupState.push({\r\n          groupId: node.getGroupId(),\r\n          open: node.isExpanded()\r\n        });\r\n      }\r\n    });\r\n    return columnGroupState;\r\n  }\r\n  resetColumnGroupState(source) {\r\n    const primaryColumnTree = this.beans.colModel.getColDefColTree();\r\n    if (!primaryColumnTree) {\r\n      return;\r\n    }\r\n    const stateItems = [];\r\n    depthFirstOriginalTreeSearch(null, primaryColumnTree, (child) => {\r\n      if (isProvidedColumnGroup(child)) {\r\n        const colGroupDef = child.getColGroupDef();\r\n        const groupState = {\r\n          groupId: child.getGroupId(),\r\n          open: !colGroupDef ? void 0 : colGroupDef.openByDefault\r\n        };\r\n        stateItems.push(groupState);\r\n      }\r\n    });\r\n    this.setColumnGroupState(stateItems, source);\r\n  }\r\n  setColumnGroupState(stateItems, source) {\r\n    const { colModel, colAnimation, visibleCols, eventSvc } = this.beans;\r\n    const gridBalancedTree = colModel.getColTree();\r\n    if (!gridBalancedTree.length) {\r\n      return;\r\n    }\r\n    colAnimation?.start();\r\n    const impactedGroups = [];\r\n    stateItems.forEach((stateItem) => {\r\n      const groupKey = stateItem.groupId;\r\n      const newValue = stateItem.open;\r\n      const providedColumnGroup = this.getProvidedColGroup(groupKey);\r\n      if (!providedColumnGroup) {\r\n        return;\r\n      }\r\n      if (providedColumnGroup.isExpanded() === newValue) {\r\n        return;\r\n      }\r\n      providedColumnGroup.setExpanded(newValue);\r\n      impactedGroups.push(providedColumnGroup);\r\n    });\r\n    visibleCols.refresh(source, true);\r\n    if (impactedGroups.length) {\r\n      eventSvc.dispatchEvent({\r\n        type: \"columnGroupOpened\",\r\n        columnGroup: impactedGroups.length === 1 ? impactedGroups[0] : void 0,\r\n        columnGroups: impactedGroups\r\n      });\r\n    }\r\n    colAnimation?.finish();\r\n  }\r\n  // called by headerRenderer - when a header is opened or closed\r\n  setColumnGroupOpened(key, newValue, source) {\r\n    let keyAsString;\r\n    if (isProvidedColumnGroup(key)) {\r\n      keyAsString = key.getId();\r\n    } else {\r\n      keyAsString = key || \"\";\r\n    }\r\n    this.setColumnGroupState([{ groupId: keyAsString, open: newValue }], source);\r\n  }\r\n  getProvidedColGroup(key) {\r\n    let res = null;\r\n    depthFirstOriginalTreeSearch(null, this.beans.colModel.getColTree(), (node) => {\r\n      if (isProvidedColumnGroup(node)) {\r\n        if (node.getId() === key) {\r\n          res = node;\r\n        }\r\n      }\r\n    });\r\n    return res;\r\n  }\r\n  getGroupAtDirection(columnGroup, direction) {\r\n    const requiredLevel = columnGroup.getProvidedColumnGroup().getLevel() + columnGroup.getPaddingLevel();\r\n    const colGroupLeafColumns = columnGroup.getDisplayedLeafColumns();\r\n    const col = direction === \"After\" ? _last(colGroupLeafColumns) : colGroupLeafColumns[0];\r\n    const getDisplayColMethod = `getCol${direction}`;\r\n    while (true) {\r\n      const column = this.beans.visibleCols[getDisplayColMethod](col);\r\n      if (!column) {\r\n        return null;\r\n      }\r\n      const groupPointer = this.getColGroupAtLevel(column, requiredLevel);\r\n      if (groupPointer !== columnGroup) {\r\n        return groupPointer;\r\n      }\r\n    }\r\n  }\r\n  getColGroupAtLevel(column, level) {\r\n    let groupPointer = column.getParent();\r\n    let originalGroupLevel;\r\n    let groupPointerLevel;\r\n    while (true) {\r\n      const groupPointerProvidedColumnGroup = groupPointer.getProvidedColumnGroup();\r\n      originalGroupLevel = groupPointerProvidedColumnGroup.getLevel();\r\n      groupPointerLevel = groupPointer.getPaddingLevel();\r\n      if (originalGroupLevel + groupPointerLevel <= level) {\r\n        break;\r\n      }\r\n      groupPointer = groupPointer.getParent();\r\n    }\r\n    return groupPointer;\r\n  }\r\n  updateOpenClosedVisibility() {\r\n    const allColumnGroups = this.beans.visibleCols.getAllTrees();\r\n    depthFirstAllColumnTreeSearch(allColumnGroups, false, (child) => {\r\n      if (isColumnGroup(child)) {\r\n        child.calculateDisplayedColumns();\r\n      }\r\n    });\r\n  }\r\n  // returns the group with matching colId and instanceId. If instanceId is missing,\r\n  // matches only on the colId.\r\n  getColumnGroup(colId, partId) {\r\n    if (!colId) {\r\n      return null;\r\n    }\r\n    if (isColumnGroup(colId)) {\r\n      return colId;\r\n    }\r\n    const allColumnGroups = this.beans.visibleCols.getAllTrees();\r\n    const checkPartId = typeof partId === \"number\";\r\n    let result = null;\r\n    depthFirstAllColumnTreeSearch(allColumnGroups, false, (child) => {\r\n      if (isColumnGroup(child)) {\r\n        const columnGroup = child;\r\n        let matched;\r\n        if (checkPartId) {\r\n          matched = colId === columnGroup.getGroupId() && partId === columnGroup.getPartId();\r\n        } else {\r\n          matched = colId === columnGroup.getGroupId();\r\n        }\r\n        if (matched) {\r\n          result = columnGroup;\r\n        }\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  createColumnGroups(params) {\r\n    const { columns, idCreator, pinned, oldDisplayedGroups, isStandaloneStructure } = params;\r\n    const oldColumnsMapped = this.mapOldGroupsById(oldDisplayedGroups);\r\n    const topLevelResultCols = [];\r\n    let groupsOrColsAtCurrentLevel = columns;\r\n    while (groupsOrColsAtCurrentLevel.length) {\r\n      const currentlyIterating = groupsOrColsAtCurrentLevel;\r\n      groupsOrColsAtCurrentLevel = [];\r\n      let lastGroupedColIdx = 0;\r\n      const createGroupToIndex = (to) => {\r\n        const from = lastGroupedColIdx;\r\n        lastGroupedColIdx = to;\r\n        const previousNode = currentlyIterating[from];\r\n        const previousNodeProvided = isColumnGroup(previousNode) ? previousNode.getProvidedColumnGroup() : previousNode;\r\n        const previousNodeParent = previousNodeProvided.getOriginalParent();\r\n        if (previousNodeParent == null) {\r\n          for (let i = from; i < to; i++) {\r\n            topLevelResultCols.push(currentlyIterating[i]);\r\n          }\r\n          return;\r\n        }\r\n        const newGroup = this.createColumnGroup(\r\n          previousNodeParent,\r\n          idCreator,\r\n          oldColumnsMapped,\r\n          pinned,\r\n          isStandaloneStructure\r\n        );\r\n        for (let i = from; i < to; i++) {\r\n          newGroup.addChild(currentlyIterating[i]);\r\n        }\r\n        groupsOrColsAtCurrentLevel.push(newGroup);\r\n      };\r\n      for (let i = 1; i < currentlyIterating.length; i++) {\r\n        const thisNode = currentlyIterating[i];\r\n        const thisNodeProvided = isColumnGroup(thisNode) ? thisNode.getProvidedColumnGroup() : thisNode;\r\n        const thisNodeParent = thisNodeProvided.getOriginalParent();\r\n        const previousNode = currentlyIterating[lastGroupedColIdx];\r\n        const previousNodeProvided = isColumnGroup(previousNode) ? previousNode.getProvidedColumnGroup() : previousNode;\r\n        const previousNodeParent = previousNodeProvided.getOriginalParent();\r\n        if (thisNodeParent !== previousNodeParent) {\r\n          createGroupToIndex(i);\r\n        }\r\n      }\r\n      if (lastGroupedColIdx < currentlyIterating.length) {\r\n        createGroupToIndex(currentlyIterating.length);\r\n      }\r\n    }\r\n    if (!isStandaloneStructure) {\r\n      this.setupParentsIntoCols(topLevelResultCols, null);\r\n    }\r\n    return topLevelResultCols;\r\n  }\r\n  createProvidedColumnGroup(primaryColumns, colGroupDef, level, existingColumns, columnKeyCreator, existingGroups, source) {\r\n    const groupId = columnKeyCreator.getUniqueKey(colGroupDef.groupId || null, null);\r\n    const colGroupDefMerged = createMergedColGroupDef(this.beans, colGroupDef, groupId);\r\n    const providedGroup = new AgProvidedColumnGroup(colGroupDefMerged, groupId, false, level);\r\n    this.createBean(providedGroup);\r\n    const existingGroupAndIndex = this.findExistingGroup(colGroupDef, existingGroups);\r\n    if (existingGroupAndIndex) {\r\n      existingGroups.splice(existingGroupAndIndex.idx, 1);\r\n    }\r\n    const existingGroup = existingGroupAndIndex?.group;\r\n    if (existingGroup) {\r\n      providedGroup.setExpanded(existingGroup.isExpanded());\r\n    }\r\n    const children = _recursivelyCreateColumns(\r\n      this.beans,\r\n      colGroupDefMerged.children,\r\n      level + 1,\r\n      primaryColumns,\r\n      existingColumns,\r\n      columnKeyCreator,\r\n      existingGroups,\r\n      source\r\n    );\r\n    providedGroup.setChildren(children);\r\n    return providedGroup;\r\n  }\r\n  balanceColumnTree(unbalancedTree, currentDepth, columnDepth, columnKeyCreator) {\r\n    const result = [];\r\n    for (let i = 0; i < unbalancedTree.length; i++) {\r\n      const child = unbalancedTree[i];\r\n      if (isProvidedColumnGroup(child)) {\r\n        const originalGroup = child;\r\n        const newChildren = this.balanceColumnTree(\r\n          originalGroup.getChildren(),\r\n          currentDepth + 1,\r\n          columnDepth,\r\n          columnKeyCreator\r\n        );\r\n        originalGroup.setChildren(newChildren);\r\n        result.push(originalGroup);\r\n      } else {\r\n        let firstPaddedGroup;\r\n        let currentPaddedGroup;\r\n        for (let j = currentDepth; j < columnDepth; j++) {\r\n          const newColId = columnKeyCreator.getUniqueKey(null, null);\r\n          const colGroupDefMerged = createMergedColGroupDef(this.beans, null, newColId);\r\n          const paddedGroup = new AgProvidedColumnGroup(colGroupDefMerged, newColId, true, j);\r\n          this.createBean(paddedGroup);\r\n          if (currentPaddedGroup) {\r\n            currentPaddedGroup.setChildren([paddedGroup]);\r\n          }\r\n          currentPaddedGroup = paddedGroup;\r\n          if (!firstPaddedGroup) {\r\n            firstPaddedGroup = currentPaddedGroup;\r\n          }\r\n        }\r\n        if (firstPaddedGroup && currentPaddedGroup) {\r\n          result.push(firstPaddedGroup);\r\n          const hasGroups = unbalancedTree.some((leaf) => isProvidedColumnGroup(leaf));\r\n          if (hasGroups) {\r\n            currentPaddedGroup.setChildren([child]);\r\n            continue;\r\n          } else {\r\n            currentPaddedGroup.setChildren(unbalancedTree);\r\n            break;\r\n          }\r\n        }\r\n        result.push(child);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  findDepth(balancedColumnTree) {\r\n    let depth = 0;\r\n    let pointer = balancedColumnTree;\r\n    while (pointer && pointer[0] && isProvidedColumnGroup(pointer[0])) {\r\n      depth++;\r\n      pointer = pointer[0].getChildren();\r\n    }\r\n    return depth;\r\n  }\r\n  findMaxDepth(treeChildren, depth) {\r\n    let maxDepthThisLevel = depth;\r\n    for (let i = 0; i < treeChildren.length; i++) {\r\n      const abstractColumn = treeChildren[i];\r\n      if (isProvidedColumnGroup(abstractColumn)) {\r\n        const originalGroup = abstractColumn;\r\n        const newDepth = this.findMaxDepth(originalGroup.getChildren(), depth + 1);\r\n        if (maxDepthThisLevel < newDepth) {\r\n          maxDepthThisLevel = newDepth;\r\n        }\r\n      }\r\n    }\r\n    return maxDepthThisLevel;\r\n  }\r\n  /**\r\n   * Inserts dummy group columns in the hierarchy above auto-generated columns\r\n   * in order to ensure auto-generated columns are leaf nodes (and therefore are\r\n   * displayed correctly)\r\n   */\r\n  balanceTreeForAutoCols(autoCols, depth) {\r\n    const tree = [];\r\n    autoCols.forEach((col) => {\r\n      let nextChild = col;\r\n      for (let i = depth - 1; i >= 0; i--) {\r\n        const autoGroup = new AgProvidedColumnGroup(null, `FAKE_PATH_${col.getId()}}_${i}`, true, i);\r\n        this.createBean(autoGroup);\r\n        autoGroup.setChildren([nextChild]);\r\n        nextChild.originalParent = autoGroup;\r\n        nextChild = autoGroup;\r\n      }\r\n      if (depth === 0) {\r\n        col.originalParent = null;\r\n      }\r\n      tree.push(nextChild);\r\n    });\r\n    return tree;\r\n  }\r\n  findExistingGroup(newGroupDef, existingGroups) {\r\n    const newHasId = newGroupDef.groupId != null;\r\n    if (!newHasId) {\r\n      return void 0;\r\n    }\r\n    for (let i = 0; i < existingGroups.length; i++) {\r\n      const existingGroup = existingGroups[i];\r\n      const existingDef = existingGroup.getColGroupDef();\r\n      if (!existingDef) {\r\n        continue;\r\n      }\r\n      if (existingGroup.getId() === newGroupDef.groupId) {\r\n        return { idx: i, group: existingGroup };\r\n      }\r\n    }\r\n    return void 0;\r\n  }\r\n  createColumnGroup(providedGroup, groupInstanceIdCreator, oldColumnsMapped, pinned, isStandaloneStructure) {\r\n    const groupId = providedGroup.getGroupId();\r\n    const instanceId = groupInstanceIdCreator.getInstanceIdForKey(groupId);\r\n    const uniqueId = createUniqueColumnGroupId(groupId, instanceId);\r\n    let columnGroup = oldColumnsMapped[uniqueId];\r\n    if (columnGroup && columnGroup.getProvidedColumnGroup() !== providedGroup) {\r\n      columnGroup = null;\r\n    }\r\n    if (_exists(columnGroup)) {\r\n      columnGroup.reset();\r\n    } else {\r\n      columnGroup = new AgColumnGroup(providedGroup, groupId, instanceId, pinned);\r\n      if (!isStandaloneStructure) {\r\n        this.createBean(columnGroup);\r\n      }\r\n    }\r\n    return columnGroup;\r\n  }\r\n  // returns back a 2d map of ColumnGroup as follows: groupId -> instanceId -> ColumnGroup\r\n  mapOldGroupsById(displayedGroups) {\r\n    const result = {};\r\n    const recursive = (columnsOrGroups) => {\r\n      columnsOrGroups.forEach((columnOrGroup) => {\r\n        if (isColumnGroup(columnOrGroup)) {\r\n          const columnGroup = columnOrGroup;\r\n          result[columnOrGroup.getUniqueId()] = columnGroup;\r\n          recursive(columnGroup.getChildren());\r\n        }\r\n      });\r\n    };\r\n    if (displayedGroups) {\r\n      recursive(displayedGroups);\r\n    }\r\n    return result;\r\n  }\r\n  setupParentsIntoCols(columnsOrGroups, parent) {\r\n    columnsOrGroups.forEach((columnsOrGroup) => {\r\n      if (columnsOrGroup.parent !== parent) {\r\n        this.beans.colViewport.colsWithinViewportHash = \"\";\r\n      }\r\n      columnsOrGroup.parent = parent;\r\n      if (isColumnGroup(columnsOrGroup)) {\r\n        const columnGroup = columnsOrGroup;\r\n        this.setupParentsIntoCols(columnGroup.getChildren(), columnGroup);\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/columns/columnGroups/columnGroupModule.ts\r\nvar ColumnGroupModule = {\r\n  moduleName: \"ColumnGroup\",\r\n  version: VERSION,\r\n  dynamicBeans: { headerGroupCellCtrl: HeaderGroupCellCtrl },\r\n  beans: [ColumnGroupService],\r\n  apiFunctions: {\r\n    getAllDisplayedColumnGroups,\r\n    getCenterDisplayedColumnGroups,\r\n    getColumnGroup,\r\n    getColumnGroupState,\r\n    getDisplayNameForColumnGroup,\r\n    getLeftDisplayedColumnGroups,\r\n    getProvidedColumnGroup,\r\n    getRightDisplayedColumnGroups,\r\n    resetColumnGroupState,\r\n    setColumnGroupOpened,\r\n    setColumnGroupState\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/rendering/cellRenderers/skeletonCellRenderer.ts\r\nvar SkeletonCellRendererElement = { tag: \"div\", cls: \"ag-skeleton-container\" };\r\nvar SkeletonCellRenderer = class extends Component {\r\n  constructor() {\r\n    super(SkeletonCellRendererElement);\r\n  }\r\n  init(params) {\r\n    const id = `ag-cell-skeleton-renderer-${this.getCompId()}`;\r\n    this.getGui().setAttribute(\"id\", id);\r\n    this.addDestroyFunc(() => _setAriaLabelledBy(params.eParentOfValue));\r\n    _setAriaLabelledBy(params.eParentOfValue, id);\r\n    if (params.deferRender) {\r\n      this.setupLoading(params);\r\n    } else {\r\n      params.node.failedLoad ? this.setupFailed() : this.setupLoading(params);\r\n    }\r\n  }\r\n  setupFailed() {\r\n    const localeTextFunc = this.getLocaleTextFunc();\r\n    this.getGui().textContent = localeTextFunc(\"loadingError\", \"ERR\");\r\n    const ariaFailed = localeTextFunc(\"ariaSkeletonCellLoadingFailed\", \"Row failed to load\");\r\n    _setAriaLabel(this.getGui(), ariaFailed);\r\n  }\r\n  setupLoading(params) {\r\n    const skeletonEffect = _createElement({\r\n      tag: \"div\",\r\n      cls: \"ag-skeleton-effect\"\r\n    });\r\n    const rowIndex = params.node.rowIndex;\r\n    if (rowIndex != null) {\r\n      const width = 75 + 25 * (rowIndex % 2 === 0 ? Math.sin(rowIndex) : Math.cos(rowIndex));\r\n      skeletonEffect.style.width = `${width}%`;\r\n    }\r\n    this.getGui().appendChild(skeletonEffect);\r\n    const localeTextFunc = this.getLocaleTextFunc();\r\n    const ariaLoading = params.deferRender ? localeTextFunc(\"ariaDeferSkeletonCellLoading\", \"Cell is loading\") : localeTextFunc(\"ariaSkeletonCellLoading\", \"Row data is loading\");\r\n    _setAriaLabel(this.getGui(), ariaLoading);\r\n  }\r\n  refresh(_params) {\r\n    return false;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/rendering/cellRenderers/cellRendererModule.ts\r\nvar CheckboxCellRendererModule = {\r\n  moduleName: \"CheckboxCellRenderer\",\r\n  version: VERSION,\r\n  userComponents: {\r\n    agCheckboxCellRenderer: CheckboxCellRenderer\r\n  }\r\n};\r\nvar SkeletonCellRendererModule = {\r\n  moduleName: \"SkeletonCellRenderer\",\r\n  version: VERSION,\r\n  userComponents: {\r\n    agSkeletonCellRenderer: SkeletonCellRenderer\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/columns/columnApi.ts\r\nfunction getColumnDef(beans, key) {\r\n  const column = beans.colModel.getColDefCol(key);\r\n  if (column) {\r\n    return column.getColDef();\r\n  }\r\n  return null;\r\n}\r\nfunction getColumnDefs(beans) {\r\n  return beans.colModel.getColumnDefs();\r\n}\r\nfunction getDisplayNameForColumn(beans, column, location) {\r\n  return beans.colNames.getDisplayNameForColumn(column, location) || \"\";\r\n}\r\nfunction getColumn(beans, key) {\r\n  return beans.colModel.getColDefCol(key);\r\n}\r\nfunction getColumns(beans) {\r\n  return beans.colModel.getColDefCols();\r\n}\r\nfunction applyColumnState(beans, params) {\r\n  return _applyColumnState(beans, params, \"api\");\r\n}\r\nfunction getColumnState(beans) {\r\n  return _getColumnState(beans);\r\n}\r\nfunction resetColumnState(beans) {\r\n  _resetColumnState(beans, \"api\");\r\n}\r\nfunction isPinning(beans) {\r\n  return beans.visibleCols.isPinningLeft() || beans.visibleCols.isPinningRight();\r\n}\r\nfunction isPinningLeft(beans) {\r\n  return beans.visibleCols.isPinningLeft();\r\n}\r\nfunction isPinningRight(beans) {\r\n  return beans.visibleCols.isPinningRight();\r\n}\r\nfunction getDisplayedColAfter(beans, col) {\r\n  return beans.visibleCols.getColAfter(col);\r\n}\r\nfunction getDisplayedColBefore(beans, col) {\r\n  return beans.visibleCols.getColBefore(col);\r\n}\r\nfunction setColumnsVisible(beans, keys, visible) {\r\n  beans.colModel.setColsVisible(keys, visible, \"api\");\r\n}\r\nfunction setColumnsPinned(beans, keys, pinned) {\r\n  beans.pinnedCols?.setColsPinned(keys, pinned, \"api\");\r\n}\r\nfunction getAllGridColumns(beans) {\r\n  return beans.colModel.getCols();\r\n}\r\nfunction getDisplayedLeftColumns(beans) {\r\n  return beans.visibleCols.leftCols;\r\n}\r\nfunction getDisplayedCenterColumns(beans) {\r\n  return beans.visibleCols.centerCols;\r\n}\r\nfunction getDisplayedRightColumns(beans) {\r\n  return beans.visibleCols.rightCols;\r\n}\r\nfunction getAllDisplayedColumns(beans) {\r\n  return beans.visibleCols.allCols;\r\n}\r\nfunction getAllDisplayedVirtualColumns(beans) {\r\n  return beans.colViewport.getViewportColumns();\r\n}\r\n\r\n// packages/ag-grid-community/src/columns/columnDefFactory.ts\r\nfunction _deepCloneDefinition(object, keysToSkip) {\r\n  if (!object) {\r\n    return;\r\n  }\r\n  const obj = object;\r\n  const res = {};\r\n  Object.keys(obj).forEach((key) => {\r\n    if (keysToSkip && keysToSkip.indexOf(key) >= 0 || SKIP_JS_BUILTINS.has(key)) {\r\n      return;\r\n    }\r\n    const value = obj[key];\r\n    const sourceIsSimpleObject = typeof value === \"object\" && value !== null && value.constructor === Object;\r\n    if (sourceIsSimpleObject) {\r\n      res[key] = _deepCloneDefinition(value);\r\n    } else {\r\n      res[key] = value;\r\n    }\r\n  });\r\n  return res;\r\n}\r\nvar ColumnDefFactory = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"colDefFactory\";\r\n  }\r\n  wireBeans(beans) {\r\n    this.rowGroupColsSvc = beans.rowGroupColsSvc;\r\n    this.pivotColsSvc = beans.pivotColsSvc;\r\n  }\r\n  getColumnDefs(colDefColsList, showingPivotResult, lastOrder, colsList) {\r\n    const cols = colDefColsList.slice();\r\n    if (showingPivotResult) {\r\n      cols.sort((a, b) => lastOrder.indexOf(a) - lastOrder.indexOf(b));\r\n    } else if (lastOrder) {\r\n      cols.sort((a, b) => colsList.indexOf(a) - colsList.indexOf(b));\r\n    }\r\n    const rowGroupColumns = this.rowGroupColsSvc?.columns;\r\n    const pivotColumns = this.pivotColsSvc?.columns;\r\n    return this.buildColumnDefs(cols, rowGroupColumns, pivotColumns);\r\n  }\r\n  buildColumnDefs(cols, rowGroupColumns = [], pivotColumns = []) {\r\n    const res = [];\r\n    const colGroupDefs = {};\r\n    cols.forEach((col) => {\r\n      const colDef = this.createDefFromColumn(col, rowGroupColumns, pivotColumns);\r\n      let addToResult = true;\r\n      let childDef = colDef;\r\n      let pointer = col.getOriginalParent();\r\n      let lastPointer = null;\r\n      while (pointer) {\r\n        let parentDef = null;\r\n        if (pointer.isPadding()) {\r\n          pointer = pointer.getOriginalParent();\r\n          continue;\r\n        }\r\n        const existingParentDef = colGroupDefs[pointer.getGroupId()];\r\n        if (existingParentDef) {\r\n          existingParentDef.children.push(childDef);\r\n          addToResult = false;\r\n          break;\r\n        }\r\n        parentDef = this.createDefFromGroup(pointer);\r\n        if (parentDef) {\r\n          parentDef.children = [childDef];\r\n          colGroupDefs[parentDef.groupId] = parentDef;\r\n          childDef = parentDef;\r\n          pointer = pointer.getOriginalParent();\r\n        }\r\n        if (pointer != null && lastPointer === pointer) {\r\n          addToResult = false;\r\n          break;\r\n        }\r\n        lastPointer = pointer;\r\n      }\r\n      if (addToResult) {\r\n        res.push(childDef);\r\n      }\r\n    });\r\n    return res;\r\n  }\r\n  createDefFromGroup(group) {\r\n    const defCloned = _deepCloneDefinition(group.getColGroupDef(), [\"children\"]);\r\n    if (defCloned) {\r\n      defCloned.groupId = group.getGroupId();\r\n    }\r\n    return defCloned;\r\n  }\r\n  createDefFromColumn(col, rowGroupColumns, pivotColumns) {\r\n    const colDefCloned = _deepCloneDefinition(col.getColDef());\r\n    colDefCloned.colId = col.getColId();\r\n    colDefCloned.width = col.getActualWidth();\r\n    colDefCloned.rowGroup = col.isRowGroupActive();\r\n    colDefCloned.rowGroupIndex = col.isRowGroupActive() ? rowGroupColumns.indexOf(col) : null;\r\n    colDefCloned.pivot = col.isPivotActive();\r\n    colDefCloned.pivotIndex = col.isPivotActive() ? pivotColumns.indexOf(col) : null;\r\n    colDefCloned.aggFunc = col.isValueActive() ? col.getAggFunc() : null;\r\n    colDefCloned.hide = col.isVisible() ? void 0 : true;\r\n    colDefCloned.pinned = col.isPinned() ? col.getPinned() : null;\r\n    colDefCloned.sort = col.getSort() ? col.getSort() : null;\r\n    colDefCloned.sortIndex = col.getSortIndex() != null ? col.getSortIndex() : null;\r\n    return colDefCloned;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/columns/columnFlexService.ts\r\nvar ColumnFlexService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"colFlex\";\r\n  }\r\n  refreshFlexedColumns(params = {}) {\r\n    const source = params.source ?? \"flex\";\r\n    if (params.viewportWidth != null) {\r\n      this.flexViewportWidth = params.viewportWidth;\r\n    }\r\n    const totalSpace = this.flexViewportWidth;\r\n    if (!totalSpace) {\r\n      return [];\r\n    }\r\n    const { visibleCols } = this.beans;\r\n    const visibleCenterCols = visibleCols.centerCols;\r\n    let flexAfterDisplayIndex = -1;\r\n    if (params.resizingCols) {\r\n      const allResizingCols = new Set(params.resizingCols);\r\n      for (let i = visibleCenterCols.length - 1; i >= 0; i--) {\r\n        if (allResizingCols.has(visibleCenterCols[i])) {\r\n          flexAfterDisplayIndex = i;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    let hasFlexItems = false;\r\n    const items = visibleCenterCols.map((col, i) => {\r\n      const flex = col.getFlex();\r\n      const isFlex = flex != null && flex > 0 && i > flexAfterDisplayIndex;\r\n      hasFlexItems || (hasFlexItems = isFlex);\r\n      return {\r\n        col,\r\n        isFlex,\r\n        flex: Math.max(0, flex ?? 0),\r\n        initialSize: col.getActualWidth(),\r\n        min: col.getMinWidth(),\r\n        max: col.getMaxWidth(),\r\n        targetSize: 0\r\n      };\r\n    });\r\n    if (!hasFlexItems) {\r\n      return [];\r\n    }\r\n    let unfrozenItemCount = items.length;\r\n    let unfrozenFlex = items.reduce((acc, item) => acc + item.flex, 0);\r\n    let unfrozenSpace = totalSpace;\r\n    const freeze = (item, width) => {\r\n      item.frozenSize = width;\r\n      item.col.setActualWidth(width, source);\r\n      unfrozenSpace -= width;\r\n      unfrozenFlex -= item.flex;\r\n      unfrozenItemCount -= 1;\r\n    };\r\n    const isFrozen = (item) => item.frozenSize != null;\r\n    for (const item of items) {\r\n      if (!item.isFlex) {\r\n        freeze(item, item.initialSize);\r\n      }\r\n    }\r\n    while (unfrozenItemCount > 0) {\r\n      const spaceToFill = Math.round(unfrozenFlex < 1 ? unfrozenSpace * unfrozenFlex : unfrozenSpace);\r\n      let lastUnfrozenItem;\r\n      let actualLeft = 0;\r\n      let idealRight = 0;\r\n      for (const item of items) {\r\n        if (isFrozen(item)) {\r\n          continue;\r\n        }\r\n        lastUnfrozenItem = item;\r\n        idealRight += spaceToFill * (item.flex / unfrozenFlex);\r\n        const idealSize = idealRight - actualLeft;\r\n        const roundedSize = Math.round(idealSize);\r\n        item.targetSize = roundedSize;\r\n        actualLeft += roundedSize;\r\n      }\r\n      if (lastUnfrozenItem) {\r\n        lastUnfrozenItem.targetSize += spaceToFill - actualLeft;\r\n      }\r\n      let totalViolation = 0;\r\n      for (const item of items) {\r\n        if (isFrozen(item)) {\r\n          continue;\r\n        }\r\n        const unclampedSize = item.targetSize;\r\n        const clampedSize = Math.min(Math.max(unclampedSize, item.min), item.max);\r\n        totalViolation += clampedSize - unclampedSize;\r\n        item.violationType = clampedSize === unclampedSize ? void 0 : clampedSize < unclampedSize ? \"max\" : \"min\";\r\n        item.targetSize = clampedSize;\r\n      }\r\n      const freezeType = totalViolation === 0 ? \"all\" : totalViolation > 0 ? \"min\" : \"max\";\r\n      for (const item of items) {\r\n        if (isFrozen(item)) {\r\n          continue;\r\n        }\r\n        if (freezeType === \"all\" || item.violationType === freezeType) {\r\n          freeze(item, item.targetSize);\r\n        }\r\n      }\r\n    }\r\n    if (!params.skipSetLeft) {\r\n      visibleCols.setLeftValues(source);\r\n    }\r\n    if (params.updateBodyWidths) {\r\n      visibleCols.updateBodyWidths();\r\n    }\r\n    const unconstrainedFlexColumns = items.filter((item) => item.isFlex && !item.violationType).map((item) => item.col);\r\n    if (params.fireResizedEvent) {\r\n      const changedColumns = items.filter((item) => item.initialSize !== item.frozenSize).map((item) => item.col);\r\n      const flexingColumns = items.filter((item) => item.flex).map((item) => item.col);\r\n      dispatchColumnResizedEvent(this.eventSvc, changedColumns, true, source, flexingColumns);\r\n    }\r\n    return unconstrainedFlexColumns;\r\n  }\r\n  initCol(column) {\r\n    const { flex, initialFlex } = column.colDef;\r\n    if (flex !== void 0) {\r\n      column.flex = flex;\r\n    } else if (initialFlex !== void 0) {\r\n      column.flex = initialFlex;\r\n    }\r\n  }\r\n  // this method should only be used by the colModel to\r\n  // change flex when required by the applyColumnState method.\r\n  setColFlex(column, flex) {\r\n    column.flex = flex ?? null;\r\n    column.dispatchStateUpdatedEvent(\"flex\");\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/columns/dataTypeService.ts\r\nvar SORTED_CELL_DATA_TYPES_FOR_MATCHING = [\r\n  \"dateTimeString\",\r\n  \"dateString\",\r\n  \"text\",\r\n  \"number\",\r\n  \"boolean\",\r\n  \"date\"\r\n];\r\nvar DataTypeService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"dataTypeSvc\";\r\n    this.dataTypeDefinitions = {};\r\n    this.isPendingInference = false;\r\n    this.isColumnTypeOverrideInDataTypeDefinitions = false;\r\n    // keep track of any column state updates whilst waiting for data types to be inferred\r\n    this.columnStateUpdatesPendingInference = {};\r\n    this.columnStateUpdateListenerDestroyFuncs = [];\r\n    // using an object here to enforce dev to not forget to implement new types as they are added\r\n    this.columnDefinitionPropsPerDataType = {\r\n      number() {\r\n        return { cellEditor: \"agNumberCellEditor\" };\r\n      },\r\n      boolean() {\r\n        return {\r\n          cellEditor: \"agCheckboxCellEditor\",\r\n          cellRenderer: \"agCheckboxCellRenderer\",\r\n          getFindText: () => null,\r\n          suppressKeyboardEvent: (params) => !!params.colDef.editable && params.event.key === KeyCode.SPACE\r\n        };\r\n      },\r\n      date({ formatValue }) {\r\n        return { cellEditor: \"agDateCellEditor\", keyCreator: formatValue };\r\n      },\r\n      dateString({ formatValue }) {\r\n        return { cellEditor: \"agDateStringCellEditor\", keyCreator: formatValue };\r\n      },\r\n      dateTime(args) {\r\n        return this.date(args);\r\n      },\r\n      dateTimeString(args) {\r\n        return this.dateString(args);\r\n      },\r\n      object({ formatValue, colModel, colId }) {\r\n        return {\r\n          cellEditorParams: {\r\n            useFormatter: true\r\n          },\r\n          comparator: (a, b) => {\r\n            const column = colModel.getColDefCol(colId);\r\n            const colDef = column?.getColDef();\r\n            if (!column || !colDef) {\r\n              return 0;\r\n            }\r\n            const valA = a == null ? \"\" : formatValue({ column, node: null, value: a });\r\n            const valB = b == null ? \"\" : formatValue({ column, node: null, value: b });\r\n            if (valA === valB)\r\n              return 0;\r\n            return valA > valB ? 1 : -1;\r\n          },\r\n          keyCreator: formatValue\r\n        };\r\n      },\r\n      text() {\r\n        return {};\r\n      }\r\n    };\r\n  }\r\n  wireBeans(beans) {\r\n    this.colModel = beans.colModel;\r\n  }\r\n  postConstruct() {\r\n    this.processDataTypeDefinitions();\r\n    this.addManagedPropertyListener(\"dataTypeDefinitions\", (event) => {\r\n      this.processDataTypeDefinitions();\r\n      this.colModel.recreateColumnDefs(event);\r\n    });\r\n  }\r\n  processDataTypeDefinitions() {\r\n    const defaultDataTypes = this.getDefaultDataTypes();\r\n    const newDataTypeDefinitions = {};\r\n    const newFormatValueFuncs = {};\r\n    const generateFormatValueFunc = (dataTypeDefinition) => {\r\n      return (params) => {\r\n        const { column, node, value } = params;\r\n        let valueFormatter = column.getColDef().valueFormatter;\r\n        if (valueFormatter === dataTypeDefinition.groupSafeValueFormatter) {\r\n          valueFormatter = dataTypeDefinition.valueFormatter;\r\n        }\r\n        return this.beans.valueSvc.formatValue(column, node, value, valueFormatter);\r\n      };\r\n    };\r\n    for (const cellDataType of Object.keys(defaultDataTypes)) {\r\n      const defaultDataTypeDef = defaultDataTypes[cellDataType];\r\n      const mergedDataTypeDefinition = {\r\n        ...defaultDataTypeDef,\r\n        groupSafeValueFormatter: createGroupSafeValueFormatter(defaultDataTypeDef, this.gos)\r\n      };\r\n      newDataTypeDefinitions[cellDataType] = mergedDataTypeDefinition;\r\n      newFormatValueFuncs[cellDataType] = generateFormatValueFunc(mergedDataTypeDefinition);\r\n    }\r\n    const userDataTypeDefs = this.gos.get(\"dataTypeDefinitions\") ?? {};\r\n    const newDataTypeMatchers = {};\r\n    for (const cellDataType of Object.keys(userDataTypeDefs)) {\r\n      const userDataTypeDef = userDataTypeDefs[cellDataType];\r\n      const mergedDataTypeDefinition = this.processDataTypeDefinition(\r\n        userDataTypeDef,\r\n        userDataTypeDefs,\r\n        [cellDataType],\r\n        defaultDataTypes\r\n      );\r\n      if (mergedDataTypeDefinition) {\r\n        newDataTypeDefinitions[cellDataType] = mergedDataTypeDefinition;\r\n        if (userDataTypeDef.dataTypeMatcher) {\r\n          newDataTypeMatchers[cellDataType] = userDataTypeDef.dataTypeMatcher;\r\n        }\r\n        newFormatValueFuncs[cellDataType] = generateFormatValueFunc(mergedDataTypeDefinition);\r\n      }\r\n    }\r\n    const { valueParser: defaultValueParser, valueFormatter: defaultValueFormatter } = defaultDataTypes.object;\r\n    const { valueParser: userValueParser, valueFormatter: userValueFormatter } = newDataTypeDefinitions.object;\r\n    this.hasObjectValueParser = userValueParser !== defaultValueParser;\r\n    this.hasObjectValueFormatter = userValueFormatter !== defaultValueFormatter;\r\n    this.formatValueFuncs = newFormatValueFuncs;\r\n    this.dataTypeDefinitions = newDataTypeDefinitions;\r\n    this.dataTypeMatchers = this.sortKeysInMatchers(newDataTypeMatchers, defaultDataTypes);\r\n  }\r\n  /**\r\n   * Sorts the keys in the matchers object.\r\n   * Does not mutate the original object, creates a copy of it with sorted keys instead.\r\n   */\r\n  sortKeysInMatchers(matchers, dataTypes) {\r\n    const sortedMatchers = { ...matchers };\r\n    for (const cellDataType of SORTED_CELL_DATA_TYPES_FOR_MATCHING) {\r\n      delete sortedMatchers[cellDataType];\r\n      sortedMatchers[cellDataType] = matchers[cellDataType] ?? dataTypes[cellDataType].dataTypeMatcher;\r\n    }\r\n    return sortedMatchers;\r\n  }\r\n  processDataTypeDefinition(userDataTypeDef, userDataTypeDefs, alreadyProcessedDataTypes, defaultDataTypes) {\r\n    let mergedDataTypeDefinition;\r\n    const extendsCellDataType = userDataTypeDef.extendsDataType;\r\n    if (userDataTypeDef.columnTypes) {\r\n      this.isColumnTypeOverrideInDataTypeDefinitions = true;\r\n    }\r\n    if (userDataTypeDef.extendsDataType === userDataTypeDef.baseDataType) {\r\n      let baseDataTypeDefinition = defaultDataTypes[extendsCellDataType];\r\n      const overriddenBaseDataTypeDefinition = userDataTypeDefs[extendsCellDataType];\r\n      if (baseDataTypeDefinition && overriddenBaseDataTypeDefinition) {\r\n        baseDataTypeDefinition = overriddenBaseDataTypeDefinition;\r\n      }\r\n      if (!validateDataTypeDefinition(userDataTypeDef, baseDataTypeDefinition, extendsCellDataType)) {\r\n        return void 0;\r\n      }\r\n      mergedDataTypeDefinition = mergeDataTypeDefinitions(baseDataTypeDefinition, userDataTypeDef);\r\n    } else {\r\n      if (alreadyProcessedDataTypes.includes(extendsCellDataType)) {\r\n        _warn(44);\r\n        return void 0;\r\n      }\r\n      const extendedDataTypeDefinition = userDataTypeDefs[extendsCellDataType];\r\n      if (!validateDataTypeDefinition(userDataTypeDef, extendedDataTypeDefinition, extendsCellDataType)) {\r\n        return void 0;\r\n      }\r\n      const mergedExtendedDataTypeDefinition = this.processDataTypeDefinition(\r\n        extendedDataTypeDefinition,\r\n        userDataTypeDefs,\r\n        [...alreadyProcessedDataTypes, extendsCellDataType],\r\n        defaultDataTypes\r\n      );\r\n      if (!mergedExtendedDataTypeDefinition) {\r\n        return void 0;\r\n      }\r\n      mergedDataTypeDefinition = mergeDataTypeDefinitions(mergedExtendedDataTypeDefinition, userDataTypeDef);\r\n    }\r\n    return {\r\n      ...mergedDataTypeDefinition,\r\n      groupSafeValueFormatter: createGroupSafeValueFormatter(mergedDataTypeDefinition, this.gos)\r\n    };\r\n  }\r\n  updateColDefAndGetColumnType(colDef, userColDef, colId) {\r\n    let { cellDataType } = userColDef;\r\n    const { field } = userColDef;\r\n    if (cellDataType === void 0) {\r\n      cellDataType = colDef.cellDataType;\r\n    }\r\n    if (cellDataType == null || cellDataType === true) {\r\n      cellDataType = this.canInferCellDataType(colDef, userColDef) ? this.inferCellDataType(field, colId) : false;\r\n    }\r\n    if (!cellDataType) {\r\n      colDef.cellDataType = false;\r\n      return void 0;\r\n    }\r\n    const dataTypeDefinition = this.dataTypeDefinitions[cellDataType];\r\n    if (!dataTypeDefinition) {\r\n      _warn(47, { cellDataType });\r\n      return void 0;\r\n    }\r\n    colDef.cellDataType = cellDataType;\r\n    if (dataTypeDefinition.groupSafeValueFormatter) {\r\n      colDef.valueFormatter = dataTypeDefinition.groupSafeValueFormatter;\r\n    }\r\n    if (dataTypeDefinition.valueParser) {\r\n      colDef.valueParser = dataTypeDefinition.valueParser;\r\n    }\r\n    if (!dataTypeDefinition.suppressDefaultProperties) {\r\n      this.setColDefPropertiesForBaseDataType(colDef, cellDataType, dataTypeDefinition, colId);\r\n    }\r\n    return dataTypeDefinition.columnTypes;\r\n  }\r\n  addColumnListeners(column) {\r\n    if (!this.isPendingInference) {\r\n      return;\r\n    }\r\n    const columnStateUpdates = this.columnStateUpdatesPendingInference[column.getColId()];\r\n    if (!columnStateUpdates) {\r\n      return;\r\n    }\r\n    const columnListener = (event) => {\r\n      columnStateUpdates.add(event.key);\r\n    };\r\n    column.__addEventListener(\"columnStateUpdated\", columnListener);\r\n    this.columnStateUpdateListenerDestroyFuncs.push(\r\n      () => column.__removeEventListener(\"columnStateUpdated\", columnListener)\r\n    );\r\n  }\r\n  canInferCellDataType(colDef, userColDef) {\r\n    const { gos } = this;\r\n    if (!_isClientSideRowModel(gos)) {\r\n      return false;\r\n    }\r\n    const propsToCheckForInference = { cellRenderer: true, valueGetter: true, valueParser: true, refData: true };\r\n    if (doColDefPropsPreventInference(userColDef, propsToCheckForInference)) {\r\n      return false;\r\n    }\r\n    const columnTypes = userColDef.type === null ? colDef.type : userColDef.type;\r\n    if (columnTypes) {\r\n      const columnTypeDefs = gos.get(\"columnTypes\") ?? {};\r\n      const hasPropsPreventingInference = convertColumnTypes(columnTypes).some((columnType) => {\r\n        const columnTypeDef = columnTypeDefs[columnType.trim()];\r\n        return columnTypeDef && doColDefPropsPreventInference(columnTypeDef, propsToCheckForInference);\r\n      });\r\n      if (hasPropsPreventingInference) {\r\n        return false;\r\n      }\r\n    }\r\n    return !doColDefPropsPreventInference(colDef, propsToCheckForInference);\r\n  }\r\n  inferCellDataType(field, colId) {\r\n    if (!field) {\r\n      return void 0;\r\n    }\r\n    let value;\r\n    const initialData = this.getInitialData();\r\n    if (initialData) {\r\n      const fieldContainsDots = field.indexOf(\".\") >= 0 && !this.gos.get(\"suppressFieldDotNotation\");\r\n      value = _getValueUsingField(initialData, field, fieldContainsDots);\r\n    } else {\r\n      this.initWaitForRowData(colId);\r\n    }\r\n    if (value == null) {\r\n      return void 0;\r\n    }\r\n    const matchedType = Object.keys(this.dataTypeMatchers).find(\r\n      (_cellDataType) => this.dataTypeMatchers[_cellDataType](value)\r\n    );\r\n    return matchedType ?? \"object\";\r\n  }\r\n  getInitialData() {\r\n    const rowData = this.gos.get(\"rowData\");\r\n    if (rowData?.length) {\r\n      return rowData[0];\r\n    } else if (this.initialData) {\r\n      return this.initialData;\r\n    } else {\r\n      const rowNodes = this.beans.rowModel.rootNode?.allLeafChildren;\r\n      if (rowNodes?.length) {\r\n        return rowNodes[0].data;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  initWaitForRowData(colId) {\r\n    this.columnStateUpdatesPendingInference[colId] = /* @__PURE__ */ new Set();\r\n    if (this.isPendingInference) {\r\n      return;\r\n    }\r\n    this.isPendingInference = true;\r\n    const columnTypeOverridesExist = this.isColumnTypeOverrideInDataTypeDefinitions;\r\n    const { colAutosize, eventSvc } = this.beans;\r\n    if (columnTypeOverridesExist && colAutosize) {\r\n      colAutosize.shouldQueueResizeOperations = true;\r\n    }\r\n    const [destroyFunc] = this.addManagedEventListeners({\r\n      rowDataUpdateStarted: (event) => {\r\n        const { firstRowData } = event;\r\n        if (!firstRowData) {\r\n          return;\r\n        }\r\n        destroyFunc?.();\r\n        this.isPendingInference = false;\r\n        this.processColumnsPendingInference(firstRowData, columnTypeOverridesExist);\r\n        this.columnStateUpdatesPendingInference = {};\r\n        if (columnTypeOverridesExist) {\r\n          colAutosize?.processResizeOperations();\r\n        }\r\n        eventSvc.dispatchEvent({\r\n          type: \"dataTypesInferred\"\r\n        });\r\n      }\r\n    });\r\n  }\r\n  processColumnsPendingInference(firstRowData, columnTypeOverridesExist) {\r\n    this.initialData = firstRowData;\r\n    const state = [];\r\n    this.destroyColumnStateUpdateListeners();\r\n    const newRowGroupColumnStateWithoutIndex = {};\r\n    const newPivotColumnStateWithoutIndex = {};\r\n    for (const colId of Object.keys(this.columnStateUpdatesPendingInference)) {\r\n      const columnStateUpdates = this.columnStateUpdatesPendingInference[colId];\r\n      const column = this.colModel.getCol(colId);\r\n      if (!column) {\r\n        return;\r\n      }\r\n      const oldColDef = column.getColDef();\r\n      if (!this.resetColDefIntoCol(column, \"cellDataTypeInferred\")) {\r\n        return;\r\n      }\r\n      const newColDef = column.getColDef();\r\n      if (columnTypeOverridesExist && newColDef.type && newColDef.type !== oldColDef.type) {\r\n        const updatedColumnState = getUpdatedColumnState(column, columnStateUpdates);\r\n        if (updatedColumnState.rowGroup && updatedColumnState.rowGroupIndex == null) {\r\n          newRowGroupColumnStateWithoutIndex[colId] = updatedColumnState;\r\n        }\r\n        if (updatedColumnState.pivot && updatedColumnState.pivotIndex == null) {\r\n          newPivotColumnStateWithoutIndex[colId] = updatedColumnState;\r\n        }\r\n        state.push(updatedColumnState);\r\n      }\r\n    }\r\n    if (columnTypeOverridesExist) {\r\n      state.push(\r\n        ...this.generateColumnStateForRowGroupAndPivotIndexes(\r\n          newRowGroupColumnStateWithoutIndex,\r\n          newPivotColumnStateWithoutIndex\r\n        )\r\n      );\r\n    }\r\n    if (state.length) {\r\n      _applyColumnState(this.beans, { state }, \"cellDataTypeInferred\");\r\n    }\r\n    this.initialData = null;\r\n  }\r\n  generateColumnStateForRowGroupAndPivotIndexes(updatedRowGroupColumnState, updatedPivotColumnState) {\r\n    const existingColumnStateUpdates = {};\r\n    const { rowGroupColsSvc, pivotColsSvc } = this.beans;\r\n    rowGroupColsSvc?.restoreColumnOrder(existingColumnStateUpdates, updatedRowGroupColumnState);\r\n    pivotColsSvc?.restoreColumnOrder(existingColumnStateUpdates, updatedPivotColumnState);\r\n    return Object.values(existingColumnStateUpdates);\r\n  }\r\n  resetColDefIntoCol(column, source) {\r\n    const userColDef = column.getUserProvidedColDef();\r\n    if (!userColDef) {\r\n      return false;\r\n    }\r\n    const newColDef = _addColumnDefaultAndTypes(this.beans, userColDef, column.getColId());\r\n    column.setColDef(newColDef, userColDef, source);\r\n    return true;\r\n  }\r\n  getDateStringTypeDefinition(column) {\r\n    const { dateString } = this.dataTypeDefinitions;\r\n    if (!column) {\r\n      return dateString;\r\n    }\r\n    return this.getDataTypeDefinition(column) ?? dateString;\r\n  }\r\n  getDateParserFunction(column) {\r\n    return this.getDateStringTypeDefinition(column).dateParser;\r\n  }\r\n  getDateFormatterFunction(column) {\r\n    return this.getDateStringTypeDefinition(column).dateFormatter;\r\n  }\r\n  getDateIncludesTimeFlag(cellDataType) {\r\n    return cellDataType === \"dateTime\" || cellDataType === \"dateTimeString\";\r\n  }\r\n  getDataTypeDefinition(column) {\r\n    const colDef = column.getColDef();\r\n    if (!colDef.cellDataType) {\r\n      return void 0;\r\n    }\r\n    return this.dataTypeDefinitions[colDef.cellDataType];\r\n  }\r\n  getBaseDataType(column) {\r\n    return this.getDataTypeDefinition(column)?.baseDataType;\r\n  }\r\n  checkType(column, value) {\r\n    if (value == null) {\r\n      return true;\r\n    }\r\n    const dataTypeMatcher = this.getDataTypeDefinition(column)?.dataTypeMatcher;\r\n    if (!dataTypeMatcher) {\r\n      return true;\r\n    }\r\n    return dataTypeMatcher(value);\r\n  }\r\n  validateColDef(colDef) {\r\n    const warning = (property) => _warn(48, { property });\r\n    if (colDef.cellDataType === \"object\") {\r\n      const { object } = this.dataTypeDefinitions;\r\n      if (colDef.valueFormatter === object.groupSafeValueFormatter && !this.hasObjectValueFormatter) {\r\n        warning(\"Formatter\");\r\n      }\r\n      if (colDef.editable && colDef.valueParser === object.valueParser && !this.hasObjectValueParser) {\r\n        warning(\"Parser\");\r\n      }\r\n    }\r\n  }\r\n  postProcess(colDef) {\r\n    const cellDataType = colDef.cellDataType;\r\n    if (!cellDataType || typeof cellDataType !== \"string\") {\r\n      return;\r\n    }\r\n    const { dataTypeDefinitions, beans, formatValueFuncs } = this;\r\n    const dataTypeDefinition = dataTypeDefinitions[cellDataType];\r\n    beans.colFilter?.setColDefPropsForDataType(colDef, dataTypeDefinition, formatValueFuncs[cellDataType]);\r\n  }\r\n  // noinspection JSUnusedGlobalSymbols\r\n  getFormatValue(cellDataType) {\r\n    return this.formatValueFuncs[cellDataType];\r\n  }\r\n  isColPendingInference(colId) {\r\n    return this.isPendingInference && !!this.columnStateUpdatesPendingInference[colId];\r\n  }\r\n  setColDefPropertiesForBaseDataType(colDef, cellDataType, dataTypeDefinition, colId) {\r\n    const formatValue = this.formatValueFuncs[cellDataType];\r\n    const partialColDef = this.columnDefinitionPropsPerDataType[dataTypeDefinition.baseDataType]({\r\n      colDef,\r\n      cellDataType,\r\n      colModel: this.colModel,\r\n      dataTypeDefinition,\r\n      colId,\r\n      formatValue\r\n    });\r\n    Object.assign(colDef, partialColDef);\r\n  }\r\n  getDateObjectTypeDef(baseDataType) {\r\n    const translate = this.getLocaleTextFunc();\r\n    const includeTime = this.getDateIncludesTimeFlag(baseDataType);\r\n    return {\r\n      baseDataType,\r\n      valueParser: (params) => _parseDateTimeFromString(params.newValue && String(params.newValue)),\r\n      valueFormatter: (params) => {\r\n        if (params.value == null) {\r\n          return \"\";\r\n        }\r\n        if (!(params.value instanceof Date) || isNaN(params.value.getTime())) {\r\n          return translate(\"invalidDate\", \"Invalid Date\");\r\n        }\r\n        return _serialiseDate(params.value, includeTime) ?? \"\";\r\n      },\r\n      dataTypeMatcher: (value) => value instanceof Date\r\n    };\r\n  }\r\n  getDateStringTypeDef(baseDataType) {\r\n    const includeTime = this.getDateIncludesTimeFlag(baseDataType);\r\n    return {\r\n      baseDataType,\r\n      dateParser: (value) => _parseDateTimeFromString(value) ?? void 0,\r\n      dateFormatter: (value) => _serialiseDate(value ?? null, includeTime) ?? void 0,\r\n      valueParser: (params) => _isValidDate(String(params.newValue)) ? params.newValue : null,\r\n      valueFormatter: (params) => _isValidDate(String(params.value)) ? String(params.value) : \"\",\r\n      dataTypeMatcher: (value) => typeof value === \"string\" && _isValidDate(value)\r\n    };\r\n  }\r\n  getDefaultDataTypes() {\r\n    const translate = this.getLocaleTextFunc();\r\n    return {\r\n      number: {\r\n        baseDataType: \"number\",\r\n        // can be empty space with legacy copy\r\n        valueParser: (params) => params.newValue?.trim?.() === \"\" ? null : Number(params.newValue),\r\n        valueFormatter: (params) => {\r\n          if (params.value == null) {\r\n            return \"\";\r\n          }\r\n          if (typeof params.value !== \"number\" || isNaN(params.value)) {\r\n            return translate(\"invalidNumber\", \"Invalid Number\");\r\n          }\r\n          return String(params.value);\r\n        },\r\n        dataTypeMatcher: (value) => typeof value === \"number\"\r\n      },\r\n      text: {\r\n        baseDataType: \"text\",\r\n        valueParser: (params) => params.newValue === \"\" ? null : _toStringOrNull(params.newValue),\r\n        dataTypeMatcher: (value) => typeof value === \"string\"\r\n      },\r\n      boolean: {\r\n        baseDataType: \"boolean\",\r\n        valueParser: (params) => {\r\n          if (params.newValue == null) {\r\n            return params.newValue;\r\n          }\r\n          return params.newValue?.trim?.() === \"\" ? null : String(params.newValue).toLowerCase() === \"true\";\r\n        },\r\n        valueFormatter: (params) => params.value == null ? \"\" : String(params.value),\r\n        dataTypeMatcher: (value) => typeof value === \"boolean\"\r\n      },\r\n      date: this.getDateObjectTypeDef(\"date\"),\r\n      dateString: this.getDateStringTypeDef(\"dateString\"),\r\n      dateTime: this.getDateObjectTypeDef(\"dateTime\"),\r\n      dateTimeString: {\r\n        ...this.getDateStringTypeDef(\"dateTimeString\"),\r\n        dataTypeMatcher: (value) => typeof value === \"string\" && _isValidDateTime(value)\r\n      },\r\n      object: {\r\n        baseDataType: \"object\",\r\n        valueParser: () => null,\r\n        valueFormatter: (params) => _toStringOrNull(params.value) ?? \"\"\r\n      }\r\n    };\r\n  }\r\n  destroyColumnStateUpdateListeners() {\r\n    this.columnStateUpdateListenerDestroyFuncs.forEach((destroyFunc) => destroyFunc());\r\n    this.columnStateUpdateListenerDestroyFuncs = [];\r\n  }\r\n  destroy() {\r\n    this.dataTypeDefinitions = {};\r\n    this.dataTypeMatchers = {};\r\n    this.formatValueFuncs = {};\r\n    this.columnStateUpdatesPendingInference = {};\r\n    this.destroyColumnStateUpdateListeners();\r\n    super.destroy();\r\n  }\r\n};\r\nfunction mergeDataTypeDefinitions(parentDataTypeDefinition, childDataTypeDefinition) {\r\n  const mergedDataTypeDefinition = {\r\n    ...parentDataTypeDefinition,\r\n    ...childDataTypeDefinition\r\n  };\r\n  if (parentDataTypeDefinition.columnTypes && childDataTypeDefinition.columnTypes && childDataTypeDefinition.appendColumnTypes) {\r\n    mergedDataTypeDefinition.columnTypes = [\r\n      ...convertColumnTypes(parentDataTypeDefinition.columnTypes),\r\n      ...convertColumnTypes(childDataTypeDefinition.columnTypes)\r\n    ];\r\n  }\r\n  return mergedDataTypeDefinition;\r\n}\r\nfunction validateDataTypeDefinition(dataTypeDefinition, parentDataTypeDefinition, parentCellDataType) {\r\n  if (!parentDataTypeDefinition) {\r\n    _warn(45, { parentCellDataType });\r\n    return false;\r\n  }\r\n  if (parentDataTypeDefinition.baseDataType !== dataTypeDefinition.baseDataType) {\r\n    _warn(46);\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\nfunction createGroupSafeValueFormatter(dataTypeDefinition, gos) {\r\n  if (!dataTypeDefinition.valueFormatter) {\r\n    return void 0;\r\n  }\r\n  return (params) => {\r\n    if (params.node?.group) {\r\n      const aggFunc = (params.colDef.pivotValueColumn ?? params.column).getAggFunc();\r\n      if (aggFunc) {\r\n        if (aggFunc === \"first\" || aggFunc === \"last\") {\r\n          return dataTypeDefinition.valueFormatter(params);\r\n        }\r\n        if (dataTypeDefinition.baseDataType === \"number\" && aggFunc !== \"count\") {\r\n          if (typeof params.value === \"number\") {\r\n            return dataTypeDefinition.valueFormatter(params);\r\n          }\r\n          if (typeof params.value === \"object\") {\r\n            if (!params.value) {\r\n              return void 0;\r\n            }\r\n            if (\"toNumber\" in params.value) {\r\n              return dataTypeDefinition.valueFormatter({\r\n                ...params,\r\n                value: params.value.toNumber()\r\n              });\r\n            }\r\n            if (\"value\" in params.value) {\r\n              return dataTypeDefinition.valueFormatter({\r\n                ...params,\r\n                value: params.value.value\r\n              });\r\n            }\r\n          }\r\n        }\r\n        return void 0;\r\n      }\r\n    } else if (gos.get(\"groupHideOpenParents\") && params.column.isRowGroupActive()) {\r\n      if (typeof params.value === \"string\" && !dataTypeDefinition.dataTypeMatcher?.(params.value)) {\r\n        return void 0;\r\n      }\r\n    }\r\n    return dataTypeDefinition.valueFormatter(params);\r\n  };\r\n}\r\nfunction doesColDefPropPreventInference(colDef, checkProps, prop, comparisonValue) {\r\n  if (!checkProps[prop]) {\r\n    return false;\r\n  }\r\n  const value = colDef[prop];\r\n  if (value === null) {\r\n    checkProps[prop] = false;\r\n    return false;\r\n  } else {\r\n    return comparisonValue === void 0 ? !!value : value === comparisonValue;\r\n  }\r\n}\r\nfunction doColDefPropsPreventInference(colDef, propsToCheckForInference) {\r\n  return [\r\n    [\"cellRenderer\", \"agSparklineCellRenderer\"],\r\n    [\"valueGetter\", void 0],\r\n    [\"valueParser\", void 0],\r\n    [\"refData\", void 0]\r\n  ].some(\r\n    ([prop, comparisonValue]) => doesColDefPropPreventInference(colDef, propsToCheckForInference, prop, comparisonValue)\r\n  );\r\n}\r\nfunction getUpdatedColumnState(column, columnStateUpdates) {\r\n  const columnState = getColumnStateFromColDef(column);\r\n  columnStateUpdates.forEach((key) => {\r\n    delete columnState[key];\r\n    if (key === \"rowGroup\") {\r\n      delete columnState.rowGroupIndex;\r\n    } else if (key === \"pivot\") {\r\n      delete columnState.pivotIndex;\r\n    }\r\n  });\r\n  return columnState;\r\n}\r\n\r\n// packages/ag-grid-community/src/columns/columnModule.ts\r\nvar DataTypeModule = {\r\n  moduleName: \"DataType\",\r\n  version: VERSION,\r\n  beans: [DataTypeService],\r\n  dependsOn: [CheckboxCellRendererModule]\r\n};\r\nvar ColumnFlexModule = {\r\n  moduleName: \"ColumnFlex\",\r\n  version: VERSION,\r\n  beans: [ColumnFlexService]\r\n};\r\nvar ColumnApiModule = {\r\n  moduleName: \"ColumnApi\",\r\n  version: VERSION,\r\n  beans: [ColumnDefFactory],\r\n  apiFunctions: {\r\n    getColumnDef,\r\n    getDisplayNameForColumn,\r\n    getColumn,\r\n    getColumns,\r\n    applyColumnState,\r\n    getColumnState,\r\n    resetColumnState,\r\n    isPinning,\r\n    isPinningLeft,\r\n    isPinningRight,\r\n    getDisplayedColAfter,\r\n    getDisplayedColBefore,\r\n    setColumnsVisible,\r\n    setColumnsPinned,\r\n    getAllGridColumns,\r\n    getDisplayedLeftColumns,\r\n    getDisplayedCenterColumns,\r\n    getDisplayedRightColumns,\r\n    getAllDisplayedColumns,\r\n    getAllDisplayedVirtualColumns,\r\n    getColumnDefs\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/columns/columnNameService.ts\r\nfunction _camelCaseToHumanText(camelCase) {\r\n  if (!camelCase || camelCase == null) {\r\n    return null;\r\n  }\r\n  const rex = /([a-z])([A-Z])/g;\r\n  const rexCaps = /([A-Z]+)([A-Z])([a-z])/g;\r\n  const words = camelCase.replace(rex, \"$1 $2\").replace(rexCaps, \"$1 $2$3\").replace(/\\./g, \" \").split(\" \");\r\n  return words.map((word) => word.substring(0, 1).toUpperCase() + (word.length > 1 ? word.substring(1, word.length) : \"\")).join(\" \");\r\n}\r\nvar ColumnNameService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"colNames\";\r\n  }\r\n  getDisplayNameForColumn(column, location, includeAggFunc = false) {\r\n    if (!column) {\r\n      return null;\r\n    }\r\n    const headerName = this.getHeaderName(column.getColDef(), column, null, null, location);\r\n    const { aggColNameSvc } = this.beans;\r\n    if (includeAggFunc && aggColNameSvc) {\r\n      return aggColNameSvc.getHeaderName(column, headerName);\r\n    }\r\n    return headerName;\r\n  }\r\n  getDisplayNameForProvidedColumnGroup(columnGroup, providedColumnGroup, location) {\r\n    const colGroupDef = providedColumnGroup?.getColGroupDef();\r\n    if (colGroupDef) {\r\n      return this.getHeaderName(colGroupDef, null, columnGroup, providedColumnGroup, location);\r\n    }\r\n    return null;\r\n  }\r\n  getDisplayNameForColumnGroup(columnGroup, location) {\r\n    return this.getDisplayNameForProvidedColumnGroup(columnGroup, columnGroup.getProvidedColumnGroup(), location);\r\n  }\r\n  // location is where the column is going to appear, ie who is calling us\r\n  getHeaderName(colDef, column, columnGroup, providedColumnGroup, location) {\r\n    const headerValueGetter = colDef.headerValueGetter;\r\n    if (headerValueGetter) {\r\n      const params = _addGridCommonParams(this.gos, {\r\n        colDef,\r\n        column,\r\n        columnGroup,\r\n        providedColumnGroup,\r\n        location\r\n      });\r\n      if (typeof headerValueGetter === \"function\") {\r\n        return headerValueGetter(params);\r\n      } else if (typeof headerValueGetter === \"string\") {\r\n        return this.beans.expressionSvc?.evaluate(headerValueGetter, params) ?? null;\r\n      }\r\n      return \"\";\r\n    } else if (colDef.headerName != null) {\r\n      return colDef.headerName;\r\n    } else if (colDef.field) {\r\n      return _camelCaseToHumanText(colDef.field);\r\n    }\r\n    return \"\";\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/columns/columnViewportService.ts\r\nvar ColumnViewportService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"colViewport\";\r\n    // cols in center that are in the viewport\r\n    this.colsWithinViewport = [];\r\n    // same as colsWithinViewport, except we always include columns with headerAutoHeight\r\n    this.headerColsWithinViewport = [];\r\n    // A hash key to keep track of changes in viewport columns\r\n    this.colsWithinViewportHash = \"\";\r\n    // all columns & groups to be rendered, index by row.\r\n    // used by header rows to get all items to render for that row.\r\n    this.rowsOfHeadersToRenderLeft = {};\r\n    this.rowsOfHeadersToRenderRight = {};\r\n    this.rowsOfHeadersToRenderCenter = {};\r\n    this.columnsToRenderLeft = [];\r\n    this.columnsToRenderRight = [];\r\n    this.columnsToRenderCenter = [];\r\n  }\r\n  wireBeans(beans) {\r\n    this.visibleCols = beans.visibleCols;\r\n    this.colModel = beans.colModel;\r\n  }\r\n  postConstruct() {\r\n    this.suppressColumnVirtualisation = this.gos.get(\"suppressColumnVirtualisation\");\r\n  }\r\n  setScrollPosition(scrollWidth, scrollPosition, afterScroll = false) {\r\n    const { visibleCols } = this;\r\n    const bodyWidthDirty = visibleCols.isBodyWidthDirty;\r\n    const noChange = scrollWidth === this.scrollWidth && scrollPosition === this.scrollPosition && !bodyWidthDirty;\r\n    if (noChange) {\r\n      return;\r\n    }\r\n    this.scrollWidth = scrollWidth;\r\n    this.scrollPosition = scrollPosition;\r\n    visibleCols.isBodyWidthDirty = true;\r\n    if (this.gos.get(\"enableRtl\")) {\r\n      const bodyWidth = visibleCols.bodyWidth;\r\n      this.viewportLeft = bodyWidth - scrollPosition - scrollWidth;\r\n      this.viewportRight = bodyWidth - scrollPosition;\r\n    } else {\r\n      this.viewportLeft = scrollPosition;\r\n      this.viewportRight = scrollWidth + scrollPosition;\r\n    }\r\n    if (this.colModel.ready) {\r\n      this.checkViewportColumns(afterScroll);\r\n    }\r\n  }\r\n  /**\r\n   * Returns the columns that are currently rendered in the viewport.\r\n   */\r\n  getColumnHeadersToRender(type) {\r\n    switch (type) {\r\n      case \"left\":\r\n        return this.columnsToRenderLeft;\r\n      case \"right\":\r\n        return this.columnsToRenderRight;\r\n      default:\r\n        return this.columnsToRenderCenter;\r\n    }\r\n  }\r\n  /**\r\n   * Returns the column groups that are currently rendered in the viewport at a specific header row index.\r\n   */\r\n  getHeadersToRender(type, depth) {\r\n    let result;\r\n    switch (type) {\r\n      case \"left\":\r\n        result = this.rowsOfHeadersToRenderLeft[depth];\r\n        break;\r\n      case \"right\":\r\n        result = this.rowsOfHeadersToRenderRight[depth];\r\n        break;\r\n      default:\r\n        result = this.rowsOfHeadersToRenderCenter[depth];\r\n        break;\r\n    }\r\n    return result ?? [];\r\n  }\r\n  extractViewportColumns() {\r\n    const displayedColumnsCenter = this.visibleCols.centerCols;\r\n    if (this.isColumnVirtualisationSuppressed()) {\r\n      this.colsWithinViewport = displayedColumnsCenter;\r\n      this.headerColsWithinViewport = displayedColumnsCenter;\r\n    } else {\r\n      this.colsWithinViewport = displayedColumnsCenter.filter(this.isColumnInRowViewport.bind(this));\r\n      this.headerColsWithinViewport = displayedColumnsCenter.filter(this.isColumnInHeaderViewport.bind(this));\r\n    }\r\n  }\r\n  isColumnVirtualisationSuppressed() {\r\n    return this.suppressColumnVirtualisation || this.viewportRight === 0;\r\n  }\r\n  clear() {\r\n    this.rowsOfHeadersToRenderLeft = {};\r\n    this.rowsOfHeadersToRenderRight = {};\r\n    this.rowsOfHeadersToRenderCenter = {};\r\n    this.colsWithinViewportHash = \"\";\r\n  }\r\n  isColumnInHeaderViewport(col) {\r\n    if (col.isAutoHeaderHeight() || isAnyParentAutoHeaderHeight(col)) {\r\n      return true;\r\n    }\r\n    return this.isColumnInRowViewport(col);\r\n  }\r\n  isColumnInRowViewport(col) {\r\n    if (col.isAutoHeight()) {\r\n      return true;\r\n    }\r\n    const columnLeft = col.getLeft() || 0;\r\n    const columnRight = columnLeft + col.getActualWidth();\r\n    const leftBounds = this.viewportLeft - 200;\r\n    const rightBounds = this.viewportRight + 200;\r\n    const columnToMuchLeft = columnLeft < leftBounds && columnRight < leftBounds;\r\n    const columnToMuchRight = columnLeft > rightBounds && columnRight > rightBounds;\r\n    return !columnToMuchLeft && !columnToMuchRight;\r\n  }\r\n  // used by Grid API only\r\n  getViewportColumns() {\r\n    const { leftCols, rightCols } = this.visibleCols;\r\n    const res = this.colsWithinViewport.concat(leftCols).concat(rightCols);\r\n    return res;\r\n  }\r\n  // + rowRenderer\r\n  // if we are not column spanning, this just returns back the virtual centre columns,\r\n  // however if we are column spanning, then different rows can have different virtual\r\n  // columns, so we have to work out the list for each individual row.\r\n  getColsWithinViewport(rowNode) {\r\n    if (!this.colModel.colSpanActive) {\r\n      return this.colsWithinViewport;\r\n    }\r\n    const emptySpaceBeforeColumn = (col) => {\r\n      const left = col.getLeft();\r\n      return _exists(left) && left > this.viewportLeft;\r\n    };\r\n    const inViewportCallback = this.isColumnVirtualisationSuppressed() ? void 0 : this.isColumnInRowViewport.bind(this);\r\n    const { visibleCols } = this;\r\n    const displayedColumnsCenter = visibleCols.centerCols;\r\n    return visibleCols.getColsForRow(rowNode, displayedColumnsCenter, inViewportCallback, emptySpaceBeforeColumn);\r\n  }\r\n  // checks what columns are currently displayed due to column virtualisation. dispatches an event\r\n  // if the list of columns has changed.\r\n  // + setColumnWidth(), setViewportPosition(), setColumnDefs(), sizeColumnsToFit()\r\n  checkViewportColumns(afterScroll = false) {\r\n    const viewportColumnsChanged = this.extractViewport();\r\n    if (viewportColumnsChanged) {\r\n      this.eventSvc.dispatchEvent({\r\n        type: \"virtualColumnsChanged\",\r\n        afterScroll\r\n      });\r\n    }\r\n  }\r\n  calculateHeaderRows() {\r\n    const { leftCols, rightCols } = this.visibleCols;\r\n    this.columnsToRenderLeft = leftCols;\r\n    this.columnsToRenderRight = rightCols;\r\n    this.columnsToRenderCenter = this.colsWithinViewport;\r\n    const workOutGroupsToRender = (cols) => {\r\n      const groupsToRenderSet = /* @__PURE__ */ new Set();\r\n      const groupsToRender = {};\r\n      for (const col of cols) {\r\n        let group = col.getParent();\r\n        const skipFillers = col.isSpanHeaderHeight();\r\n        while (group) {\r\n          if (groupsToRenderSet.has(group)) {\r\n            break;\r\n          }\r\n          const skipFillerGroup = skipFillers && group.isPadding();\r\n          if (skipFillerGroup) {\r\n            group = group.getParent();\r\n            continue;\r\n          }\r\n          const level = group.getProvidedColumnGroup().getLevel();\r\n          groupsToRender[level] ?? (groupsToRender[level] = []);\r\n          groupsToRender[level].push(group);\r\n          groupsToRenderSet.add(group);\r\n          group = group.getParent();\r\n        }\r\n      }\r\n      return groupsToRender;\r\n    };\r\n    this.rowsOfHeadersToRenderLeft = workOutGroupsToRender(leftCols);\r\n    this.rowsOfHeadersToRenderRight = workOutGroupsToRender(rightCols);\r\n    this.rowsOfHeadersToRenderCenter = workOutGroupsToRender(this.headerColsWithinViewport);\r\n  }\r\n  extractViewport() {\r\n    const hashColumn = (c) => `${c.getId()}-${c.getPinned() || \"normal\"}`;\r\n    this.extractViewportColumns();\r\n    const newHash = this.getViewportColumns().map(hashColumn).join(\"#\");\r\n    const changed = this.colsWithinViewportHash !== newHash;\r\n    if (changed) {\r\n      this.colsWithinViewportHash = newHash;\r\n      this.calculateHeaderRows();\r\n    }\r\n    return changed;\r\n  }\r\n};\r\nfunction isAnyParentAutoHeaderHeight(col) {\r\n  while (col) {\r\n    if (col.isAutoHeaderHeight()) {\r\n      return true;\r\n    }\r\n    col = col.getParent();\r\n  }\r\n  return false;\r\n}\r\n\r\n// packages/ag-grid-community/src/components/framework/agComponentUtils.ts\r\nvar AgComponentUtils = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"agCompUtils\";\r\n  }\r\n  adaptFunction(type, jsCompFunc) {\r\n    if (!type.cellRenderer) {\r\n      return null;\r\n    }\r\n    class Adapter {\r\n      refresh() {\r\n        return false;\r\n      }\r\n      getGui() {\r\n        return this.eGui;\r\n      }\r\n      init(params) {\r\n        const callbackResult = jsCompFunc(params);\r\n        const type2 = typeof callbackResult;\r\n        if (type2 === \"string\" || type2 === \"number\" || type2 === \"boolean\") {\r\n          this.eGui = _loadTemplate(\"<span>\" + callbackResult + \"</span>\");\r\n          return;\r\n        }\r\n        if (callbackResult == null) {\r\n          this.eGui = _createElement({ tag: \"span\" });\r\n          return;\r\n        }\r\n        this.eGui = callbackResult;\r\n      }\r\n    }\r\n    return Adapter;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/components/framework/cellRendererFunctionModule.ts\r\nvar CellRendererFunctionModule = {\r\n  moduleName: \"CellRendererFunction\",\r\n  version: VERSION,\r\n  beans: [AgComponentUtils]\r\n};\r\n\r\n// packages/ag-grid-community/src/components/framework/registry.ts\r\nvar Registry = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"registry\";\r\n    this.agGridDefaults = {};\r\n    this.agGridDefaultOverrides = {};\r\n    this.jsComps = {};\r\n    this.selectors = {};\r\n    this.icons = {};\r\n  }\r\n  postConstruct() {\r\n    const comps = this.gos.get(\"components\");\r\n    if (comps != null) {\r\n      for (const key of Object.keys(comps)) {\r\n        this.jsComps[key] = comps[key];\r\n      }\r\n    }\r\n  }\r\n  registerModule(module) {\r\n    const { icons, userComponents, dynamicBeans, selectors } = module;\r\n    if (userComponents) {\r\n      const registerUserComponent = (name, component, params, processParams) => {\r\n        this.agGridDefaults[name] = component;\r\n        if (params || processParams) {\r\n          this.agGridDefaultOverrides[name] = { params, processParams };\r\n        }\r\n      };\r\n      for (const name of Object.keys(userComponents)) {\r\n        let comp = userComponents[name];\r\n        if (isComponentMetaFunc(comp)) {\r\n          comp = comp.getComp(this.beans);\r\n        }\r\n        if (typeof comp === \"object\") {\r\n          const { classImp, params, processParams } = comp;\r\n          registerUserComponent(name, classImp, params, processParams);\r\n        } else {\r\n          registerUserComponent(name, comp);\r\n        }\r\n      }\r\n    }\r\n    if (dynamicBeans) {\r\n      this.dynamicBeans ?? (this.dynamicBeans = {});\r\n      for (const name of Object.keys(dynamicBeans)) {\r\n        this.dynamicBeans[name] = dynamicBeans[name];\r\n      }\r\n    }\r\n    selectors?.forEach((selector) => {\r\n      this.selectors[selector.selector] = selector;\r\n    });\r\n    if (icons) {\r\n      for (const name of Object.keys(icons)) {\r\n        this.icons[name] = icons[name];\r\n      }\r\n    }\r\n  }\r\n  getUserComponent(propertyName, name) {\r\n    const createResult = (component, componentFromFramework, params, processParams) => ({\r\n      componentFromFramework,\r\n      component,\r\n      params,\r\n      processParams\r\n    });\r\n    const { frameworkOverrides } = this.beans;\r\n    const registeredViaFrameworkComp = frameworkOverrides.frameworkComponent(name, this.gos.get(\"components\"));\r\n    if (registeredViaFrameworkComp != null) {\r\n      return createResult(registeredViaFrameworkComp, true);\r\n    }\r\n    const jsComponent = this.jsComps[name];\r\n    if (jsComponent) {\r\n      const isFwkComp = frameworkOverrides.isFrameworkComponent(jsComponent);\r\n      return createResult(jsComponent, isFwkComp);\r\n    }\r\n    const defaultComponent = this.agGridDefaults[name];\r\n    if (defaultComponent) {\r\n      const overrides = this.agGridDefaultOverrides[name];\r\n      return createResult(defaultComponent, false, overrides?.params, overrides?.processParams);\r\n    }\r\n    this.beans.validation?.missingUserComponent(propertyName, name, this.agGridDefaults, this.jsComps);\r\n    return null;\r\n  }\r\n  createDynamicBean(name, mandatory, ...args) {\r\n    if (!this.dynamicBeans) {\r\n      throw new Error(_errMsg(279, { name }));\r\n    }\r\n    const BeanClass = this.dynamicBeans[name];\r\n    if (BeanClass == null) {\r\n      if (mandatory) {\r\n        throw new Error(this.beans.validation?.missingDynamicBean(name) ?? _errMsg(256));\r\n      }\r\n      return void 0;\r\n    }\r\n    return new BeanClass(...args);\r\n  }\r\n  getSelector(name) {\r\n    return this.selectors[name];\r\n  }\r\n  getIcon(name) {\r\n    return this.icons[name];\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/ctrlsService.ts\r\nvar NUM_CTRLS = 23;\r\nvar CtrlsService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"ctrlsSvc\";\r\n    this.params = {};\r\n    this.ready = false;\r\n    this.readyCallbacks = [];\r\n  }\r\n  postConstruct() {\r\n    this.addEventListener(\r\n      \"ready\",\r\n      () => {\r\n        this.updateReady();\r\n        if (this.ready) {\r\n          this.readyCallbacks.forEach((c) => c(this.params));\r\n          this.readyCallbacks.length = 0;\r\n        }\r\n      },\r\n      this.beans.frameworkOverrides.runWhenReadyAsync?.() ?? false\r\n    );\r\n  }\r\n  updateReady() {\r\n    const values = Object.values(this.params);\r\n    this.ready = values.length === NUM_CTRLS && values.every((ctrl) => {\r\n      return ctrl?.isAlive() ?? false;\r\n    });\r\n  }\r\n  whenReady(caller, callback) {\r\n    if (this.ready) {\r\n      callback(this.params);\r\n    } else {\r\n      this.readyCallbacks.push(callback);\r\n    }\r\n    caller.addDestroyFunc(() => {\r\n      const index = this.readyCallbacks.indexOf(callback);\r\n      if (index >= 0) {\r\n        this.readyCallbacks.splice(index, 1);\r\n      }\r\n    });\r\n  }\r\n  register(ctrlType, ctrl) {\r\n    this.params[ctrlType] = ctrl;\r\n    this.updateReady();\r\n    if (this.ready) {\r\n      this.dispatchLocalEvent({ type: \"ready\" });\r\n    }\r\n    ctrl.addDestroyFunc(() => {\r\n      this.updateReady();\r\n    });\r\n  }\r\n  get(ctrlType) {\r\n    return this.params[ctrlType];\r\n  }\r\n  getGridBodyCtrl() {\r\n    return this.params.gridBodyCtrl;\r\n  }\r\n  getHeaderRowContainerCtrls() {\r\n    const { leftHeader, centerHeader, rightHeader } = this.params;\r\n    return [leftHeader, rightHeader, centerHeader];\r\n  }\r\n  getHeaderRowContainerCtrl(pinned) {\r\n    const params = this.params;\r\n    switch (pinned) {\r\n      case \"left\":\r\n        return params.leftHeader;\r\n      case \"right\":\r\n        return params.rightHeader;\r\n      default:\r\n        return params.centerHeader;\r\n    }\r\n  }\r\n  getScrollFeature() {\r\n    return this.getGridBodyCtrl().scrollFeature;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/theming/core/core.css-GENERATED.ts\r\nvar coreCSS = (\r\n  /*css*/\r\n  `:where(.ag-root-wrapper,.ag-popup,.ag-dnd-ghost,.ag-chart),:where(.ag-root-wrapper,.ag-popup,.ag-dnd-ghost,.ag-chart) :where([class^=ag-]){box-sizing:border-box;&:after,&:before{box-sizing:border-box}&:where(div,span,label):focus-visible{box-shadow:inset var(--ag-focus-shadow);outline:none;&:where(.invalid){box-shadow:inset var(--ag-focus-error-shadow)}}&:where(button){color:inherit}}:where(.ag-root-wrapper,.ag-popup,.ag-dnd-ghost,.ag-chart) :where([class^=ag-]) ::-ms-clear{display:none}.ag-aria-description-container{border:0;z-index:9999;clip:rect(1px,1px,1px,1px);height:1px;overflow:hidden;padding:0;position:absolute;white-space:nowrap;width:1px}.ag-hidden{display:none!important}.ag-invisible{visibility:hidden!important}.ag-unselectable{-webkit-user-select:none;-moz-user-select:none;user-select:none}.ag-selectable{-webkit-user-select:text;-moz-user-select:text;user-select:text}.ag-tab-guard{display:block;height:0;position:absolute;width:0}:where(.ag-virtual-list-viewport) .ag-tab-guard{position:sticky}.ag-tab-guard-top{top:1px}.ag-tab-guard-bottom{bottom:1px}.ag-shake-left-to-right{animation-direction:alternate;animation-duration:.2s;animation-iteration-count:infinite;animation-name:ag-shake-left-to-right}@keyframes ag-shake-left-to-right{0%{padding-left:6px;padding-right:2px}to{padding-left:2px;padding-right:6px}}.ag-body-horizontal-scroll-viewport,.ag-body-vertical-scroll-viewport,.ag-body-viewport,.ag-center-cols-viewport,.ag-floating-bottom-viewport,.ag-floating-top-viewport,.ag-header-viewport,.ag-sticky-bottom-viewport,.ag-sticky-top-viewport,.ag-virtual-list-viewport{flex:1 1 auto;height:100%;min-width:0;overflow:hidden;position:relative}.ag-viewport{position:relative}.ag-spanning-container{position:absolute;top:0;z-index:1}.ag-body-viewport,.ag-center-cols-viewport,.ag-floating-bottom-viewport,.ag-floating-top-viewport,.ag-header-viewport,.ag-sticky-bottom-viewport,.ag-sticky-top-viewport{overflow-x:auto;-ms-overflow-style:none!important;scrollbar-width:none!important;&::-webkit-scrollbar{display:none!important}}.ag-body-viewport{display:flex;overflow-x:hidden;&:where(.ag-layout-normal){overflow-y:auto;-webkit-overflow-scrolling:touch}}.ag-floating-bottom-container,.ag-floating-top-container,.ag-sticky-bottom-container,.ag-sticky-top-container{min-height:1px}.ag-center-cols-viewport{min-height:100%;width:100%}.ag-body-horizontal-scroll-viewport{overflow-x:scroll}.ag-body-vertical-scroll-viewport{overflow-y:scroll}.ag-virtual-list-viewport{overflow:auto;width:100%}.ag-body-container,.ag-body-horizontal-scroll-container,.ag-body-vertical-scroll-container,.ag-center-cols-container,.ag-floating-bottom-container,.ag-floating-bottom-full-width-container,.ag-floating-top-container,.ag-full-width-container,.ag-header-container,.ag-pinned-left-cols-container,.ag-pinned-right-cols-container,.ag-sticky-bottom-container,.ag-sticky-top-container,.ag-virtual-list-container{position:relative}.ag-floating-bottom-container,.ag-floating-top-container,.ag-header-container,.ag-pinned-left-floating-bottom,.ag-pinned-left-floating-top,.ag-pinned-right-floating-bottom,.ag-pinned-right-floating-top,.ag-sticky-bottom-container,.ag-sticky-top-container{height:100%;white-space:nowrap}.ag-center-cols-container,.ag-pinned-right-cols-container{display:block}.ag-body-horizontal-scroll-container{height:100%}.ag-body-vertical-scroll-container{width:100%}.ag-floating-bottom-full-width-container,.ag-floating-top-full-width-container,.ag-full-width-container,.ag-sticky-bottom-full-width-container,.ag-sticky-top-full-width-container{pointer-events:none;position:absolute;top:0}:where(.ag-ltr) .ag-floating-bottom-full-width-container,:where(.ag-ltr) .ag-floating-top-full-width-container,:where(.ag-ltr) .ag-full-width-container,:where(.ag-ltr) .ag-sticky-bottom-full-width-container,:where(.ag-ltr) .ag-sticky-top-full-width-container{left:0}:where(.ag-rtl) .ag-floating-bottom-full-width-container,:where(.ag-rtl) .ag-floating-top-full-width-container,:where(.ag-rtl) .ag-full-width-container,:where(.ag-rtl) .ag-sticky-bottom-full-width-container,:where(.ag-rtl) .ag-sticky-top-full-width-container{right:0}.ag-full-width-container{width:100%}.ag-floating-bottom-full-width-container,.ag-floating-top-full-width-container{display:inline-block;height:100%;overflow:hidden;width:100%}.ag-virtual-list-container{overflow:hidden}.ag-body{display:flex;flex:1 1 auto;flex-direction:row!important;min-height:0;position:relative}.ag-body-horizontal-scroll,.ag-body-vertical-scroll{display:flex;min-height:0;min-width:0;position:relative;&:where(.ag-scrollbar-invisible){bottom:0;position:absolute;&:where(.ag-apple-scrollbar){opacity:0;transition:opacity .4s;visibility:hidden;&:where(.ag-scrollbar-scrolling,.ag-scrollbar-active){opacity:1;visibility:visible}}}}.ag-body-horizontal-scroll{width:100%;&:where(.ag-scrollbar-invisible){left:0;right:0}}.ag-body-vertical-scroll{height:100%;&:where(.ag-scrollbar-invisible){top:0;z-index:10}}:where(.ag-ltr) .ag-body-vertical-scroll{&:where(.ag-scrollbar-invisible){right:0}}:where(.ag-rtl) .ag-body-vertical-scroll{&:where(.ag-scrollbar-invisible){left:0}}.ag-force-vertical-scroll{overflow-y:scroll!important}.ag-horizontal-left-spacer,.ag-horizontal-right-spacer{height:100%;min-width:0;overflow-x:scroll;&:where(.ag-scroller-corner){overflow-x:hidden}}:where(.ag-row-animation) .ag-row{transition:transform .4s,top .4s,opacity .2s;&:where(.ag-after-created){transition:transform .4s,top .4s,height .4s,opacity .2s}}:where(.ag-row-animation.ag-prevent-animation) .ag-row{transition:none!important;&:where(.ag-row.ag-after-created){transition:none!important}}:where(.ag-row-no-animation) .ag-row{transition:none}.ag-row-loading{align-items:center;display:flex}.ag-row-position-absolute{position:absolute}.ag-row-position-relative{position:relative}.ag-full-width-row{overflow:hidden;pointer-events:all}.ag-row-inline-editing{z-index:1}.ag-row-dragging{z-index:2}.ag-stub-cell{align-items:center;display:flex}.ag-cell{display:inline-block;height:100%;position:absolute;white-space:nowrap;&:focus-visible{box-shadow:none}}.ag-cell-value{flex:1 1 auto}.ag-cell-value,.ag-group-value{overflow:hidden;text-overflow:ellipsis}.ag-cell-wrap-text{white-space:normal;word-break:break-word}:where(.ag-cell) .ag-icon{display:inline-block;vertical-align:middle}.ag-floating-top{display:flex;overflow:hidden;position:relative;white-space:nowrap;width:100%}:where(.ag-floating-top:not(.ag-invisible)){border-bottom:var(--ag-pinned-row-border)}.ag-floating-bottom{display:flex;overflow:hidden;position:relative;white-space:nowrap;width:100%}:where(.ag-floating-bottom:not(.ag-invisible)){border-top:var(--ag-pinned-row-border)}.ag-sticky-bottom,.ag-sticky-top{background-color:var(--ag-background-color);display:flex;height:0;overflow:hidden;position:absolute;width:100%;z-index:1}.ag-opacity-zero{opacity:0!important}.ag-cell-label-container{align-items:center;display:flex;flex-direction:row-reverse;height:100%;justify-content:space-between;width:100%}:where(.ag-right-aligned-header){.ag-cell-label-container{flex-direction:row}.ag-header-cell-text{text-align:end}}.ag-column-group-icons{display:block;>*{cursor:pointer}}:where(.ag-ltr){direction:ltr;.ag-body,.ag-body-horizontal-scroll,.ag-body-viewport,.ag-floating-bottom,.ag-floating-top,.ag-header,.ag-sticky-bottom,.ag-sticky-top{flex-direction:row}}:where(.ag-rtl){direction:rtl;text-align:right;.ag-body,.ag-body-horizontal-scroll,.ag-body-viewport,.ag-floating-bottom,.ag-floating-top,.ag-header,.ag-sticky-bottom,.ag-sticky-top{flex-direction:row-reverse}.ag-icon-contracted,.ag-icon-expanded,.ag-icon-tree-closed{display:block}}:where(.ag-rtl){.ag-icon-contracted,.ag-icon-expanded,.ag-icon-tree-closed{transform:rotate(180deg)}}:where(.ag-rtl){.ag-icon-contracted,.ag-icon-expanded,.ag-icon-tree-closed{transform:rotate(-180deg)}}.ag-measurement-container{height:0;overflow:hidden;visibility:hidden;width:0}.ag-measurement-element-border{display:inline-block;&:before{border-left:var(--ag-internal-measurement-border);content:\"\";display:block}}.ag-group{position:relative;width:100%}.ag-group-title-bar{align-items:center;display:flex;padding:var(--ag-spacing)}.ag-group-title{display:inline;min-width:0;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}:where(.ag-group-title-bar) .ag-group-title{cursor:default}.ag-group-toolbar{align-items:center;display:flex;padding:var(--ag-spacing)}.ag-group-container{display:flex}.ag-disabled .ag-group-container{pointer-events:none}.ag-disabled-group-container,.ag-disabled-group-title-bar{opacity:.5}.ag-group-container-horizontal{flex-flow:row wrap}.ag-group-container-vertical{flex-direction:column}.ag-group-title-bar-icon{cursor:pointer;flex:none}:where(.ag-ltr) .ag-group-title-bar-icon{margin-right:var(--ag-spacing)}:where(.ag-rtl) .ag-group-title-bar-icon{margin-left:var(--ag-spacing)}:where(.ag-group-item-alignment-stretch) .ag-group-item{align-items:stretch}:where(.ag-group-item-alignment-start) .ag-group-item{align-items:flex-start}:where(.ag-group-item-alignment-end) .ag-group-item{align-items:flex-end}.ag-popup-child{top:0;z-index:5;&:where(:not(.ag-tooltip-custom)){box-shadow:var(--ag-popup-shadow)}}.ag-popup-editor{position:absolute;-webkit-user-select:none;-moz-user-select:none;user-select:none}.ag-large-text-input{display:block}:where(.ag-ltr) .ag-row:not(.ag-row-level-0) .ag-pivot-leaf-group{margin-left:var(--ag-row-group-indent-size)}:where(.ag-rtl) .ag-row:not(.ag-row-level-0) .ag-pivot-leaf-group{margin-right:var(--ag-row-group-indent-size)}:where(.ag-ltr) .ag-row-group-leaf-indent{margin-left:calc(var(--ag-cell-widget-spacing) + var(--ag-icon-size))}:where(.ag-rtl) .ag-row-group-leaf-indent{margin-right:calc(var(--ag-cell-widget-spacing) + var(--ag-icon-size))}.ag-value-change-delta{padding:0 2px}.ag-value-change-delta-up{color:var(--ag-value-change-delta-up-color)}.ag-value-change-delta-down{color:var(--ag-value-change-delta-down-color)}.ag-value-change-value{background-color:transparent;border-radius:1px;padding-left:1px;padding-right:1px;transition:background-color 1s}.ag-value-change-value-highlight{background-color:var(--ag-value-change-value-highlight-background-color);transition:background-color .1s}.ag-cell-data-changed{background-color:var(--ag-value-change-value-highlight-background-color)!important}.ag-cell-data-changed-animation{background-color:transparent}.ag-cell-highlight{background-color:var(--ag-range-selection-highlight-color)!important}.ag-row,.ag-spanned-row{color:var(--ag-cell-text-color);font-family:var(--ag-cell-font-family);font-size:var(--ag-data-font-size);white-space:nowrap;--ag-internal-content-line-height:calc(min(var(--ag-row-height), var(--ag-line-height, 1000px)) - var(--ag-internal-row-border-width, 1px) - 2px)}.ag-row{background-color:var(--ag-background-color);border-bottom:var(--ag-row-border);height:var(--ag-row-height);width:100%;&.ag-row-editing-invalid{background-color:var(--ag-full-row-edit-invalid-background-color)}}:where(.ag-body-vertical-content-no-gap>div>div>div,.ag-body-vertical-content-no-gap>div>div>div>div)>.ag-row-last{border-bottom-color:transparent}.ag-sticky-bottom{border-top:var(--ag-row-border);box-sizing:content-box!important}.ag-group-contracted,.ag-group-expanded{cursor:pointer}.ag-cell,.ag-full-width-row .ag-cell-wrapper.ag-row-group{border:1px solid transparent;line-height:var(--ag-internal-content-line-height);-webkit-font-smoothing:subpixel-antialiased}:where(.ag-ltr) .ag-cell{border-right:var(--ag-column-border)}:where(.ag-rtl) .ag-cell{border-left:var(--ag-column-border)}.ag-spanned-cell-wrapper{background-color:var(--ag-background-color);position:absolute}.ag-spanned-cell-wrapper>.ag-spanned-cell{display:block;position:relative}:where(.ag-ltr) :where(.ag-body-horizontal-content-no-gap) .ag-column-last{border-right-color:transparent}:where(.ag-rtl) :where(.ag-body-horizontal-content-no-gap) .ag-column-last{border-left-color:transparent}.ag-cell-wrapper{align-items:center;display:flex;>:where(:not(.ag-cell-value,.ag-group-value)){align-items:center;display:flex;height:var(--ag-internal-content-line-height)}&:where(.ag-row-group){align-items:flex-start}:where(.ag-full-width-row) &:where(.ag-row-group){align-items:center;height:100%}}:where(.ag-ltr) .ag-cell-wrapper{padding-left:calc(var(--ag-indentation-level)*var(--ag-row-group-indent-size))}:where(.ag-rtl) .ag-cell-wrapper{padding-right:calc(var(--ag-indentation-level)*var(--ag-row-group-indent-size))}:where(.ag-cell-wrap-text:not(.ag-cell-auto-height)) .ag-cell-wrapper{align-items:normal;height:100%;:where(.ag-cell-value){height:100%}}:where(.ag-ltr) .ag-row>.ag-cell-wrapper.ag-row-group{padding-left:calc(var(--ag-cell-horizontal-padding) + var(--ag-row-group-indent-size)*var(--ag-indentation-level))}:where(.ag-rtl) .ag-row>.ag-cell-wrapper.ag-row-group{padding-right:calc(var(--ag-cell-horizontal-padding) + var(--ag-row-group-indent-size)*var(--ag-indentation-level))}.ag-cell-focus:not(.ag-cell-range-selected):focus-within,.ag-cell-range-single-cell,.ag-cell-range-single-cell.ag-cell-range-handle,.ag-context-menu-open .ag-cell-focus:not(.ag-cell-range-selected),.ag-context-menu-open .ag-full-width-row.ag-row-focus .ag-cell-wrapper.ag-row-group,.ag-full-width-row.ag-row-focus:focus .ag-cell-wrapper.ag-row-group{border:1px solid;border-color:var(--ag-range-selection-border-color);border-style:var(--ag-range-selection-border-style);outline:initial}.ag-full-width-row.ag-row-focus:focus{box-shadow:none}:where(.ag-ltr) .ag-group-contracted,:where(.ag-ltr) .ag-group-expanded,:where(.ag-ltr) .ag-row-drag,:where(.ag-ltr) .ag-selection-checkbox{margin-right:var(--ag-cell-widget-spacing)}:where(.ag-rtl) .ag-group-contracted,:where(.ag-rtl) .ag-group-expanded,:where(.ag-rtl) .ag-row-drag,:where(.ag-rtl) .ag-selection-checkbox{margin-left:var(--ag-cell-widget-spacing)}:where(.ag-ltr) .ag-group-child-count{margin-left:3px}:where(.ag-rtl) .ag-group-child-count{margin-right:3px}.ag-row-highlight-above:after,.ag-row-highlight-below:after,.ag-row-highlight-inside:after{background-color:var(--ag-range-selection-border-color);content:\"\";height:1px;pointer-events:none;position:absolute;width:calc(100% - 1px)}:where(.ag-ltr) .ag-row-highlight-above:after,:where(.ag-ltr) .ag-row-highlight-below:after,:where(.ag-ltr) .ag-row-highlight-inside:after{left:1px}:where(.ag-rtl) .ag-row-highlight-above:after,:where(.ag-rtl) .ag-row-highlight-below:after,:where(.ag-rtl) .ag-row-highlight-inside:after{right:1px}.ag-row-highlight-above:after{top:0}.ag-row-highlight-below:after{bottom:0}.ag-row-highlight-indent:after{display:block;width:auto}:where(.ag-ltr) .ag-row-highlight-indent:after{left:calc((var(--ag-cell-widget-spacing) + var(--ag-icon-size))*2 + var(--ag-cell-horizontal-padding) + var(--ag-row-highlight-level)*var(--ag-row-group-indent-size));right:1px}:where(.ag-rtl) .ag-row-highlight-indent:after{left:1px;right:calc((var(--ag-cell-widget-spacing) + var(--ag-icon-size))*2 + var(--ag-cell-horizontal-padding) + var(--ag-row-highlight-level)*var(--ag-row-group-indent-size))}.ag-row-highlight-inside:after{background-color:var(--ag-selected-row-background-color);border:1px solid var(--ag-range-selection-border-color);display:block;height:auto;inset:0;width:auto}.ag-row-odd{background-color:var(--ag-odd-row-background-color)}.ag-row-selected:before{background-color:var(--ag-selected-row-background-color);content:\"\";display:block;inset:0;pointer-events:none;position:absolute}.ag-row-hover.ag-full-width-row.ag-row-group:before,.ag-row-hover:not(.ag-full-width-row):before{background-color:var(--ag-row-hover-color);content:\"\";display:block;inset:0;pointer-events:none;position:absolute}.ag-row-hover.ag-row-selected:before{background-color:var(--ag-row-hover-color);background-image:linear-gradient(var(--ag-selected-row-background-color),var(--ag-selected-row-background-color))}.ag-row.ag-full-width-row.ag-row-group>*{position:relative}.ag-column-hover{background-color:var(--ag-column-hover-color)}.ag-header-range-highlight{background-color:var(--ag-range-header-highlight-color)}.ag-right-aligned-cell{font-variant-numeric:tabular-nums}:where(.ag-ltr) .ag-right-aligned-cell{text-align:right}:where(.ag-rtl) .ag-right-aligned-cell{text-align:left}.ag-right-aligned-cell .ag-cell-value,.ag-right-aligned-cell .ag-group-value{margin-left:auto}:where(.ag-ltr) .ag-cell:not(.ag-cell-inline-editing),:where(.ag-ltr) .ag-full-width-row .ag-cell-wrapper.ag-row-group{padding-left:calc(var(--ag-cell-horizontal-padding) - 1px + var(--ag-row-group-indent-size)*var(--ag-indentation-level));padding-right:calc(var(--ag-cell-horizontal-padding) - 1px)}:where(.ag-rtl) .ag-cell:not(.ag-cell-inline-editing),:where(.ag-rtl) .ag-full-width-row .ag-cell-wrapper.ag-row-group{padding-left:calc(var(--ag-cell-horizontal-padding) - 1px);padding-right:calc(var(--ag-cell-horizontal-padding) - 1px + var(--ag-row-group-indent-size)*var(--ag-indentation-level))}.ag-row>.ag-cell-wrapper{padding-left:calc(var(--ag-cell-horizontal-padding) - 1px);padding-right:calc(var(--ag-cell-horizontal-padding) - 1px)}.ag-row-dragging{cursor:move;opacity:.5}.ag-details-row{background-color:var(--ag-background-color);padding:calc(var(--ag-spacing)*3.75)}.ag-layout-auto-height,.ag-layout-print{.ag-center-cols-container,.ag-center-cols-viewport{min-height:150px}}.ag-overlay-loading-wrapper{background-color:var(--ag-modal-overlay-background-color)}.ag-skeleton-container{align-content:center;height:100%;width:100%}.ag-skeleton-effect{animation:ag-skeleton-loading 1.5s ease-in-out .5s infinite;background-color:var(--ag-row-loading-skeleton-effect-color);border-radius:.25rem;height:1em;width:100%}:where(.ag-ltr) .ag-right-aligned-cell .ag-skeleton-effect{margin-left:auto}:where(.ag-rtl) .ag-right-aligned-cell .ag-skeleton-effect{margin-right:auto}@keyframes ag-skeleton-loading{0%{background-color:var(--ag-row-loading-skeleton-effect-color)}50%{background-color:color-mix(in srgb,transparent,var(--ag-row-loading-skeleton-effect-color) 40%)}to{background-color:var(--ag-row-loading-skeleton-effect-color)}}.ag-loading{align-items:center;display:flex;height:100%}:where(.ag-ltr) .ag-loading{padding-left:var(--ag-cell-horizontal-padding)}:where(.ag-rtl) .ag-loading{padding-right:var(--ag-cell-horizontal-padding)}:where(.ag-ltr) .ag-loading-icon{padding-right:var(--ag-cell-widget-spacing)}:where(.ag-rtl) .ag-loading-icon{padding-left:var(--ag-cell-widget-spacing)}.ag-icon-loading{animation-duration:1s;animation-iteration-count:infinite;animation-name:spin;animation-timing-function:linear}@keyframes spin{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}.ag-input-wrapper,.ag-picker-field-wrapper{align-items:center;display:flex;flex:1 1 auto;line-height:normal;position:relative}.ag-input-field{align-items:center;display:flex;flex-direction:row}.ag-input-field-input:where(:not([type=checkbox],[type=radio])){flex:1 1 auto;min-width:0;width:100%}.ag-header{background-color:var(--ag-header-background-color);border-bottom:var(--ag-header-row-border);color:var(--ag-header-text-color);display:flex;font-family:var(--ag-header-font-family);font-size:var(--ag-header-font-size);font-weight:var(--ag-header-font-weight);overflow:hidden;white-space:nowrap;width:100%}.ag-header-row{height:var(--ag-header-height);position:absolute}.ag-floating-filter-button-button,.ag-header-cell-filter-button,.ag-header-cell-menu-button,.ag-header-expand-icon,.ag-panel-title-bar-button,:where(.ag-header-cell-sortable) .ag-header-cell-label{cursor:pointer}:where(.ag-ltr) .ag-header-expand-icon{margin-left:4px}:where(.ag-rtl) .ag-header-expand-icon{margin-right:4px}.ag-header-row:where(:not(:first-child)){:where(.ag-header-cell:not(.ag-header-span-height.ag-header-span-total,.ag-header-parent-hidden),.ag-header-group-cell.ag-header-group-cell-with-group){border-top:var(--ag-header-row-border)}}.ag-header-row:where(:not(.ag-header-row-column-group)){overflow:hidden}:where(.ag-header.ag-header-allow-overflow) .ag-header-row{overflow:visible}.ag-header-cell{display:inline-flex;overflow:hidden}.ag-header-group-cell{contain:paint;display:flex}.ag-header-cell,.ag-header-group-cell{align-items:center;gap:var(--ag-cell-widget-spacing);height:100%;padding:0 var(--ag-cell-horizontal-padding);position:absolute}@property --ag-internal-moving-color{syntax:\"<color>\";inherits:false;initial-value:transparent}@property --ag-internal-hover-color{syntax:\"<color>\";inherits:false;initial-value:transparent}.ag-header-cell:where(:not(.ag-floating-filter)),.ag-header-group-cell{&:before{background-image:linear-gradient(var(--ag-internal-hover-color),var(--ag-internal-hover-color)),linear-gradient(var(--ag-internal-moving-color),var(--ag-internal-moving-color));content:\"\";inset:0;position:absolute;--ag-internal-moving-color:transparent;--ag-internal-hover-color:transparent;transition:--ag-internal-moving-color var(--ag-header-cell-background-transition-duration),--ag-internal-hover-color var(--ag-header-cell-background-transition-duration)}&:where(:hover):before{--ag-internal-hover-color:var(--ag-header-cell-hover-background-color)}&:where(.ag-header-cell-moving):before{--ag-internal-moving-color:var(--ag-header-cell-moving-background-color);--ag-internal-hover-color:var(--ag-header-cell-hover-background-color)}}:where(.ag-header-cell:not(.ag-floating-filter) *,.ag-header-group-cell *){position:relative;z-index:1}.ag-header-cell-menu-button:where(:not(.ag-header-menu-always-show)){opacity:0;transition:opacity .2s}.ag-header-cell-filter-button,:where(.ag-header-cell.ag-header-active) .ag-header-cell-menu-button{opacity:1}.ag-header-cell-label,.ag-header-group-cell-label{align-items:center;align-self:stretch;display:flex;flex:1 1 auto;overflow:hidden;padding:5px 0}:where(.ag-ltr) .ag-sort-indicator-icon{padding-left:var(--ag-spacing)}:where(.ag-rtl) .ag-sort-indicator-icon{padding-right:var(--ag-spacing)}.ag-header-cell-label{text-overflow:ellipsis}.ag-header-group-cell-label.ag-sticky-label{flex:none;max-width:100%;overflow:visible;position:sticky}:where(.ag-ltr) .ag-header-group-cell-label.ag-sticky-label{left:var(--ag-cell-horizontal-padding)}:where(.ag-rtl) .ag-header-group-cell-label.ag-sticky-label{right:var(--ag-cell-horizontal-padding)}.ag-header-cell-text,.ag-header-group-text{overflow:hidden;text-overflow:ellipsis}.ag-header-cell-text{word-break:break-word}.ag-header-cell-comp-wrapper{width:100%}:where(.ag-header-group-cell) .ag-header-cell-comp-wrapper{display:flex}:where(.ag-header-cell:not(.ag-header-cell-auto-height)) .ag-header-cell-comp-wrapper{align-items:center;display:flex;height:100%}.ag-header-cell-wrap-text .ag-header-cell-comp-wrapper{white-space:normal}.ag-header-cell-comp-wrapper-limited-height>*{overflow:hidden}:where(.ag-right-aligned-header) .ag-header-cell-label{flex-direction:row-reverse}:where(.ag-ltr) :where(.ag-header-cell:not(.ag-right-aligned-header)){.ag-header-label-icon,.ag-header-menu-icon{margin-left:var(--ag-spacing)}}:where(.ag-rtl) :where(.ag-header-cell:not(.ag-right-aligned-header)){.ag-header-label-icon,.ag-header-menu-icon{margin-right:var(--ag-spacing)}}:where(.ag-ltr) :where(.ag-header-cell.ag-right-aligned-header){.ag-header-label-icon,.ag-header-menu-icon{margin-right:var(--ag-spacing)}}:where(.ag-rtl) :where(.ag-header-cell.ag-right-aligned-header){.ag-header-label-icon,.ag-header-menu-icon{margin-left:var(--ag-spacing)}}.ag-header-cell:after,.ag-header-group-cell:where(:not(.ag-header-span-height.ag-header-group-cell-no-group)):after{content:\"\";height:var(--ag-header-column-border-height);position:absolute;top:calc(50% - var(--ag-header-column-border-height)*.5);z-index:1}:where(.ag-ltr) .ag-header-cell:after,:where(.ag-ltr) .ag-header-group-cell:where(:not(.ag-header-span-height.ag-header-group-cell-no-group)):after{border-right:var(--ag-header-column-border);right:0}:where(.ag-rtl) .ag-header-cell:after,:where(.ag-rtl) .ag-header-group-cell:where(:not(.ag-header-span-height.ag-header-group-cell-no-group)):after{border-left:var(--ag-header-column-border);left:0}.ag-header-highlight-after:after,.ag-header-highlight-before:after{background-color:var(--ag-accent-color);content:\"\";height:100%;position:absolute;width:1px}:where(.ag-ltr) .ag-header-highlight-before:after{left:0}:where(.ag-rtl) .ag-header-highlight-before:after{right:0}:where(.ag-ltr) .ag-header-highlight-after:after{right:0;:where(.ag-pinned-left-header) &{right:1px}}:where(.ag-rtl) .ag-header-highlight-after:after{left:0;:where(.ag-pinned-left-header) &{left:1px}}.ag-header-cell-resize{align-items:center;cursor:ew-resize;display:flex;height:100%;position:absolute;top:0;width:8px;z-index:2;&:after{background-color:var(--ag-header-column-resize-handle-color);content:\"\";height:var(--ag-header-column-resize-handle-height);position:absolute;top:calc(50% - var(--ag-header-column-resize-handle-height)*.5);width:var(--ag-header-column-resize-handle-width);z-index:1}}:where(.ag-ltr) .ag-header-cell-resize{right:-3px;&:after{left:calc(50% - var(--ag-header-column-resize-handle-width))}}:where(.ag-rtl) .ag-header-cell-resize{left:-3px;&:after{right:calc(50% - var(--ag-header-column-resize-handle-width))}}:where(.ag-header-cell.ag-header-span-height) .ag-header-cell-resize:after{height:calc(100% - var(--ag-spacing)*4);top:calc(var(--ag-spacing)*2)}.ag-header-group-cell-no-group:where(.ag-header-span-height){display:none}.ag-sort-indicator-container{display:flex;gap:var(--ag-spacing)}.ag-layout-print{&.ag-body{display:block;height:unset}&.ag-root-wrapper{display:inline-block}.ag-body-horizontal-scroll,.ag-body-vertical-scroll{display:none}&.ag-force-vertical-scroll{overflow-y:visible!important}}@media print{.ag-root-wrapper.ag-layout-print{display:table;.ag-body-horizontal-scroll-viewport,.ag-body-viewport,.ag-center-cols-container,.ag-center-cols-viewport,.ag-root,.ag-root-wrapper-body,.ag-virtual-list-viewport{display:block!important;height:auto!important;overflow:hidden!important}.ag-cell,.ag-row{-moz-column-break-inside:avoid;break-inside:avoid}}}ag-grid,ag-grid-angular{display:block}.ag-chart,.ag-dnd-ghost,.ag-popup,.ag-root-wrapper{cursor:default;line-height:normal;white-space:normal;-webkit-font-smoothing:antialiased;background-color:var(--ag-background-color);color:var(--ag-text-color);color-scheme:var(--ag-browser-color-scheme);font-family:var(--ag-font-family);font-size:var(--ag-font-size);--ag-indentation-level:0}.ag-root-wrapper{border:var(--ag-wrapper-border);border-radius:var(--ag-wrapper-border-radius);display:flex;flex-direction:column;overflow:hidden;position:relative;&.ag-layout-normal{height:100%}}.ag-root-wrapper-body{display:flex;flex-direction:row;&.ag-layout-normal{flex:1 1 auto;height:0;min-height:0}}.ag-root{display:flex;flex-direction:column;position:relative;&.ag-layout-auto-height,&.ag-layout-normal{flex:1 1 auto;overflow:hidden;width:0}&.ag-layout-normal{height:100%}}.ag-list-item,.ag-virtual-list-item{height:var(--ag-list-item-height)}.ag-virtual-list-item{position:absolute;width:100%}.ag-select-list{background-color:var(--ag-picker-list-background-color);border:var(--ag-picker-list-border);border-radius:var(--ag-border-radius);box-shadow:var(--ag-dropdown-shadow);overflow:hidden auto}.ag-list-item{align-items:center;display:flex;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;&.ag-active-item{background-color:var(--ag-row-hover-color)}}.ag-select-list-item{cursor:default;-webkit-user-select:none;-moz-user-select:none;user-select:none;:where(span){overflow:hidden;text-overflow:ellipsis;white-space:nowrap}}:where(.ag-ltr) .ag-select-list-item{padding-left:calc(var(--ag-cell-horizontal-padding)/2)}:where(.ag-rtl) .ag-select-list-item{padding-right:calc(var(--ag-cell-horizontal-padding)/2)}.ag-list-item-hovered:after{background-color:var(--ag-accent-color);content:\"\";height:1px;left:0;position:absolute;right:0}.ag-item-highlight-top:after{top:0}.ag-item-highlight-bottom:after{bottom:0}:where(.ag-icon):before{align-items:center;background-color:currentcolor;color:inherit;content:\"\";display:flex;font-family:inherit;font-size:var(--ag-icon-size);font-style:normal;font-variant:normal;height:var(--ag-icon-size);justify-content:center;line-height:var(--ag-icon-size);-webkit-mask-size:contain;mask-size:contain;text-transform:none;width:var(--ag-icon-size)}.ag-icon{background-position:50%;background-repeat:no-repeat;background-size:contain;color:var(--ag-icon-color);display:block;height:var(--ag-icon-size);position:relative;-webkit-user-select:none;-moz-user-select:none;user-select:none;width:var(--ag-icon-size)}.ag-column-select-column-group-readonly,.ag-column-select-column-readonly,.ag-disabled,[disabled]{.ag-icon{opacity:.5}&.ag-icon-grip{opacity:.35}}.ag-column-select-column-readonly{&.ag-icon-grip,.ag-icon-grip{opacity:.35}}.ag-drag-handle{color:var(--ag-drag-handle-color);cursor:grab;:where(.ag-icon){color:var(--ag-drag-handle-color)}}.ag-chart-menu-icon,.ag-chart-settings-next,.ag-chart-settings-prev,.ag-column-group-icons,.ag-column-select-header-icon,.ag-filter-toolpanel-expand,.ag-floating-filter-button-button,.ag-group-title-bar-icon,.ag-header-cell-filter-button,.ag-header-cell-menu-button,.ag-header-expand-icon,.ag-panel-title-bar-button,.ag-panel-title-bar-button-icon,.ag-set-filter-group-icons,:where(.ag-group-contracted) .ag-icon,:where(.ag-group-expanded) .ag-icon{background-color:var(--ag-icon-button-background-color);border-radius:var(--ag-icon-button-border-radius);box-shadow:0 0 0 var(--ag-icon-button-background-spread) var(--ag-icon-button-background-color);color:var(--ag-icon-button-color);&:hover{background-color:var(--ag-icon-button-hover-background-color);box-shadow:0 0 0 var(--ag-icon-button-background-spread) var(--ag-icon-button-hover-background-color);color:var(--ag-icon-button-hover-color)}}.ag-filter-active{background-image:linear-gradient(var(--ag-icon-button-active-background-color),var(--ag-icon-button-active-background-color));border-radius:1px;outline:solid var(--ag-icon-button-background-spread) var(--ag-icon-button-active-background-color);position:relative;&:after{background-color:var(--ag-icon-button-active-indicator-color);border-radius:50%;content:\"\";height:6px;position:absolute;top:-1px;width:6px}:where(.ag-icon-filter){clip-path:path(\"M8,0C8,4.415 11.585,8 16,8L16,16L0,16L0,0L8,0Z\");color:var(--ag-icon-button-active-color)}}:where(.ag-ltr) .ag-filter-active{&:after{right:-1px}}:where(.ag-rtl) .ag-filter-active{&:after{left:-1px}}.ag-menu{background-color:var(--ag-menu-background-color);border:var(--ag-menu-border);border-radius:var(--ag-border-radius);box-shadow:var(--ag-menu-shadow);color:var(--ag-menu-text-color);max-height:100%;overflow-y:auto}.ag-menu,.ag-resizer{position:absolute;-webkit-user-select:none;-moz-user-select:none;user-select:none}.ag-resizer{pointer-events:none;z-index:1}:where(.ag-resizer){&.ag-resizer-topLeft{cursor:nwse-resize;height:5px;left:0;top:0;width:5px}&.ag-resizer-top{cursor:ns-resize;height:5px;left:5px;right:5px;top:0}&.ag-resizer-topRight{cursor:nesw-resize;height:5px;right:0;top:0;width:5px}&.ag-resizer-right{bottom:5px;cursor:ew-resize;right:0;top:5px;width:5px}&.ag-resizer-bottomRight{bottom:0;cursor:nwse-resize;height:5px;right:0;width:5px}&.ag-resizer-bottom{bottom:0;cursor:ns-resize;height:5px;left:5px;right:5px}&.ag-resizer-bottomLeft{bottom:0;cursor:nesw-resize;height:5px;left:0;width:5px}&.ag-resizer-left{bottom:5px;cursor:ew-resize;left:0;top:5px;width:5px}}`\r\n);\r\n\r\n// packages/ag-grid-community/src/theming/inject.ts\r\nvar IS_SSR = typeof window !== \"object\" || !window?.document?.fonts?.forEach;\r\nvar _injectGlobalCSS = (css, styleContainer, debugId, layer, priority, nonce) => {\r\n  if (IS_SSR)\r\n    return;\r\n  if (FORCE_LEGACY_THEMES)\r\n    return;\r\n  if (layer) {\r\n    css = `@layer ${CSS.escape(layer)} { ${css} }`;\r\n  }\r\n  let injections = injectionState.map.get(styleContainer);\r\n  if (!injections) {\r\n    injections = [];\r\n    injectionState.map.set(styleContainer, injections);\r\n  }\r\n  if (injections.find((i) => i.css === css))\r\n    return;\r\n  const el = document.createElement(\"style\");\r\n  if (nonce) {\r\n    el.setAttribute(\"nonce\", nonce);\r\n  }\r\n  el.dataset.agGlobalCss = debugId;\r\n  el.textContent = css;\r\n  const newInjection = { css, el, priority };\r\n  let insertAfter;\r\n  for (const injection of injections) {\r\n    if (injection.priority > priority)\r\n      break;\r\n    insertAfter = injection;\r\n  }\r\n  if (insertAfter) {\r\n    insertAfter.el.insertAdjacentElement(\"afterend\", el);\r\n    const index = injections.indexOf(insertAfter);\r\n    injections.splice(index + 1, 0, newInjection);\r\n  } else {\r\n    styleContainer.insertBefore(el, styleContainer.querySelector(\":not(title, meta)\"));\r\n    injections.push(newInjection);\r\n  }\r\n};\r\nvar _injectCoreAndModuleCSS = (styleContainer, layer, nonce) => {\r\n  _injectGlobalCSS(coreCSS, styleContainer, \"core\", layer, 0, nonce);\r\n  Array.from(_getAllRegisteredModules()).sort((a, b) => a.moduleName.localeCompare(b.moduleName)).forEach(\r\n    (module) => module.css?.forEach(\r\n      (css) => _injectGlobalCSS(css, styleContainer, `module-${module.moduleName}`, layer, 0, nonce)\r\n    )\r\n  );\r\n};\r\nvar _registerGridUsingThemingAPI = (environment) => {\r\n  injectionState.grids.add(environment);\r\n};\r\nvar _unregisterGridUsingThemingAPI = (environment) => {\r\n  injectionState.grids.delete(environment);\r\n  if (injectionState.grids.size === 0) {\r\n    injectionState.map = /* @__PURE__ */ new WeakMap();\r\n    for (const style of document.head.querySelectorAll(\"style[data-ag-global-css]\")) {\r\n      style.remove();\r\n    }\r\n  }\r\n};\r\nvar _a;\r\nvar injectionState = (_a = typeof window === \"object\" ? window : {}).agStyleInjectionState ?? (_a.agStyleInjectionState = {\r\n  map: /* @__PURE__ */ new WeakMap(),\r\n  grids: /* @__PURE__ */ new Set()\r\n});\r\n\r\n// packages/ag-grid-community/src/theming/Part.ts\r\nvar createPart = (args) => {\r\n  return new PartImpl(args);\r\n};\r\nvar defaultModeName = \"$default\";\r\nvar partCounter = 0;\r\nvar PartImpl = class {\r\n  constructor({ feature, params, modeParams = {}, css, cssImports }) {\r\n    this.feature = feature;\r\n    this.css = css;\r\n    this.cssImports = cssImports;\r\n    this.modeParams = {\r\n      // NOTE: it's important that default is defined first, putting it\r\n      // first in iteration order, because when merging params the default\r\n      // params override any prior modal params, so modal params in this\r\n      // part need to come after default params to prevent them from being\r\n      // immediately overridden.\r\n      [defaultModeName]: {\r\n        ...modeParams[defaultModeName] ?? {},\r\n        ...params ?? {}\r\n      },\r\n      ...modeParams\r\n    };\r\n  }\r\n  use(styleContainer, layer, nonce) {\r\n    let inject = this._inject;\r\n    if (inject == null) {\r\n      let { css } = this;\r\n      if (css) {\r\n        const className = `ag-theme-${this.feature ?? \"part\"}-${++partCounter}`;\r\n        if (typeof css === \"function\")\r\n          css = css();\r\n        css = `:where(.${className}) {\r\n${css}\r\n}\r\n`;\r\n        for (const cssImport of this.cssImports ?? []) {\r\n          css = `@import url(${JSON.stringify(cssImport)});\r\n${css}`;\r\n        }\r\n        inject = { css, class: className };\r\n      } else {\r\n        inject = false;\r\n      }\r\n      this._inject = inject;\r\n    }\r\n    if (inject && styleContainer) {\r\n      _injectGlobalCSS(inject.css, styleContainer, inject.class, layer, 1, nonce);\r\n    }\r\n    return inject ? inject.class : false;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/theming/theme-utils.ts\r\nvar kebabCase = (str) => str.replace(/[A-Z]/g, (m) => `-${m}`).toLowerCase();\r\nvar paramToVariableName = (paramName) => `--ag-${kebabCase(paramName)}`;\r\nvar paramToVariableExpression = (paramName) => `var(${paramToVariableName(paramName)})`;\r\nvar clamp = (value, min, max) => Math.max(min, Math.min(max, value));\r\nvar memoize = (fn) => {\r\n  const values = /* @__PURE__ */ new Map();\r\n  return (a) => {\r\n    const key = a;\r\n    if (!values.has(key)) {\r\n      values.set(key, fn(a));\r\n    }\r\n    return values.get(key);\r\n  };\r\n};\r\nvar accentMix = (mix) => ({ ref: \"accentColor\", mix });\r\nvar foregroundMix = (mix) => ({ ref: \"foregroundColor\", mix });\r\nvar foregroundBackgroundMix = (mix) => ({\r\n  ref: \"foregroundColor\",\r\n  mix,\r\n  onto: \"backgroundColor\"\r\n});\r\nvar foregroundHeaderBackgroundMix = (mix) => ({\r\n  ref: \"foregroundColor\",\r\n  mix,\r\n  onto: \"headerBackgroundColor\"\r\n});\r\nvar backgroundColor = { ref: \"backgroundColor\" };\r\nvar foregroundColor = { ref: \"foregroundColor\" };\r\nvar accentColor = { ref: \"accentColor\" };\r\n\r\n// packages/ag-grid-community/src/theming/core/core-css.ts\r\nvar defaultLightColorSchemeParams = {\r\n  backgroundColor: \"#fff\",\r\n  foregroundColor: \"#181d1f\",\r\n  borderColor: foregroundMix(0.15),\r\n  chromeBackgroundColor: foregroundBackgroundMix(0.02),\r\n  browserColorScheme: \"light\"\r\n};\r\nvar coreDefaults = {\r\n  ...defaultLightColorSchemeParams,\r\n  textColor: foregroundColor,\r\n  accentColor: \"#2196f3\",\r\n  invalidColor: \"#e02525\",\r\n  wrapperBorder: true,\r\n  rowBorder: true,\r\n  headerRowBorder: true,\r\n  footerRowBorder: {\r\n    ref: \"rowBorder\"\r\n  },\r\n  columnBorder: {\r\n    style: \"solid\",\r\n    width: 1,\r\n    color: \"transparent\"\r\n  },\r\n  headerColumnBorder: false,\r\n  headerColumnBorderHeight: \"100%\",\r\n  pinnedColumnBorder: true,\r\n  pinnedRowBorder: true,\r\n  sidePanelBorder: true,\r\n  sideBarPanelWidth: 250,\r\n  sideBarBackgroundColor: {\r\n    ref: \"chromeBackgroundColor\"\r\n  },\r\n  sideButtonBarBackgroundColor: {\r\n    ref: \"sideBarBackgroundColor\"\r\n  },\r\n  sideButtonBarTopPadding: 0,\r\n  sideButtonSelectedUnderlineWidth: 2,\r\n  sideButtonSelectedUnderlineColor: \"transparent\",\r\n  sideButtonSelectedUnderlineTransitionDuration: 0,\r\n  sideButtonBackgroundColor: \"transparent\",\r\n  sideButtonTextColor: { ref: \"textColor\" },\r\n  sideButtonHoverBackgroundColor: { ref: \"sideButtonBackgroundColor\" },\r\n  sideButtonHoverTextColor: { ref: \"sideButtonTextColor\" },\r\n  sideButtonSelectedBackgroundColor: backgroundColor,\r\n  sideButtonSelectedTextColor: { ref: \"sideButtonTextColor\" },\r\n  sideButtonBorder: \"solid 1px transparent\",\r\n  sideButtonSelectedBorder: true,\r\n  sideButtonLeftPadding: { ref: \"spacing\" },\r\n  sideButtonRightPadding: { ref: \"spacing\" },\r\n  sideButtonVerticalPadding: { calc: \"spacing * 3\" },\r\n  fontFamily: [\r\n    \"-apple-system\",\r\n    \"BlinkMacSystemFont\",\r\n    \"Segoe UI\",\r\n    \"Roboto\",\r\n    \"Oxygen-Sans\",\r\n    \"Ubuntu\",\r\n    \"Cantarell\",\r\n    \"Helvetica Neue\",\r\n    \"sans-serif\"\r\n  ],\r\n  headerBackgroundColor: {\r\n    ref: \"chromeBackgroundColor\"\r\n  },\r\n  headerFontFamily: {\r\n    ref: \"fontFamily\"\r\n  },\r\n  cellFontFamily: {\r\n    ref: \"fontFamily\"\r\n  },\r\n  headerFontWeight: 500,\r\n  headerFontSize: {\r\n    ref: \"fontSize\"\r\n  },\r\n  dataFontSize: {\r\n    ref: \"fontSize\"\r\n  },\r\n  headerTextColor: {\r\n    ref: \"textColor\"\r\n  },\r\n  headerCellHoverBackgroundColor: \"transparent\",\r\n  headerCellMovingBackgroundColor: { ref: \"headerCellHoverBackgroundColor\" },\r\n  headerCellBackgroundTransitionDuration: \"0.2s\",\r\n  cellTextColor: {\r\n    ref: \"textColor\"\r\n  },\r\n  subtleTextColor: {\r\n    ref: \"textColor\",\r\n    mix: 0.5\r\n  },\r\n  rangeSelectionBorderStyle: \"solid\",\r\n  rangeSelectionBorderColor: accentColor,\r\n  rangeSelectionBackgroundColor: accentMix(0.2),\r\n  rangeSelectionChartBackgroundColor: \"#0058FF1A\",\r\n  rangeSelectionChartCategoryBackgroundColor: \"#00FF841A\",\r\n  rangeSelectionHighlightColor: accentMix(0.5),\r\n  rangeHeaderHighlightColor: foregroundHeaderBackgroundMix(0.08),\r\n  rowNumbersSelectedColor: accentMix(0.5),\r\n  rowHoverColor: accentMix(0.08),\r\n  columnHoverColor: accentMix(0.05),\r\n  selectedRowBackgroundColor: accentMix(0.12),\r\n  modalOverlayBackgroundColor: {\r\n    ref: \"backgroundColor\",\r\n    mix: 0.66\r\n  },\r\n  oddRowBackgroundColor: backgroundColor,\r\n  borderWidth: 1,\r\n  borderRadius: 4,\r\n  wrapperBorderRadius: 8,\r\n  cellHorizontalPadding: {\r\n    calc: \"spacing * 2 * cellHorizontalPaddingScale\"\r\n  },\r\n  cellWidgetSpacing: {\r\n    calc: \"spacing * 1.5\"\r\n  },\r\n  cellHorizontalPaddingScale: 1,\r\n  rowGroupIndentSize: {\r\n    calc: \"cellWidgetSpacing + iconSize\"\r\n  },\r\n  valueChangeDeltaUpColor: \"#43a047\",\r\n  valueChangeDeltaDownColor: \"#e53935\",\r\n  valueChangeValueHighlightBackgroundColor: \"#16a08580\",\r\n  spacing: 8,\r\n  fontSize: 14,\r\n  rowHeight: {\r\n    calc: \"max(iconSize, dataFontSize) + spacing * 3.25 * rowVerticalPaddingScale\"\r\n  },\r\n  rowVerticalPaddingScale: 1,\r\n  headerHeight: {\r\n    calc: \"max(iconSize, dataFontSize) + spacing * 4 * headerVerticalPaddingScale\"\r\n  },\r\n  headerVerticalPaddingScale: 1,\r\n  paginationPanelHeight: {\r\n    ref: \"rowHeight\",\r\n    calc: \"max(rowHeight, 22px)\"\r\n  },\r\n  popupShadow: \"0 0 16px #00000026\",\r\n  cardShadow: \"0 1px 4px 1px #00000018\",\r\n  dropdownShadow: { ref: \"cardShadow\" },\r\n  dragAndDropImageBackgroundColor: backgroundColor,\r\n  dragAndDropImageBorder: true,\r\n  dragAndDropImageShadow: {\r\n    ref: \"popupShadow\"\r\n  },\r\n  dragHandleColor: foregroundMix(0.7),\r\n  focusShadow: {\r\n    spread: 3,\r\n    color: accentMix(0.5)\r\n  },\r\n  focusErrorShadow: {\r\n    spread: 3,\r\n    color: {\r\n      ref: \"invalidColor\",\r\n      onto: \"backgroundColor\",\r\n      mix: 0.5\r\n    }\r\n  },\r\n  headerColumnResizeHandleHeight: \"30%\",\r\n  headerColumnResizeHandleWidth: 2,\r\n  headerColumnResizeHandleColor: {\r\n    ref: \"borderColor\"\r\n  },\r\n  widgetContainerHorizontalPadding: {\r\n    calc: \"spacing * 1.5\"\r\n  },\r\n  widgetContainerVerticalPadding: {\r\n    calc: \"spacing * 1.5\"\r\n  },\r\n  widgetHorizontalSpacing: {\r\n    calc: \"spacing * 1.5\"\r\n  },\r\n  widgetVerticalSpacing: {\r\n    ref: \"spacing\"\r\n  },\r\n  listItemHeight: {\r\n    calc: \"max(iconSize, dataFontSize) + widgetVerticalSpacing\"\r\n  },\r\n  iconSize: 16,\r\n  iconColor: \"inherit\",\r\n  iconButtonColor: { ref: \"iconColor\" },\r\n  iconButtonBackgroundColor: \"transparent\",\r\n  iconButtonBackgroundSpread: 4,\r\n  iconButtonBorderRadius: 1,\r\n  iconButtonHoverColor: { ref: \"iconButtonColor\" },\r\n  iconButtonHoverBackgroundColor: foregroundMix(0.1),\r\n  iconButtonActiveColor: accentColor,\r\n  iconButtonActiveBackgroundColor: accentMix(0.28),\r\n  iconButtonActiveIndicatorColor: accentColor,\r\n  toggleButtonWidth: 28,\r\n  toggleButtonHeight: 18,\r\n  toggleButtonOnBackgroundColor: accentColor,\r\n  toggleButtonOffBackgroundColor: foregroundBackgroundMix(0.3),\r\n  toggleButtonSwitchBackgroundColor: backgroundColor,\r\n  toggleButtonSwitchInset: 2,\r\n  menuBorder: {\r\n    color: foregroundMix(0.2)\r\n  },\r\n  menuBackgroundColor: foregroundBackgroundMix(0.03),\r\n  menuTextColor: foregroundBackgroundMix(0.95),\r\n  menuShadow: {\r\n    ref: \"popupShadow\"\r\n  },\r\n  menuSeparatorColor: {\r\n    ref: \"borderColor\"\r\n  },\r\n  setFilterIndentSize: {\r\n    ref: \"iconSize\"\r\n  },\r\n  chartMenuPanelWidth: 260,\r\n  chartMenuLabelColor: foregroundMix(0.8),\r\n  dialogShadow: {\r\n    ref: \"popupShadow\"\r\n  },\r\n  cellEditingBorder: {\r\n    color: accentColor\r\n  },\r\n  cellEditingShadow: { ref: \"cardShadow\" },\r\n  fullRowEditInvalidBackgroundColor: {\r\n    ref: \"invalidColor\",\r\n    onto: \"backgroundColor\",\r\n    mix: 0.25\r\n  },\r\n  dialogBorder: {\r\n    color: foregroundMix(0.2)\r\n  },\r\n  panelBackgroundColor: backgroundColor,\r\n  panelTitleBarBackgroundColor: {\r\n    ref: \"headerBackgroundColor\"\r\n  },\r\n  panelTitleBarIconColor: {\r\n    ref: \"headerTextColor\"\r\n  },\r\n  panelTitleBarTextColor: {\r\n    ref: \"headerTextColor\"\r\n  },\r\n  panelTitleBarFontWeight: {\r\n    ref: \"headerFontWeight\"\r\n  },\r\n  panelTitleBarBorder: true,\r\n  columnSelectIndentSize: {\r\n    ref: \"iconSize\"\r\n  },\r\n  toolPanelSeparatorBorder: true,\r\n  tooltipBackgroundColor: {\r\n    ref: \"chromeBackgroundColor\"\r\n  },\r\n  tooltipErrorBackgroundColor: {\r\n    ref: \"invalidColor\",\r\n    onto: \"backgroundColor\",\r\n    mix: 0.1\r\n  },\r\n  tooltipTextColor: {\r\n    ref: \"textColor\"\r\n  },\r\n  tooltipErrorTextColor: {\r\n    ref: \"invalidColor\"\r\n  },\r\n  tooltipBorder: true,\r\n  tooltipErrorBorder: {\r\n    color: {\r\n      ref: \"invalidColor\",\r\n      onto: \"backgroundColor\",\r\n      mix: 0.25\r\n    }\r\n  },\r\n  columnDropCellBackgroundColor: foregroundMix(0.07),\r\n  columnDropCellTextColor: {\r\n    ref: \"textColor\"\r\n  },\r\n  columnDropCellDragHandleColor: {\r\n    ref: \"textColor\"\r\n  },\r\n  columnDropCellBorder: {\r\n    color: foregroundMix(0.13)\r\n  },\r\n  selectCellBackgroundColor: foregroundMix(0.07),\r\n  selectCellBorder: {\r\n    color: foregroundMix(0.13)\r\n  },\r\n  advancedFilterBuilderButtonBarBorder: true,\r\n  advancedFilterBuilderIndentSize: {\r\n    calc: \"spacing * 2 + iconSize\"\r\n  },\r\n  advancedFilterBuilderJoinPillColor: \"#f08e8d\",\r\n  advancedFilterBuilderColumnPillColor: \"#a6e194\",\r\n  advancedFilterBuilderOptionPillColor: \"#f3c08b\",\r\n  advancedFilterBuilderValuePillColor: \"#85c0e4\",\r\n  filterPanelApplyButtonColor: backgroundColor,\r\n  filterPanelApplyButtonBackgroundColor: accentColor,\r\n  filterPanelCardSubtleColor: {\r\n    ref: \"textColor\",\r\n    mix: 0.7\r\n  },\r\n  filterPanelCardSubtleHoverColor: { ref: \"textColor\" },\r\n  findMatchColor: foregroundColor,\r\n  findMatchBackgroundColor: \"#ffff00\",\r\n  findActiveMatchColor: foregroundColor,\r\n  findActiveMatchBackgroundColor: \"#ffa500\",\r\n  filterToolPanelGroupIndent: {\r\n    ref: \"spacing\"\r\n  },\r\n  rowLoadingSkeletonEffectColor: foregroundMix(0.15),\r\n  statusBarLabelColor: foregroundColor,\r\n  statusBarLabelFontWeight: 500,\r\n  statusBarValueColor: foregroundColor,\r\n  statusBarValueFontWeight: 500,\r\n  pinnedSourceRowTextColor: {\r\n    ref: \"textColor\"\r\n  },\r\n  pinnedSourceRowBackgroundColor: {\r\n    ref: \"backgroundColor\"\r\n  },\r\n  pinnedSourceRowFontWeight: 600,\r\n  pinnedRowFontWeight: 600,\r\n  pinnedRowBackgroundColor: {\r\n    ref: \"backgroundColor\"\r\n  },\r\n  pinnedRowTextColor: {\r\n    ref: \"textColor\"\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/theming/parts/batch-edit/batch-edit-style-default.css-GENERATED.ts\r\nvar batchEditStyleDefaultCSS = (\r\n  /*css*/\r\n  `.ag-cell-batch-edit{background-color:var(--ag-cell-batch-edit-background-color);color:var(--ag-cell-batch-edit-text-color);display:inherit}.ag-row-batch-edit{background-color:var(--ag-row-batch-edit-background-color);color:var(--ag-row-batch-edit-text-color)}`\r\n);\r\n\r\n// packages/ag-grid-community/src/theming/parts/batch-edit/batch-edit-styles.ts\r\nvar baseParams = {\r\n  cellBatchEditBackgroundColor: \"rgba(220 181 139 / 16%)\",\r\n  cellBatchEditTextColor: \"#422f00\",\r\n  rowBatchEditBackgroundColor: {\r\n    ref: \"cellBatchEditBackgroundColor\"\r\n  },\r\n  rowBatchEditTextColor: {\r\n    ref: \"cellBatchEditTextColor\"\r\n  }\r\n};\r\nvar baseDarkBatchEditParams = {\r\n  ...baseParams,\r\n  cellBatchEditTextColor: \"#f3d0b3\"\r\n};\r\nvar makeBatchEditStyleBaseTreeShakeable = () => createPart({\r\n  feature: \"batchEditStyle\",\r\n  params: baseParams,\r\n  css: batchEditStyleDefaultCSS\r\n});\r\nvar batchEditStyleBase = /* @__PURE__ */ makeBatchEditStyleBaseTreeShakeable();\r\n\r\n// packages/ag-grid-community/src/theming/parts/button-style/button-style-base.css-GENERATED.ts\r\nvar buttonStyleBaseCSS = (\r\n  /*css*/\r\n  `:where(.ag-button){background:none;border:none;color:inherit;cursor:pointer;font-family:inherit;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;margin:0;padding:0;text-indent:inherit;text-shadow:inherit;text-transform:inherit;word-spacing:inherit;&:disabled{cursor:default}&:focus-visible{box-shadow:var(--ag-focus-shadow);outline:none}}.ag-standard-button{-webkit-appearance:none;-moz-appearance:none;appearance:none;background-color:var(--ag-button-background-color);border:var(--ag-button-border);border-radius:var(--ag-button-border-radius);color:var(--ag-button-text-color);cursor:pointer;font-weight:var(--ag-button-font-weight);padding:var(--ag-button-vertical-padding) var(--ag-button-horizontal-padding);&:hover{background-color:var(--ag-button-hover-background-color);border:var(--ag-button-hover-border);color:var(--ag-button-hover-text-color)}&:active{background-color:var(--ag-button-active-background-color);border:var(--ag-button-active-border);color:var(--ag-button-active-text-color)}&:disabled{background-color:var(--ag-button-disabled-background-color);border:var(--ag-button-disabled-border);color:var(--ag-button-disabled-text-color)}}`\r\n);\r\n\r\n// packages/ag-grid-community/src/theming/parts/button-style/button-styles.ts\r\nvar baseParams2 = {\r\n  buttonTextColor: \"inherit\",\r\n  buttonFontWeight: \"normal\",\r\n  buttonBackgroundColor: \"transparent\",\r\n  buttonBorder: false,\r\n  buttonBorderRadius: { ref: \"borderRadius\" },\r\n  buttonHorizontalPadding: { calc: \"spacing * 2\" },\r\n  buttonVerticalPadding: { ref: \"spacing\" },\r\n  buttonHoverTextColor: { ref: \"buttonTextColor\" },\r\n  buttonHoverBackgroundColor: { ref: \"buttonBackgroundColor\" },\r\n  buttonHoverBorder: { ref: \"buttonBorder\" },\r\n  buttonActiveTextColor: { ref: \"buttonHoverTextColor\" },\r\n  buttonActiveBackgroundColor: { ref: \"buttonHoverBackgroundColor\" },\r\n  buttonActiveBorder: { ref: \"buttonHoverBorder\" },\r\n  buttonDisabledTextColor: { ref: \"inputDisabledTextColor\" },\r\n  buttonDisabledBackgroundColor: { ref: \"inputDisabledBackgroundColor\" },\r\n  buttonDisabledBorder: { ref: \"inputDisabledBorder\" }\r\n};\r\nvar makeButtonStyleBaseTreeShakeable = () => createPart({\r\n  feature: \"buttonStyle\",\r\n  params: baseParams2,\r\n  css: buttonStyleBaseCSS\r\n});\r\nvar buttonStyleBase = /* @__PURE__ */ makeButtonStyleBaseTreeShakeable();\r\nvar makeButtonStyleQuartzTreeShakeable = () => createPart({\r\n  feature: \"buttonStyle\",\r\n  params: {\r\n    ...baseParams2,\r\n    buttonBackgroundColor: backgroundColor,\r\n    buttonBorder: true,\r\n    buttonHoverBackgroundColor: { ref: \"rowHoverColor\" },\r\n    buttonActiveBorder: { color: accentColor }\r\n  },\r\n  css: buttonStyleBaseCSS\r\n});\r\nvar buttonStyleQuartz = /* @__PURE__ */ makeButtonStyleQuartzTreeShakeable();\r\nvar makeButtonStyleAlpineTreeShakeable = () => createPart({\r\n  feature: \"buttonStyle\",\r\n  params: {\r\n    ...baseParams2,\r\n    buttonBackgroundColor: backgroundColor,\r\n    buttonBorder: { color: accentColor },\r\n    buttonFontWeight: 600,\r\n    buttonTextColor: accentColor,\r\n    buttonHoverBackgroundColor: { ref: \"rowHoverColor\" },\r\n    buttonActiveBackgroundColor: accentColor,\r\n    buttonActiveTextColor: backgroundColor\r\n  },\r\n  css: buttonStyleBaseCSS\r\n});\r\nvar buttonStyleAlpine = /* @__PURE__ */ makeButtonStyleAlpineTreeShakeable();\r\nvar makeButtonStyleBalhamTreeShakeable = () => createPart({\r\n  feature: \"buttonStyle\",\r\n  params: {\r\n    ...baseParams2,\r\n    buttonBorder: { color: foregroundColor, width: 2, style: \"outset\" },\r\n    buttonActiveBorder: { color: foregroundColor, width: 2, style: \"inset\" },\r\n    buttonBackgroundColor: foregroundBackgroundMix(0.07),\r\n    buttonHoverBackgroundColor: backgroundColor,\r\n    buttonVerticalPadding: { calc: \"spacing * 0.5\" }\r\n  },\r\n  css: buttonStyleBaseCSS\r\n});\r\nvar buttonStyleBalham = /* @__PURE__ */ makeButtonStyleBalhamTreeShakeable();\r\n\r\n// packages/ag-grid-community/src/theming/parts/column-drop-style/column-drop-style-bordered.css-GENERATED.ts\r\nvar columnDropStyleBorderedCSS = (\r\n  /*css*/\r\n  `.ag-column-drop-vertical-empty-message{align-items:center;border:dashed var(--ag-border-width);border-color:var(--ag-border-color);display:flex;inset:0;justify-content:center;margin:calc(var(--ag-spacing)*1.5) calc(var(--ag-spacing)*2);overflow:hidden;padding:calc(var(--ag-spacing)*2);position:absolute}`\r\n);\r\n\r\n// packages/ag-grid-community/src/theming/parts/column-drop-style/column-drop-style-plain.css-GENERATED.ts\r\nvar columnDropStylePlainCSS = (\r\n  /*css*/\r\n  `.ag-column-drop-vertical-empty-message{color:var(--ag-subtle-text-color);font-size:calc(var(--ag-font-size) - 1px);font-weight:600;padding-top:var(--ag-spacing)}:where(.ag-ltr) .ag-column-drop-vertical-empty-message{padding-left:calc(var(--ag-icon-size) + var(--ag-spacing) + var(--ag-widget-horizontal-spacing));padding-right:var(--ag-spacing)}:where(.ag-rtl) .ag-column-drop-vertical-empty-message{padding-left:var(--ag-spacing);padding-right:calc(var(--ag-icon-size) + var(--ag-spacing) + var(--ag-widget-horizontal-spacing))}`\r\n);\r\n\r\n// packages/ag-grid-community/src/theming/parts/column-drop-style/column-drop-styles.ts\r\nvar makeColumnDropStyleBorderedTreeShakeable = () => {\r\n  return createPart({\r\n    feature: \"columnDropStyle\",\r\n    css: columnDropStyleBorderedCSS\r\n  });\r\n};\r\nvar columnDropStyleBordered = /* @__PURE__ */ makeColumnDropStyleBorderedTreeShakeable();\r\nvar makeColumnDropStylePlainTreeShakeable = () => {\r\n  return createPart({\r\n    feature: \"columnDropStyle\",\r\n    css: columnDropStylePlainCSS\r\n  });\r\n};\r\nvar columnDropStylePlain = /* @__PURE__ */ makeColumnDropStylePlainTreeShakeable();\r\n\r\n// packages/ag-grid-community/src/theming/theme-types.ts\r\nvar paramTypes = [\r\n  \"colorScheme\",\r\n  \"color\",\r\n  \"length\",\r\n  \"scale\",\r\n  \"borderStyle\",\r\n  \"border\",\r\n  \"shadow\",\r\n  \"image\",\r\n  \"fontFamily\",\r\n  \"fontWeight\",\r\n  \"duration\"\r\n];\r\nvar getParamType = memoize((param) => {\r\n  param = param.toLowerCase();\r\n  return paramTypes.find((type) => param.endsWith(type.toLowerCase())) ?? \"length\";\r\n});\r\nvar literalToCSS = (value) => {\r\n  if (typeof value === \"object\" && value?.ref)\r\n    return paramToVariableExpression(value.ref);\r\n  if (typeof value === \"string\")\r\n    return value;\r\n  if (typeof value === \"number\")\r\n    return String(value);\r\n  return false;\r\n};\r\nvar colorValueToCss = (value) => {\r\n  if (typeof value === \"string\")\r\n    return value;\r\n  if (value && \"ref\" in value) {\r\n    const colorExpr = paramToVariableExpression(value.ref);\r\n    if (value.mix == null) {\r\n      return colorExpr;\r\n    }\r\n    const backgroundExpr = value.onto ? paramToVariableExpression(value.onto) : \"transparent\";\r\n    return `color-mix(in srgb, ${backgroundExpr}, ${colorExpr} ${clamp(value.mix * 100, 0, 100)}%)`;\r\n  }\r\n  return false;\r\n};\r\nvar colorSchemeValueToCss = literalToCSS;\r\nvar lengthValueToCss = (value) => {\r\n  if (typeof value === \"string\")\r\n    return value;\r\n  if (typeof value === \"number\")\r\n    return `${value}px`;\r\n  if (value && \"calc\" in value) {\r\n    const valueWithSpaces = value.calc.replace(/ ?[*/+] ?/g, \" $& \");\r\n    return `calc(${valueWithSpaces.replace(/-?\\b[a-z][a-z0-9]*\\b(?![-(])/gi, (p) => p[0] === \"-\" ? p : ` ${paramToVariableExpression(p)} `)})`;\r\n  }\r\n  if (value && \"ref\" in value)\r\n    return paramToVariableExpression(value.ref);\r\n  return false;\r\n};\r\nvar scaleValueToCss = literalToCSS;\r\nvar borderValueToCss = (value, param) => {\r\n  if (typeof value === \"string\")\r\n    return value;\r\n  if (value === true)\r\n    return borderValueToCss({}, param);\r\n  if (value === false)\r\n    return param === \"columnBorder\" ? borderValueToCss({ color: \"transparent\" }, param) : \"none\";\r\n  if (value && \"ref\" in value)\r\n    return paramToVariableExpression(value.ref);\r\n  return borderStyleValueToCss(value.style ?? \"solid\") + \" \" + lengthValueToCss(value.width ?? { ref: \"borderWidth\" }) + \" \" + colorValueToCss(value.color ?? { ref: \"borderColor\" });\r\n};\r\nvar shadowValueToCss = (value) => {\r\n  if (typeof value === \"string\")\r\n    return value;\r\n  if (value === false)\r\n    return \"none\";\r\n  if (value && \"ref\" in value)\r\n    return paramToVariableExpression(value.ref);\r\n  return [\r\n    lengthValueToCss(value.offsetX ?? 0),\r\n    lengthValueToCss(value.offsetY ?? 0),\r\n    lengthValueToCss(value.radius ?? 0),\r\n    lengthValueToCss(value.spread ?? 0),\r\n    colorValueToCss(value.color ?? { ref: \"foregroundColor\" })\r\n  ].join(\" \");\r\n};\r\nvar borderStyleValueToCss = literalToCSS;\r\nvar fontFamilyValueToCss = (value) => {\r\n  if (typeof value === \"string\")\r\n    return value.includes(\",\") ? value : quoteUnsafeChars(value);\r\n  if (value && \"googleFont\" in value)\r\n    return fontFamilyValueToCss(value.googleFont);\r\n  if (value && \"ref\" in value)\r\n    return paramToVariableExpression(value.ref);\r\n  if (Array.isArray(value)) {\r\n    return value.map((font) => {\r\n      if (typeof font === \"object\" && \"googleFont\" in font) {\r\n        font = font.googleFont;\r\n      }\r\n      return quoteUnsafeChars(font);\r\n    }).join(\", \");\r\n  }\r\n  return false;\r\n};\r\nvar quoteUnsafeChars = (font) => (\r\n  // don't quote var() expressions or quote safe identifier names, so that\r\n  // people can specify fonts like sans-serif which are keywords not strings,\r\n  // or var(--my-var)\r\n  /^[\\w-]+$|\\w\\(/.test(font) ? font : JSON.stringify(font)\r\n);\r\nvar fontWeightValueToCss = literalToCSS;\r\nvar imageValueToCss = (value) => {\r\n  if (typeof value === \"string\")\r\n    return value;\r\n  if (value && \"url\" in value)\r\n    return `url(${JSON.stringify(value.url)})`;\r\n  if (value && \"svg\" in value)\r\n    return imageValueToCss({ url: `data:image/svg+xml,${encodeURIComponent(value.svg)}` });\r\n  if (value && \"ref\" in value)\r\n    return paramToVariableExpression(value.ref);\r\n  return false;\r\n};\r\nvar durationValueToCss = (value, param) => {\r\n  if (typeof value === \"string\")\r\n    return value;\r\n  if (typeof value === \"number\") {\r\n    if (value >= 10) {\r\n      _error(104, { value, param });\r\n    }\r\n    return `${value}s`;\r\n  }\r\n  if (value && \"ref\" in value)\r\n    return paramToVariableExpression(value.ref);\r\n  return false;\r\n};\r\nvar paramValidators = {\r\n  color: colorValueToCss,\r\n  colorScheme: colorSchemeValueToCss,\r\n  length: lengthValueToCss,\r\n  scale: scaleValueToCss,\r\n  border: borderValueToCss,\r\n  borderStyle: borderStyleValueToCss,\r\n  shadow: shadowValueToCss,\r\n  image: imageValueToCss,\r\n  fontFamily: fontFamilyValueToCss,\r\n  fontWeight: fontWeightValueToCss,\r\n  duration: durationValueToCss\r\n};\r\nvar paramValueToCss = (param, value) => {\r\n  const type = getParamType(param);\r\n  return paramValidators[type](value, param);\r\n};\r\n\r\n// packages/ag-grid-community/src/theming/Theme.ts\r\nvar FORCE_LEGACY_THEMES = false;\r\nvar _asThemeImpl = (theme) => {\r\n  if (!(theme instanceof ThemeImpl)) {\r\n    throw new Error(\"theme is not an object created by createTheme\");\r\n  }\r\n  return theme;\r\n};\r\nvar createTheme = () => new ThemeImpl().withPart(buttonStyleQuartz).withPart(columnDropStyleBordered).withPart(batchEditStyleBase);\r\nvar ThemeImpl = class _ThemeImpl {\r\n  constructor(parts = []) {\r\n    this.parts = parts;\r\n  }\r\n  withPart(part) {\r\n    if (typeof part === \"function\")\r\n      part = part();\r\n    if (!(part instanceof PartImpl)) {\r\n      _logPreInitErr(259, { part }, \"Invalid part\");\r\n      return this;\r\n    }\r\n    return new _ThemeImpl([...this.parts, part]);\r\n  }\r\n  withoutPart(feature) {\r\n    return this.withPart(createPart({ feature }));\r\n  }\r\n  withParams(params, mode = defaultModeName) {\r\n    return this.withPart(\r\n      createPart({\r\n        modeParams: { [mode]: params }\r\n      })\r\n    );\r\n  }\r\n  /**\r\n   * Called by a grid instance when it starts using the theme. This installs\r\n   * the theme's parts into document head, or the shadow DOM if the provided\r\n   * container is within a shadow root.\r\n   */\r\n  _startUse({ styleContainer, cssLayer, nonce, loadThemeGoogleFonts }) {\r\n    if (IS_SSR)\r\n      return;\r\n    if (FORCE_LEGACY_THEMES)\r\n      return;\r\n    uninstallLegacyCSS();\r\n    _injectCoreAndModuleCSS(styleContainer, cssLayer, nonce);\r\n    const googleFontsUsed = getGoogleFontsUsed(this);\r\n    if (googleFontsUsed.length > 0) {\r\n      for (const googleFont of googleFontsUsed) {\r\n        if (loadThemeGoogleFonts) {\r\n          loadGoogleFont(googleFont, nonce);\r\n        }\r\n      }\r\n    }\r\n    for (const part of this.parts) {\r\n      part.use(styleContainer, cssLayer, nonce);\r\n    }\r\n  }\r\n  /**\r\n   * Return CSS that that applies the params of this theme to elements with\r\n   * the provided class name\r\n   */\r\n  _getCssClass() {\r\n    if (FORCE_LEGACY_THEMES)\r\n      return \"ag-theme-quartz\";\r\n    return this._cssClassCache ?? (this._cssClassCache = deduplicatePartsByFeature(this.parts).map((part) => part.use(void 0, void 0, void 0)).filter(Boolean).join(\" \"));\r\n  }\r\n  _getModeParams() {\r\n    let paramsCache = this._paramsCache;\r\n    if (!paramsCache) {\r\n      const mergedModeParams = {\r\n        // NOTE: defining the default mode here is important, it ensures\r\n        // that the default mode is first in iteration order, which puts\r\n        // it first in outputted CSS, allowing other modes to override it\r\n        [defaultModeName]: { ...coreDefaults }\r\n      };\r\n      for (const part of deduplicatePartsByFeature(this.parts)) {\r\n        for (const partMode of Object.keys(part.modeParams)) {\r\n          const partParams = part.modeParams[partMode];\r\n          if (partParams) {\r\n            const mergedParams = mergedModeParams[partMode] ?? (mergedModeParams[partMode] = {});\r\n            const partParamNames = /* @__PURE__ */ new Set();\r\n            for (const partParamName of Object.keys(partParams)) {\r\n              const partParamValue = partParams[partParamName];\r\n              if (partParamValue !== void 0) {\r\n                mergedParams[partParamName] = partParamValue;\r\n                partParamNames.add(partParamName);\r\n              }\r\n            }\r\n            if (partMode === defaultModeName) {\r\n              for (const mergedMode of Object.keys(mergedModeParams)) {\r\n                const mergedParams2 = mergedModeParams[mergedMode];\r\n                if (mergedMode !== defaultModeName) {\r\n                  for (const partParamName of partParamNames) {\r\n                    delete mergedParams2[partParamName];\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      this._paramsCache = paramsCache = mergedModeParams;\r\n    }\r\n    return paramsCache;\r\n  }\r\n  /**\r\n   * Return the CSS chunk that is inserted into the grid DOM, and will\r\n   * therefore be removed automatically when the grid is destroyed or it\r\n   * starts to use a new theme.\r\n   *\r\n   * @param className a unique class name on the grid wrapper used to scope the returned CSS to the grid instance\r\n   */\r\n  _getPerGridCss(className) {\r\n    const selectorPlaceholder = \"##SELECTOR##\";\r\n    let innerParamsCss = this._paramsCssCache;\r\n    if (!innerParamsCss) {\r\n      let variablesCss = \"\";\r\n      let inheritanceCss = \"\";\r\n      const modeParams = this._getModeParams();\r\n      for (const mode of Object.keys(modeParams)) {\r\n        const params = modeParams[mode];\r\n        if (mode !== defaultModeName) {\r\n          const escapedMode = typeof CSS === \"object\" ? CSS.escape(mode) : mode;\r\n          const wrapPrefix = `:where([data-ag-theme-mode=\"${escapedMode}\"]) & {\r\n`;\r\n          variablesCss += wrapPrefix;\r\n          inheritanceCss += wrapPrefix;\r\n        }\r\n        for (const key of Object.keys(params).sort()) {\r\n          const value = params[key];\r\n          const cssValue = paramValueToCss(key, value);\r\n          if (cssValue === false) {\r\n            _error(107, { key, value });\r\n          } else {\r\n            const cssName = paramToVariableName(key);\r\n            const inheritedName = cssName.replace(\"--ag-\", \"--ag-inherited-\");\r\n            variablesCss += `\t${cssName}: var(${inheritedName}, ${cssValue});\r\n`;\r\n            inheritanceCss += `\t${inheritedName}: var(${cssName});\r\n`;\r\n          }\r\n        }\r\n        if (mode !== defaultModeName) {\r\n          variablesCss += \"}\\n\";\r\n          inheritanceCss += \"}\\n\";\r\n        }\r\n      }\r\n      let css = `${selectorPlaceholder} {\r\n${variablesCss}}\r\n`;\r\n      css += `:has(> ${selectorPlaceholder}):not(${selectorPlaceholder}) {\r\n${inheritanceCss}}\r\n`;\r\n      this._paramsCssCache = innerParamsCss = css;\r\n    }\r\n    return innerParamsCss.replaceAll(selectorPlaceholder, `:where(.${className})`);\r\n  }\r\n};\r\nvar deduplicatePartsByFeature = (parts) => {\r\n  const lastPartByFeature = /* @__PURE__ */ new Map();\r\n  for (const part of parts) {\r\n    lastPartByFeature.set(part.feature, part);\r\n  }\r\n  const result = [];\r\n  for (const part of parts) {\r\n    if (!part.feature || lastPartByFeature.get(part.feature) === part) {\r\n      result.push(part);\r\n    }\r\n  }\r\n  return result;\r\n};\r\nvar getGoogleFontsUsed = (theme) => {\r\n  const googleFontsUsed = /* @__PURE__ */ new Set();\r\n  const visitParamValue = (paramValue) => {\r\n    if (Array.isArray(paramValue)) {\r\n      paramValue.forEach(visitParamValue);\r\n    } else {\r\n      const googleFont = paramValue?.googleFont;\r\n      if (typeof googleFont === \"string\") {\r\n        googleFontsUsed.add(googleFont);\r\n      }\r\n    }\r\n  };\r\n  const allModeValues = Object.values(theme._getModeParams());\r\n  const allValues = allModeValues.flatMap((mv) => Object.values(mv));\r\n  allValues.forEach(visitParamValue);\r\n  return Array.from(googleFontsUsed).sort();\r\n};\r\nvar uninstalledLegacyCSS = false;\r\nvar uninstallLegacyCSS = () => {\r\n  if (uninstalledLegacyCSS)\r\n    return;\r\n  uninstalledLegacyCSS = true;\r\n  for (const style of Array.from(document.head.querySelectorAll('style[data-ag-scope=\"legacy\"]'))) {\r\n    style.remove();\r\n  }\r\n};\r\nvar googleFontsLoaded = /* @__PURE__ */ new Set();\r\nvar loadGoogleFont = async (font, nonce) => {\r\n  googleFontsLoaded.add(font);\r\n  const css = `@import url('https://${googleFontsDomain}/css2?family=${encodeURIComponent(font)}:wght@100;200;300;400;500;600;700;800;900&display=swap');\r\n`;\r\n  _injectGlobalCSS(css, document.head, `googleFont:${font}`, void 0, 0, nonce);\r\n};\r\nvar googleFontsDomain = \"fonts.googleapis.com\";\r\n\r\n// packages/ag-grid-community/src/theming/parts/checkbox-style/checkbox-style-default.css-GENERATED.ts\r\nvar checkboxStyleDefaultCSS = (\r\n  /*css*/\r\n  `.ag-checkbox-input-wrapper,.ag-radio-button-input-wrapper{background-color:var(--ag-checkbox-unchecked-background-color);border:solid var(--ag-checkbox-border-width) var(--ag-checkbox-unchecked-border-color);flex:none;height:var(--ag-icon-size);position:relative;width:var(--ag-icon-size);:where(input){-webkit-appearance:none;-moz-appearance:none;appearance:none;cursor:pointer;display:block;height:var(--ag-icon-size);margin:0;opacity:0;width:var(--ag-icon-size)}&:after{content:\"\";display:block;inset:0;-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;pointer-events:none;position:absolute}&:where(.ag-checked){background-color:var(--ag-checkbox-checked-background-color);border-color:var(--ag-checkbox-checked-border-color);&:after{background-color:var(--ag-checkbox-checked-shape-color)}}&:where(:focus-within,:active){box-shadow:var(--ag-focus-shadow)}&:where(.ag-disabled){filter:grayscale();opacity:.5}}.ag-checkbox-input-wrapper{border-radius:var(--ag-checkbox-border-radius);&:where(.ag-checked):after{-webkit-mask-image:var(--ag-checkbox-checked-shape-image);mask-image:var(--ag-checkbox-checked-shape-image)}&:where(.ag-indeterminate){background-color:var(--ag-checkbox-indeterminate-background-color);border-color:var(--ag-checkbox-indeterminate-border-color);&:after{background-color:var(--ag-checkbox-indeterminate-shape-color);-webkit-mask-image:var(--ag-checkbox-indeterminate-shape-image);mask-image:var(--ag-checkbox-indeterminate-shape-image)}}}.ag-cell-editing-error .ag-checkbox-input-wrapper:focus-within{box-shadow:var(--ag-focus-error-shadow)}.ag-radio-button-input-wrapper{border-radius:100%;&:where(.ag-checked):after{-webkit-mask-image:var(--ag-radio-checked-shape-image);mask-image:var(--ag-radio-checked-shape-image)}}`\r\n);\r\n\r\n// packages/ag-grid-community/src/theming/parts/checkbox-style/checkbox-styles.ts\r\nvar makeCheckboxStyleDefaultTreeShakeable = () => createPart({\r\n  feature: \"checkboxStyle\",\r\n  params: {\r\n    checkboxBorderWidth: 1,\r\n    checkboxBorderRadius: {\r\n      ref: \"borderRadius\"\r\n    },\r\n    checkboxUncheckedBackgroundColor: backgroundColor,\r\n    checkboxUncheckedBorderColor: foregroundBackgroundMix(0.3),\r\n    checkboxCheckedBackgroundColor: accentColor,\r\n    checkboxCheckedBorderColor: { ref: \"checkboxCheckedBackgroundColor\" },\r\n    checkboxCheckedShapeImage: {\r\n      svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"7\" fill=\"none\"><path stroke=\"#000\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.75\" d=\"M1 3.5 3.5 6l5-5\"/></svg>'\r\n    },\r\n    checkboxCheckedShapeColor: backgroundColor,\r\n    checkboxIndeterminateBackgroundColor: foregroundBackgroundMix(0.3),\r\n    checkboxIndeterminateBorderColor: { ref: \"checkboxIndeterminateBackgroundColor\" },\r\n    checkboxIndeterminateShapeImage: {\r\n      svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"2\" fill=\"none\"><rect width=\"10\" height=\"2\" fill=\"#000\" rx=\"1\"/></svg>'\r\n    },\r\n    checkboxIndeterminateShapeColor: backgroundColor,\r\n    radioCheckedShapeImage: {\r\n      svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"6\" height=\"6\" fill=\"none\"><circle cx=\"3\" cy=\"3\" r=\"3\" fill=\"#000\"/></svg>'\r\n    }\r\n  },\r\n  css: checkboxStyleDefaultCSS\r\n});\r\nvar checkboxStyleDefault = /* @__PURE__ */ makeCheckboxStyleDefaultTreeShakeable();\r\n\r\n// packages/ag-grid-community/src/theming/parts/color-scheme/color-schemes.ts\r\nvar makeColorSchemeLightTreeShakeable = () => createPart({\r\n  feature: \"colorScheme\",\r\n  params: defaultLightColorSchemeParams\r\n});\r\nvar colorSchemeLight = /* @__PURE__ */ makeColorSchemeLightTreeShakeable();\r\nvar makeColorSchemeLightWarmTreeShakeable = () => createPart({\r\n  feature: \"colorScheme\",\r\n  params: {\r\n    ...defaultLightColorSchemeParams,\r\n    foregroundColor: \"#000000de\",\r\n    borderColor: \"#60300026\",\r\n    chromeBackgroundColor: \"#60300005\"\r\n  }\r\n});\r\nvar colorSchemeLightWarm = /* @__PURE__ */ makeColorSchemeLightWarmTreeShakeable();\r\nvar makeColorSchemeLightColdTreeShakeable = () => createPart({\r\n  feature: \"colorScheme\",\r\n  params: {\r\n    ...defaultLightColorSchemeParams,\r\n    foregroundColor: \"#000\",\r\n    chromeBackgroundColor: \"#f3f8f8\"\r\n  }\r\n});\r\nvar colorSchemeLightCold = /* @__PURE__ */ makeColorSchemeLightColdTreeShakeable();\r\nvar darkParams = () => ({\r\n  ...defaultLightColorSchemeParams,\r\n  ...baseDarkBatchEditParams,\r\n  backgroundColor: \"hsl(217, 0%, 17%)\",\r\n  foregroundColor: \"#FFF\",\r\n  chromeBackgroundColor: foregroundBackgroundMix(0.05),\r\n  rowHoverColor: accentMix(0.15),\r\n  selectedRowBackgroundColor: accentMix(0.2),\r\n  menuBackgroundColor: foregroundBackgroundMix(0.1),\r\n  browserColorScheme: \"dark\",\r\n  popupShadow: \"0 0px 20px #000A\",\r\n  cardShadow: \"0 1px 4px 1px #000A\",\r\n  advancedFilterBuilderJoinPillColor: \"#7a3a37\",\r\n  advancedFilterBuilderColumnPillColor: \"#355f2d\",\r\n  advancedFilterBuilderOptionPillColor: \"#5a3168\",\r\n  advancedFilterBuilderValuePillColor: \"#374c86\",\r\n  filterPanelApplyButtonColor: foregroundColor,\r\n  findMatchColor: backgroundColor,\r\n  findActiveMatchColor: backgroundColor,\r\n  checkboxUncheckedBorderColor: foregroundBackgroundMix(0.4),\r\n  toggleButtonOffBackgroundColor: foregroundBackgroundMix(0.4),\r\n  rowBatchEditBackgroundColor: foregroundBackgroundMix(0.1)\r\n});\r\nvar makeColorSchemeDarkTreeShakeable = () => createPart({\r\n  feature: \"colorScheme\",\r\n  params: darkParams()\r\n});\r\nvar colorSchemeDark = /* @__PURE__ */ makeColorSchemeDarkTreeShakeable();\r\nvar makeColorSchemeDarkWarmTreeShakeable = () => createPart({\r\n  feature: \"colorScheme\",\r\n  params: {\r\n    backgroundColor: \"hsl(29, 10%, 17%)\",\r\n    foregroundColor: \"#FFF\",\r\n    browserColorScheme: \"dark\"\r\n  }\r\n});\r\nvar darkBlueParams = () => ({\r\n  ...darkParams(),\r\n  backgroundColor: \"#1f2836\"\r\n});\r\nvar colorSchemeDarkWarm = /* @__PURE__ */ makeColorSchemeDarkWarmTreeShakeable();\r\nvar makeColorSchemeDarkBlueTreeShakeable = () => createPart({\r\n  feature: \"colorScheme\",\r\n  params: darkBlueParams()\r\n});\r\nvar colorSchemeDarkBlue = /* @__PURE__ */ makeColorSchemeDarkBlueTreeShakeable();\r\nvar makeColorSchemeVariableTreeShakeable = () => createPart({\r\n  feature: \"colorScheme\",\r\n  params: defaultLightColorSchemeParams,\r\n  modeParams: {\r\n    light: defaultLightColorSchemeParams,\r\n    dark: darkParams(),\r\n    \"dark-blue\": darkBlueParams()\r\n  }\r\n});\r\nvar colorSchemeVariable = /* @__PURE__ */ makeColorSchemeVariableTreeShakeable();\r\n\r\n// packages/ag-grid-community/src/theming/parts/icon-set/balham/icon-set-balham.css-GENERATED.ts\r\nvar iconSetBalhamCSS = (\r\n  /*css*/\r\n  `.ag-icon-aggregation:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eaggregation%3C/title%3E%3Cpath d='M25.128 2.002c2.56.096 4.772 2.292 4.87 4.87a712 712 0 0 1 0 18.256c-.096 2.56-2.292 4.772-4.87 4.87a712 712 0 0 1-18.256 0c-2.558-.096-4.772-2.29-4.87-4.87a712 712 0 0 1 0-18.256c.096-2.56 2.292-4.772 4.87-4.87a712 712 0 0 1 18.256 0M7.006 4c-1.57.02-2.946 1.348-3.004 2.922-.078 6.078-.23 12.16.002 18.234.094 1.484 1.354 2.746 2.84 2.84 6.1.232 12.212.232 18.312 0 1.48-.094 2.746-1.35 2.84-2.84.232-6.1.232-12.212 0-18.312-.094-1.48-1.35-2.746-2.84-2.84C19.11 3.774 13.056 4 7.006 4M22 12h-2v-2h-8v.092c.056 1.352 3.426 2.598 4.472 4.404.682 1.174.438 2.754-.572 3.72C14.29 19.618 12 20.924 12 22h8v-2h2v4H10c0-1.586-.098-3.304 1.016-4.314 1.904-1.632 4.89-3.108 3.54-4.42-1.918-1.68-4.464-2.936-4.554-5.12L10 8h12z'/%3E%3C/svg%3E\")}.ag-icon-arrows:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Earrows%3C/title%3E%3Cpath d='m6.414 17 2.294 2.292-1.416 1.416L2.586 16l4.706-4.708 1.416 1.416L6.414 15H15V6.414l-2.292 2.294-1.416-1.416L16 2.586l4.708 4.706-1.416 1.416L17 6.414V15h8.586l-2.294-2.292 1.416-1.416L29.414 16l-4.706 4.708-1.416-1.416L25.586 17H17v8.586l2.292-2.294 1.416 1.416L16 29.414l-4.708-4.706 1.416-1.416L15 25.586V17z'/%3E%3C/svg%3E\")}.ag-icon-asc:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Easc%3C/title%3E%3Cpath d='m15 10.621-4.292 4.294-1.416-1.416L16 6.793l6.708 6.706-1.416 1.416L17 10.621v14.586h-2z'/%3E%3C/svg%3E\")}.ag-icon-cancel:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Ecancel%3C/title%3E%3Cpath d='M16 4C9.378 4 4 9.378 4 16s5.378 12 12 12 12-5.378 12-12S22.622 4 16 4m0 2c5.52 0 10 4.48 10 10s-4.48 10-10 10S6 21.52 6 16 10.48 6 16 6m0 8.586 5.292-5.294 1.416 1.416L17.414 16l5.294 5.292-1.416 1.416L16 17.414l-5.292 5.294-1.416-1.416L14.586 16l-5.294-5.292 1.416-1.416z'/%3E%3C/svg%3E\")}.ag-icon-chart:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Echart%3C/title%3E%3Cpath d='M6.667 12.267h4v13.067h-4zm7.466-5.6h3.733v18.667h-3.733zM21.6 17.333h3.733v8H21.6z'/%3E%3C/svg%3E\")}.ag-icon-color-picker:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Ecolor-picker%3C/title%3E%3Cpath d='M23.907 17.587 10.574 4.254l-1.88 1.88 3.173 3.173-8.28 8.28 10.16 10.16zm-16.547 0 6.387-6.387 6.387 6.387H7.361zm18.387 2s-2.667 2.893-2.667 4.667c0 1.467 1.2 2.667 2.667 2.667s2.667-1.2 2.667-2.667c0-1.773-2.667-4.667-2.667-4.667'/%3E%3C/svg%3E\")}.ag-icon-columns:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Ecolumns%3C/title%3E%3Cpath d='M14 25h-2V7h2zm6 0h-2V7h2zm6 0h-2V7h2zM8 25H6V7h2z'/%3E%3C/svg%3E\")}.ag-icon-contracted:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Econtracted%3C/title%3E%3Cpath d='m21.061 16-8.706 8.708-1.416-1.416L18.233 16l-7.294-7.292 1.416-1.416z'/%3E%3C/svg%3E\")}.ag-icon-copy:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Ecopy%3C/title%3E%3Cpath d='M21.929 27.999h-7.828a5.09 5.09 0 0 1-5.086-5.086v-9.812a5.087 5.087 0 0 1 5.086-5.086h7.828a5.09 5.09 0 0 1 5.086 5.086v9.812a5.087 5.087 0 0 1-5.086 5.086m.16-17.984h-8.088a2.94 2.94 0 0 0-2.938 2.938v10.132a2.94 2.94 0 0 0 2.938 2.938h8.088a2.94 2.94 0 0 0 2.936-2.938V12.953a2.94 2.94 0 0 0-2.936-2.938M7.041 26.013h-2.05a4 4 0 0 1-.006-.228V9.065a5.07 5.07 0 0 1 5.064-5.064h12.812q.069 0 .134.002v2.012H9.915a2.876 2.876 0 0 0-2.874 2.874z'/%3E%3C/svg%3E\")}.ag-icon-cross:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='4 4 24 24'%3E%3Ctitle%3Ecross%3C/title%3E%3Cpath d='m16 14.586 5.292-5.294 1.416 1.416L17.414 16l5.294 5.292-1.416 1.416L16 17.414l-5.292 5.294-1.416-1.416L14.586 16l-5.294-5.292 1.416-1.416z'/%3E%3C/svg%3E\")}.ag-icon-csv:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M384 131.9c-7.753-8.433-110.425-128.473-114.9-133L48-.1C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48zm-35.9 2.1H257V27.9zM30 479V27h200l1 105c0 13.3-1.3 29 12 29h111l1 318z' style='fill-rule:nonzero' transform='matrix(.06285 0 0 .06285 3.934 -.054)'/%3E%3Cpath d='M.688-.226a.2.2 0 0 1-.017.074.28.28 0 0 1-.145.14.412.412 0 0 1-.234.013.28.28 0 0 1-.202-.168.468.468 0 0 1-.04-.19q0-.086.025-.155a.319.319 0 0 1 .182-.191.4.4 0 0 1 .134-.025q.087 0 .155.035a.3.3 0 0 1 .104.085.17.17 0 0 1 .036.097.06.06 0 0 1-.018.044.06.06 0 0 1-.042.019.06.06 0 0 1-.042-.013.2.2 0 0 1-.031-.046.2.2 0 0 0-.066-.079.16.16 0 0 0-.095-.027.17.17 0 0 0-.142.068.3.3 0 0 0-.053.193.4.4 0 0 0 .023.139.2.2 0 0 0 .067.083.2.2 0 0 0 .1.027q.063 0 .106-.031a.2.2 0 0 0 .065-.091.2.2 0 0 1 .023-.046q.014-.018.044-.018a.06.06 0 0 1 .044.018.06.06 0 0 1 .019.045' style='fill-rule:nonzero' transform='matrix(8.39799 0 0 12.455 7.122 25.977)'/%3E%3Cpath d='M.622-.215a.2.2 0 0 1-.033.117.23.23 0 0 1-.098.081.4.4 0 0 1-.153.029.34.34 0 0 1-.175-.04.23.23 0 0 1-.079-.077.17.17 0 0 1-.031-.093q0-.027.019-.045a.06.06 0 0 1 .046-.019.06.06 0 0 1 .039.014.1.1 0 0 1 .027.044.3.3 0 0 0 .03.057q.015.023.044.038.03.015.076.015.065 0 .105-.03a.09.09 0 0 0 .04-.075.08.08 0 0 0-.022-.058.14.14 0 0 0-.056-.034 1 1 0 0 0-.092-.025.7.7 0 0 1-.129-.042.2.2 0 0 1-.083-.066.17.17 0 0 1-.03-.104q0-.058.032-.105a.2.2 0 0 1 .093-.07.4.4 0 0 1 .144-.025q.066 0 .114.016a.3.3 0 0 1 .08.044.2.2 0 0 1 .046.057q.015.03.015.058a.07.07 0 0 1-.018.046.06.06 0 0 1-.046.021q-.025 0-.038-.012a.2.2 0 0 1-.028-.041.2.2 0 0 0-.047-.063Q.387-.625.326-.625a.15.15 0 0 0-.09.025q-.035.024-.035.059 0 .021.012.037a.1.1 0 0 0 .032.027.4.4 0 0 0 .111.036q.06.015.11.031.048.018.083.042a.2.2 0 0 1 .054.062.2.2 0 0 1 .019.091' style='fill-rule:nonzero' transform='matrix(8.39799 0 0 12.455 13.339 25.977)'/%3E%3Cpath d='m.184-.633.162.48.163-.483q.013-.038.019-.053a.062.062 0 0 1 .061-.039q.018 0 .034.009a.1.1 0 0 1 .025.025q.009.015.009.031L.654-.64l-.007.025-.009.024-.173.468-.019.051a.2.2 0 0 1-.021.042.1.1 0 0 1-.033.03.1.1 0 0 1-.049.012.1.1 0 0 1-.05-.011A.1.1 0 0 1 .26-.03a.2.2 0 0 1-.021-.042L.22-.123.05-.587.041-.612.033-.638.03-.662q0-.025.02-.046a.07.07 0 0 1 .05-.02q.037 0 .053.023.015.023.031.072' style='fill-rule:nonzero' transform='matrix(8.39799 0 0 12.455 18.94 25.977)'/%3E%3C/svg%3E\")}.ag-icon-cut:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M14.703 15.096 6.215 4.719a1 1 0 1 1 1.548-1.267l13.058 15.965A5.001 5.001 0 0 1 28 23.916a5 5 0 0 1-4.999 4.999 5 5 0 0 1-4.999-4.999 4.98 4.98 0 0 1 1.23-3.283l-3.238-3.958-3.272 4.001a4.98 4.98 0 0 1 1.265 3.323 5 5 0 0 1-4.999 4.999 5 5 0 0 1-4.999-4.999 5 5 0 0 1 7.13-4.522zM8.991 20.8a3.1 3.1 0 0 0-3.1 3.1c0 1.711 1.389 3.1 3.1 3.1s3.1-1.389 3.1-3.1-1.389-3.1-3.1-3.1M23 20.8a3.1 3.1 0 0 0-3.1 3.1c0 1.711 1.389 3.1 3.1 3.1s3.1-1.389 3.1-3.1-1.389-3.1-3.1-3.1m-5.723-8.852 1.292 1.579 7.205-8.808a1 1 0 0 0-1.548-1.267z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-desc:before,.ag-icon-down:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Edesc%3C/title%3E%3Cpath d='m17 21.379 4.292-4.294 1.416 1.416L16 25.207l-6.708-6.706 1.416-1.416L15 21.379V6.793h2z'/%3E%3C/svg%3E\")}.ag-icon-excel:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M384 131.9c-7.753-8.433-110.425-128.473-114.9-133L48-.1C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48zm-35.9 2.1H257V27.9zM30 479V27h200l1 105c0 13.3-1.3 29 12 29h111l1 318z' style='fill-rule:nonzero' transform='matrix(.06285 0 0 .06285 3.934 -.054)'/%3E%3Cpath d='m.052-.139.16-.234-.135-.208a.4.4 0 0 1-.028-.052.1.1 0 0 1-.01-.042.05.05 0 0 1 .018-.037.07.07 0 0 1 .045-.016q.03 0 .047.018a1 1 0 0 1 .047.066l.107.174.115-.174.024-.038.019-.026.021-.015a.1.1 0 0 1 .027-.005.06.06 0 0 1 .044.016.05.05 0 0 1 .018.039q0 .033-.038.089l-.141.211.152.234a.3.3 0 0 1 .03.051.1.1 0 0 1 .009.038.1.1 0 0 1-.008.031.1.1 0 0 1-.024.023.1.1 0 0 1-.034.008.1.1 0 0 1-.035-.008.1.1 0 0 1-.023-.022L.427-.067.301-.265l-.134.204-.022.034-.016.019a.1.1 0 0 1-.022.015.1.1 0 0 1-.03.005.06.06 0 0 1-.044-.016.06.06 0 0 1-.017-.047q0-.036.036-.088' style='fill-rule:nonzero' transform='matrix(17.82892 0 0 16.50777 10.371 25.928)'/%3E%3C/svg%3E\")}.ag-icon-expanded:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eexpanded%3C/title%3E%3Cpath d='M21.061 8.708 13.767 16l7.294 7.292-1.416 1.416L10.939 16l8.706-8.708z'/%3E%3C/svg%3E\")}.ag-icon-eye-slash:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eeye-slash%3C/title%3E%3Cpath d='M9.304 7.89a15.2 15.2 0 0 1 6.404-1.638c.294-.002.292-.002.584 0 5.956.174 11.328 4.088 13.62 9.748 0 0-1.318 3.178-3.224 5.174a13.6 13.6 0 0 1-2.226 1.874L26.414 25 25 26.414l-2.336-2.336C17.866 26.396 11.776 26.15 7.36 22.96a14.9 14.9 0 0 1-4.168-4.612c-.41-.71-.694-1.336-1.104-2.348 0 0 .898-2.218 2.002-3.718a14.6 14.6 0 0 1 3.442-3.334L5.586 7 7 5.586zm-.3 2.528c-2.038 1.344-3.708 3.246-4.724 5.508L4.248 16c2.46 5.762 9.622 9.064 15.63 7.15q.688-.219 1.342-.516l-.912-.912a6.96 6.96 0 0 1-4.19 1.394c-3.862 0-7-3.136-7-7 0-1.57.52-3.022 1.394-4.19zm14.032 11.204a13.25 13.25 0 0 0 4.684-5.548l.032-.074c-1.984-4.646-6.834-7.798-12.006-7.748-1.712.05-3.386.458-4.922 1.158l1.102 1.102a6.97 6.97 0 0 1 4.192-1.396 7.003 7.003 0 0 1 5.606 11.192zm-11.09-8.262a5.003 5.003 0 0 0 6.928 6.928zm8.342 5.514a5.002 5.002 0 0 0-6.928-6.928z'/%3E%3C/svg%3E\")}.ag-icon-eye:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eeye%3C/title%3E%3Cpath d='M16.292 6.32c5.956.174 11.328 4.086 13.62 9.746 0 0-1.318 3.18-3.224 5.176-4.862 5.088-13.534 5.97-19.328 1.784a14.9 14.9 0 0 1-4.168-4.612c-.41-.71-.694-1.336-1.104-2.348 0 0 .898-2.216 2.002-3.716 2.678-3.64 7.03-5.896 11.618-6.03.294-.004.292-.004.584 0m-.546 2c-4.896.142-9.458 3.202-11.466 7.672l-.032.074c2.46 5.762 9.622 9.066 15.63 7.152 3.458-1.102 6.342-3.738 7.842-7.076l.032-.076C25.768 11.42 20.918 8.27 15.746 8.32m.254.946c3.754 0 6.8 3.048 6.8 6.8 0 3.754-3.046 6.8-6.8 6.8s-6.8-3.046-6.8-6.8c0-3.752 3.046-6.8 6.8-6.8m5 6.768V16c0-2.76-2.24-5-5-5s-5 2.24-5 5v.066c0 2.76 2.24 5 5 5s5-2.24 5-5z'/%3E%3C/svg%3E\")}.ag-icon-filter:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Efilter%3C/title%3E%3Cpath d='M26 8.184c-.066 2.658-4.058 5.154-6.742 7.974a1.05 1.05 0 0 0-.258.682v3.66L13 25c0-2.74.066-5.482-.002-8.222a1.05 1.05 0 0 0-.256-.62C10.026 13.304 6.06 10.61 6 8.184V6h20zM8 8c0 .304.06.612.258.842 2.716 2.854 6.682 5.548 6.742 7.974V21l2-1.5v-2.684c.066-2.658 4.058-5.154 6.742-7.974.198-.23.258-.538.258-.842z'/%3E%3C/svg%3E\")}.ag-icon-first:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Efirst%3C/title%3E%3Cpath d='M24.354 8.708 17.06 16l7.294 7.292-1.416 1.416L14.232 16l8.706-8.708zM9.646 8v16h-2V8z'/%3E%3C/svg%3E\")}.ag-icon-group:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Egroup%3C/title%3E%3Cpath d='M25.128 2.002c2.56.096 4.772 2.292 4.87 4.87a712 712 0 0 1 0 18.256c-.096 2.56-2.292 4.772-4.87 4.87a712 712 0 0 1-18.256 0c-2.558-.096-4.772-2.29-4.87-4.87a712 712 0 0 1 0-18.256c.096-2.56 2.292-4.772 4.87-4.87a712 712 0 0 1 18.256 0M7.006 4c-1.57.02-2.946 1.348-3.004 2.922-.078 6.078-.23 12.16.002 18.234.094 1.484 1.354 2.746 2.84 2.84 6.1.232 12.212.232 18.312 0 1.48-.094 2.746-1.35 2.84-2.84.232-6.1.232-12.212 0-18.312-.094-1.48-1.35-2.746-2.84-2.84C19.11 3.774 13.056 4 7.006 4M14 21h-4v-2h4zm12 0H16v-2h10zm-12-4h-4v-2h4zm12 0H16v-2h10zm-16-4H6v-2h4zm16 0H12v-2h14z'/%3E%3C/svg%3E\")}.ag-icon-last:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Elast%3C/title%3E%3Cpath d='m17.768 16-8.706 8.708-1.416-1.416L14.94 16 7.646 8.708l1.416-1.416zm6.586 8h-2V8h2z'/%3E%3C/svg%3E\")}.ag-icon-left:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eleft%3C/title%3E%3Cpath d='m17.621 11-2 2h12.586v6H15.621l2 2-4.414 4.414L3.793 16l9.414-9.414zm-11 5 6.586 6.586L14.793 21l-4-4h15.414v-2H10.793l4-4-1.586-1.586z'/%3E%3C/svg%3E\")}.ag-icon-linked:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Elinked%3C/title%3E%3Cpath d='M17.138 13.418a1.03 1.03 0 0 0-.298.658s.125.096.226.178c1.372 1.114 2.033 3.039 1.582 4.796a4.7 4.7 0 0 1-1.205 2.123c-1.145 1.151-2.296 2.294-3.445 3.441-1.241 1.232-3.185 1.691-4.864 1.105-1.546-.54-2.756-1.938-3.048-3.572-.267-1.496.246-3.108 1.319-4.186l.578-.578-.03-.092a10.5 10.5 0 0 1-.452-2.3v-.005c-.776.775-1.621 1.489-2.275 2.396-1.817 2.522-1.643 6.323.706 8.669 1.813 1.811 4.708 2.462 7.171 1.517a6.75 6.75 0 0 0 2.336-1.518l3.427-3.424c1.939-1.954 2.533-5.126 1.294-7.674a6.8 6.8 0 0 0-2.071-2.481l-.003-.002zM21.265 4a6.8 6.8 0 0 0-4.734 1.964l-3.427 3.424c-1.961 1.977-2.52 5.092-1.32 7.619a6.8 6.8 0 0 0 2.098 2.537l.003.002c.32-.32.643-.637.96-.96.167-.172.27-.401.286-.64l-.204-.167c-1.603-1.287-2.215-3.68-1.316-5.616a4.7 4.7 0 0 1 .918-1.32c1.145-1.151 2.296-2.294 3.445-3.441 1.239-1.23 3.178-1.694 4.864-1.105 1.83.639 3.16 2.498 3.12 4.493a4.8 4.8 0 0 1-1.391 3.265l-.578.578.03.092c.235.743.387 1.519.452 2.3v.005c.732-.731 1.521-1.406 2.162-2.244 1.192-1.559 1.643-3.651 1.204-5.575a6.8 6.8 0 0 0-3.98-4.703 6.8 6.8 0 0 0-2.529-.506h-.061z'/%3E%3C/svg%3E\")}.ag-icon-loading:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eloading%3C/title%3E%3Cpath d='M17 29h-2v-8h2zm-3.586-9L7 26.414 5.586 25 12 18.586zm13 5L25 26.414 18.586 20 20 18.586zM29 17h-8v-2h8zm-18 0H3v-2h8zm2.414-5L12 13.414 5.586 7 7 5.586zm13-5L20 13.414 18.586 12 25 5.586zM17 11h-2V3h2z'/%3E%3C/svg%3E\")}.ag-icon-maximize:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='3 3 26 26'%3E%3Ctitle%3Emaximize%3C/title%3E%3Cpath d='m7.54 17.4.1 6.98 6.96.1-2.24-2.24L16 18.6 13.4 16l-3.64 3.64zm16.92-2.8-.1-6.98-6.96-.1 2.24 2.24L16 13.4l2.6 2.6 3.64-3.64z'/%3E%3C/svg%3E\")}.ag-icon-menu:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Emenu%3C/title%3E%3Cpath d='M26 23H6v-2h20zm0-6H6v-2h20zm0-6H6V9h20z'/%3E%3C/svg%3E\")}.ag-icon-menu-alt:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none'%3E%3Cpath fill='%23000' d='M16 18a2 2 0 1 0 0-4 2 2 0 0 0 0 4m0-7a2 2 0 1 0 0-4 2 2 0 0 0 0 4m0 14a2 2 0 1 0 0-4 2 2 0 0 0 0 4'/%3E%3C/svg%3E\")}.ag-icon-minimize:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='3 3 26 26'%3E%3Ctitle%3Eminimize%3C/title%3E%3Cpath d='m14.8 24.26-.1-6.96-6.96-.1 2.24 2.24-3.64 3.64 2.6 2.6 3.64-3.64zm2.4-16.52.1 6.96 6.96.1-2.24-2.24 3.64-3.64-2.6-2.6-3.64 3.64z'/%3E%3C/svg%3E\")}.ag-icon-minus:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M7.515 7.515c-4.683 4.682-4.683 12.288 0 16.97 4.682 4.683 12.288 4.683 16.97 0 4.683-4.682 4.683-12.288 0-16.97-4.682-4.683-12.288-4.683-16.97 0m1.414 1.414c3.903-3.903 10.239-3.903 14.142 0s3.903 10.239 0 14.142-10.239 3.903-14.142 0-3.903-10.239 0-14.142m-1.414 6.07h16.97v2.002H7.515z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-next:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Enext%3C/title%3E%3Cpath d='m21.061 16-8.706 8.708-1.416-1.416L18.233 16l-7.294-7.292 1.416-1.416z'/%3E%3C/svg%3E\")}.ag-icon-none:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Enone%3C/title%3E%3Cpath d='m10.044 21.258 4.478-4.198L16 18.444 9 25l-7-6.556 1.478-1.384 4.478 4.198V7h2.088zm14 3.742h-2.088V10.742l-4.478 4.198L16 13.556 23 7q3.5 3.28 7 6.556l-1.478 1.384-4.478-4.198z'/%3E%3C/svg%3E\")}.ag-icon-not-allowed:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Enot-allowed%3C/title%3E%3Cpath d='M16.186 3.646c8.188.154 14.898 9.796 11.17 17.78-3.298 7.066-13.932 9.374-19.848 3.87-3.9-3.632-5.076-9.896-2.684-14.708 2.082-4.19 6.588-6.974 11.362-6.942m-.298 1.998c-6.922.132-12.578 8.308-9.33 15.052 3.342 6.934 15.246 7.646 18.932 0 3.076-6.386-1.988-15.1-9.602-15.052m7.596 6.422c2.864 5.33-1.744 13.186-8.306 12.536a8.6 8.6 0 0 1-3.232-.998l-1.266-.706L22.778 10.8q.351.633.706 1.266m-9.422 10.276c3.296 1.028 7.246-1.006 8.216-4.418a6.6 6.6 0 0 0-.056-3.742zm2.104-14.696a8.8 8.8 0 0 1 3.936 1.038l1.266.706L9.27 21.488c-3.018-5.41-.99-13.37 6.318-13.834q.289-.01.578-.008m-.31 2c-4.06.154-7.23 4.614-6.03 8.46l8.16-8.16a6.8 6.8 0 0 0-2.13-.3'/%3E%3C/svg%3E\")}.ag-icon-paste:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Epaste%3C/title%3E%3Cpath d='M20 6.5c0-1-1-3-4-3s-4 2-4 3H8c-2.21 0-4 1.79-4 4v14c0 2.21 1.79 4 4 4h16c2.21 0 4-1.79 4-4v-14c0-2.21-1.79-4-4-4zm-4 .546c.734 0 1.334.572 1.334 1.272S16.734 9.59 16 9.59s-1.334-.572-1.334-1.272.6-1.272 1.334-1.272M24 26.5H8a2 2 0 0 1-2-2v-14a2 2 0 0 1 2-2h2v4h12v-4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2'/%3E%3C/svg%3E\")}.ag-icon-pin:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Epin%3C/title%3E%3Cpath d='m10.78 19.777-4.668-4.666s.032-1 .67-1.87c1.366-1.86 4.052-1.96 6.056-1.572l3.158-3.108c-.7-2.342 3.352-5.046 3.352-5.046l9.166 9.168q-.334.447-.67.894c-1.074 1.426-2.538 2.63-4.272 2.338l-3.32 3.218c.046.344.042.03.118 1.152.144 2.13-.64 4.324-2.632 5.34l-.746.364-4.798-4.798-7.292 7.294-1.416-1.416zm8.24-13.672c-.688.568-1.416 1.45-1.024 2.072l.49.722-4.986 4.988c-1.988-.506-4.346-.636-5.156.614l9.02 9.032q.14-.099.272-.21c1.226-1.08.764-3.04.498-4.9l4.79-4.79s1.47.938 2.936-.776l-6.79-6.79q-.026.019-.05.038'/%3E%3C/svg%3E\")}.ag-icon-pivot:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Epivot%3C/title%3E%3Cpath d='M25.128 2.002c2.56.096 4.772 2.292 4.87 4.87a712 712 0 0 1 0 18.256c-.096 2.56-2.292 4.772-4.87 4.87a712 712 0 0 1-18.256 0c-2.558-.096-4.772-2.29-4.87-4.87a712 712 0 0 1 0-18.256c.096-2.56 2.292-4.772 4.87-4.87a712 712 0 0 1 18.256 0m2.966 7.954H9.892v18.136c5.086.13 10.18.098 15.264-.096 1.48-.094 2.746-1.35 2.84-2.84.192-5.064.226-10.134.098-15.2M3.968 24.1q.015.528.036 1.056c.094 1.484 1.354 2.746 2.84 2.84l1.012.036V24.1zM22 15.414l-.292.294-1.416-1.416L23 11.586l2.708 2.706-1.416 1.416-.292-.294v3.592c-.032 2.604-2.246 4.892-4.872 4.992L15.414 24l.294.292-1.416 1.416L11.586 23l2.706-2.708 1.416 1.416-.322.32c3.372.03 6.578-.164 6.614-3.034zM3.88 18.038c.002 1.346.012 2.694.038 4.04h3.938v-4.04zm.05-6.062a681 681 0 0 0-.044 4.042h3.97v-4.042zm5.962-7.99Q8.449 3.999 7.006 4c-1.57.02-2.946 1.348-3.004 2.922q-.02 1.517-.042 3.034h3.896v-2.02h2.036zm14.244-.016v3.966h3.898q-.017-.546-.038-1.092c-.094-1.48-1.35-2.746-2.84-2.84q-.51-.019-1.02-.034m-8.14-.054q-2.035.022-4.07.048v3.972h4.07zm6.106.008c-1.358-.022-2.714-.026-4.07-.022v4.034h4.07z'/%3E%3C/svg%3E\")}.ag-icon-plus:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M7.515 7.515c-4.683 4.682-4.683 12.288 0 16.97 4.682 4.683 12.288 4.683 16.97 0 4.683-4.682 4.683-12.288 0-16.97-4.682-4.683-12.288-4.683-16.97 0m1.414 1.414c3.903-3.903 10.239-3.903 14.142 0s3.903 10.239 0 14.142-10.239 3.903-14.142 0-3.903-10.239 0-14.142M15 15l-.001-7.485h2.002L17 15l7.485-.001v2.002L17 17l.001 7.485h-2.002L15 17l-7.485.001v-2.002z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-previous:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eprevious%3C/title%3E%3Cpath d='M21.061 8.708 13.767 16l7.294 7.292-1.416 1.416L10.939 16l8.706-8.708z'/%3E%3C/svg%3E\")}.ag-icon-right:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eright%3C/title%3E%3Cpath d='m28.207 16-9.414 9.414L14.379 21l2-2H3.793v-6h12.586l-2-2 4.414-4.414zm-11-5 4 4H5.793v2h15.414l-4 4 1.586 1.586L25.379 16l-6.586-6.586z'/%3E%3C/svg%3E\")}.ag-icon-save:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Esave%3C/title%3E%3Cpath d='M25.333 16v9.333H6.666V16H3.999v9.333C3.999 26.8 5.199 28 6.666 28h18.667C26.8 28 28 26.8 28 25.333V16zm-8 .893 3.453-3.44 1.88 1.88L15.999 22l-6.667-6.667 1.88-1.88 3.453 3.44V4h2.667v12.893z'/%3E%3C/svg%3E\")}.ag-icon-small-down:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Esmall-down%3C/title%3E%3Cpath d='M24.708 12.355 16 21.061l-8.708-8.706 1.416-1.416L16 18.233l7.292-7.294z'/%3E%3C/svg%3E\")}.ag-icon-small-left:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Esmall-left%3C/title%3E%3Cpath d='M21.061 8.708 13.767 16l7.294 7.292-1.416 1.416L10.939 16l8.706-8.708z'/%3E%3C/svg%3E\")}.ag-icon-small-right:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Esmall-right%3C/title%3E%3Cpath d='m21.061 16-8.706 8.708-1.416-1.416L18.233 16l-7.294-7.292 1.416-1.416z'/%3E%3C/svg%3E\")}.ag-icon-small-up:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Esmall-up%3C/title%3E%3Cpath d='m24.708 19.645-1.416 1.416L16 13.767l-7.292 7.294-1.416-1.416L16 10.939z'/%3E%3C/svg%3E\")}.ag-icon-tick:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Etick%3C/title%3E%3Cpath d='M24.708 10.855 13 22.561l-5.708-5.706 1.416-1.416L13 19.733 23.292 9.439z'/%3E%3C/svg%3E\")}.ag-icon-tree-closed:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Etree-closed%3C/title%3E%3Cpath d='m21.061 16-8.706 8.708-1.416-1.416L18.233 16l-7.294-7.292 1.416-1.416z'/%3E%3C/svg%3E\")}.ag-icon-tree-indeterminate:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Etree-indeterminate%3C/title%3E%3Cpath d='M6 15h20v2H6z'/%3E%3C/svg%3E\")}.ag-icon-tree-open:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Etree-open%3C/title%3E%3Cpath d='M24.708 12.355 16 21.061l-8.708-8.706 1.416-1.416L16 18.233l7.292-7.294z'/%3E%3C/svg%3E\")}.ag-icon-unlinked:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eunlinked%3C/title%3E%3Cpath d='M5.35 3.999a.2.2 0 0 0-.14.058c-.388.38-.768.768-1.152 1.152a.21.21 0 0 0-.002.288c7.459 7.506 14.965 14.965 22.447 22.447a.21.21 0 0 0 .288.002q.576-.574 1.151-1.151a.21.21 0 0 0 .002-.288C20.484 19.002 12.979 11.542 5.497 4.06a.2.2 0 0 0-.146-.061zm.611 12.548c-1.933 1.939-2.538 5.119-1.289 7.688a6.79 6.79 0 0 0 4.891 3.672 6.82 6.82 0 0 0 5.893-1.866l1.984-1.984-1.438-1.438-1.986 1.986c-1.486 1.476-3.993 1.81-5.834.629a4.73 4.73 0 0 1-2.024-2.853 4.76 4.76 0 0 1 1.241-4.393l1.986-1.986-1.438-1.438-1.984 1.984zM21.273 3.999a6.78 6.78 0 0 0-4.727 1.963l-1.984 1.984L16 9.384l1.985-1.985a4.74 4.74 0 0 1 2.776-1.338c1.974-.224 4.045.926 4.845 2.834.712 1.699.329 3.778-1.004 5.12L22.616 16l1.439 1.438q1-1 2-2c2.012-2.031 2.557-5.368 1.112-7.982-1.144-2.07-3.432-3.441-5.834-3.459h-.061z'/%3E%3C/svg%3E\")}.ag-icon-up:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Easc%3C/title%3E%3Cpath d='m15 10.621-4.292 4.294-1.416-1.416L16 6.793l6.708 6.706-1.416 1.416L17 10.621v14.586h-2z'/%3E%3C/svg%3E\")}.ag-icon-grip:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Egrip%3C/title%3E%3Cpath d='M8 24H6v-4h2zm6 0h-2v-4h2zm6 0h-2v-4h2zm6 0h-2v-4h2zM8 18H6v-4h2zm6 0h-2v-4h2zm6 0h-2v-4h2zm6 0h-2v-4h2zM8 12H6V8h2zm6 0h-2V8h2zm6 0h-2V8h2zm6 0h-2V8h2z'/%3E%3C/svg%3E\")}.ag-icon-settings:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='%23000' d='M30 8h-4.1c-.5-2.3-2.5-4-4.9-4s-4.4 1.7-4.9 4H2v2h14.1c.5 2.3 2.5 4 4.9 4s4.4-1.7 4.9-4H30zm-9 4c-1.7 0-3-1.3-3-3s1.3-3 3-3 3 1.3 3 3-1.3 3-3 3M2 24h4.1c.5 2.3 2.5 4 4.9 4s4.4-1.7 4.9-4H30v-2H15.9c-.5-2.3-2.5-4-4.9-4s-4.4 1.7-4.9 4H2zm9-4c1.7 0 3 1.3 3 3s-1.3 3-3 3-3-1.3-3-3 1.3-3 3-3'/%3E%3C/svg%3E\")}.ag-icon-column-arrow:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M11 4a1 1 0 0 1 1 1v22a1 1 0 1 1-2 0V5a1 1 0 0 1 1-1' clip-rule='evenodd'/%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M2 13a1 1 0 0 1 1-1h23.5a1 1 0 1 1 0 2H3a1 1 0 0 1-1-1' clip-rule='evenodd'/%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M2 4h18v24H2zm2 2v20h14V6zM26.793 13 23 9.207l1.414-1.414L29.621 13l-5.207 5.207L23 16.793z' clip-rule='evenodd'/%3E%3C/svg%3E\")}.ag-icon-un-pin:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='m6.112 15.111 3.272 3.271 1.436-1.402-2.476-2.479c.81-1.25 3.168-1.12 5.156-.614l4.986-4.988-.49-.722c-.392-.622.336-1.504 1.024-2.072l.008-.007.01-.006.032-.025 1.447 1.447 1.432-1.397-2.601-2.602s-4.052 2.704-3.352 5.046l-3.158 3.108c-2.004-.388-4.69-.288-6.056 1.572-.638.87-.67 1.87-.67 1.87m.581 11.582.014.014 5.502-5.501 4.783 4.783.746-.364c1.992-1.016 2.776-3.21 2.632-5.34-.055-.805-.068-.87-.088-.97-.008-.04-.017-.085-.03-.182l3.32-3.218c1.734.292 3.198-.912 4.272-2.338q.337-.447.67-.894l-.001-.001-.007-.007-.007-.007-.007-.007-3.87-3.87 1.585-1.584-1.414-1.414-14.381 14.38-1.237 1.209-5.69 5.687 1.417 1.416zM23.21 10.206l2.65 2.651c-1.465 1.714-2.935.776-2.935.776l-4.79 4.79q.041.291.087.583c.257 1.676.513 3.35-.585 4.317a4 4 0 0 1-.272.21l-3.739-3.744z' clip-rule='evenodd'/%3E%3C/svg%3E\")}.ag-icon-pinned-top:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='currentColor' d='m16.708 10.878 8.708 8.706L24 21l-6.292-6.294V27h-2V14.706L9.416 21 8 19.584q4.348-4.344 8.691-8.69zM25 6H8v2h17z'/%3E%3C/svg%3E\")}.ag-icon-pinned-bottom:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='currentColor' d='M16.708 22.122 8 13.416 9.416 12l6.292 6.294V6h2v12.294L24 12l1.416 1.416-8.691 8.69zM7.416 28h17v-2h-17z'/%3E%3C/svg%3E\")}.ag-icon-chevron-up:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M3.479 10.521a.75.75 0 0 1 0-1.06l4-4a.75.75 0 0 1 1.06 0l4 4a.75.75 0 0 1-1.06 1.06l-3.47-3.47-3.47 3.47a.75.75 0 0 1-1.06 0' clip-rule='evenodd'/%3E%3C/svg%3E\")}.ag-icon-chevron-down:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M12.521 5.461a.75.75 0 0 1 0 1.06l-4 4a.75.75 0 0 1-1.06 0l-4-4a.75.75 0 0 1 1.06-1.06l3.47 3.47 3.47-3.47a.75.75 0 0 1 1.06 0' clip-rule='evenodd'/%3E%3C/svg%3E\")}.ag-icon-chevron-left:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M10.53 12.512a.75.75 0 0 1-1.06 0l-4-4a.75.75 0 0 1 0-1.06l4-4a.75.75 0 0 1 1.06 1.06l-3.47 3.47 3.47 3.47a.75.75 0 0 1 0 1.06' clip-rule='evenodd'/%3E%3C/svg%3E\")}.ag-icon-chevron-right:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M5.47 3.47a.75.75 0 0 1 1.06 0l4 4a.75.75 0 0 1 0 1.06l-4 4a.75.75 0 0 1-1.06-1.06L8.94 8 5.47 4.53a.75.75 0 0 1 0-1.06' clip-rule='evenodd'/%3E%3C/svg%3E\")}.ag-icon-filter-add:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='currentColor' d='M19.834 8H8c0 .304.06.612.258.842 2.716 2.854 6.682 5.548 6.742 7.974V21l2-1.5v-2.684c.056-2.267 2.968-4.417 5.49-6.75v3.087c-1.081.974-2.245 1.968-3.232 3.005a1.05 1.05 0 0 0-.258.682v3.66L13 25c0-2.74.066-5.482-.002-8.222a1.05 1.05 0 0 0-.256-.62C10.026 13.304 6.06 10.61 6 8.184V6h13.834z'/%3E%3Cpath fill='currentColor' d='M26 6h2.946v2.002H26v3.313h-2.002V8.002h-2.946V6h2.946V3.04H26z'/%3E%3C/svg%3E\")}.ag-icon-edit:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='currentColor' d='M23.182 5a3.82 3.82 0 0 1 2.83 6.383l-.131.137-2.09 2.088a1 1 0 0 1-.084.099 1 1 0 0 1-.098.084L12.533 24.869a3 3 0 0 1-1.245.746l-4.353 1.32-.003.002a1.5 1.5 0 0 1-1.87-1.867l.003-.004 1.32-4.352v-.003l.06-.174c.13-.344.321-.661.565-.936l.126-.135L18.209 8.39a1 1 0 0 1 .18-.181l2.092-2.09.137-.132A3.82 3.82 0 0 1 23.182 5M8.548 20.883a1 1 0 0 0-.25.415l-1.049 3.451 3.457-1.048.114-.042q.17-.076.301-.206l10.458-10.46-2.572-2.572zM23.182 7c-.482 0-.946.19-1.287.531v.001l-1.474 1.475 2.572 2.572 1.474-1.474.121-.133A1.82 1.82 0 0 0 23.182 7'/%3E%3C/svg%3E\")}`\r\n);\r\n\r\n// packages/ag-grid-community/src/theming/parts/icon-set/balham/icon-set-balham.ts\r\nvar iconSetBalham = /* @__PURE__ */ createPart({\r\n  feature: \"iconSet\",\r\n  css: iconSetBalhamCSS\r\n});\r\n\r\n// packages/ag-grid-community/src/theming/parts/icon-set/alpine/icon-set-alpine.css-GENERATED.ts\r\nvar iconSetAlpineCSS = (\r\n  /*css*/\r\n  `.ag-icon-aggregation:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M24 6H8v2l8 8-8 8v2h16v-2H11l8-8-8-8h13z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-arrows:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M7.515 11.171 2.687 16l4.828 4.829-1.414 1.414L-.142 16l6.243-6.243zm16.97 0 1.414-1.414L32.142 16l-6.243 6.243-1.414-1.414L29.313 16zM16.028 13.2l2.829 2.828-2.829 2.829-2.828-2.829zm-4.857 11.285L16 29.313l4.829-4.828 1.414 1.414L16 32.142l-6.243-6.243zm0-16.97L9.757 6.101 16-.142l6.243 6.243-1.414 1.414L16 2.687z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-asc:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='m5.333 16 1.88 1.88 7.453-7.44v16.227h2.667V10.44l7.44 7.453L26.666 16 15.999 5.333 5.332 16z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-cancel:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M16 2.667A13.32 13.32 0 0 0 2.667 16c0 7.373 5.96 13.333 13.333 13.333S29.333 23.373 29.333 16 23.373 2.667 16 2.667m6.667 18.12-1.88 1.88L16 17.88l-4.787 4.787-1.88-1.88L14.12 16l-4.787-4.787 1.88-1.88L16 14.12l4.787-4.787 1.88 1.88L17.88 16z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-chart:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Echart%3C/title%3E%3Cg fill='%23000' fill-rule='nonzero'%3E%3Cpath d='M14 7h4v18h-4zM8 17h4v8H8zM20 13h4v12h-4z'/%3E%3C/g%3E%3C/svg%3E\")}.ag-icon-color-picker:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M23.907 17.587 10.574 4.254l-1.88 1.88 3.173 3.173-8.28 8.28 10.16 10.16zm-16.547 0 6.387-6.387 6.387 6.387zm18.387 2s-2.667 2.893-2.667 4.667c0 1.467 1.2 2.667 2.667 2.667s2.667-1.2 2.667-2.667c0-1.773-2.667-4.667-2.667-4.667' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-columns:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M26 25H6V7h20zM12 11H8v12h4zm6 0h-4v12h4zm6 12V11h-4v12z' style='fill-rule:nonzero' transform='translate(0 -1)'/%3E%3C/svg%3E\")}.ag-icon-contracted:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='m12 6 10 10-10 10-2-2 8-8-8-8z'/%3E%3C/svg%3E\")}.ag-icon-copy:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M22 1.333H6A2.675 2.675 0 0 0 3.333 4v18.667H6V4h16zm4 5.334H11.333a2.675 2.675 0 0 0-2.667 2.667v18.667c0 1.467 1.2 2.667 2.667 2.667H26c1.467 0 2.667-1.2 2.667-2.667V9.334c0-1.467-1.2-2.667-2.667-2.667M26 28H11.333V9.333H26z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-cross:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M15.984 13.894 27.05 2.828l2.122 2.122-11.066 11.066 11.066 11.066-2.122 2.12-11.066-11.066L4.918 29.202l-2.12-2.12 11.066-11.066L2.798 4.95l2.12-2.122z'/%3E%3C/svg%3E\")}.ag-icon-csv:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M384 131.9c-7.753-8.433-110.425-128.473-114.9-133L48-.1C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48zm-35.9 2.1H257V27.9zM30 479V27h200l1 105c0 13.3-1.3 29 12 29h111l1 318z' style='fill-rule:nonzero' transform='matrix(.06285 0 0 .06285 3.934 -.054)'/%3E%3Cpath d='M.688-.226a.2.2 0 0 1-.017.074.28.28 0 0 1-.145.14.412.412 0 0 1-.234.013.28.28 0 0 1-.202-.168.468.468 0 0 1-.04-.19q0-.086.025-.155a.319.319 0 0 1 .182-.191.4.4 0 0 1 .134-.025q.087 0 .155.035a.3.3 0 0 1 .104.085.17.17 0 0 1 .036.097.06.06 0 0 1-.018.044.06.06 0 0 1-.042.019.06.06 0 0 1-.042-.013.2.2 0 0 1-.031-.046.2.2 0 0 0-.066-.079.16.16 0 0 0-.095-.027.17.17 0 0 0-.142.068.3.3 0 0 0-.053.193.4.4 0 0 0 .023.139.2.2 0 0 0 .067.083.2.2 0 0 0 .1.027q.063 0 .106-.031a.2.2 0 0 0 .065-.091.2.2 0 0 1 .023-.046q.014-.018.044-.018a.06.06 0 0 1 .044.018.06.06 0 0 1 .019.045' style='fill-rule:nonzero' transform='matrix(8.39799 0 0 12.455 7.122 25.977)'/%3E%3Cpath d='M.622-.215a.2.2 0 0 1-.033.117.23.23 0 0 1-.098.081.4.4 0 0 1-.153.029.34.34 0 0 1-.175-.04.23.23 0 0 1-.079-.077.17.17 0 0 1-.031-.093q0-.027.019-.045a.06.06 0 0 1 .046-.019.06.06 0 0 1 .039.014.1.1 0 0 1 .027.044.3.3 0 0 0 .03.057q.015.023.044.038.03.015.076.015.065 0 .105-.03a.09.09 0 0 0 .04-.075.08.08 0 0 0-.022-.058.14.14 0 0 0-.056-.034 1 1 0 0 0-.092-.025.7.7 0 0 1-.129-.042.2.2 0 0 1-.083-.066.17.17 0 0 1-.03-.104q0-.058.032-.105a.2.2 0 0 1 .093-.07.4.4 0 0 1 .144-.025q.066 0 .114.016a.3.3 0 0 1 .08.044.2.2 0 0 1 .046.057q.015.03.015.058a.07.07 0 0 1-.018.046.06.06 0 0 1-.046.021q-.025 0-.038-.012a.2.2 0 0 1-.028-.041.2.2 0 0 0-.047-.063Q.387-.625.326-.625a.15.15 0 0 0-.09.025q-.035.024-.035.059 0 .021.012.037a.1.1 0 0 0 .032.027.4.4 0 0 0 .111.036q.06.015.11.031.048.018.083.042a.2.2 0 0 1 .054.062.2.2 0 0 1 .019.091' style='fill-rule:nonzero' transform='matrix(8.39799 0 0 12.455 13.339 25.977)'/%3E%3Cpath d='m.184-.633.162.48.163-.483q.013-.038.019-.053a.062.062 0 0 1 .061-.039q.018 0 .034.009a.1.1 0 0 1 .025.025q.009.015.009.031L.654-.64l-.007.025-.009.024-.173.468-.019.051a.2.2 0 0 1-.021.042.1.1 0 0 1-.033.03.1.1 0 0 1-.049.012.1.1 0 0 1-.05-.011A.1.1 0 0 1 .26-.03a.2.2 0 0 1-.021-.042L.22-.123.05-.587.041-.612.033-.638.03-.662q0-.025.02-.046a.07.07 0 0 1 .05-.02q.037 0 .053.023.015.023.031.072' style='fill-rule:nonzero' transform='matrix(8.39799 0 0 12.455 18.94 25.977)'/%3E%3C/svg%3E\")}.ag-icon-cut:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M13.775 15.198 3.835 2.945a1.501 1.501 0 0 1 2.33-1.89l14.997 18.488A6.003 6.003 0 0 1 29.657 25c0 3.311-2.688 6-6 6s-6-2.689-6-6c0-1.335.437-2.569 1.176-3.566l-3.127-3.855-3.001 3.7A5.97 5.97 0 0 1 14 25c0 3.311-2.689 6-6 6s-6-2.689-6-6a6.003 6.003 0 0 1 8.315-5.536zm9.882 6.702a3.1 3.1 0 0 0-3.1 3.1c0 1.711 1.389 3.1 3.1 3.1s3.1-1.389 3.1-3.1-1.389-3.1-3.1-3.1M8 21.95a3.05 3.05 0 1 0 .001 6.101A3.05 3.05 0 0 0 8 21.95m9.63-11.505 1.932 2.381 8.015-9.881a1.5 1.5 0 0 0-2.329-1.89z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-desc:before,.ag-icon-down:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='m26.667 16-1.88-1.88-7.453 7.44V5.333h-2.667V21.56l-7.44-7.453L5.334 16l10.667 10.667z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-excel:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M384 131.9c-7.753-8.433-110.425-128.473-114.9-133L48-.1C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48zm-35.9 2.1H257V27.9zM30 479V27h200l1 105c0 13.3-1.3 29 12 29h111l1 318z' style='fill-rule:nonzero' transform='matrix(.06285 0 0 .06285 3.934 -.054)'/%3E%3Cpath d='m.052-.139.16-.234-.135-.208a.4.4 0 0 1-.028-.052.1.1 0 0 1-.01-.042.05.05 0 0 1 .018-.037.07.07 0 0 1 .045-.016q.03 0 .047.018a1 1 0 0 1 .047.066l.107.174.115-.174.024-.038.019-.026.021-.015a.1.1 0 0 1 .027-.005.06.06 0 0 1 .044.016.05.05 0 0 1 .018.039q0 .033-.038.089l-.141.211.152.234a.3.3 0 0 1 .03.051.1.1 0 0 1 .009.038.1.1 0 0 1-.008.031.1.1 0 0 1-.024.023.1.1 0 0 1-.034.008.1.1 0 0 1-.035-.008.1.1 0 0 1-.023-.022L.427-.067.301-.265l-.134.204-.022.034-.016.019a.1.1 0 0 1-.022.015.1.1 0 0 1-.03.005.06.06 0 0 1-.044-.016.06.06 0 0 1-.017-.047q0-.036.036-.088' style='fill-rule:nonzero' transform='matrix(17.82892 0 0 16.50777 10.371 25.928)'/%3E%3C/svg%3E\")}.ag-icon-expanded:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M20 26 10 16 20 6l2 2-8 8 8 8z'/%3E%3C/svg%3E\")}.ag-icon-eye-slash:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eeye-slash%3C/title%3E%3Cpath fill='%23000' fill-rule='nonzero' d='M8.95 10.364 7 8.414 8.414 7l2.32 2.32A13.2 13.2 0 0 1 16.5 8c5.608 0 10.542 3.515 12.381 8.667L29 17l-.119.333a13 13 0 0 1-4.255 5.879l1.466 1.466-1.414 1.414-1.754-1.753A13.2 13.2 0 0 1 16.5 26c-5.608 0-10.542-3.515-12.381-8.667L4 17l.119-.333a13 13 0 0 1 4.83-6.303m1.445 1.445A11.02 11.02 0 0 0 6.148 17c1.646 4.177 5.728 7 10.352 7 1.76 0 3.441-.409 4.94-1.146l-1.878-1.878A5.06 5.06 0 0 1 16.5 22c-2.789 0-5.05-2.239-5.05-5 0-1.158.398-2.223 1.065-3.07zm1.855-.974 1.794 1.795A5.07 5.07 0 0 1 16.5 12c2.789 0 5.05 2.239 5.05 5 0 .9-.24 1.745-.661 2.474l2.305 2.306A11 11 0 0 0 26.852 17c-1.646-4.177-5.728-7-10.352-7-1.495 0-2.933.295-4.25.835'/%3E%3C/svg%3E\")}.ag-icon-eye:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M16.5 23c4.624 0 8.706-2.823 10.352-7-1.646-4.177-5.728-7-10.352-7s-8.706 2.823-10.352 7c1.646 4.177 5.728 7 10.352 7M4.119 15.667C5.958 10.515 10.892 7 16.5 7s10.542 3.515 12.381 8.667L29 16l-.119.333C27.042 21.485 22.108 25 16.5 25S5.958 21.485 4.119 16.333L4 16zM16.5 21c2.789 0 5.049-2.239 5.049-5s-2.26-5-5.049-5-5.049 2.239-5.049 5 2.26 5 5.049 5' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-filter:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='m28 8-8 8v5l-6 6V16L6 8V6h22zM9 8l7 7v7l2-2v-5l7-7z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-first:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M24.273 22.12 18.153 16l6.12-6.12L22.393 8l-8 8 8 8zM7.727 8h2.667v16H7.727z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-group:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M14 7v1H9V7zm0-3v1H5.001V4zm-7 7H5v-1h2zm0-3H5V7h2zM3 5H1V4h2zm11 5v1H9v-1zm-7 4H5v-1h2zm7-1v1H9v-1z' style='fill-rule:nonzero' transform='matrix(2 0 0 2 0 -2)'/%3E%3C/svg%3E\")}.ag-icon-last:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='m7.727 9.88 6.12 6.12-6.12 6.12L9.607 24l8-8-8-8zM21.607 8h2.667v16h-2.667z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-left:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M26.667 14.667H10.44l7.453-7.453L16 5.334 5.333 16.001 16 26.668l1.88-1.88-7.44-7.453h16.227z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-linked:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M5.2 16a4.136 4.136 0 0 1 4.133-4.133h5.333V9.334H9.333a6.67 6.67 0 0 0-6.667 6.667 6.67 6.67 0 0 0 6.667 6.667h5.333v-2.533H9.333A4.136 4.136 0 0 1 5.2 16.002zm5.467 1.333h10.667v-2.667H10.667zm12-8h-5.333v2.533h5.333a4.136 4.136 0 0 1 4.133 4.133 4.136 4.136 0 0 1-4.133 4.133h-5.333v2.533h5.333a6.67 6.67 0 0 0 6.667-6.667 6.67 6.67 0 0 0-6.667-6.667z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-loading:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M17 29h-2v-8h2zm-3.586-9L7 26.414 5.586 25 12 18.586zm13 5L25 26.414 18.586 20 20 18.586zM29 17h-8v-2h8zm-18 0H3v-2h8zm2.414-5L12 13.414 5.586 7 7 5.586zm13-5L20 13.414 18.586 12 25 5.586zM17 11h-2V3h2z' style='fill-rule:nonzero' transform='translate(-3.692 -3.692)scale(1.23077)'/%3E%3C/svg%3E\")}.ag-icon-maximize:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M14 30H2V18h2.828v7.05l8.254-8.252 2.12 2.12-8.252 8.254H14zm4-28h12v12h-2.828V6.95l-8.254 8.252-2.12-2.12 8.252-8.254H18z'/%3E%3C/svg%3E\")}.ag-icon-menu:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M20 13H0v-2h20zm0-6H0V5h20zm0-6H0v-2h20z' style='fill-rule:nonzero' transform='translate(6 9)'/%3E%3C/svg%3E\")}.ag-icon-menu-alt:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='%23000' d='M16 19a3 3 0 1 0 0-6 3 3 0 0 0 0 6M16 11a3 3 0 1 0 0-6 3 3 0 0 0 0 6M16 27a3 3 0 1 0 0-6 3 3 0 0 0 0 6'/%3E%3C/svg%3E\")}.ag-icon-minimize:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M2 18h12v12h-2.828v-7.05l-8.254 8.252-2.12-2.12 8.252-8.254H2zm28-4H18V2h2.828v7.05L29.082.798l2.12 2.12-8.252 8.254H30z'/%3E%3C/svg%3E\")}.ag-icon-minus:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M6.572 6.572a13.32 13.32 0 0 0 0 18.856 13.32 13.32 0 0 0 18.856 0 13.32 13.32 0 0 0 0-18.856 13.32 13.32 0 0 0-18.856 0m17.527 8.099v2.658H7.901v-2.658z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-next:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M10.94 6 9.06 7.88 17.167 16 9.06 24.12 10.94 26l10-10z' style='fill-rule:nonzero' transform='translate(1)'/%3E%3C/svg%3E\")}.ag-icon-none:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Enone%3C/title%3E%3Cg fill='%23000' fill-rule='nonzero'%3E%3Cpath d='M23.708 14.645 16 6.939l-7.708 7.706 1.416 1.416L16 9.767l6.292 6.294zM23.708 20.355 16 28.061l-7.708-7.706 1.416-1.416L16 25.233l6.292-6.294z'/%3E%3C/g%3E%3C/svg%3E\")}.ag-icon-not-allowed:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M16 2.667C8.64 2.667 2.667 8.64 2.667 16S8.64 29.333 16 29.333 29.333 23.36 29.333 16 23.36 2.667 16 2.667M5.333 16c0-5.893 4.773-10.667 10.667-10.667 2.467 0 4.733.84 6.533 2.253L7.586 22.533A10.54 10.54 0 0 1 5.333 16M16 26.667c-2.467 0-4.733-.84-6.533-2.253L24.414 9.467A10.54 10.54 0 0 1 26.667 16c0 5.893-4.773 10.667-10.667 10.667' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-paste:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M25.334 4H19.76C19.2 2.453 17.733 1.333 16 1.333S12.8 2.453 12.24 4H6.667A2.675 2.675 0 0 0 4 6.667V28c0 1.467 1.2 2.667 2.667 2.667h18.667c1.467 0 2.667-1.2 2.667-2.667V6.667C28.001 5.2 26.801 4 25.334 4M16 4c.733 0 1.333.6 1.333 1.333s-.6 1.333-1.333 1.333-1.333-.6-1.333-1.333S15.267 4 16 4m9.333 24H6.666V6.667h2.667v4h13.333v-4h2.667z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-pin:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='m10.78 19.777-4.668-4.666s.032-1 .67-1.87c1.366-1.86 4.052-1.96 6.056-1.572l3.158-3.108c-.7-2.342 3.352-5.046 3.352-5.046l9.166 9.168q-.334.447-.67.894c-1.074 1.426-2.538 2.63-4.272 2.338l-3.32 3.218c.046.344.042.03.118 1.152.144 2.13-.64 4.324-2.632 5.34l-.746.364-4.798-4.798-7.292 7.294-1.416-1.416zm8.24-13.672c-.688.568-1.416 1.45-1.024 2.072l.49.722-4.986 4.988c-1.988-.506-4.346-.636-5.156.614l9.02 9.032q.14-.099.272-.21c1.226-1.08.764-3.04.498-4.9l4.79-4.79s1.47.938 2.936-.776l-6.79-6.79q-.026.019-.05.038' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-pivot:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M25.128 2.002c2.56.096 4.772 2.292 4.87 4.87a712 712 0 0 1 0 18.256c-.096 2.56-2.292 4.772-4.87 4.87a712 712 0 0 1-18.256 0c-2.558-.096-4.772-2.29-4.87-4.87a712 712 0 0 1 0-18.256c.096-2.56 2.292-4.772 4.87-4.87a712 712 0 0 1 18.256 0m2.966 7.954H9.892v18.136c5.086.13 10.18.098 15.264-.096 1.48-.094 2.746-1.35 2.84-2.84.192-5.064.226-10.134.098-15.2M3.968 24.1q.015.528.036 1.056c.094 1.484 1.354 2.746 2.84 2.84l1.012.036V24.1zM22 15.414l-.292.294-1.416-1.416L23 11.586l2.708 2.706-1.416 1.416-.292-.294v3.592c-.032 2.604-2.246 4.892-4.872 4.992L15.414 24l.294.292-1.416 1.416L11.586 23l2.706-2.708 1.416 1.416-.322.32c3.372.03 6.578-.164 6.614-3.034zM3.88 18.038c.002 1.346.012 2.694.038 4.04h3.938v-4.04zm.05-6.062a681 681 0 0 0-.044 4.042h3.97v-4.042zm5.962-7.99Q8.449 3.999 7.006 4c-1.57.02-2.946 1.348-3.004 2.922q-.02 1.517-.042 3.034h3.896v-2.02h2.036zm14.244-.016v3.966h3.898q-.017-.546-.038-1.092c-.094-1.48-1.35-2.746-2.84-2.84q-.51-.019-1.02-.034m-8.14-.054q-2.035.022-4.07.048v3.972h4.07zm6.106.008a213 213 0 0 0-4.07-.022v4.034h4.07z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-plus:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M6.572 6.572a13.32 13.32 0 0 0 0 18.856 13.32 13.32 0 0 0 18.856 0 13.32 13.32 0 0 0 0-18.856 13.32 13.32 0 0 0-18.856 0m17.527 8.099v2.658h-6.77v6.77h-2.658v-6.77h-6.77v-2.658h6.77v-6.77h2.658v6.77z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-previous:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M21.94 7.88 20.06 6l-10 10 10 10 1.88-1.88L13.833 16z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-right:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='m16 5.333-1.88 1.88 7.44 7.453H5.333v2.667H21.56l-7.44 7.453 1.88 1.88 10.667-10.667L16 5.332z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-save:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M15.708 2.355 8 10.061.292 2.355 1.708.939 8 7.233 14.292.939z' style='fill-rule:nonzero' transform='translate(8 14)'/%3E%3Cpath d='M5 26h22v2H5zM15 4h2v18h-2z'/%3E%3C/svg%3E\")}.ag-icon-small-down:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M7.334 10.667 16 21.334l8.667-10.667z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-small-left:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M21.333 7.334 10.666 16l10.667 8.667z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-small-right:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M10.667 24.666 21.334 16 10.667 7.333z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-small-up:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M7.334 21.333 16 10.666l8.667 10.667z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-tick:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M11.586 22.96 27.718 6.828 29.84 8.95 11.586 27.202 2.4 18.016l2.12-2.122z'/%3E%3C/svg%3E\")}.ag-icon-tree-closed:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='m11.94 6-1.88 1.88L18.167 16l-8.107 8.12L11.94 26l10-10z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-tree-indeterminate:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M6 13.5h20v3H6z'/%3E%3C/svg%3E\")}.ag-icon-tree-open:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M24.12 9.06 16 17.167 7.88 9.06 6 10.94l10 10 10-10z' style='fill-rule:nonzero' transform='translate(0 1)'/%3E%3C/svg%3E\")}.ag-icon-unlinked:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M22.667 9.333h-5.333v2.533h5.333a4.136 4.136 0 0 1 4.133 4.133c0 1.907-1.307 3.507-3.08 3.973l1.947 1.947c2.173-1.107 3.667-3.32 3.667-5.92a6.67 6.67 0 0 0-6.667-6.667zm-1.334 5.334h-2.92l2.667 2.667h.253zM2.667 5.693 6.814 9.84A6.65 6.65 0 0 0 2.667 16a6.67 6.67 0 0 0 6.667 6.667h5.333v-2.533H9.334a4.136 4.136 0 0 1-4.133-4.133c0-2.12 1.613-3.867 3.68-4.093l2.76 2.76h-.973v2.667h3.64l3.027 3.027v2.307h2.307l5.347 5.333 1.68-1.68L4.362 4.002 2.669 5.695z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-up:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='m5.333 16 1.88 1.88 7.453-7.44v16.227h2.667V10.44l7.44 7.453L26.666 16 15.999 5.333 5.332 16z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-grip:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M8 24H6v-4h2zm6 0h-2v-4h2zm6 0h-2v-4h2zm6 0h-2v-4h2zM8 18H6v-4h2zm6 0h-2v-4h2zm6 0h-2v-4h2zm6 0h-2v-4h2zM8 12H6V8h2zm6 0h-2V8h2zm6 0h-2V8h2zm6 0h-2V8h2z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-settings:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='%23000' d='M30 8h-4.1c-.5-2.3-2.5-4-4.9-4s-4.4 1.7-4.9 4H2v2h14.1c.5 2.3 2.5 4 4.9 4s4.4-1.7 4.9-4H30zm-9 4c-1.7 0-3-1.3-3-3s1.3-3 3-3 3 1.3 3 3-1.3 3-3 3M2 24h4.1c.5 2.3 2.5 4 4.9 4s4.4-1.7 4.9-4H30v-2H15.9c-.5-2.3-2.5-4-4.9-4s-4.4 1.7-4.9 4H2zm9-4c1.7 0 3 1.3 3 3s-1.3 3-3 3-3-1.3-3-3 1.3-3 3-3'/%3E%3C/svg%3E\")}.ag-icon-column-arrow:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M11 4a1 1 0 0 1 1 1v22a1 1 0 1 1-2 0V5a1 1 0 0 1 1-1' clip-rule='evenodd'/%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M2 13a1 1 0 0 1 1-1h23.5a1 1 0 1 1 0 2H3a1 1 0 0 1-1-1' clip-rule='evenodd'/%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M2 4h18v24H2zm2 2v20h14V6zM26.793 13 23 9.207l1.414-1.414L29.621 13l-5.207 5.207L23 16.793z' clip-rule='evenodd'/%3E%3C/svg%3E\")}.ag-icon-un-pin:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='m6.112 15.111 3.272 3.271 1.436-1.402-2.476-2.479c.81-1.25 3.168-1.12 5.156-.614l4.986-4.988-.49-.722c-.392-.622.336-1.504 1.024-2.072l.008-.007.01-.006.032-.025 1.447 1.447 1.432-1.397-2.601-2.602s-4.052 2.704-3.352 5.046l-3.158 3.108c-2.004-.388-4.69-.288-6.056 1.572-.638.87-.67 1.87-.67 1.87m.581 11.582.014.014 5.502-5.501 4.783 4.783.746-.364c1.992-1.016 2.776-3.21 2.632-5.34-.055-.805-.068-.87-.088-.97-.008-.04-.017-.085-.03-.182l3.32-3.218c1.734.292 3.198-.912 4.272-2.338q.337-.447.67-.894l-.001-.001-.007-.007-.007-.007-.007-.007-3.87-3.87 1.585-1.584-1.414-1.414-14.381 14.38-1.237 1.209-5.69 5.687 1.417 1.416zM23.21 10.206l2.65 2.651c-1.465 1.714-2.935.776-2.935.776l-4.79 4.79q.041.291.087.583c.257 1.676.513 3.35-.585 4.317a4 4 0 0 1-.272.21l-3.739-3.744z' clip-rule='evenodd'/%3E%3C/svg%3E\")}.ag-icon-pinned-top:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='currentColor' d='m16.708 10.878 8.708 8.706L24 21l-6.292-6.294V27h-2V14.706L9.416 21 8 19.584q4.348-4.344 8.691-8.69zM25 6H8v2h17z'/%3E%3C/svg%3E\")}.ag-icon-pinned-bottom:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='currentColor' d='M16.708 22.122 8 13.416 9.416 12l6.292 6.294V6h2v12.294L24 12l1.416 1.416-8.691 8.69zM7.416 28h17v-2h-17z'/%3E%3C/svg%3E\")}.ag-icon-chevron-up:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M3.479 10.521a.75.75 0 0 1 0-1.06l4-4a.75.75 0 0 1 1.06 0l4 4a.75.75 0 0 1-1.06 1.06l-3.47-3.47-3.47 3.47a.75.75 0 0 1-1.06 0' clip-rule='evenodd'/%3E%3C/svg%3E\")}.ag-icon-chevron-down:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M12.521 5.461a.75.75 0 0 1 0 1.06l-4 4a.75.75 0 0 1-1.06 0l-4-4a.75.75 0 0 1 1.06-1.06l3.47 3.47 3.47-3.47a.75.75 0 0 1 1.06 0' clip-rule='evenodd'/%3E%3C/svg%3E\")}.ag-icon-chevron-left:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M10.53 12.512a.75.75 0 0 1-1.06 0l-4-4a.75.75 0 0 1 0-1.06l4-4a.75.75 0 0 1 1.06 1.06l-3.47 3.47 3.47 3.47a.75.75 0 0 1 0 1.06' clip-rule='evenodd'/%3E%3C/svg%3E\")}.ag-icon-chevron-right:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M5.47 3.47a.75.75 0 0 1 1.06 0l4 4a.75.75 0 0 1 0 1.06l-4 4a.75.75 0 0 1-1.06-1.06L8.94 8 5.47 4.53a.75.75 0 0 1 0-1.06' clip-rule='evenodd'/%3E%3C/svg%3E\")}.ag-icon-filter-add:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='currentColor' d='M19.834 8H8c0 .304.06.612.258.842 2.716 2.854 6.682 5.548 6.742 7.974V21l2-1.5v-2.684c.056-2.267 2.968-4.417 5.49-6.75v3.087c-1.081.974-2.245 1.968-3.232 3.005a1.05 1.05 0 0 0-.258.682v3.66L13 25c0-2.74.066-5.482-.002-8.222a1.05 1.05 0 0 0-.256-.62C10.026 13.304 6.06 10.61 6 8.184V6h13.834z'/%3E%3Cpath fill='currentColor' d='M26 6h2.946v2.002H26v3.313h-2.002V8.002h-2.946V6h2.946V3.04H26z'/%3E%3C/svg%3E\")}.ag-icon-edit:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='currentColor' d='M6.222 25.778h1.611l14.834-14.811-1.611-1.611-14.834 14.81zM4 28v-4.733L22.644 4.656a2.26 2.26 0 0 1 1.567-.634q.423 0 .833.167.412.166.734.478l1.589 1.6q.333.322.483.733t.15.822q0 .423-.161.839-.162.416-.472.728L8.733 28zm17.856-17.833-.8-.811 1.61 1.61z'/%3E%3C/svg%3E\")}`\r\n);\r\n\r\n// packages/ag-grid-community/src/theming/parts/icon-set/alpine/icon-set-alpine.ts\r\nvar iconSetAlpine = /* @__PURE__ */ createPart({\r\n  feature: \"iconSet\",\r\n  css: iconSetAlpineCSS\r\n});\r\n\r\n// packages/ag-grid-community/src/theming/parts/icon-set/material/icon-set-material.css-GENERATED.ts\r\nvar iconSetMaterialCSS = (\r\n  /*css*/\r\n  `.ag-icon-aggregation:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eaggregation%3C/title%3E%3Cpath d='M24 5.333H8V8l8.667 8L8 24v2.667h16v-4h-9.333L21.334 16l-6.667-6.667H24z'/%3E%3C/svg%3E\")}.ag-icon-arrows:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Earrows%3C/title%3E%3Cpath d='M13.333 11.556h5.333V8h3.556L16 1.778 9.778 8h3.556zm-1.777 1.777H8V9.777l-6.222 6.222L8 22.221v-3.556h3.556zM30.222 16 24 9.778v3.556h-3.556v5.333H24v3.556l6.222-6.222zm-11.555 4.444h-5.333V24H9.778L16 30.222 22.222 24h-3.556z'/%3E%3C/svg%3E\")}.ag-icon-asc:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Easc%3C/title%3E%3Cpath d='m5.333 16 1.88 1.88 7.453-7.44v16.227h2.667V10.44l7.44 7.453L26.666 16 15.999 5.333z'/%3E%3C/svg%3E\")}.ag-icon-cancel:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Ecancel%3C/title%3E%3Cpath d='M16 2.667C8.627 2.667 2.667 8.627 2.667 16S8.627 29.333 16 29.333 29.333 23.373 29.333 16 23.373 2.667 16 2.667m6.667 18.12-1.88 1.88L16 17.88l-4.787 4.787-1.88-1.88L14.12 16l-4.787-4.787 1.88-1.88L16 14.12l4.787-4.787 1.88 1.88L17.88 16z'/%3E%3C/svg%3E\")}.ag-icon-chart:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Echart%3C/title%3E%3Cpath d='M6.667 12.267h4v13.067h-4zm7.466-5.6h3.733v18.667h-3.733zM21.6 17.333h3.733v8H21.6z'/%3E%3C/svg%3E\")}.ag-icon-color-picker:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Ecolor-picker%3C/title%3E%3Cpath d='M23.907 17.587 10.574 4.254l-1.88 1.88 3.173 3.173-8.28 8.28 10.16 10.16zm-16.547 0 6.387-6.387 6.387 6.387H7.361zm18.387 2s-2.667 2.893-2.667 4.667c0 1.467 1.2 2.667 2.667 2.667s2.667-1.2 2.667-2.667c0-1.773-2.667-4.667-2.667-4.667'/%3E%3C/svg%3E\")}.ag-icon-columns:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Ecolumns%3C/title%3E%3Cpath d='M5.333 10.667h5.333V5.334H5.333zm8 16h5.333v-5.333h-5.333zm-8 0h5.333v-5.333H5.333zm0-8h5.333v-5.333H5.333zm8 0h5.333v-5.333h-5.333zm8-13.334v5.333h5.333V5.333zm-8 5.334h5.333V5.334h-5.333zm8 8h5.333v-5.333h-5.333zm0 8h5.333v-5.333h-5.333z'/%3E%3C/svg%3E\")}.ag-icon-contracted:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Econtracted%3C/title%3E%3Cpath d='m12.94 8-1.88 1.88L17.167 16l-6.107 6.12L12.94 24l8-8z'/%3E%3C/svg%3E\")}.ag-icon-copy:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Ecopy%3C/title%3E%3Cpath d='M22 1.333H6A2.675 2.675 0 0 0 3.333 4v18.667H6V4h16zm4 5.334H11.333a2.675 2.675 0 0 0-2.667 2.667v18.667c0 1.467 1.2 2.667 2.667 2.667H26c1.467 0 2.667-1.2 2.667-2.667V9.334c0-1.467-1.2-2.667-2.667-2.667M26 28H11.333V9.333H26z'/%3E%3C/svg%3E\")}.ag-icon-cross:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Ecross%3C/title%3E%3Cpath d='m25.333 8.547-1.88-1.88L16 14.12 8.547 6.667l-1.88 1.88L14.12 16l-7.453 7.453 1.88 1.88L16 17.88l7.453 7.453 1.88-1.88L17.88 16z'/%3E%3C/svg%3E\")}.ag-icon-csv:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M384 131.9c-7.753-8.433-110.425-128.473-114.9-133L48-.1C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48zm-35.9 2.1H257V27.9zM30 479V27h200l1 105c0 13.3-1.3 29 12 29h111l1 318z' style='fill-rule:nonzero' transform='matrix(.06285 0 0 .06285 3.934 -.054)'/%3E%3Cpath d='M.688-.226a.2.2 0 0 1-.017.074.28.28 0 0 1-.145.14.412.412 0 0 1-.234.013.28.28 0 0 1-.202-.168.468.468 0 0 1-.04-.19q0-.086.025-.155a.319.319 0 0 1 .182-.191.4.4 0 0 1 .134-.025q.087 0 .155.035a.3.3 0 0 1 .104.085.17.17 0 0 1 .036.097.06.06 0 0 1-.018.044.06.06 0 0 1-.042.019.06.06 0 0 1-.042-.013.2.2 0 0 1-.031-.046.2.2 0 0 0-.066-.079.16.16 0 0 0-.095-.027.17.17 0 0 0-.142.068.3.3 0 0 0-.053.193.4.4 0 0 0 .023.139.2.2 0 0 0 .067.083.2.2 0 0 0 .1.027q.063 0 .106-.031a.2.2 0 0 0 .065-.091.2.2 0 0 1 .023-.046q.014-.018.044-.018a.06.06 0 0 1 .044.018.06.06 0 0 1 .019.045' style='fill-rule:nonzero' transform='matrix(8.39799 0 0 12.455 7.122 25.977)'/%3E%3Cpath d='M.622-.215a.2.2 0 0 1-.033.117.23.23 0 0 1-.098.081.4.4 0 0 1-.153.029.34.34 0 0 1-.175-.04.23.23 0 0 1-.079-.077.17.17 0 0 1-.031-.093q0-.027.019-.045a.06.06 0 0 1 .046-.019.06.06 0 0 1 .039.014.1.1 0 0 1 .027.044.3.3 0 0 0 .03.057q.015.023.044.038.03.015.076.015.065 0 .105-.03a.09.09 0 0 0 .04-.075.08.08 0 0 0-.022-.058.14.14 0 0 0-.056-.034 1 1 0 0 0-.092-.025.7.7 0 0 1-.129-.042.2.2 0 0 1-.083-.066.17.17 0 0 1-.03-.104q0-.058.032-.105a.2.2 0 0 1 .093-.07.4.4 0 0 1 .144-.025q.066 0 .114.016a.3.3 0 0 1 .08.044.2.2 0 0 1 .046.057q.015.03.015.058a.07.07 0 0 1-.018.046.06.06 0 0 1-.046.021q-.025 0-.038-.012a.2.2 0 0 1-.028-.041.2.2 0 0 0-.047-.063Q.387-.625.326-.625a.15.15 0 0 0-.09.025q-.035.024-.035.059 0 .021.012.037a.1.1 0 0 0 .032.027.4.4 0 0 0 .111.036q.06.015.11.031.048.018.083.042a.2.2 0 0 1 .054.062.2.2 0 0 1 .019.091' style='fill-rule:nonzero' transform='matrix(8.39799 0 0 12.455 13.339 25.977)'/%3E%3Cpath d='m.184-.633.162.48.163-.483q.013-.038.019-.053a.062.062 0 0 1 .061-.039q.018 0 .034.009a.1.1 0 0 1 .025.025q.009.015.009.031L.654-.64l-.007.025-.009.024-.173.468-.019.051a.2.2 0 0 1-.021.042.1.1 0 0 1-.033.03.1.1 0 0 1-.049.012.1.1 0 0 1-.05-.011A.1.1 0 0 1 .26-.03a.2.2 0 0 1-.021-.042L.22-.123.05-.587.041-.612.033-.638.03-.662q0-.025.02-.046a.07.07 0 0 1 .05-.02q.037 0 .053.023.015.023.031.072' style='fill-rule:nonzero' transform='matrix(8.39799 0 0 12.455 18.94 25.977)'/%3E%3C/svg%3E\")}.ag-icon-cut:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='m19 3-6 6 2 2 7-7V3m-10 9.5a.503.503 0 0 1-.5-.5c0-.274.226-.5.5-.5s.5.226.5.5-.226.5-.5.5M6 20c-1.097 0-2-.903-2-2a2 2 0 0 1 2-2c1.097 0 2 .903 2 2a2 2 0 0 1-2 2M6 8c-1.097 0-2-.903-2-2a2 2 0 0 1 2-2c1.097 0 2 .903 2 2a2 2 0 0 1-2 2m3.64-.36c.23-.5.36-1.05.36-1.64 0-2.194-1.806-4-4-4S2 3.806 2 6s1.806 4 4 4c.59 0 1.14-.13 1.64-.36L10 12l-2.36 2.36C7.14 14.13 6.59 14 6 14c-2.194 0-4 1.806-4 4s1.806 4 4 4 4-1.806 4-4c0-.59-.13-1.14-.36-1.64L12 14l7 7h3v-1z' style='fill-rule:nonzero' transform='translate(4 4)'/%3E%3C/svg%3E\")}.ag-icon-desc:before,.ag-icon-down:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Edesc%3C/title%3E%3Cpath d='m26.667 16-1.88-1.88-7.453 7.44V5.333h-2.667V21.56l-7.44-7.453L5.334 16l10.667 10.667L26.668 16z'/%3E%3C/svg%3E\")}.ag-icon-excel:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M384 131.9c-7.753-8.433-110.425-128.473-114.9-133L48-.1C21.5 0 0 21.5 0 48v416c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48zm-35.9 2.1H257V27.9zM30 479V27h200l1 105c0 13.3-1.3 29 12 29h111l1 318z' style='fill-rule:nonzero' transform='matrix(.06285 0 0 .06285 3.934 -.054)'/%3E%3Cpath d='m.052-.139.16-.234-.135-.208a.4.4 0 0 1-.028-.052.1.1 0 0 1-.01-.042.05.05 0 0 1 .018-.037.07.07 0 0 1 .045-.016q.03 0 .047.018a1 1 0 0 1 .047.066l.107.174.115-.174.024-.038.019-.026.021-.015a.1.1 0 0 1 .027-.005.06.06 0 0 1 .044.016.05.05 0 0 1 .018.039q0 .033-.038.089l-.141.211.152.234a.3.3 0 0 1 .03.051.1.1 0 0 1 .009.038.1.1 0 0 1-.008.031.1.1 0 0 1-.024.023.1.1 0 0 1-.034.008.1.1 0 0 1-.035-.008.1.1 0 0 1-.023-.022L.427-.067.301-.265l-.134.204-.022.034-.016.019a.1.1 0 0 1-.022.015.1.1 0 0 1-.03.005.06.06 0 0 1-.044-.016.06.06 0 0 1-.017-.047q0-.036.036-.088' style='fill-rule:nonzero' transform='matrix(17.82892 0 0 16.50777 10.371 25.928)'/%3E%3C/svg%3E\")}.ag-icon-expanded:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eexpanded%3C/title%3E%3Cpath d='M20.94 9.88 19.06 8l-8 8 8 8 1.88-1.88L14.833 16z'/%3E%3C/svg%3E\")}.ag-icon-eye-slash:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eeye-slash%3C/title%3E%3Cpath d='M21.106 15.088A5.19 5.19 0 0 0 16 10.814a5.17 5.17 0 0 0-3.668 1.522L9.866 9.868a12.2 12.2 0 0 1 6.133-1.646c5.186 0 9.614 3.225 11.408 7.778a12.34 12.34 0 0 1-5.276 6.133l-2.468-2.466a5.17 5.17 0 0 0 1.449-2.802h-2.123c-.148.508-.42.964-.782 1.33l-1.33-1.33h-2.514l2.196 2.196q-.272.049-.56.05a3.11 3.11 0 0 1-2.99-2.245h-2.123a5.19 5.19 0 0 0 7.3 3.836l2.247 2.247a12.2 12.2 0 0 1-4.434.828c-5.186 0-9.614-3.225-11.408-7.778a12.3 12.3 0 0 1 3.781-5.111l2.924 2.924a5.1 5.1 0 0 0-.404 1.275h4.206l-1.296-1.296a3.1 3.1 0 0 1 2.196-.903c1.404 0 2.587.924 2.976 2.199h2.13z'/%3E%3C/svg%3E\")}.ag-icon-eye:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eeye%3C/title%3E%3Cpath d='M16 8.222c-5.186 0-9.614 3.225-11.408 7.778 1.794 4.553 6.222 7.778 11.408 7.778S25.614 20.553 27.408 16C25.614 11.447 21.186 8.222 16 8.222m0 12.964c-2.862 0-5.186-2.324-5.186-5.186s2.324-5.186 5.186-5.186 5.186 2.324 5.186 5.186-2.324 5.186-5.186 5.186m0-8.297c-1.721 0-3.111 1.39-3.111 3.111s1.39 3.111 3.111 3.111 3.111-1.39 3.111-3.111-1.39-3.111-3.111-3.111'/%3E%3C/svg%3E\")}.ag-icon-filter:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Efilter%3C/title%3E%3Cpath d='M13.333 24h5.333v-2.667h-5.333zM4 8v2.667h24V8zm4 9.333h16v-2.667H8z'/%3E%3C/svg%3E\")}.ag-icon-first:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Efirst%3C/title%3E%3Cpath d='M24.273 22.12 18.153 16l6.12-6.12L22.393 8l-8 8 8 8zM7.727 8h2.667v16H7.727z'/%3E%3C/svg%3E\")}.ag-icon-group:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Egroup%3C/title%3E%3Cpath d='M18.667 21.333h8.889A3.555 3.555 0 0 1 24 24.889h-5.333zm8.888-7.111v3.556h-8.889v-3.556zM24 7.111a3.555 3.555 0 0 1 3.556 3.556h-16V7.111zm-8.889 17.778h-3.556v-3.556h3.556zm0-7.111h-3.556v-3.556h3.556zM8 10.667H4.444A3.555 3.555 0 0 1 8 7.111z'/%3E%3C/svg%3E\")}.ag-icon-last:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Elast%3C/title%3E%3Cpath d='m7.727 9.88 6.12 6.12-6.12 6.12L9.607 24l8-8-8-8zM21.607 8h2.667v16h-2.667z'/%3E%3C/svg%3E\")}.ag-icon-left:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eleft%3C/title%3E%3Cpath d='M26.667 14.667H10.44l7.453-7.453L16 5.334 5.333 16.001 16 26.668l1.88-1.88-7.44-7.453h16.227v-2.667z'/%3E%3C/svg%3E\")}.ag-icon-linked:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Elinked%3C/title%3E%3Cpath d='M5.2 16a4.136 4.136 0 0 1 4.133-4.133h5.333V9.334H9.333c-3.68 0-6.667 2.987-6.667 6.667s2.987 6.667 6.667 6.667h5.333v-2.533H9.333A4.136 4.136 0 0 1 5.2 16.002zm5.467 1.333h10.667v-2.667H10.667zm12-8h-5.333v2.533h5.333c2.28 0 4.133 1.853 4.133 4.133s-1.853 4.133-4.133 4.133h-5.333v2.533h5.333c3.68 0 6.667-2.987 6.667-6.667s-2.987-6.667-6.667-6.667z'/%3E%3C/svg%3E\")}.ag-icon-loading:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eloading%3C/title%3E%3Cpath d='m17.778 11.708 3.25-3.251 2.516 2.516-3.251 3.25h4.597v3.556h-4.597l3.251 3.25-2.516 2.516-3.25-3.251v4.597h-3.556v-4.597l-3.25 3.251-2.516-2.516 3.251-3.25H7.11v-3.556h4.597l-3.251-3.25 2.516-2.516 3.25 3.251V7.111h3.556zm-3.251 7.847h2.944l2.084-2.084v-2.944l-2.084-2.084h-2.944l-2.084 2.084v2.944z'/%3E%3C/svg%3E\")}.ag-icon-maximize:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Emaximize%3C/title%3E%3Cpath d='M4 4h24v2.667H4z'/%3E%3C/svg%3E\")}.ag-icon-menu:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Emenu%3C/title%3E%3Cpath d='M4 24h24v-2.667H4zm0-6.667h24v-2.667H4zM4 8v2.667h24V8z'/%3E%3C/svg%3E\")}.ag-icon-menu-alt:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='%23000' d='M16 26.667a2.57 2.57 0 0 1-1.883-.784A2.57 2.57 0 0 1 13.333 24q0-1.1.784-1.883A2.57 2.57 0 0 1 16 21.333q1.1 0 1.883.784.784.783.784 1.883t-.784 1.883a2.57 2.57 0 0 1-1.883.784m0-8a2.57 2.57 0 0 1-1.883-.784A2.57 2.57 0 0 1 13.333 16q0-1.1.784-1.883A2.57 2.57 0 0 1 16 13.333q1.1 0 1.883.784.784.783.784 1.883t-.784 1.883a2.57 2.57 0 0 1-1.883.784m0-8a2.57 2.57 0 0 1-1.883-.784A2.57 2.57 0 0 1 13.333 8q0-1.1.784-1.883A2.57 2.57 0 0 1 16 5.333q1.1 0 1.883.784.784.783.784 1.883t-.784 1.883a2.57 2.57 0 0 1-1.883.784'/%3E%3C/svg%3E\")}.ag-icon-minimize:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eminimize%3C/title%3E%3Cpath d='M8 25.333h16V28H8z'/%3E%3C/svg%3E\")}.ag-icon-minus:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M6.572 6.572a13.32 13.32 0 0 0 0 18.856 13.32 13.32 0 0 0 18.856 0 13.32 13.32 0 0 0 0-18.856 13.32 13.32 0 0 0-18.856 0m17.527 8.099v2.658H7.901v-2.658z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-next:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Enext%3C/title%3E%3Cpath d='m12.94 8-1.88 1.88L17.167 16l-6.107 6.12L12.94 24l8-8z'/%3E%3C/svg%3E\")}.ag-icon-none:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Enone%3C/title%3E%3Cpath d='M4 24h16v-2.667H4zM4 8v2.667h24V8zm0 9.333h24v-2.667H4z'/%3E%3C/svg%3E\")}.ag-icon-not-allowed:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Enot-allowed%3C/title%3E%3Cpath d='M16 2.667C8.64 2.667 2.667 8.64 2.667 16S8.64 29.333 16 29.333 29.333 23.36 29.333 16 23.36 2.667 16 2.667M5.333 16c0-5.893 4.773-10.667 10.667-10.667 2.467 0 4.733.84 6.533 2.253L7.586 22.533A10.54 10.54 0 0 1 5.333 16M16 26.667c-2.467 0-4.733-.84-6.533-2.253L24.414 9.467A10.54 10.54 0 0 1 26.667 16c0 5.893-4.773 10.667-10.667 10.667'/%3E%3C/svg%3E\")}.ag-icon-paste:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Epaste%3C/title%3E%3Cpath d='M25.333 4H19.76C19.2 2.453 17.733 1.333 16 1.333S12.8 2.453 12.24 4H6.667A2.675 2.675 0 0 0 4 6.667V28c0 1.467 1.2 2.667 2.667 2.667h18.667c1.467 0 2.667-1.2 2.667-2.667V6.667C28.001 5.2 26.801 4 25.334 4zM16 4c.733 0 1.333.6 1.333 1.333s-.6 1.333-1.333 1.333-1.333-.6-1.333-1.333S15.267 4 16 4m9.333 24H6.666V6.667h2.667v4h13.333v-4h2.667z'/%3E%3C/svg%3E\")}.ag-icon-pin:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Epin%3C/title%3E%3Cpath d='m11.106 22.093-4.444 4.444-1.259-1.259 4.444-4.444zm5.872-16.63 9.618 9.62-.962.962-.962-.962-7.694 3.847 1.924 1.924-2.74 2.74-7.696-7.696 2.741-2.74 1.924 1.925 3.847-7.696-.962-.962z'/%3E%3C/svg%3E\")}.ag-icon-pivot:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Epivot%3C/title%3E%3Cpath d='M26.667 30.223H5.334a3.556 3.556 0 0 1-3.556-3.556V5.334a3.556 3.556 0 0 1 3.556-3.556h21.333a3.556 3.556 0 0 1 3.556 3.556v21.333a3.556 3.556 0 0 1-3.556 3.556m-16-8.89H5.334v5.333h5.333zm16-7.11H12.444v12.444h14.223zm-9.15 6.85-2.039 2.037 2.039 2.039-1.257 1.257-3.295-3.296 3.295-3.295q.63.628 1.257 1.257zm-6.85-6.85H5.334v5.333h5.333zm15.74 3.816-1.257 1.256-2.039-2.037-2.037 2.037-1.257-1.256 3.295-3.296zM10.667 5.333H5.334v5.333h5.333zm8.889 0h-7.112v5.333h7.112zm7.111 0h-5.333v5.333h5.333z'/%3E%3C/svg%3E\")}.ag-icon-plus:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' style='fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2' viewBox='0 0 32 32'%3E%3Cpath d='M6.572 6.572a13.32 13.32 0 0 0 0 18.856 13.32 13.32 0 0 0 18.856 0 13.32 13.32 0 0 0 0-18.856 13.32 13.32 0 0 0-18.856 0m17.527 8.099v2.658h-6.77v6.77h-2.658v-6.77h-6.77v-2.658h6.77v-6.77h2.658v6.77z' style='fill-rule:nonzero'/%3E%3C/svg%3E\")}.ag-icon-previous:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eprevious%3C/title%3E%3Cpath d='M20.94 9.88 19.06 8l-8 8 8 8 1.88-1.88L14.833 16z'/%3E%3C/svg%3E\")}.ag-icon-right:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eright%3C/title%3E%3Cpath d='m16 5.333-1.88 1.88 7.44 7.453H5.333v2.667H21.56l-7.44 7.453 1.88 1.88 10.667-10.667L16 5.332z'/%3E%3C/svg%3E\")}.ag-icon-save:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Esave%3C/title%3E%3Cpath d='M25.333 16v9.333H6.666V16H3.999v9.333C3.999 26.8 5.199 28 6.666 28h18.667C26.8 28 28 26.8 28 25.333V16zm-8 .893 3.453-3.44 1.88 1.88L15.999 22l-6.667-6.667 1.88-1.88 3.453 3.44V4h2.667v12.893z'/%3E%3C/svg%3E\")}.ag-icon-small-down:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Esmall-down%3C/title%3E%3Cpath d='M9.333 12.667 16 19.334l6.667-6.667H9.334z'/%3E%3C/svg%3E\")}.ag-icon-small-left:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Esmall-left%3C/title%3E%3Cpath d='M19.333 9.333 12.666 16l6.667 6.667V9.334z'/%3E%3C/svg%3E\")}.ag-icon-small-right:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Esmall-right%3C/title%3E%3Cpath d='M12.667 22.667 19.334 16l-6.667-6.667v13.333z'/%3E%3C/svg%3E\")}.ag-icon-small-up:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Esmall-up%3C/title%3E%3Cpath d='M9.333 19.333 16 12.666l6.667 6.667H9.334z'/%3E%3C/svg%3E\")}.ag-icon-tick:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Etick%3C/title%3E%3Cpath d='m11.727 21.167-5.56-5.56-1.893 1.88 7.453 7.453 16-16-1.88-1.88z'/%3E%3C/svg%3E\")}.ag-icon-tree-closed:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Etree-closed%3C/title%3E%3Cpath d='m12.94 8-1.88 1.88L17.167 16l-6.107 6.12L12.94 24l8-8z'/%3E%3C/svg%3E\")}.ag-icon-tree-indeterminate:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Etree-indeterminate%3C/title%3E%3Cpath d='M6.667 14.667h18.667v2.667H6.667z'/%3E%3C/svg%3E\")}.ag-icon-tree-open:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Etree-open%3C/title%3E%3Cpath d='M22.12 11.06 16 17.167 9.88 11.06 8 12.94l8 8 8-8z'/%3E%3C/svg%3E\")}.ag-icon-unlinked:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Eunlinked%3C/title%3E%3Cpath d='M22.667 9.333h-5.333v2.533h5.333a4.136 4.136 0 0 1 4.133 4.133c0 1.907-1.307 3.507-3.08 3.973l1.947 1.947c2.173-1.107 3.667-3.32 3.667-5.92a6.67 6.67 0 0 0-6.667-6.667zm-1.334 5.334h-2.92l2.667 2.667h.253zM2.667 5.693 6.814 9.84A6.65 6.65 0 0 0 2.667 16a6.67 6.67 0 0 0 6.667 6.667h5.333v-2.533H9.334a4.136 4.136 0 0 1-4.133-4.133c0-2.12 1.613-3.867 3.68-4.093l2.76 2.76h-.973v2.667h3.64l3.027 3.027v2.307h2.307l5.347 5.333 1.68-1.68L4.362 4.002 2.669 5.695z'/%3E%3C/svg%3E\")}.ag-icon-up:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Easc%3C/title%3E%3Cpath d='m5.333 16 1.88 1.88 7.453-7.44v16.227h2.667V10.44l7.44 7.453L26.666 16 15.999 5.333z'/%3E%3C/svg%3E\")}.ag-icon-grip:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 32 32'%3E%3Ctitle%3Egrip%3C/title%3E%3Cpath d='M26.667 12H5.334v2.667h21.333zM5.333 20h21.333v-2.667H5.333z'/%3E%3C/svg%3E\")}.ag-icon-settings:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='%23000' d='M30 8h-4.1c-.5-2.3-2.5-4-4.9-4s-4.4 1.7-4.9 4H2v2h14.1c.5 2.3 2.5 4 4.9 4s4.4-1.7 4.9-4H30zm-9 4c-1.7 0-3-1.3-3-3s1.3-3 3-3 3 1.3 3 3-1.3 3-3 3M2 24h4.1c.5 2.3 2.5 4 4.9 4s4.4-1.7 4.9-4H30v-2H15.9c-.5-2.3-2.5-4-4.9-4s-4.4 1.7-4.9 4H2zm9-4c1.7 0 3 1.3 3 3s-1.3 3-3 3-3-1.3-3-3 1.3-3 3-3'/%3E%3C/svg%3E\")}.ag-icon-column-arrow:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M11 4a1 1 0 0 1 1 1v22a1 1 0 1 1-2 0V5a1 1 0 0 1 1-1' clip-rule='evenodd'/%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M2 13a1 1 0 0 1 1-1h23.5a1 1 0 1 1 0 2H3a1 1 0 0 1-1-1' clip-rule='evenodd'/%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M2 4h18v24H2zm2 2v20h14V6zM26.793 13 23 9.207l1.414-1.414L29.621 13l-5.207 5.207L23 16.793z' clip-rule='evenodd'/%3E%3C/svg%3E\")}.ag-icon-un-pin:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'%3E%3Cpath fill='currentColor' d='M8 11a.75.75 0 0 0-.75.75v3.333a.75.75 0 1 0 1.5 0V11.75A.75.75 0 0 0 8 11'/%3E%3Cpath fill='currentColor' d='M13.11 1.436a.75.75 0 0 0-1.22-.872l-10 14a.75.75 0 1 0 1.22.872L5.207 12.5h7.376a.75.75 0 0 0 .75-.75v-1.174a2.08 2.08 0 0 0-1.153-1.863l-1.185-.599-.005-.002a.58.58 0 0 1-.323-.522V5.165a2.083 2.083 0 0 0 1.854-2.904zm-3.943 5.52v.634a2.08 2.08 0 0 0 1.153 1.863l1.185.6.005.002a.58.58 0 0 1 .323.522V11H6.28zM9.277 1H5.25a2.084 2.084 0 0 0-.083 4.165v1.676l1.5-2.132v-.292a.75.75 0 0 0-.75-.75H5.25a.584.584 0 0 1 0-1.167h2.972z'/%3E%3C/svg%3E\")}.ag-icon-pinned-top:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'%3E%3Cpath fill='currentColor' d='M12.53 3.72A.75.75 0 0 1 12 5H4a.75.75 0 0 1 0-1.5h8a.75.75 0 0 1 .53.22M3.269 10.744a.75.75 0 0 1 .2-.524l4-4a.75.75 0 0 1 1.06 0l4 4a.75.75 0 1 1-1.06 1.06L8.75 8.56V14a.75.75 0 0 1-1.5 0V8.56l-2.72 2.72a.75.75 0 0 1-1.26-.536'/%3E%3C/svg%3E\")}.ag-icon-pinned-bottom:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'%3E%3Cpath fill='currentColor' d='M3.47 12.28A.75.75 0 0 1 4 11h8a.75.75 0 0 1 0 1.5H4a.75.75 0 0 1-.53-.22M12.731 5.256a.75.75 0 0 1-.2.524l-4 4a.75.75 0 0 1-1.06 0l-4-4a.75.75 0 1 1 1.06-1.06l2.72 2.72V2a.75.75 0 0 1 1.5 0v5.44l2.72-2.72a.75.75 0 0 1 1.26.536'/%3E%3C/svg%3E\")}.ag-icon-chevron-up:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M3.479 10.521a.75.75 0 0 1 0-1.06l4-4a.75.75 0 0 1 1.06 0l4 4a.75.75 0 0 1-1.06 1.06l-3.47-3.47-3.47 3.47a.75.75 0 0 1-1.06 0' clip-rule='evenodd'/%3E%3C/svg%3E\")}.ag-icon-chevron-down:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M12.521 5.461a.75.75 0 0 1 0 1.06l-4 4a.75.75 0 0 1-1.06 0l-4-4a.75.75 0 0 1 1.06-1.06l3.47 3.47 3.47-3.47a.75.75 0 0 1 1.06 0' clip-rule='evenodd'/%3E%3C/svg%3E\")}.ag-icon-chevron-left:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M10.53 12.512a.75.75 0 0 1-1.06 0l-4-4a.75.75 0 0 1 0-1.06l4-4a.75.75 0 0 1 1.06 1.06l-3.47 3.47 3.47 3.47a.75.75 0 0 1 0 1.06' clip-rule='evenodd'/%3E%3C/svg%3E\")}.ag-icon-chevron-right:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='none' viewBox='0 0 16 16'%3E%3Cpath fill='currentColor' fill-rule='evenodd' d='M5.47 3.47a.75.75 0 0 1 1.06 0l4 4a.75.75 0 0 1 0 1.06l-4 4a.75.75 0 0 1-1.06-1.06L8.94 8 5.47 4.53a.75.75 0 0 1 0-1.06' clip-rule='evenodd'/%3E%3C/svg%3E\")}.ag-icon-filter-add:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='currentColor' d='M18.666 24h-5.333v-2.667h5.333zM24 17.333H8v-2.667h16zm3.59-9.344h3.221v2.657h-3.22v3.22h-2.656v-3.22h-3.221V7.989h3.22V4.77h2.657zm-8.582 2.678H4V8h15.008z'/%3E%3C/svg%3E\")}.ag-icon-edit:before{mask-image:url(\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='none' viewBox='0 0 32 32'%3E%3Cpath fill='currentColor' d='M6.222 25.778h1.611l14.834-14.811-1.611-1.611-14.834 14.81zM4 28v-4.733L22.644 4.656a2.26 2.26 0 0 1 1.567-.634q.423 0 .833.167.412.166.734.478l1.589 1.6q.333.322.483.733t.15.822q0 .423-.161.839-.162.416-.472.728L8.733 28zm17.856-17.833-.8-.811 1.61 1.61z'/%3E%3C/svg%3E\")}`\r\n);\r\n\r\n// packages/ag-grid-community/src/theming/parts/icon-set/material/icon-set-material.ts\r\nvar iconSetMaterial = /* @__PURE__ */ createPart({\r\n  feature: \"iconSet\",\r\n  css: iconSetMaterialCSS\r\n});\r\n\r\n// packages/ag-grid-community/src/theming/parts/icon-set/overrides/icon-overrides.ts\r\nvar iconOverrides = (args) => {\r\n  const cssParts = [];\r\n  if (args.type === \"image\") {\r\n    const { icons, mask } = args;\r\n    for (const key of Object.keys(icons)) {\r\n      const imageCssValue = imageValueToCss(icons[key]);\r\n      if (mask) {\r\n        cssParts.push(`.ag-icon-${key}::before { mask-image: ${imageCssValue}; }`);\r\n      } else {\r\n        cssParts.push(`.ag-icon-${key}::before { background-image: ${imageCssValue}; ${unsetMaskIcon} }`);\r\n      }\r\n    }\r\n  }\r\n  if (args.type === \"font\") {\r\n    const { family, weight, color, icons } = args;\r\n    let properties = unsetMaskIcon;\r\n    if (family) {\r\n      properties += ` font-family: ${fontFamilyValueToCss(family)};`;\r\n    }\r\n    if (weight) {\r\n      properties += ` font-weight: ${fontWeightValueToCss(weight)};`;\r\n    }\r\n    if (color) {\r\n      properties += ` color: ${colorValueToCss(color)};`;\r\n    }\r\n    for (const key of Object.keys(icons)) {\r\n      cssParts.push(`.ag-icon-${key}::before { content: ${JSON.stringify(icons[key])}; ${properties} }`);\r\n    }\r\n  }\r\n  return createPart({\r\n    css: cssParts.join(\";\\n\"),\r\n    cssImports: args.cssImports\r\n  });\r\n};\r\nvar unsetMaskIcon = `background-color: unset; mask-image: unset; -webkit-mask-image: unset;`;\r\n\r\n// packages/ag-grid-community/src/theming/parts/icon-set/quartz/quartz-icon-data.ts\r\nvar iconNameToSvgFragment = {\r\n  aggregation: '<path d=\"M18 7V4H6l6 8-6 8h12v-3\"/>',\r\n  arrows: '<polyline points=\"5 9 2 12 5 15\"/><polyline points=\"9 5 12 2 15 5\"/><polyline points=\"15 19 12 22 9 19\"/><polyline points=\"19 9 22 12 19 15\"/><line x1=\"2\" x2=\"22\" y1=\"12\" y2=\"12\"/><line x1=\"12\" x2=\"12\" y1=\"2\" y2=\"22\"/>',\r\n  asc: '<path d=\"m5 12 7-7 7 7\"/><path d=\"M12 19V5\"/>',\r\n  cancel: '<path d=\"m18 6-12 12\"/><path d=\"m6 6 12 12\"/>',\r\n  chart: '<line x1=\"18\" x2=\"18\" y1=\"20\" y2=\"10\"/><line x1=\"12\" x2=\"12\" y1=\"20\" y2=\"4\"/><line x1=\"6\" x2=\"6\" y1=\"20\" y2=\"14\"/>',\r\n  \"color-picker\": '<path d=\"m19 11-8-8-8.6 8.6a2 2 0 0 0 0 2.8l5.2 5.2c.8.8 2 .8 2.8 0L19 11Z\"/><path d=\"m5 2 5 5\"/><path d=\"M2 13h15\"/><path d=\"M22 20a2 2 0 1 1-4 0c0-1.6 1.7-2.4 2-4 .3 1.6 2 2.4 2 4Z\"/>',\r\n  columns: '<path d=\"M9 3H5a2 2 0 0 0-2 2v4m6-6h10a2 2 0 0 1 2 2v4M9 3v18m0 0h10a2 2 0 0 0 2-2V9M9 21H5a2 2 0 0 1-2-2V9m0 0h18\"/>',\r\n  contracted: '<path d=\"m9 18 6-6-6-6\"/>',\r\n  copy: '<rect width=\"14\" height=\"14\" x=\"8\" y=\"8\" rx=\"2\" ry=\"2\"/><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"/>',\r\n  cross: '<path d=\"M18 6 6 18\"/><path d=\"m6 6 12 12\"/>',\r\n  csv: '<path d=\"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\"/><polyline points=\"14 2 14 8 20 8\"/><path d=\"M8 13h2\"/><path d=\"M8 17h2\"/><path d=\"M14 13h2\"/><path d=\"M14 17h2\"/>',\r\n  cut: '<circle cx=\"6\" cy=\"6\" r=\"3\"/><path d=\"M8.12 8.12 12 12\"/><path d=\"M20 4 8.12 15.88\"/><circle cx=\"6\" cy=\"18\" r=\"3\"/><path d=\"M14.8 14.8 20 20\"/>',\r\n  desc: '<path d=\"M12 5v14\"/><path d=\"m19 12-7 7-7-7\"/>',\r\n  down: '<path d=\"M12 5v14\"/><path d=\"m19 12-7 7-7-7\"/>',\r\n  excel: '<path d=\"M14.5 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7.5L14.5 2z\"/><polyline points=\"14 2 14 8 20 8\"/><path d=\"M8 13h2\"/><path d=\"M8 17h2\"/><path d=\"M14 13h2\"/><path d=\"M14 17h2\"/>',\r\n  expanded: '<path d=\"m15 18-6-6 6-6\"/>',\r\n  \"eye-slash\": '<path d=\"M9.88 9.88a3 3 0 1 0 4.24 4.24\"/><path d=\"M10.73 5.08A10.43 10.43 0 0 1 12 5c7 0 10 7 10 7a13.16 13.16 0 0 1-1.67 2.68\"/><path d=\"M6.61 6.61A13.526 13.526 0 0 0 2 12s3 7 10 7a9.74 9.74 0 0 0 5.39-1.61\"/><line x1=\"2\" x2=\"22\" y1=\"2\" y2=\"22\"/>',\r\n  eye: '<path d=\"M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z\"/><circle cx=\"12\" cy=\"12\" r=\"3\"/>',\r\n  filter: '<path d=\"M3 6h18\"/><path d=\"M7 12h10\"/><path d=\"M10 18h4\"/>',\r\n  first: '<path d=\"m17 18-6-6 6-6\"/><path d=\"M7 6v12\"/>',\r\n  group: '<path d=\"M16 12H3\"/><path d=\"M16 18H3\"/><path d=\"M10 6H3\"/><path d=\"M21 18V8a2 2 0 0 0-2-2h-5\"/><path d=\"m16 8-2-2 2-2\"/>',\r\n  last: '<path d=\"m7 18 6-6-6-6\"/><path d=\"M17 6v12\"/>',\r\n  left: '<path d=\"m12 19-7-7 7-7\"/><path d=\"M19 12H5\"/>',\r\n  linked: '<path d=\"M9 17H7A5 5 0 0 1 7 7h2\"/><path d=\"M15 7h2a5 5 0 1 1 0 10h-2\"/><line x1=\"8\" x2=\"16\" y1=\"12\" y2=\"12\"/>',\r\n  loading: '<line x1=\"12\" x2=\"12\" y1=\"2\" y2=\"6\"/><line x1=\"12\" x2=\"12\" y1=\"18\" y2=\"22\"/><line x1=\"4.93\" x2=\"7.76\" y1=\"4.93\" y2=\"7.76\"/><line x1=\"16.24\" x2=\"19.07\" y1=\"16.24\" y2=\"19.07\"/><line x1=\"2\" x2=\"6\" y1=\"12\" y2=\"12\"/><line x1=\"18\" x2=\"22\" y1=\"12\" y2=\"12\"/><line x1=\"4.93\" x2=\"7.76\" y1=\"19.07\" y2=\"16.24\"/><line x1=\"16.24\" x2=\"19.07\" y1=\"7.76\" y2=\"4.93\"/>',\r\n  maximize: '<polyline points=\"15 3 21 3 21 9\"/><polyline points=\"9 21 3 21 3 15\"/><line x1=\"21\" x2=\"14\" y1=\"3\" y2=\"10\"/><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"/>',\r\n  menu: '<line x1=\"4\" x2=\"20\" y1=\"12\" y2=\"12\"/><line x1=\"4\" x2=\"20\" y1=\"6\" y2=\"6\"/><line x1=\"4\" x2=\"20\" y1=\"18\" y2=\"18\"/>',\r\n  \"menu-alt\": '<circle cx=\"12\" cy=\"5\" r=\"0.75\" fill=\"#D9D9D9\"/><circle cx=\"12\" cy=\"12\" r=\"0.75\" fill=\"#D9D9D9\"/><circle cx=\"12\" cy=\"19\" r=\"0.75\" fill=\"#D9D9D9\"/>',\r\n  minimize: '<polyline points=\"4 14 10 14 10 20\"/><polyline points=\"20 10 14 10 14 4\"/><line x1=\"14\" x2=\"21\" y1=\"10\" y2=\"3\"/><line x1=\"3\" x2=\"10\" y1=\"21\" y2=\"14\"/>',\r\n  minus: '<circle cx=\"12\" cy=\"12\" r=\"10\"/><path d=\"M8 12h8\"/>',\r\n  next: '<path d=\"m9 18 6-6-6-6\"/>',\r\n  none: '<path d=\"m7 15 5 5 5-5\"/><path d=\"m7 9 5-5 5 5\"/>',\r\n  \"not-allowed\": '<circle cx=\"12\" cy=\"12\" r=\"10\"/><path d=\"m4.9 4.9 14.2 14.2\"/>',\r\n  paste: '<path d=\"M15 2H9a1 1 0 0 0-1 1v2c0 .6.4 1 1 1h6c.6 0 1-.4 1-1V3c0-.6-.4-1-1-1Z\"/><path d=\"M8 4H6a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2M16 4h2a2 2 0 0 1 2 2v2M11 14h10\"/><path d=\"m17 10 4 4-4 4\"/>',\r\n  pin: '<line x1=\"12\" x2=\"12\" y1=\"17\" y2=\"22\"/><path d=\"M5 17h14v-1.76a2 2 0 0 0-1.11-1.79l-1.78-.9A2 2 0 0 1 15 10.76V6h1a2 2 0 0 0 0-4H8a2 2 0 0 0 0 4h1v4.76a2 2 0 0 1-1.11 1.79l-1.78.9A2 2 0 0 0 5 15.24Z\"/>',\r\n  pivot: '<path d=\"M15 3v18\"/><rect width=\"18\" height=\"18\" x=\"3\" y=\"3\" rx=\"2\"/><path d=\"M21 9H3\"/><path d=\"M21 15H3\"/>',\r\n  plus: '<circle cx=\"12\" cy=\"12\" r=\"10\"/><path d=\"M8 12h8\"/><path d=\"M12 8v8\"/>',\r\n  previous: '<path d=\"m15 18-6-6 6-6\"/>',\r\n  right: '<path d=\"M5 12h14\"/><path d=\"m12 5 7 7-7 7\"/>',\r\n  save: '<path d=\"M12 17V3\"/><path d=\"m6 11 6 6 6-6\"/><path d=\"M19 21H5\"/>',\r\n  \"small-left\": '<path d=\"m15 18-6-6 6-6\"/>',\r\n  \"small-right\": '<path d=\"m9 18 6-6-6-6\"/>',\r\n  tick: '<path d=\"M20 6 9 17l-5-5\"/>',\r\n  \"tree-closed\": '<path d=\"m9 18 6-6-6-6\"/>',\r\n  \"tree-indeterminate\": '<path d=\"M5 12h14\"/>',\r\n  \"tree-open\": '<path d=\"m6 9 6 6 6-6\"/>',\r\n  unlinked: '<path d=\"M9 17H7A5 5 0 0 1 7 7\"/><path d=\"M15 7h2a5 5 0 0 1 4 8\"/><line x1=\"8\" x2=\"12\" y1=\"12\" y2=\"12\"/><line x1=\"2\" x2=\"22\" y1=\"2\" y2=\"22\"/>',\r\n  up: '<path d=\"m5 12 7-7 7 7\"/><path d=\"M12 19V5\"/>',\r\n  grip: '<circle cx=\"5\" cy=\"8\" r=\"0.5\"/><circle cx=\"12\" cy=\"8\" r=\"0.5\"/><circle cx=\"19\" cy=\"8\" r=\"0.5\"/><circle cx=\"5\" cy=\"16\" r=\"0.5\"/><circle cx=\"12\" cy=\"16\" r=\"0.5\"/><circle cx=\"19\" cy=\"16\" r=\"0.5\"/><g stroke=\"none\" fill=\"currentColor\"><circle cx=\"5\" cy=\"8\" r=\"1\"/><circle cx=\"12\" cy=\"8\" r=\"1\"/><circle cx=\"19\" cy=\"8\" r=\"1\"/><circle cx=\"5\" cy=\"16\" r=\"1\"/><circle cx=\"12\" cy=\"16\" r=\"1\"/><circle cx=\"19\" cy=\"16\" r=\"1\"/></g>',\r\n  settings: '<path d=\"M20 7h-9\"/><path d=\"M14 17H5\"/><circle cx=\"17\" cy=\"17\" r=\"3\"/><circle cx=\"7\" cy=\"7\" r=\"3\"/>'\r\n};\r\nvar iconNameToFullSvg = {\r\n  \"column-arrow\": '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"ag-icon\" fill=\"none\" viewBox=\"0 0 32 32\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 26C0 28.2092 1.79086 30 4 30H14C16.2091 30 18 28.2092 18 26V15H25.8786L24.4394 16.4393C23.8536 17.0251 23.8536 17.9749 24.4394 18.5607C25.0252 19.1464 25.9748 19.1464 26.5606 18.5607L30.5606 14.5607C31.1464 13.9749 31.1464 13.0251 30.5606 12.4393L26.5606 8.43934C25.9748 7.85356 25.0252 7.85356 24.4394 8.43934C23.8536 9.02512 23.8536 9.97488 24.4394 10.5607L25.8786 12H18V6C18 3.79086 16.2091 2 14 2H4C1.79086 2 0 3.79086 0 6V26ZM14 5H10.5V12H15V6C15 5.44772 14.5523 5 14 5ZM4 5H7.5V12H3V6C3 5.44772 3.44772 5 4 5ZM10.5 15H15V26C15 26.5522 14.5523 27 14 27H10.5V15ZM4 27H7.5V15H3V26C3 26.5522 3.44772 27 4 27Z\" fill=\"currentColor\"/></svg>',\r\n  \"small-down\": '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"ag-icon\" fill=\"black\" stroke=\"none\" viewBox=\"0 0 32 32\"><path d=\"M7.334 10.667 16 21.334l8.667-10.667H7.334Z\"/></svg>',\r\n  \"small-up\": '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"ag-icon\" fill=\"black\" stroke=\"none\" viewBox=\"0 0 32 32\"><path d=\"M7.334 21.333 16 10.666l8.667 10.667H7.334Z\"/></svg>',\r\n  \"pinned-top\": '<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"ag-icon\" fill=\"none\" viewBox=\"0 0 16 16\"><path fill=\"currentColor\" d=\"M12.53 3.72A.75.75 0 0 1 12 5H4a.75.75 0 0 1 0-1.5h8a.75.75 0 0 1 .53.22ZM3.269 10.744a.75.75 0 0 1 .2-.524l4-4a.75.75 0 0 1 1.06 0l4 4a.75.75 0 1 1-1.06 1.06L8.75 8.56V14a.75.75 0 0 1-1.5 0V8.56l-2.72 2.72a.75.75 0 0 1-1.26-.536Z\"/></svg>',\r\n  \"pinned-bottom\": '<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" class=\"ag-icon\" viewBox=\"0 0 16 16\"><path fill=\"currentColor\" d=\"M3.47 12.28A.75.75 0 0 1 4 11h8a.75.75 0 0 1 0 1.5H4a.75.75 0 0 1-.53-.22ZM12.731 5.256a.75.75 0 0 1-.2.524l-4 4a.75.75 0 0 1-1.06 0l-4-4a.75.75 0 1 1 1.06-1.06l2.72 2.72V2a.75.75 0 0 1 1.5 0v5.44l2.72-2.72a.75.75 0 0 1 1.26.536Z\"/></svg>',\r\n  \"un-pin\": '<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" class=\"ag-icon\" viewBox=\"0 0 16 16\"><path fill=\"currentColor\" d=\"M8 11a.75.75 0 0 0-.75.75v3.333a.75.75 0 1 0 1.5 0V11.75A.75.75 0 0 0 8 11Z\"/><path fill=\"currentColor\" d=\"M13.11 1.436a.75.75 0 0 0-1.22-.872l-10 14a.75.75 0 1 0 1.22.872L5.207 12.5h7.376a.75.75 0 0 0 .75-.75v-1.174a2.08 2.08 0 0 0-1.153-1.863l-1.185-.599-.005-.002a.58.58 0 0 1-.323-.522V5.165a2.083 2.083 0 0 0 1.854-2.904l.589-.825Zm-3.943 5.52v.634a2.08 2.08 0 0 0 1.153 1.863l1.185.6.005.002a.58.58 0 0 1 .323.522V11H6.28l2.887-4.044ZM9.277 1H5.25a2.084 2.084 0 0 0-.083 4.165v1.676l1.5-2.132v-.292a.75.75 0 0 0-.75-.75H5.25a.584.584 0 0 1 0-1.167h2.972L9.277 1Z\"/></svg>',\r\n  \"chevron-down\": '<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"ag-icon\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 6L8 10L4 6\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>',\r\n  \"chevron-up\": '<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"ag-icon\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M4 10L8 6L12 10\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>',\r\n  \"chevron-left\": '<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"ag-icon\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 12L6 8L10 4\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>',\r\n  \"chevron-right\": '<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"ag-icon\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M6 12L10 8L6 4\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>',\r\n  \"filter-add\": '<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" class=\"ag-icon\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M5.12126 7.75L10.8517 7.75\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\"/><path d=\"M6.65934 11.748L9.32778 11.748\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\"/><path d=\"M12.2943 1.04872V6.19184M14.9886 3.74341H9.68478\" stroke=\"currentColor\" stroke-width=\"1.5\" stroke-linecap=\"round\"/><path d=\"M8.25488 3C8.04799 3.18323 7.91706 3.45099 7.91699 3.74902C7.91713 4.04868 8.04988 4.31681 8.25879 4.5H2C1.58579 4.5 1.25 4.16421 1.25 3.75C1.25 3.33579 1.58579 3 2 3H8.25488Z\" fill=\"currentColor\"/></svg>',\r\n  edit: '<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M3.5 10.6262V12.5012H5.375L10.905 6.97122L9.03 5.09622L3.5 10.6262ZM12.355 5.52122C12.4014 5.47497 12.4381 5.42002 12.4632 5.35953C12.4883 5.29905 12.5012 5.23421 12.5012 5.16872C12.5012 5.10324 12.4883 5.0384 12.4632 4.97791C12.4381 4.91742 12.4014 4.86248 12.355 4.81622L11.185 3.64622C11.1387 3.59987 11.0838 3.5631 11.0233 3.53801C10.9628 3.51291 10.898 3.5 10.8325 3.5C10.767 3.5 10.7022 3.51291 10.6417 3.53801C10.5812 3.5631 10.5263 3.59987 10.48 3.64622L9.565 4.56122L11.44 6.43622L12.355 5.52122Z\" fill=\"currentColor\"/></svg>'\r\n};\r\nvar getQuartzIconsCss = (args = {}) => {\r\n  let result = \"\";\r\n  for (const iconName of [...Object.keys(iconNameToSvgFragment), ...Object.keys(iconNameToFullSvg)]) {\r\n    const iconSvg = quartzIconSvg(iconName, args.strokeWidth);\r\n    result += `.ag-icon-${iconName}::before { mask-image: url('data:image/svg+xml,${encodeURIComponent(iconSvg)}'); }\r\n`;\r\n  }\r\n  return result;\r\n};\r\nvar quartzIconSvg = (name, strokeWidth = 1.5) => {\r\n  const fullSVG = iconNameToFullSvg[name];\r\n  if (fullSVG)\r\n    return fullSVG;\r\n  const svgFragment = iconNameToSvgFragment[name];\r\n  if (!svgFragment)\r\n    throw new Error(`Missing icon data for ${name}`);\r\n  return `<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"ag-icon\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke=\"black\" stroke-width=\"${strokeWidth}\" viewBox=\"0 0 24 24\"><style>* { vector-effect: non-scaling-stroke; }</style>` + svgFragment + \"</svg>\";\r\n};\r\n\r\n// packages/ag-grid-community/src/theming/parts/icon-set/quartz/icon-set-quartz.ts\r\nvar iconSetQuartz = (args = {}) => {\r\n  return createPart({\r\n    feature: \"iconSet\",\r\n    css: () => getQuartzIconsCss(args)\r\n  });\r\n};\r\nvar iconSetQuartzLight = /* @__PURE__ */ iconSetQuartz({ strokeWidth: 1 });\r\nvar iconSetQuartzRegular = /* @__PURE__ */ iconSetQuartz();\r\nvar iconSetQuartzBold = /* @__PURE__ */ iconSetQuartz({ strokeWidth: 2 });\r\n\r\n// packages/ag-grid-community/src/theming/parts/input-style/input-style-base.css-GENERATED.ts\r\nvar inputStyleBaseCSS = (\r\n  /*css*/\r\n  `:where(.ag-input-field-input[type=number]:not(.ag-number-field-input-stepper)){-webkit-appearance:textfield;-moz-appearance:textfield;appearance:textfield;&::-webkit-inner-spin-button,&::-webkit-outer-spin-button{-webkit-appearance:none;appearance:none;margin:0}}.ag-input-field-input:where(input:not([type]),input[type=text],input[type=number],input[type=tel],input[type=date],input[type=datetime-local],textarea){background-color:var(--ag-input-background-color);border:var(--ag-input-border);border-radius:var(--ag-input-border-radius);color:var(--ag-input-text-color);font-family:inherit;font-size:inherit;line-height:inherit;margin:0;min-height:var(--ag-input-height);padding:0;&:where(:disabled){background-color:var(--ag-input-disabled-background-color);border:var(--ag-input-disabled-border);color:var(--ag-input-disabled-text-color)}&:where(:focus){background-color:var(--ag-input-focus-background-color);border:var(--ag-input-focus-border);box-shadow:var(--ag-input-focus-shadow);color:var(--ag-input-focus-text-color);outline:none}&:where(:invalid){background-color:var(--ag-input-invalid-background-color);border:var(--ag-input-invalid-border);color:var(--ag-input-invalid-text-color)}&:where(.invalid){background-color:var(--ag-input-invalid-background-color);border:var(--ag-input-invalid-border);color:var(--ag-input-invalid-text-color)}&::-moz-placeholder{color:var(--ag-input-placeholder-text-color)}&::placeholder{color:var(--ag-input-placeholder-text-color)}}:where(.ag-ltr) .ag-input-field-input:where(input:not([type]),input[type=text],input[type=number],input[type=tel],input[type=date],input[type=datetime-local],textarea){padding-left:var(--ag-input-padding-start)}:where(.ag-rtl) .ag-input-field-input:where(input:not([type]),input[type=text],input[type=number],input[type=tel],input[type=date],input[type=datetime-local],textarea){padding-right:var(--ag-input-padding-start)}:where(.ag-column-select-header-filter-wrapper,.ag-filter-toolpanel-search,.ag-mini-filter,.ag-filter-filter,.ag-filter-add-select){.ag-input-wrapper:before{background-color:currentcolor;color:var(--ag-input-icon-color);content:\"\";display:block;height:12px;-webkit-mask-image:url(\"data:image/svg+xml;charset=utf-8;base64,PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxMiIgaGVpZ2h0PSIxMiIgZmlsbD0ibm9uZSIgc3Ryb2tlPSIjMDAwIiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiIHN0cm9rZS13aWR0aD0iMS41Ij48cGF0aCBkPSJNNS4zIDlhMy43IDMuNyAwIDEgMCAwLTcuNSAzLjcgMy43IDAgMCAwIDAgNy41Wk0xMC41IDEwLjUgOC4zIDguMiIvPjwvc3ZnPg==\");mask-image:url(\"data:image/svg+xml;charset=utf-8;base64,PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxMiIgaGVpZ2h0PSIxMiIgZmlsbD0ibm9uZSIgc3Ryb2tlPSIjMDAwIiBzdHJva2UtbGluZWNhcD0icm91bmQiIHN0cm9rZS1saW5lam9pbj0icm91bmQiIHN0cm9rZS13aWR0aD0iMS41Ij48cGF0aCBkPSJNNS4zIDlhMy43IDMuNyAwIDEgMCAwLTcuNSAzLjcgMy43IDAgMCAwIDAgNy41Wk0xMC41IDEwLjUgOC4zIDguMiIvPjwvc3ZnPg==\");-webkit-mask-position:center;mask-position:center;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;opacity:.5;position:absolute;width:12px}}:where(.ag-ltr) :where(.ag-column-select-header-filter-wrapper,.ag-filter-toolpanel-search,.ag-mini-filter,.ag-filter-filter,.ag-filter-add-select){.ag-input-wrapper:before{margin-left:var(--ag-spacing)}.ag-number-field-input,.ag-text-field-input{padding-left:calc(var(--ag-spacing)*1.5 + 12px)}}:where(.ag-rtl) :where(.ag-column-select-header-filter-wrapper,.ag-filter-toolpanel-search,.ag-mini-filter,.ag-filter-filter,.ag-filter-add-select){.ag-input-wrapper:before{margin-right:var(--ag-spacing)}.ag-number-field-input,.ag-text-field-input{padding-right:calc(var(--ag-spacing)*1.5 + 12px)}}`\r\n);\r\n\r\n// packages/ag-grid-community/src/theming/parts/input-style/input-style-bordered.css-GENERATED.ts\r\nvar inputStyleBorderedCSS = (\r\n  /*css*/\r\n  `.ag-input-field-input:where(input:not([type]),input[type=text],input[type=number],input[type=tel],input[type=date],input[type=datetime-local],textarea){&:focus{box-shadow:var(--ag-focus-shadow);&:where(.invalid),&:where(:invalid){box-shadow:var(--ag-focus-error-shadow)}}}`\r\n);\r\n\r\n// packages/ag-grid-community/src/theming/parts/input-style/input-style-underlined.css-GENERATED.ts\r\nvar inputStyleUnderlinedCSS = (\r\n  /*css*/\r\n  `.ag-input-field-input:where(input:not([type]),input[type=text],input[type=number],input[type=tel],input[type=date],input[type=datetime-local],textarea){border-left:none;border-right:none;border-top:none}`\r\n);\r\n\r\n// packages/ag-grid-community/src/theming/parts/input-style/input-styles.ts\r\nvar baseParams3 = {\r\n  inputBackgroundColor: \"transparent\",\r\n  inputBorder: false,\r\n  inputBorderRadius: 0,\r\n  inputTextColor: {\r\n    ref: \"textColor\"\r\n  },\r\n  inputPlaceholderTextColor: {\r\n    ref: \"inputTextColor\",\r\n    mix: 0.5\r\n  },\r\n  inputPaddingStart: 0,\r\n  inputHeight: {\r\n    calc: \"max(iconSize, fontSize) + spacing * 2\"\r\n  },\r\n  inputFocusBackgroundColor: {\r\n    ref: \"inputBackgroundColor\"\r\n  },\r\n  inputFocusBorder: {\r\n    ref: \"inputBorder\"\r\n  },\r\n  inputFocusShadow: \"none\",\r\n  inputFocusTextColor: {\r\n    ref: \"inputTextColor\"\r\n  },\r\n  inputDisabledBackgroundColor: {\r\n    ref: \"inputBackgroundColor\"\r\n  },\r\n  inputDisabledBorder: {\r\n    ref: \"inputBorder\"\r\n  },\r\n  inputDisabledTextColor: {\r\n    ref: \"inputTextColor\"\r\n  },\r\n  inputInvalidBackgroundColor: {\r\n    ref: \"inputBackgroundColor\"\r\n  },\r\n  inputInvalidBorder: {\r\n    ref: \"inputBorder\"\r\n  },\r\n  inputInvalidTextColor: {\r\n    ref: \"inputTextColor\"\r\n  },\r\n  inputIconColor: {\r\n    ref: \"inputTextColor\"\r\n  },\r\n  pickerButtonBorder: false,\r\n  pickerButtonFocusBorder: { ref: \"inputFocusBorder\" },\r\n  pickerButtonBackgroundColor: { ref: \"backgroundColor\" },\r\n  pickerButtonFocusBackgroundColor: { ref: \"backgroundColor\" },\r\n  pickerListBorder: false,\r\n  pickerListBackgroundColor: { ref: \"backgroundColor\" },\r\n  colorPickerThumbSize: 18,\r\n  colorPickerTrackSize: 12,\r\n  colorPickerThumbBorderWidth: 3,\r\n  colorPickerTrackBorderRadius: 12,\r\n  colorPickerColorBorderRadius: 4\r\n};\r\nvar makeInputStyleBaseTreeShakeable = () => createPart({\r\n  feature: \"inputStyle\",\r\n  params: baseParams3,\r\n  css: inputStyleBaseCSS\r\n});\r\nvar inputStyleBase = /* @__PURE__ */ makeInputStyleBaseTreeShakeable();\r\nvar makeInputStyleBorderedTreeShakeable = () => createPart({\r\n  feature: \"inputStyle\",\r\n  params: {\r\n    ...baseParams3,\r\n    inputBackgroundColor: backgroundColor,\r\n    inputBorder: true,\r\n    inputBorderRadius: {\r\n      ref: \"borderRadius\"\r\n    },\r\n    inputPaddingStart: {\r\n      ref: \"spacing\"\r\n    },\r\n    inputFocusBorder: {\r\n      color: accentColor\r\n    },\r\n    inputFocusShadow: {\r\n      ref: \"focusShadow\"\r\n    },\r\n    inputDisabledBackgroundColor: foregroundBackgroundMix(0.06),\r\n    inputDisabledTextColor: {\r\n      ref: \"textColor\",\r\n      mix: 0.5\r\n    },\r\n    inputInvalidBorder: {\r\n      color: { ref: \"invalidColor\" }\r\n    },\r\n    pickerButtonBorder: true,\r\n    pickerListBorder: true\r\n  },\r\n  css: () => inputStyleBaseCSS + inputStyleBorderedCSS\r\n});\r\nvar inputStyleBordered = /* @__PURE__ */ makeInputStyleBorderedTreeShakeable();\r\nvar makeInputStyleUnderlinedTreeShakeable = () => createPart({\r\n  feature: \"inputStyle\",\r\n  params: {\r\n    ...baseParams3,\r\n    inputBackgroundColor: \"transparent\",\r\n    inputBorder: {\r\n      width: 2,\r\n      color: foregroundMix(0.3)\r\n    },\r\n    inputPaddingStart: {\r\n      ref: \"spacing\"\r\n    },\r\n    inputFocusBorder: \"solid 2px var(--ag-accent-color)\",\r\n    inputDisabledTextColor: {\r\n      ref: \"textColor\",\r\n      mix: 0.5\r\n    },\r\n    inputDisabledBorder: \"solid 1px var(--ag-border-color)\",\r\n    inputInvalidBorder: {\r\n      width: 2,\r\n      color: {\r\n        ref: \"invalidColor\",\r\n        mix: 0.3\r\n      }\r\n    }\r\n  },\r\n  css: () => inputStyleBaseCSS + inputStyleUnderlinedCSS\r\n});\r\nvar inputStyleUnderlined = /* @__PURE__ */ makeInputStyleUnderlinedTreeShakeable();\r\n\r\n// packages/ag-grid-community/src/theming/parts/tab-style/tab-style-base.css-GENERATED.ts\r\nvar tabStyleBaseCSS = (\r\n  /*css*/\r\n  `.ag-tabs-header{background-color:var(--ag-tab-bar-background-color);border-bottom:var(--ag-tab-bar-border);display:flex;flex:1;gap:var(--ag-tab-spacing);padding:var(--ag-tab-bar-top-padding) var(--ag-tab-bar-horizontal-padding) 0}.ag-tabs-header-wrapper{display:flex}.ag-tabs-close-button-wrapper{align-items:center;border:0;display:flex;padding:var(--ag-spacing)}:where(.ag-ltr) .ag-tabs-close-button-wrapper{border-right:solid var(--ag-border-width) var(--ag-border-color)}:where(.ag-rtl) .ag-tabs-close-button-wrapper{border-left:solid var(--ag-border-width) var(--ag-border-color)}.ag-tabs-close-button{background-color:unset;border:0;cursor:pointer;padding:0}.ag-tab{align-items:center;background-color:var(--ag-tab-background-color);border-left:var(--ag-tab-selected-border-width) solid transparent;border-right:var(--ag-tab-selected-border-width) solid transparent;color:var(--ag-tab-text-color);cursor:pointer;display:flex;flex:1;justify-content:center;padding:var(--ag-tab-top-padding) var(--ag-tab-horizontal-padding) var(--ag-tab-bottom-padding);position:relative;&:hover{background-color:var(--ag-tab-hover-background-color);color:var(--ag-tab-hover-text-color)}&.ag-tab-selected{background-color:var(--ag-tab-selected-background-color);color:var(--ag-tab-selected-text-color)}&:after{background-color:var(--ag-tab-selected-underline-color);bottom:0;content:\"\";display:block;height:var(--ag-tab-selected-underline-width);left:0;opacity:0;position:absolute;right:0;transition:opacity var(--ag-tab-selected-underline-transition-duration)}&.ag-tab-selected:after{opacity:1}}:where(.ag-ltr) .ag-tab{&.ag-tab-selected{&:where(:not(:first-of-type)){border-left-color:var(--ag-tab-selected-border-color)}&:where(:not(:last-of-type)){border-right-color:var(--ag-tab-selected-border-color)}}}:where(.ag-rtl) .ag-tab{&.ag-tab-selected{&:where(:not(:first-of-type)){border-right-color:var(--ag-tab-selected-border-color)}&:where(:not(:last-of-type)){border-left-color:var(--ag-tab-selected-border-color)}}}`\r\n);\r\n\r\n// packages/ag-grid-community/src/theming/parts/tab-style/tab-style-rolodex.css-GENERATED.ts\r\nvar tabStyleRolodexCSS = (\r\n  /*css*/\r\n  `.ag-tab{border-left:var(--ag-tab-selected-border-width) solid transparent;border-right:var(--ag-tab-selected-border-width) solid transparent;border-top:var(--ag-tab-selected-border-width) solid transparent;flex:none;&.ag-tab-selected{border-left-color:var(--ag-tab-selected-border-color);border-right-color:var(--ag-tab-selected-border-color);border-top-color:var(--ag-tab-selected-border-color);margin-bottom:-1px;padding-bottom:calc(var(--ag-tab-bottom-padding) + 1px)}}`\r\n);\r\n\r\n// packages/ag-grid-community/src/theming/parts/tab-style/tab-styles.ts\r\nvar baseParams4 = {\r\n  tabBarBackgroundColor: \"transparent\",\r\n  tabBarHorizontalPadding: 0,\r\n  tabBarTopPadding: 0,\r\n  tabBackgroundColor: \"transparent\",\r\n  tabTextColor: {\r\n    ref: \"textColor\"\r\n  },\r\n  tabHorizontalPadding: {\r\n    ref: \"spacing\"\r\n  },\r\n  tabTopPadding: {\r\n    ref: \"spacing\"\r\n  },\r\n  tabBottomPadding: {\r\n    ref: \"spacing\"\r\n  },\r\n  tabSpacing: \"0\",\r\n  tabHoverBackgroundColor: {\r\n    ref: \"tabBackgroundColor\"\r\n  },\r\n  tabHoverTextColor: {\r\n    ref: \"tabTextColor\"\r\n  },\r\n  tabSelectedBackgroundColor: {\r\n    ref: \"tabBackgroundColor\"\r\n  },\r\n  tabSelectedTextColor: {\r\n    ref: \"tabTextColor\"\r\n  },\r\n  tabSelectedBorderWidth: { ref: \"borderWidth\" },\r\n  tabSelectedBorderColor: \"transparent\",\r\n  tabSelectedUnderlineColor: \"transparent\",\r\n  tabSelectedUnderlineWidth: 0,\r\n  tabSelectedUnderlineTransitionDuration: 0,\r\n  tabBarBorder: false\r\n};\r\nvar makeTabStyleBaseTreeShakeable = () => createPart({\r\n  feature: \"tabStyle\",\r\n  params: baseParams4,\r\n  css: tabStyleBaseCSS\r\n});\r\nvar tabStyleBase = /* @__PURE__ */ makeTabStyleBaseTreeShakeable();\r\nvar makeTabStyleQuartzTreeShakeable = () => createPart({\r\n  feature: \"tabStyle\",\r\n  params: {\r\n    ...baseParams4,\r\n    tabBarBorder: true,\r\n    tabBarBackgroundColor: foregroundMix(0.05),\r\n    tabTextColor: {\r\n      ref: \"textColor\",\r\n      mix: 0.7\r\n    },\r\n    tabSelectedTextColor: {\r\n      ref: \"textColor\"\r\n    },\r\n    tabHoverTextColor: {\r\n      ref: \"textColor\"\r\n    },\r\n    tabSelectedBorderColor: {\r\n      ref: \"borderColor\"\r\n    },\r\n    tabSelectedBackgroundColor: backgroundColor\r\n  },\r\n  css: tabStyleBaseCSS\r\n});\r\nvar tabStyleQuartz = /* @__PURE__ */ makeTabStyleQuartzTreeShakeable();\r\nvar makeTabStyleMaterialTreeShakeable = () => createPart({\r\n  feature: \"tabStyle\",\r\n  params: {\r\n    ...baseParams4,\r\n    tabBarBackgroundColor: {\r\n      ref: \"chromeBackgroundColor\"\r\n    },\r\n    tabSelectedUnderlineColor: {\r\n      ref: \"primaryColor\"\r\n    },\r\n    tabSelectedUnderlineWidth: 2,\r\n    tabSelectedUnderlineTransitionDuration: 0\r\n  },\r\n  css: tabStyleBaseCSS\r\n});\r\nvar tabStyleMaterial = /* @__PURE__ */ makeTabStyleMaterialTreeShakeable();\r\nvar makeTabStyleAlpineTreeShakeable = () => createPart({\r\n  feature: \"tabStyle\",\r\n  params: {\r\n    ...baseParams4,\r\n    tabBarBorder: true,\r\n    tabBarBackgroundColor: {\r\n      ref: \"chromeBackgroundColor\"\r\n    },\r\n    tabHoverTextColor: accentColor,\r\n    tabSelectedTextColor: accentColor,\r\n    tabSelectedUnderlineColor: accentColor,\r\n    tabSelectedUnderlineWidth: 2,\r\n    tabSelectedUnderlineTransitionDuration: \"0.3s\"\r\n  },\r\n  css: tabStyleBaseCSS\r\n});\r\nvar tabStyleAlpine = /* @__PURE__ */ makeTabStyleAlpineTreeShakeable();\r\nvar makeTabStyleRolodexTreeShakeable = () => createPart({\r\n  feature: \"tabStyle\",\r\n  params: {\r\n    ...baseParams4,\r\n    tabBarBackgroundColor: {\r\n      ref: \"chromeBackgroundColor\"\r\n    },\r\n    tabBarHorizontalPadding: {\r\n      ref: \"spacing\"\r\n    },\r\n    tabBarTopPadding: {\r\n      ref: \"spacing\"\r\n    },\r\n    tabBarBorder: true,\r\n    tabHorizontalPadding: { calc: \"spacing * 2\" },\r\n    tabTopPadding: {\r\n      ref: \"spacing\"\r\n    },\r\n    tabBottomPadding: {\r\n      ref: \"spacing\"\r\n    },\r\n    tabSpacing: {\r\n      ref: \"spacing\"\r\n    },\r\n    tabSelectedBorderColor: {\r\n      ref: \"borderColor\"\r\n    },\r\n    tabSelectedBackgroundColor: backgroundColor\r\n  },\r\n  css: () => tabStyleBaseCSS + tabStyleRolodexCSS\r\n});\r\nvar tabStyleRolodex = /* @__PURE__ */ makeTabStyleRolodexTreeShakeable();\r\n\r\n// packages/ag-grid-community/src/theming/parts/theme/material-adjustments.css-GENERATED.ts\r\nvar materialAdjustmentsCSS = (\r\n  /*css*/\r\n  `.ag-dnd-ghost,.ag-filter-toolpanel-header,.ag-filter-toolpanel-search,.ag-multi-filter-group-title-bar,.ag-panel-title-bar-title,.ag-status-bar{color:var(--ag-header-text-color);font-size:calc(var(--ag-font-size) - 1px);font-weight:600}.ag-column-drop-horizontal{background-color:color-mix(in srgb,var(--ag-background-color),var(--ag-foreground-color) 8%)}.ag-cell.ag-cell-inline-editing{background-color:var(--ag-background-color);background-image:linear-gradient(0deg,var(--ag-input-background-color),var(--ag-input-background-color));border:var(--ag-input-border)!important;border-width:1px!important;height:calc(var(--ag-row-height) + var(--ag-spacing)*3);padding:var(--ag-spacing);:where(.ag-row-last:not(.ag-row-first)) &{bottom:0}:where(.ag-has-focus) &{border:var(--ag-input-focus-border)!important;border-width:1px!important}}.ag-advanced-filter-builder-button,.ag-standard-button{text-transform:uppercase}.ag-status-bar{border:solid var(--ag-border-width) var(--ag-border-color)}.ag-list-item-hovered:after{background-color:var(--ag-primary-color)}.ag-pill-button:hover{color:var(--ag-primary-color)}.ag-header-highlight-after:after,.ag-header-highlight-before:after{background-color:var(--ag-primary-color)}.ag-filter-add-button,.ag-filter-add-button:hover{border-bottom:2px solid var(--ag-primary-color)}`\r\n);\r\n\r\n// packages/ag-grid-community/src/theming/parts/theme/themes.ts\r\nvar makeThemeQuartzTreeShakeable = () => createTheme().withPart(checkboxStyleDefault).withPart(colorSchemeVariable).withPart(iconSetQuartzRegular).withPart(tabStyleQuartz).withPart(inputStyleBordered).withPart(columnDropStyleBordered).withParams({\r\n  fontFamily: [\r\n    { googleFont: \"IBM Plex Sans\" },\r\n    \"-apple-system\",\r\n    \"BlinkMacSystemFont\",\r\n    \"Segoe UI\",\r\n    \"Roboto\",\r\n    \"Oxygen-Sans\",\r\n    \"Ubuntu\"\r\n  ]\r\n});\r\nvar themeQuartz = /* @__PURE__ */ makeThemeQuartzTreeShakeable();\r\nvar makeThemeAlpineTreeShakeable = () => createTheme().withPart(buttonStyleAlpine).withPart(checkboxStyleDefault).withPart(colorSchemeVariable).withPart(iconSetAlpine).withPart(tabStyleAlpine).withPart(inputStyleBordered).withPart(columnDropStyleBordered).withParams({\r\n  accentColor: \"#2196f3\",\r\n  selectedRowBackgroundColor: accentMix(0.3),\r\n  inputFocusBorder: {\r\n    color: accentMix(0.4)\r\n  },\r\n  focusShadow: { radius: 2, spread: 1.6, color: accentMix(0.4) },\r\n  iconButtonHoverBackgroundColor: \"transparent\",\r\n  iconButtonActiveBackgroundColor: \"transparent\",\r\n  checkboxUncheckedBorderColor: foregroundBackgroundMix(0.45),\r\n  checkboxIndeterminateBackgroundColor: foregroundBackgroundMix(0.45),\r\n  checkboxIndeterminateBorderColor: foregroundBackgroundMix(0.45),\r\n  checkboxBorderWidth: 2,\r\n  checkboxBorderRadius: 2,\r\n  fontSize: 13,\r\n  dataFontSize: 14,\r\n  headerFontWeight: 700,\r\n  borderRadius: 3,\r\n  wrapperBorderRadius: 3,\r\n  tabSelectedUnderlineColor: accentColor,\r\n  tabSelectedBorderWidth: 0,\r\n  tabSelectedUnderlineTransitionDuration: 0.3,\r\n  sideButtonSelectedUnderlineColor: accentColor,\r\n  sideButtonSelectedUnderlineWidth: 2,\r\n  sideButtonSelectedUnderlineTransitionDuration: 0.3,\r\n  sideButtonBorder: false,\r\n  sideButtonSelectedBorder: false,\r\n  sideButtonBarTopPadding: { calc: \"spacing * 3\" },\r\n  sideButtonSelectedBackgroundColor: \"transparent\",\r\n  sideButtonHoverTextColor: accentColor,\r\n  iconButtonHoverColor: accentColor,\r\n  toggleButtonWidth: 28,\r\n  toggleButtonHeight: 18,\r\n  toggleButtonSwitchInset: 1,\r\n  toggleButtonOffBackgroundColor: foregroundBackgroundMix(0.45),\r\n  colorPickerThumbSize: 13,\r\n  colorPickerTrackSize: 11,\r\n  colorPickerThumbBorderWidth: 2,\r\n  colorPickerTrackBorderRadius: 2,\r\n  colorPickerColorBorderRadius: 2\r\n});\r\nvar themeAlpine = /* @__PURE__ */ makeThemeAlpineTreeShakeable();\r\nvar makeThemeBalhamTreeShakeable = () => createTheme().withPart(buttonStyleBalham).withPart(checkboxStyleDefault).withPart(colorSchemeVariable).withPart(iconSetBalham).withPart(tabStyleRolodex).withPart(inputStyleBordered).withPart(columnDropStylePlain).withParams({\r\n  accentColor: \"#0091ea\",\r\n  borderColor: foregroundMix(0.2),\r\n  spacing: 4,\r\n  widgetVerticalSpacing: { calc: \"max(8px, spacing)\" },\r\n  borderRadius: 2,\r\n  wrapperBorderRadius: 2,\r\n  headerColumnResizeHandleColor: \"transparent\",\r\n  headerColumnBorder: true,\r\n  headerColumnBorderHeight: \"50%\",\r\n  oddRowBackgroundColor: {\r\n    ref: \"chromeBackgroundColor\",\r\n    mix: 0.5\r\n  },\r\n  checkboxBorderRadius: 2,\r\n  checkboxBorderWidth: 1,\r\n  checkboxUncheckedBackgroundColor: backgroundColor,\r\n  checkboxUncheckedBorderColor: foregroundBackgroundMix(0.5),\r\n  checkboxCheckedBackgroundColor: backgroundColor,\r\n  checkboxCheckedBorderColor: accentColor,\r\n  checkboxCheckedShapeColor: accentColor,\r\n  checkboxIndeterminateBackgroundColor: backgroundColor,\r\n  checkboxIndeterminateBorderColor: foregroundBackgroundMix(0.5),\r\n  checkboxIndeterminateShapeColor: foregroundBackgroundMix(0.5),\r\n  focusShadow: { radius: 2, spread: 1, color: accentColor },\r\n  headerTextColor: foregroundMix(0.6),\r\n  iconButtonHoverBackgroundColor: \"transparent\",\r\n  iconButtonActiveBackgroundColor: \"transparent\",\r\n  fontSize: 12,\r\n  tabSelectedBackgroundColor: backgroundColor,\r\n  headerFontWeight: \"bold\",\r\n  toggleButtonWidth: 32,\r\n  toggleButtonHeight: 16,\r\n  toggleButtonSwitchInset: 1,\r\n  toggleButtonOffBackgroundColor: foregroundBackgroundMix(0.5),\r\n  sideButtonBorder: true,\r\n  sideButtonBarTopPadding: { calc: \"spacing * 4\" },\r\n  popupShadow: \"5px 5px 10px rgba(0, 0, 0, 0.3)\",\r\n  statusBarLabelColor: foregroundMix(0.54),\r\n  statusBarLabelFontWeight: 600,\r\n  statusBarValueFontWeight: 600,\r\n  panelTitleBarIconColor: foregroundColor,\r\n  colorPickerThumbSize: 13,\r\n  colorPickerTrackSize: 11,\r\n  colorPickerThumbBorderWidth: 2,\r\n  colorPickerTrackBorderRadius: 2,\r\n  colorPickerColorBorderRadius: 2\r\n});\r\nvar themeBalham = /* @__PURE__ */ makeThemeBalhamTreeShakeable();\r\nvar makeStyleMaterialTreeShakeable = () => {\r\n  const sharedParams = {\r\n    tabSelectedUnderlineColor: { ref: \"primaryColor\" },\r\n    sideButtonSelectedUnderlineColor: { ref: \"primaryColor\" },\r\n    buttonTextColor: { ref: \"primaryColor\" },\r\n    rangeSelectionBackgroundColor: {\r\n      ref: \"primaryColor\",\r\n      mix: 0.2\r\n    },\r\n    rangeSelectionBorderColor: {\r\n      ref: \"primaryColor\"\r\n    },\r\n    rangeSelectionHighlightColor: {\r\n      ref: \"primaryColor\",\r\n      mix: 0.5\r\n    },\r\n    rangeHeaderHighlightColor: {\r\n      ref: \"foregroundColor\",\r\n      mix: 0.08\r\n    },\r\n    rowNumbersSelectedColor: {\r\n      ref: \"primaryColor\",\r\n      mix: 0.5\r\n    },\r\n    inputFocusBorder: {\r\n      width: 2,\r\n      color: { ref: \"primaryColor\" }\r\n    },\r\n    pickerButtonFocusBorder: {\r\n      width: 1,\r\n      color: { ref: \"primaryColor\" }\r\n    },\r\n    cellEditingBorder: {\r\n      color: { ref: \"primaryColor\" }\r\n    },\r\n    menuBackgroundColor: { ref: \"backgroundColor\" },\r\n    sideButtonBarBackgroundColor: backgroundColor,\r\n    sideButtonSelectedBackgroundColor: \"transparent\",\r\n    sideButtonBarTopPadding: { calc: \"spacing * 4\" },\r\n    headerColumnResizeHandleColor: \"none\",\r\n    headerBackgroundColor: {\r\n      ref: \"backgroundColor\"\r\n    },\r\n    rowHoverColor: foregroundMix(0.08),\r\n    columnHoverColor: foregroundMix(0.08),\r\n    headerCellHoverBackgroundColor: foregroundMix(0.05),\r\n    statusBarLabelColor: foregroundMix(0.63),\r\n    statusBarLabelFontWeight: 600,\r\n    statusBarValueFontWeight: 600,\r\n    valueChangeValueHighlightBackgroundColor: \"#00acc1\",\r\n    panelTitleBarIconColor: foregroundColor,\r\n    advancedFilterBuilderButtonBarBorder: false,\r\n    filterPanelApplyButtonColor: { ref: \"buttonTextColor\" },\r\n    filterPanelApplyButtonBackgroundColor: { ref: \"buttonBackgroundColor\" },\r\n    colorPickerThumbSize: 13,\r\n    colorPickerTrackSize: 11,\r\n    colorPickerThumbBorderWidth: 2,\r\n    colorPickerTrackBorderRadius: 2,\r\n    colorPickerColorBorderRadius: 2\r\n  };\r\n  const lightParams = {\r\n    ...sharedParams,\r\n    primaryColor: \"#3f51b5\",\r\n    foregroundColor: \"#000D\",\r\n    headerTextColor: \"#0008\",\r\n    accentColor: \"#ff4081\",\r\n    checkboxUncheckedBorderColor: foregroundColor,\r\n    checkboxIndeterminateBackgroundColor: foregroundColor,\r\n    toggleButtonOffBackgroundColor: foregroundColor,\r\n    selectedRowBackgroundColor: \"rgba(33, 150, 243, 0.3)\"\r\n  };\r\n  const darkParams2 = {\r\n    ...sharedParams,\r\n    primaryColor: \"#3f51b5\",\r\n    foregroundColor: \"#fffD\",\r\n    headerTextColor: \"#fff8\",\r\n    accentColor: \"#bb86fc\",\r\n    checkboxUncheckedBorderColor: foregroundBackgroundMix(0.5),\r\n    checkboxIndeterminateBackgroundColor: foregroundBackgroundMix(0.5),\r\n    toggleButtonOffBackgroundColor: foregroundBackgroundMix(0.5),\r\n    selectedRowBackgroundColor: \"#bb86fc33\"\r\n  };\r\n  return createPart({\r\n    feature: \"styleMaterial\",\r\n    css: materialAdjustmentsCSS,\r\n    params: lightParams,\r\n    modeParams: {\r\n      light: lightParams,\r\n      dark: darkParams2,\r\n      \"dark-blue\": darkParams2\r\n    }\r\n  });\r\n};\r\nvar styleMaterial = /* @__PURE__ */ makeStyleMaterialTreeShakeable();\r\nvar makeThemeMaterialTreeShakeable = () => /* @__PURE__ */ createTheme().withPart(buttonStyleBase).withPart(checkboxStyleDefault).withPart(colorSchemeVariable).withPart(iconSetMaterial).withPart(tabStyleMaterial).withPart(inputStyleUnderlined).withPart(columnDropStylePlain).withPart(styleMaterial).withParams({\r\n  rowHeight: {\r\n    calc: \"max(iconSize, dataFontSize) + spacing * 3.75 * rowVerticalPaddingScale\"\r\n  },\r\n  headerHeight: {\r\n    calc: \"max(iconSize, dataFontSize) + spacing * 4.75 * headerVerticalPaddingScale\"\r\n  },\r\n  widgetVerticalSpacing: {\r\n    calc: \"spacing * 1.75\"\r\n  },\r\n  cellHorizontalPadding: { calc: \"spacing * 3\" },\r\n  buttonHorizontalPadding: { ref: \"spacing\" },\r\n  widgetContainerHorizontalPadding: { calc: \"spacing * 1.5\" },\r\n  widgetContainerVerticalPadding: { calc: \"spacing * 2\" },\r\n  fontSize: 13,\r\n  iconSize: 18,\r\n  borderRadius: 0,\r\n  wrapperBorderRadius: 0,\r\n  wrapperBorder: false,\r\n  menuBorder: false,\r\n  dialogBorder: false,\r\n  panelTitleBarBorder: false,\r\n  tabSelectedBorderWidth: 0,\r\n  tabSelectedUnderlineTransitionDuration: 0.3,\r\n  sidePanelBorder: false,\r\n  sideButtonSelectedBorder: false,\r\n  sideButtonSelectedUnderlineWidth: 2,\r\n  sideButtonSelectedUnderlineTransitionDuration: 0.3,\r\n  sideButtonBorder: false,\r\n  buttonBorder: false,\r\n  buttonDisabledBorder: false,\r\n  focusShadow: {\r\n    spread: 4,\r\n    color: foregroundMix(0.16)\r\n  },\r\n  fontFamily: [\r\n    { googleFont: \"Roboto\" },\r\n    \"-apple-system\",\r\n    \"BlinkMacSystemFont\",\r\n    \"Segoe UI\",\r\n    \"Oxygen-Sans\",\r\n    \"Ubuntu\",\r\n    \"Cantarell\",\r\n    \"Helvetica Neue\",\r\n    \"sans-serif\"\r\n  ],\r\n  inputHeight: {\r\n    calc: \"max(iconSize, fontSize) + spacing * 3\"\r\n  },\r\n  pickerButtonBorder: {\r\n    width: 1,\r\n    color: \"transparent\"\r\n  },\r\n  headerFontWeight: 600,\r\n  headerFontSize: { calc: \"fontSize - 1px\" },\r\n  checkboxBorderWidth: 2,\r\n  checkboxBorderRadius: 2,\r\n  toggleButtonWidth: 34,\r\n  toggleButtonSwitchInset: 1,\r\n  cardShadow: \"0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12)\",\r\n  popupShadow: \"5px 5px 10px rgba(0, 0, 0, 0.3)\"\r\n});\r\nvar themeMaterial = /* @__PURE__ */ makeThemeMaterialTreeShakeable();\r\n\r\n// packages/ag-grid-community/src/environment.ts\r\nvar CELL_HORIZONTAL_PADDING = {\r\n  cssName: \"--ag-cell-horizontal-padding\",\r\n  changeKey: \"cellHorizontalPaddingChanged\",\r\n  defaultValue: 16\r\n};\r\nvar INDENTATION_LEVEL = {\r\n  cssName: \"--ag-indentation-level\",\r\n  changeKey: \"indentationLevelChanged\",\r\n  defaultValue: 0,\r\n  noWarn: true,\r\n  cacheDefault: true\r\n};\r\nvar ROW_GROUP_INDENT_SIZE = {\r\n  cssName: \"--ag-row-group-indent-size\",\r\n  changeKey: \"rowGroupIndentSizeChanged\",\r\n  defaultValue: 0\r\n};\r\nvar ROW_HEIGHT = {\r\n  cssName: \"--ag-row-height\",\r\n  changeKey: \"rowHeightChanged\",\r\n  defaultValue: 42\r\n};\r\nvar HEADER_HEIGHT = {\r\n  cssName: \"--ag-header-height\",\r\n  changeKey: \"headerHeightChanged\",\r\n  defaultValue: 48\r\n};\r\nvar LIST_ITEM_HEIGHT = {\r\n  cssName: \"--ag-list-item-height\",\r\n  changeKey: \"listItemHeightChanged\",\r\n  defaultValue: 24\r\n};\r\nvar ROW_BORDER_WIDTH = {\r\n  cssName: \"--ag-row-border\",\r\n  changeKey: \"rowBorderWidthChanged\",\r\n  defaultValue: 1,\r\n  border: true\r\n};\r\nvar PINNED_BORDER_WIDTH = {\r\n  cssName: \"--ag-pinned-row-border\",\r\n  changeKey: \"pinnedRowBorderWidthChanged\",\r\n  defaultValue: 1,\r\n  border: true\r\n};\r\nvar paramsId = 0;\r\nvar Environment = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"environment\";\r\n    this.sizeEls = /* @__PURE__ */ new Map();\r\n    this.lastKnownValues = /* @__PURE__ */ new Map();\r\n    this.sizesMeasured = false;\r\n    this.paramsClass = `ag-theme-params-${++paramsId}`;\r\n    this.globalCSS = [];\r\n  }\r\n  wireBeans(beans) {\r\n    const { eGridDiv, gridOptions } = beans;\r\n    this.eGridDiv = eGridDiv;\r\n    this.eStyleContainer = gridOptions.themeStyleContainer ?? (eGridDiv.getRootNode() === document ? document.head : eGridDiv);\r\n    this.cssLayer = gridOptions.themeCssLayer;\r\n    this.styleNonce = gridOptions.styleNonce;\r\n  }\r\n  postConstruct() {\r\n    this.addManagedPropertyListener(\"theme\", () => this.handleThemeGridOptionChange());\r\n    this.handleThemeGridOptionChange();\r\n    this.addManagedPropertyListener(\"rowHeight\", () => this.refreshRowHeightVariable());\r\n    this.getSizeEl(ROW_HEIGHT);\r\n    this.getSizeEl(HEADER_HEIGHT);\r\n    this.getSizeEl(LIST_ITEM_HEIGHT);\r\n    this.getSizeEl(ROW_BORDER_WIDTH);\r\n    this.getSizeEl(PINNED_BORDER_WIDTH);\r\n    this.refreshRowBorderWidthVariable();\r\n    this.addDestroyFunc(() => _unregisterGridUsingThemingAPI(this));\r\n    this.mutationObserver = new MutationObserver(() => {\r\n      this.fireGridStylesChangedEvent(\"themeChanged\");\r\n    });\r\n    this.addDestroyFunc(() => this.mutationObserver.disconnect());\r\n  }\r\n  getPinnedRowBorderWidth() {\r\n    return this.getCSSVariablePixelValue(PINNED_BORDER_WIDTH);\r\n  }\r\n  getRowBorderWidth() {\r\n    return this.getCSSVariablePixelValue(ROW_BORDER_WIDTH);\r\n  }\r\n  getDefaultRowHeight() {\r\n    return this.getCSSVariablePixelValue(ROW_HEIGHT);\r\n  }\r\n  getDefaultHeaderHeight() {\r\n    return this.getCSSVariablePixelValue(HEADER_HEIGHT);\r\n  }\r\n  getDefaultCellHorizontalPadding() {\r\n    return this.getCSSVariablePixelValue(CELL_HORIZONTAL_PADDING);\r\n  }\r\n  getCellPaddingLeft() {\r\n    const cellHorizontalPadding = this.getDefaultCellHorizontalPadding();\r\n    const indentationLevel = this.getCSSVariablePixelValue(INDENTATION_LEVEL);\r\n    const rowGroupIndentSize = this.getCSSVariablePixelValue(ROW_GROUP_INDENT_SIZE);\r\n    return cellHorizontalPadding - 1 + rowGroupIndentSize * indentationLevel;\r\n  }\r\n  getCellPadding() {\r\n    const cellPaddingRight = this.getDefaultCellHorizontalPadding() - 1;\r\n    return this.getCellPaddingLeft() + cellPaddingRight;\r\n  }\r\n  getDefaultColumnMinWidth() {\r\n    return Math.min(36, this.getDefaultRowHeight());\r\n  }\r\n  getDefaultListItemHeight() {\r\n    return this.getCSSVariablePixelValue(LIST_ITEM_HEIGHT);\r\n  }\r\n  applyThemeClasses(el) {\r\n    const { gridTheme } = this;\r\n    let themeClass = \"\";\r\n    if (gridTheme) {\r\n      themeClass = `${this.paramsClass} ${gridTheme._getCssClass()}`;\r\n    } else {\r\n      this.mutationObserver.disconnect();\r\n      let node = this.eGridDiv;\r\n      while (node) {\r\n        let isThemeEl = false;\r\n        for (const className of Array.from(node.classList)) {\r\n          if (className.startsWith(\"ag-theme-\")) {\r\n            isThemeEl = true;\r\n            themeClass = themeClass ? `${themeClass} ${className}` : className;\r\n          }\r\n        }\r\n        if (isThemeEl) {\r\n          this.mutationObserver.observe(node, {\r\n            attributes: true,\r\n            attributeFilter: [\"class\"]\r\n          });\r\n        }\r\n        node = node.parentElement;\r\n      }\r\n    }\r\n    for (const className of Array.from(el.classList)) {\r\n      if (className.startsWith(\"ag-theme-\")) {\r\n        el.classList.remove(className);\r\n      }\r\n    }\r\n    if (themeClass) {\r\n      const oldClass = el.className;\r\n      el.className = oldClass + (oldClass ? \" \" : \"\") + themeClass;\r\n    }\r\n  }\r\n  refreshRowHeightVariable() {\r\n    const { eGridDiv } = this;\r\n    const oldRowHeight = eGridDiv.style.getPropertyValue(\"--ag-line-height\").trim();\r\n    const height = this.gos.get(\"rowHeight\");\r\n    if (height == null || isNaN(height) || !isFinite(height)) {\r\n      if (oldRowHeight !== null) {\r\n        eGridDiv.style.setProperty(\"--ag-line-height\", null);\r\n      }\r\n      return -1;\r\n    }\r\n    const newRowHeight = `${height}px`;\r\n    if (oldRowHeight != newRowHeight) {\r\n      eGridDiv.style.setProperty(\"--ag-line-height\", newRowHeight);\r\n      return height;\r\n    }\r\n    return oldRowHeight != \"\" ? parseFloat(oldRowHeight) : -1;\r\n  }\r\n  addGlobalCSS(css, debugId) {\r\n    if (this.gridTheme) {\r\n      _injectGlobalCSS(css, this.eStyleContainer, debugId, this.cssLayer, 0, this.styleNonce);\r\n    } else {\r\n      this.globalCSS.push([css, debugId]);\r\n    }\r\n  }\r\n  getCSSVariablePixelValue(variable) {\r\n    const cached = this.lastKnownValues.get(variable);\r\n    if (cached != null) {\r\n      return cached;\r\n    }\r\n    const measurement = this.measureSizeEl(variable);\r\n    if (measurement === \"detached\" || measurement === \"no-styles\") {\r\n      if (variable.cacheDefault) {\r\n        this.lastKnownValues.set(variable, variable.defaultValue);\r\n      }\r\n      return variable.defaultValue;\r\n    }\r\n    this.lastKnownValues.set(variable, measurement);\r\n    return measurement;\r\n  }\r\n  measureSizeEl(variable) {\r\n    const sizeEl = this.getSizeEl(variable);\r\n    if (sizeEl.offsetParent == null) {\r\n      return \"detached\";\r\n    }\r\n    const newSize = sizeEl.offsetWidth;\r\n    if (newSize === NO_VALUE_SENTINEL)\r\n      return \"no-styles\";\r\n    this.sizesMeasured = true;\r\n    return newSize;\r\n  }\r\n  getMeasurementContainer() {\r\n    let container = this.eMeasurementContainer;\r\n    if (!container) {\r\n      container = this.eMeasurementContainer = _createElement({ tag: \"div\", cls: \"ag-measurement-container\" });\r\n      this.eGridDiv.appendChild(container);\r\n    }\r\n    return container;\r\n  }\r\n  getSizeEl(variable) {\r\n    let sizeEl = this.sizeEls.get(variable);\r\n    if (sizeEl) {\r\n      return sizeEl;\r\n    }\r\n    const container = this.getMeasurementContainer();\r\n    sizeEl = _createElement({ tag: \"div\" });\r\n    const { border, noWarn } = variable;\r\n    if (border) {\r\n      sizeEl.className = \"ag-measurement-element-border\";\r\n      sizeEl.style.setProperty(\r\n        \"--ag-internal-measurement-border\",\r\n        `var(${variable.cssName}, solid ${NO_VALUE_SENTINEL}px)`\r\n      );\r\n    } else {\r\n      sizeEl.style.width = `var(${variable.cssName}, ${NO_VALUE_SENTINEL}px)`;\r\n    }\r\n    container.appendChild(sizeEl);\r\n    this.sizeEls.set(variable, sizeEl);\r\n    let lastMeasurement = this.measureSizeEl(variable);\r\n    if (lastMeasurement === \"no-styles\" && !noWarn) {\r\n      _warn(9, { variable });\r\n    }\r\n    const unsubscribe = _observeResize(this.beans, sizeEl, () => {\r\n      const newMeasurement = this.measureSizeEl(variable);\r\n      if (newMeasurement === \"detached\" || newMeasurement === \"no-styles\") {\r\n        return;\r\n      }\r\n      this.lastKnownValues.set(variable, newMeasurement);\r\n      if (newMeasurement !== lastMeasurement) {\r\n        lastMeasurement = newMeasurement;\r\n        this.fireGridStylesChangedEvent(variable.changeKey);\r\n      }\r\n    });\r\n    this.addDestroyFunc(() => unsubscribe());\r\n    return sizeEl;\r\n  }\r\n  fireGridStylesChangedEvent(change) {\r\n    if (change === \"rowBorderWidthChanged\") {\r\n      this.refreshRowBorderWidthVariable();\r\n    }\r\n    this.eventSvc.dispatchEvent({\r\n      type: \"gridStylesChanged\",\r\n      [change]: true\r\n    });\r\n  }\r\n  refreshRowBorderWidthVariable() {\r\n    const width = this.getCSSVariablePixelValue(ROW_BORDER_WIDTH);\r\n    this.eGridDiv.style.setProperty(\"--ag-internal-row-border-width\", `${width}px`);\r\n  }\r\n  handleThemeGridOptionChange() {\r\n    const { gos, eGridDiv, globalCSS, gridTheme: oldGridTheme } = this;\r\n    const themeGridOption = gos.get(\"theme\");\r\n    let newGridTheme;\r\n    if (themeGridOption === \"legacy\") {\r\n      newGridTheme = void 0;\r\n    } else {\r\n      const themeOrDefault = themeGridOption ?? themeQuartz;\r\n      if (themeOrDefault instanceof ThemeImpl) {\r\n        newGridTheme = themeOrDefault;\r\n      } else {\r\n        _error(240, { theme: themeOrDefault });\r\n      }\r\n    }\r\n    if (newGridTheme !== oldGridTheme) {\r\n      if (newGridTheme) {\r\n        _registerGridUsingThemingAPI(this);\r\n        _injectCoreAndModuleCSS(this.eStyleContainer, this.cssLayer, this.styleNonce);\r\n        for (const [css, debugId] of globalCSS) {\r\n          _injectGlobalCSS(css, this.eStyleContainer, debugId, this.cssLayer, 0, this.styleNonce);\r\n        }\r\n        globalCSS.length = 0;\r\n      }\r\n      this.gridTheme = newGridTheme;\r\n      newGridTheme?._startUse({\r\n        loadThemeGoogleFonts: gos.get(\"loadThemeGoogleFonts\"),\r\n        styleContainer: this.eStyleContainer,\r\n        cssLayer: this.cssLayer,\r\n        nonce: this.styleNonce\r\n      });\r\n      let eParamsStyle = this.eParamsStyle;\r\n      if (!eParamsStyle) {\r\n        eParamsStyle = this.eParamsStyle = _createElement({ tag: \"style\" });\r\n        const styleNonce = this.gos.get(\"styleNonce\");\r\n        if (styleNonce) {\r\n          eParamsStyle.setAttribute(\"nonce\", styleNonce);\r\n        }\r\n        eGridDiv.appendChild(eParamsStyle);\r\n      }\r\n      if (!IS_SSR) {\r\n        eParamsStyle.textContent = newGridTheme?._getPerGridCss(this.paramsClass) || \"\";\r\n      }\r\n      this.applyThemeClasses(eGridDiv);\r\n      this.fireGridStylesChangedEvent(\"themeChanged\");\r\n    }\r\n    if (newGridTheme && getComputedStyle(this.getMeasurementContainer()).getPropertyValue(\"--ag-legacy-styles-loaded\")) {\r\n      if (themeGridOption) {\r\n        _error(106);\r\n      } else {\r\n        _error(239);\r\n      }\r\n    }\r\n  }\r\n};\r\nvar NO_VALUE_SENTINEL = 15538;\r\n\r\n// packages/ag-grid-community/src/eventService.ts\r\nvar EventService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"eventSvc\";\r\n    this.globalSvc = new LocalEventService();\r\n  }\r\n  postConstruct() {\r\n    const { globalListener, globalSyncListener } = this.beans;\r\n    if (globalListener) {\r\n      this.addGlobalListener(globalListener, true);\r\n    }\r\n    if (globalSyncListener) {\r\n      this.addGlobalListener(globalSyncListener, false);\r\n    }\r\n  }\r\n  addEventListener(eventType, listener, async) {\r\n    this.globalSvc.addEventListener(eventType, listener, async);\r\n  }\r\n  removeEventListener(eventType, listener, async) {\r\n    this.globalSvc.removeEventListener(eventType, listener, async);\r\n  }\r\n  addGlobalListener(listener, async = false) {\r\n    this.globalSvc.addGlobalListener(listener, async);\r\n  }\r\n  removeGlobalListener(listener, async = false) {\r\n    this.globalSvc.removeGlobalListener(listener, async);\r\n  }\r\n  /** @deprecated DO NOT FIRE LOCAL EVENTS OFF THE EVENT SERVICE */\r\n  dispatchLocalEvent() {\r\n  }\r\n  dispatchEvent(event) {\r\n    this.globalSvc.dispatchEvent(_addGridCommonParams(this.gos, event));\r\n  }\r\n  dispatchEventOnce(event) {\r\n    this.globalSvc.dispatchEventOnce(_addGridCommonParams(this.gos, event));\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/navigation/headerNavigationService.ts\r\nfunction getHeaderIndexToFocus(beans, column, level) {\r\n  const columnRowIndex = beans.visibleCols.headerGroupRowCount;\r\n  if (level >= columnRowIndex) {\r\n    return {\r\n      column,\r\n      headerRowIndex: level\r\n    };\r\n  }\r\n  let parent = column.getParent();\r\n  while (parent && parent.getProvidedColumnGroup().getLevel() > level) {\r\n    parent = parent.getParent();\r\n  }\r\n  const isColSpanning = column.isSpanHeaderHeight();\r\n  if (!parent || isColSpanning && parent.isPadding()) {\r\n    return {\r\n      column,\r\n      headerRowIndex: columnRowIndex\r\n    };\r\n  }\r\n  return {\r\n    column: parent,\r\n    headerRowIndex: parent.getProvidedColumnGroup().getLevel()\r\n  };\r\n}\r\nvar HeaderNavigationService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"headerNavigation\";\r\n    this.currentHeaderRowWithoutSpan = -1;\r\n  }\r\n  postConstruct() {\r\n    const beans = this.beans;\r\n    beans.ctrlsSvc.whenReady(this, (p) => {\r\n      this.gridBodyCon = p.gridBodyCtrl;\r\n    });\r\n    const eDocument = _getDocument(beans);\r\n    this.addManagedElementListeners(eDocument, {\r\n      mousedown: () => {\r\n        this.currentHeaderRowWithoutSpan = -1;\r\n      }\r\n    });\r\n  }\r\n  getHeaderPositionForColumn(colKey, floatingFilter) {\r\n    let column;\r\n    const { colModel, colGroupSvc, ctrlsSvc } = this.beans;\r\n    if (typeof colKey === \"string\") {\r\n      column = colModel.getCol(colKey);\r\n      if (!column) {\r\n        column = colGroupSvc?.getColumnGroup(colKey) ?? null;\r\n      }\r\n    } else {\r\n      column = colKey;\r\n    }\r\n    if (!column) {\r\n      return null;\r\n    }\r\n    const centerHeaderContainer = ctrlsSvc.getHeaderRowContainerCtrl();\r\n    const allCtrls = centerHeaderContainer?.getAllCtrls();\r\n    const isFloatingFilterVisible = _last(allCtrls || []).type === \"filter\";\r\n    const headerRowCount = getFocusHeaderRowCount(this.beans) - 1;\r\n    let row = -1;\r\n    let col = column;\r\n    while (col) {\r\n      row++;\r\n      col = col.getParent();\r\n    }\r\n    let headerRowIndex = row;\r\n    if (floatingFilter && isFloatingFilterVisible && headerRowIndex === headerRowCount - 1) {\r\n      headerRowIndex++;\r\n    }\r\n    return headerRowIndex === -1 ? null : {\r\n      headerRowIndex,\r\n      column\r\n    };\r\n  }\r\n  /*\r\n   * This method navigates grid header vertically\r\n   * @return {boolean} true to preventDefault on the event that caused this navigation.\r\n   */\r\n  navigateVertically(direction, event) {\r\n    const { focusSvc, visibleCols } = this.beans;\r\n    const { focusedHeader } = focusSvc;\r\n    if (!focusedHeader) {\r\n      return false;\r\n    }\r\n    const { headerRowIndex } = focusedHeader;\r\n    const column = focusedHeader.column;\r\n    const rowLen = getFocusHeaderRowCount(this.beans);\r\n    const currentRowType = this.getHeaderRowType(headerRowIndex);\r\n    const columnHeaderRowIndex = visibleCols.headerGroupRowCount;\r\n    let {\r\n      headerRowIndex: nextRow,\r\n      column: nextFocusColumn,\r\n      headerRowIndexWithoutSpan\r\n    } = direction === \"UP\" ? getColumnVisibleParent(currentRowType, column, headerRowIndex) : getColumnVisibleChild(column, headerRowIndex, columnHeaderRowIndex);\r\n    let skipColumn = false;\r\n    if (nextRow < 0) {\r\n      nextRow = 0;\r\n      nextFocusColumn = column;\r\n      skipColumn = true;\r\n    }\r\n    if (nextRow >= rowLen) {\r\n      nextRow = -1;\r\n      this.currentHeaderRowWithoutSpan = -1;\r\n    } else if (headerRowIndexWithoutSpan !== void 0) {\r\n      this.currentHeaderRowWithoutSpan = headerRowIndexWithoutSpan;\r\n    }\r\n    if (!skipColumn && !nextFocusColumn) {\r\n      return false;\r\n    }\r\n    return focusSvc.focusHeaderPosition({\r\n      headerPosition: { headerRowIndex: nextRow, column: nextFocusColumn },\r\n      allowUserOverride: true,\r\n      event\r\n    });\r\n  }\r\n  /*\r\n   * This method navigates grid header horizontally\r\n   * @returns {boolean} true to preventDefault on the event that caused this navigation.\r\n   */\r\n  navigateHorizontally(direction, fromTab = false, event) {\r\n    const { focusSvc, gos } = this.beans;\r\n    const focusedHeader = { ...focusSvc.focusedHeader };\r\n    let nextHeader;\r\n    let normalisedDirection;\r\n    if (this.currentHeaderRowWithoutSpan !== -1) {\r\n      focusedHeader.headerRowIndex = this.currentHeaderRowWithoutSpan;\r\n    } else {\r\n      this.currentHeaderRowWithoutSpan = focusedHeader.headerRowIndex;\r\n    }\r\n    if (direction === \"LEFT\" !== gos.get(\"enableRtl\")) {\r\n      normalisedDirection = \"Before\";\r\n      nextHeader = this.findHeader(focusedHeader, normalisedDirection);\r\n    } else {\r\n      normalisedDirection = \"After\";\r\n      nextHeader = this.findHeader(focusedHeader, normalisedDirection);\r\n    }\r\n    const userFunc = gos.getCallback(\"tabToNextHeader\");\r\n    if (fromTab && userFunc) {\r\n      const wasFocusedFromUserFunc = focusSvc.focusHeaderPositionFromUserFunc({\r\n        userFunc,\r\n        headerPosition: nextHeader,\r\n        direction: normalisedDirection\r\n      });\r\n      if (wasFocusedFromUserFunc) {\r\n        const { headerRowIndex } = focusSvc.focusedHeader || {};\r\n        if (headerRowIndex != null && headerRowIndex != focusedHeader.headerRowIndex) {\r\n          this.currentHeaderRowWithoutSpan = headerRowIndex;\r\n        }\r\n      }\r\n      return wasFocusedFromUserFunc;\r\n    }\r\n    if (nextHeader || !fromTab) {\r\n      return focusSvc.focusHeaderPosition({\r\n        headerPosition: nextHeader,\r\n        direction: normalisedDirection,\r\n        fromTab,\r\n        allowUserOverride: true,\r\n        event\r\n      });\r\n    }\r\n    return this.focusNextHeaderRow(focusedHeader, normalisedDirection, event);\r\n  }\r\n  focusNextHeaderRow(focusedHeader, direction, event) {\r\n    const beans = this.beans;\r\n    const currentIndex = focusedHeader.headerRowIndex;\r\n    let nextFocusedCol = null;\r\n    let nextRowIndex;\r\n    const headerRowCount = getFocusHeaderRowCount(beans);\r\n    const allVisibleCols = this.beans.visibleCols.allCols;\r\n    if (direction === \"Before\") {\r\n      if (currentIndex <= 0) {\r\n        return false;\r\n      }\r\n      nextFocusedCol = _last(allVisibleCols);\r\n      nextRowIndex = currentIndex - 1;\r\n      this.currentHeaderRowWithoutSpan -= 1;\r\n    } else {\r\n      nextFocusedCol = allVisibleCols[0];\r\n      nextRowIndex = currentIndex + 1;\r\n      if (this.currentHeaderRowWithoutSpan < headerRowCount) {\r\n        this.currentHeaderRowWithoutSpan += 1;\r\n      } else {\r\n        this.currentHeaderRowWithoutSpan = -1;\r\n      }\r\n    }\r\n    let { column, headerRowIndex } = getHeaderIndexToFocus(this.beans, nextFocusedCol, nextRowIndex);\r\n    if (headerRowIndex >= headerRowCount) {\r\n      headerRowIndex = -1;\r\n    }\r\n    return beans.focusSvc.focusHeaderPosition({\r\n      headerPosition: { column, headerRowIndex },\r\n      direction,\r\n      fromTab: true,\r\n      allowUserOverride: true,\r\n      event\r\n    });\r\n  }\r\n  scrollToColumn(column, direction = \"After\") {\r\n    if (column.getPinned()) {\r\n      return;\r\n    }\r\n    let columnToScrollTo;\r\n    if (isColumnGroup(column)) {\r\n      const columns = column.getDisplayedLeafColumns();\r\n      columnToScrollTo = direction === \"Before\" ? _last(columns) : columns[0];\r\n    } else {\r\n      columnToScrollTo = column;\r\n    }\r\n    this.gridBodyCon.scrollFeature.ensureColumnVisible(columnToScrollTo);\r\n  }\r\n  findHeader(focusedHeader, direction) {\r\n    const { colGroupSvc, visibleCols } = this.beans;\r\n    let currentFocusedColumn = focusedHeader.column;\r\n    if (currentFocusedColumn instanceof AgColumnGroup) {\r\n      const leafChildren = currentFocusedColumn.getDisplayedLeafColumns();\r\n      currentFocusedColumn = direction === \"Before\" ? leafChildren[0] : leafChildren[leafChildren.length - 1];\r\n    }\r\n    const nextFocusedCol = direction === \"Before\" ? visibleCols.getColBefore(currentFocusedColumn) : visibleCols.getColAfter(currentFocusedColumn);\r\n    if (!nextFocusedCol) {\r\n      return void 0;\r\n    }\r\n    const headerGroupRowIndex = visibleCols.headerGroupRowCount;\r\n    if (focusedHeader.headerRowIndex >= headerGroupRowIndex) {\r\n      return {\r\n        headerRowIndex: focusedHeader.headerRowIndex,\r\n        column: nextFocusedCol\r\n      };\r\n    }\r\n    const groupAtLevel = colGroupSvc?.getColGroupAtLevel(nextFocusedCol, focusedHeader.headerRowIndex);\r\n    if (!groupAtLevel) {\r\n      const isSpanningCol = nextFocusedCol instanceof AgColumn && nextFocusedCol.isSpanHeaderHeight();\r\n      return {\r\n        headerRowIndex: isSpanningCol ? visibleCols.headerGroupRowCount : focusedHeader.headerRowIndex,\r\n        column: nextFocusedCol\r\n      };\r\n    }\r\n    if (groupAtLevel.isPadding() && nextFocusedCol.isSpanHeaderHeight()) {\r\n      return {\r\n        headerRowIndex: visibleCols.headerGroupRowCount,\r\n        column: nextFocusedCol\r\n      };\r\n    }\r\n    return {\r\n      headerRowIndex: focusedHeader.headerRowIndex,\r\n      column: groupAtLevel ?? nextFocusedCol\r\n    };\r\n  }\r\n  getHeaderRowType(rowIndex) {\r\n    const centerHeaderContainer = this.beans.ctrlsSvc.getHeaderRowContainerCtrl();\r\n    if (centerHeaderContainer) {\r\n      return centerHeaderContainer.getRowType(rowIndex);\r\n    }\r\n  }\r\n};\r\nfunction getColumnVisibleParent(currentRowType, currentColumn, currentIndex) {\r\n  const optimisticNextIndex = currentIndex - 1;\r\n  if (currentRowType !== \"filter\") {\r\n    const isSpanningCol = currentColumn instanceof AgColumn && currentColumn.isSpanHeaderHeight();\r\n    let nextVisibleParent = currentColumn.getParent();\r\n    while (nextVisibleParent && // skip if row isn't visible or col is padding and spanned\r\n    (nextVisibleParent.getProvidedColumnGroup().getLevel() > optimisticNextIndex || isSpanningCol && nextVisibleParent.isPadding())) {\r\n      nextVisibleParent = nextVisibleParent.getParent();\r\n    }\r\n    if (nextVisibleParent) {\r\n      if (isSpanningCol) {\r\n        return {\r\n          column: nextVisibleParent,\r\n          headerRowIndex: nextVisibleParent.getProvidedColumnGroup().getLevel(),\r\n          headerRowIndexWithoutSpan: optimisticNextIndex\r\n        };\r\n      } else {\r\n        return {\r\n          column: nextVisibleParent,\r\n          headerRowIndex: optimisticNextIndex,\r\n          headerRowIndexWithoutSpan: optimisticNextIndex\r\n        };\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    column: currentColumn,\r\n    headerRowIndex: optimisticNextIndex,\r\n    headerRowIndexWithoutSpan: optimisticNextIndex\r\n  };\r\n}\r\nfunction getColumnVisibleChild(column, currentIndex, columnHeaderRowIndex) {\r\n  const optimisticNextIndex = currentIndex + 1;\r\n  const result = {\r\n    column,\r\n    headerRowIndex: optimisticNextIndex,\r\n    headerRowIndexWithoutSpan: optimisticNextIndex\r\n  };\r\n  if (column instanceof AgColumnGroup) {\r\n    if (optimisticNextIndex >= columnHeaderRowIndex) {\r\n      return {\r\n        column: column.getDisplayedLeafColumns()[0],\r\n        headerRowIndex: columnHeaderRowIndex,\r\n        headerRowIndexWithoutSpan: optimisticNextIndex\r\n      };\r\n    }\r\n    const children = column.getDisplayedChildren();\r\n    let firstChild = children[0];\r\n    if (firstChild instanceof AgColumnGroup && firstChild.isPadding()) {\r\n      const firstCol = firstChild.getDisplayedLeafColumns()[0];\r\n      if (firstCol.isSpanHeaderHeight()) {\r\n        firstChild = firstCol;\r\n      }\r\n    }\r\n    result.column = firstChild;\r\n    const isSpanningCol = firstChild instanceof AgColumn && firstChild.isSpanHeaderHeight();\r\n    if (isSpanningCol) {\r\n      result.headerRowIndex = columnHeaderRowIndex;\r\n      result.headerRowIndexWithoutSpan = optimisticNextIndex;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n// packages/ag-grid-community/src/focusService.ts\r\nvar FocusService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"focusSvc\";\r\n    /** If a cell was destroyed that previously had focus, focus needs restored when the cell reappears */\r\n    this.focusFallbackTimeout = null;\r\n    this.needsFocusRestored = false;\r\n  }\r\n  wireBeans(beans) {\r\n    this.colModel = beans.colModel;\r\n    this.visibleCols = beans.visibleCols;\r\n    this.rowRenderer = beans.rowRenderer;\r\n    this.navigation = beans.navigation;\r\n    this.filterManager = beans.filterManager;\r\n    this.overlays = beans.overlays;\r\n  }\r\n  postConstruct() {\r\n    const clearFocusedCellListener = this.clearFocusedCell.bind(this);\r\n    this.addManagedEventListeners({\r\n      columnPivotModeChanged: clearFocusedCellListener,\r\n      newColumnsLoaded: this.onColumnEverythingChanged.bind(this),\r\n      columnGroupOpened: clearFocusedCellListener,\r\n      columnRowGroupChanged: clearFocusedCellListener\r\n    });\r\n    this.addDestroyFunc(_registerKeyboardFocusEvents(this.beans));\r\n  }\r\n  attemptToRecoverFocus() {\r\n    this.needsFocusRestored = true;\r\n    if (this.focusFallbackTimeout != null) {\r\n      clearTimeout(this.focusFallbackTimeout);\r\n    }\r\n    this.focusFallbackTimeout = window.setTimeout(this.setFocusRecovered.bind(this), 100);\r\n  }\r\n  setFocusRecovered() {\r\n    this.needsFocusRestored = false;\r\n    if (this.focusFallbackTimeout != null) {\r\n      clearTimeout(this.focusFallbackTimeout);\r\n      this.focusFallbackTimeout = null;\r\n    }\r\n  }\r\n  /**\r\n   * Specifies whether to take focus, as grid either already has focus, or lost it due\r\n   * to a destroyed cell\r\n   * @returns true if the grid should re-take focus, otherwise false\r\n   */\r\n  shouldTakeFocus() {\r\n    if (this.gos.get(\"suppressFocusAfterRefresh\")) {\r\n      this.setFocusRecovered();\r\n      return false;\r\n    }\r\n    if (this.needsFocusRestored) {\r\n      this.setFocusRecovered();\r\n      return true;\r\n    }\r\n    return this.doesRowOrCellHaveBrowserFocus();\r\n  }\r\n  onColumnEverythingChanged() {\r\n    if (!this.focusedCell) {\r\n      return;\r\n    }\r\n    const col = this.focusedCell.column;\r\n    const colFromColumnModel = this.colModel.getCol(col.getId());\r\n    if (col !== colFromColumnModel) {\r\n      this.clearFocusedCell();\r\n    }\r\n  }\r\n  // we check if the browser is focusing something, and if it is, and\r\n  // it's the cell we think is focused, then return the cell. so this\r\n  // methods returns the cell if a) we think it has focus and b) the\r\n  // browser thinks it has focus. this then returns nothing if we\r\n  // first focus a cell, then second click outside the grid, as then the\r\n  // grid cell will still be focused as far as the grid is concerned,\r\n  // however the browser focus will have moved somewhere else.\r\n  getFocusCellToUseAfterRefresh() {\r\n    const { gos, focusedCell } = this;\r\n    if (gos.get(\"suppressFocusAfterRefresh\") || gos.get(\"suppressCellFocus\") || !focusedCell) {\r\n      return null;\r\n    }\r\n    if (!this.doesRowOrCellHaveBrowserFocus()) {\r\n      return null;\r\n    }\r\n    return focusedCell;\r\n  }\r\n  getFocusHeaderToUseAfterRefresh() {\r\n    if (this.gos.get(\"suppressFocusAfterRefresh\") || !this.focusedHeader) {\r\n      return null;\r\n    }\r\n    if (!this.isDomDataPresentInHierarchy(_getActiveDomElement(this.beans), DOM_DATA_KEY_HEADER_CTRL)) {\r\n      return null;\r\n    }\r\n    return this.focusedHeader;\r\n  }\r\n  /**\r\n   * Check for both cells and rows, as a row might be destroyed and the dom data removed before the cell if the\r\n   * row is animating out.\r\n   */\r\n  doesRowOrCellHaveBrowserFocus() {\r\n    const activeElement = _getActiveDomElement(this.beans);\r\n    if (this.isDomDataPresentInHierarchy(activeElement, DOM_DATA_KEY_CELL_CTRL)) {\r\n      return true;\r\n    }\r\n    return this.isDomDataPresentInHierarchy(activeElement, DOM_DATA_KEY_ROW_CTRL);\r\n  }\r\n  isDomDataPresentInHierarchy(eBrowserCell, key) {\r\n    let ePointer = eBrowserCell;\r\n    while (ePointer) {\r\n      const data = _getDomData(this.gos, ePointer, key);\r\n      if (data) {\r\n        return true;\r\n      }\r\n      ePointer = ePointer.parentNode;\r\n    }\r\n    return false;\r\n  }\r\n  getFocusedCell() {\r\n    return this.focusedCell;\r\n  }\r\n  getFocusEventParams(focusedCellPosition) {\r\n    const { rowIndex, rowPinned, column } = focusedCellPosition;\r\n    const params = {\r\n      rowIndex,\r\n      rowPinned,\r\n      column,\r\n      isFullWidthCell: false\r\n    };\r\n    const rowCtrl = this.rowRenderer.getRowByPosition({ rowIndex, rowPinned });\r\n    if (rowCtrl) {\r\n      params.isFullWidthCell = rowCtrl.isFullWidth();\r\n    }\r\n    return params;\r\n  }\r\n  clearFocusedCell() {\r\n    if (this.focusedCell == null) {\r\n      return;\r\n    }\r\n    const focusEventParams = this.getFocusEventParams(this.focusedCell);\r\n    this.focusedCell = null;\r\n    this.eventSvc.dispatchEvent({\r\n      type: \"cellFocusCleared\",\r\n      ...focusEventParams\r\n    });\r\n  }\r\n  setFocusedCell(params) {\r\n    this.setFocusRecovered();\r\n    const {\r\n      column,\r\n      rowIndex,\r\n      rowPinned,\r\n      forceBrowserFocus = false,\r\n      preventScrollOnBrowserFocus = false,\r\n      sourceEvent\r\n    } = params;\r\n    const gridColumn = this.colModel.getCol(column);\r\n    if (!gridColumn) {\r\n      this.focusedCell = null;\r\n      return;\r\n    }\r\n    this.focusedCell = {\r\n      rowIndex,\r\n      rowPinned: _makeNull(rowPinned),\r\n      column: gridColumn\r\n    };\r\n    const focusEventParams = this.getFocusEventParams(this.focusedCell);\r\n    this.eventSvc.dispatchEvent({\r\n      type: \"cellFocused\",\r\n      ...focusEventParams,\r\n      ...this.previousCellFocusParams && { previousParams: this.previousCellFocusParams },\r\n      forceBrowserFocus,\r\n      preventScrollOnBrowserFocus,\r\n      sourceEvent\r\n    });\r\n    this.previousCellFocusParams = focusEventParams;\r\n  }\r\n  isCellFocused(cellPosition) {\r\n    if (this.focusedCell == null) {\r\n      return false;\r\n    }\r\n    return _areCellsEqual(cellPosition, this.focusedCell);\r\n  }\r\n  isHeaderWrapperFocused(headerCtrl) {\r\n    if (this.focusedHeader == null) {\r\n      return false;\r\n    }\r\n    const {\r\n      column,\r\n      rowCtrl: { rowIndex: headerRowIndex, pinned }\r\n    } = headerCtrl;\r\n    const { column: focusedColumn, headerRowIndex: focusedHeaderRowIndex } = this.focusedHeader;\r\n    return column === focusedColumn && headerRowIndex === focusedHeaderRowIndex && pinned == focusedColumn.getPinned();\r\n  }\r\n  focusHeaderPosition(params) {\r\n    this.setFocusRecovered();\r\n    if (_isHeaderFocusSuppressed(this.beans)) {\r\n      return false;\r\n    }\r\n    const { direction, fromTab, allowUserOverride, event, fromCell, rowWithoutSpanValue } = params;\r\n    let { headerPosition } = params;\r\n    if (fromCell && this.filterManager?.isAdvFilterHeaderActive()) {\r\n      return this.focusAdvancedFilter(headerPosition);\r\n    }\r\n    if (allowUserOverride) {\r\n      const currentPosition = this.focusedHeader;\r\n      const headerRowCount = getFocusHeaderRowCount(this.beans);\r\n      if (fromTab) {\r\n        const userFunc = this.gos.getCallback(\"tabToNextHeader\");\r\n        if (userFunc) {\r\n          headerPosition = this.getHeaderPositionFromUserFunc({\r\n            userFunc,\r\n            direction,\r\n            currentPosition,\r\n            headerPosition,\r\n            headerRowCount\r\n          });\r\n        }\r\n      } else {\r\n        const userFunc = this.gos.getCallback(\"navigateToNextHeader\");\r\n        if (userFunc && event) {\r\n          const params2 = {\r\n            key: event.key,\r\n            previousHeaderPosition: currentPosition,\r\n            nextHeaderPosition: headerPosition,\r\n            headerRowCount,\r\n            event\r\n          };\r\n          headerPosition = userFunc(params2);\r\n        }\r\n      }\r\n    }\r\n    if (!headerPosition) {\r\n      return false;\r\n    }\r\n    return this.focusProvidedHeaderPosition({\r\n      headerPosition,\r\n      direction,\r\n      event,\r\n      fromCell,\r\n      rowWithoutSpanValue\r\n    });\r\n  }\r\n  focusHeaderPositionFromUserFunc(params) {\r\n    if (_isHeaderFocusSuppressed(this.beans)) {\r\n      return false;\r\n    }\r\n    const { userFunc, headerPosition, direction, event } = params;\r\n    const currentPosition = this.focusedHeader;\r\n    const headerRowCount = getFocusHeaderRowCount(this.beans);\r\n    const newHeaderPosition = this.getHeaderPositionFromUserFunc({\r\n      userFunc,\r\n      direction,\r\n      currentPosition,\r\n      headerPosition,\r\n      headerRowCount\r\n    });\r\n    return !!newHeaderPosition && this.focusProvidedHeaderPosition({\r\n      headerPosition: newHeaderPosition,\r\n      direction,\r\n      event\r\n    });\r\n  }\r\n  getHeaderPositionFromUserFunc(params) {\r\n    const { userFunc, direction, currentPosition, headerPosition, headerRowCount } = params;\r\n    const userFuncParams = {\r\n      backwards: direction === \"Before\",\r\n      previousHeaderPosition: currentPosition,\r\n      nextHeaderPosition: headerPosition,\r\n      headerRowCount\r\n    };\r\n    const userResult = userFunc(userFuncParams);\r\n    if (userResult === true) {\r\n      return currentPosition;\r\n    }\r\n    if (userResult === false) {\r\n      return null;\r\n    }\r\n    return userResult;\r\n  }\r\n  focusProvidedHeaderPosition(params) {\r\n    const { headerPosition, direction, fromCell, rowWithoutSpanValue, event } = params;\r\n    const { column, headerRowIndex } = headerPosition;\r\n    const { filterManager, ctrlsSvc, headerNavigation } = this.beans;\r\n    if (headerRowIndex === -1) {\r\n      if (filterManager?.isAdvFilterHeaderActive()) {\r\n        return this.focusAdvancedFilter(headerPosition);\r\n      }\r\n      return this.focusGridView({ column, event });\r\n    }\r\n    headerNavigation?.scrollToColumn(column, direction);\r\n    const headerRowContainerCtrl = ctrlsSvc.getHeaderRowContainerCtrl(column.getPinned());\r\n    const focusSuccess = headerRowContainerCtrl?.focusHeader(headerPosition.headerRowIndex, column, event) || false;\r\n    if (headerNavigation && focusSuccess && (rowWithoutSpanValue != null || fromCell)) {\r\n      headerNavigation.currentHeaderRowWithoutSpan = rowWithoutSpanValue ?? -1;\r\n    }\r\n    return focusSuccess;\r\n  }\r\n  focusFirstHeader() {\r\n    if (this.overlays?.isExclusive() && this.focusOverlay()) {\r\n      return true;\r\n    }\r\n    const firstColumn = this.visibleCols.allCols[0];\r\n    if (!firstColumn) {\r\n      return false;\r\n    }\r\n    const headerPosition = getHeaderIndexToFocus(this.beans, firstColumn, 0);\r\n    return this.focusHeaderPosition({\r\n      headerPosition,\r\n      rowWithoutSpanValue: 0\r\n    });\r\n  }\r\n  focusLastHeader(event) {\r\n    if (this.overlays?.isExclusive() && this.focusOverlay(true)) {\r\n      return true;\r\n    }\r\n    const headerRowIndex = getFocusHeaderRowCount(this.beans) - 1;\r\n    const column = _last(this.visibleCols.allCols);\r\n    return this.focusHeaderPosition({\r\n      headerPosition: { headerRowIndex, column },\r\n      rowWithoutSpanValue: -1,\r\n      event\r\n    });\r\n  }\r\n  focusPreviousFromFirstCell(event) {\r\n    if (this.filterManager?.isAdvFilterHeaderActive()) {\r\n      return this.focusAdvancedFilter(null);\r\n    }\r\n    return this.focusLastHeader(event);\r\n  }\r\n  isAnyCellFocused() {\r\n    return !!this.focusedCell;\r\n  }\r\n  isRowFocused(rowIndex, rowPinnedType) {\r\n    if (this.focusedCell == null) {\r\n      return false;\r\n    }\r\n    return this.focusedCell.rowIndex === rowIndex && this.focusedCell.rowPinned === _makeNull(rowPinnedType);\r\n  }\r\n  focusOverlay(backwards) {\r\n    const overlayGui = this.overlays?.isVisible() && this.overlays.eWrapper?.getGui();\r\n    return !!overlayGui && _focusInto(overlayGui, backwards);\r\n  }\r\n  focusGridView(params) {\r\n    const { backwards = false, canFocusOverlay = true, event } = params;\r\n    if (this.overlays?.isExclusive()) {\r\n      return canFocusOverlay && this.focusOverlay(backwards);\r\n    }\r\n    if (_isCellFocusSuppressed(this.beans)) {\r\n      if (backwards) {\r\n        if (!_isHeaderFocusSuppressed(this.beans)) {\r\n          return this.focusLastHeader();\r\n        }\r\n      }\r\n      if (canFocusOverlay && this.focusOverlay(backwards)) {\r\n        return true;\r\n      }\r\n      if (backwards) {\r\n        return false;\r\n      }\r\n      return _focusNextGridCoreContainer(this.beans, backwards);\r\n    }\r\n    const nextRow = backwards ? _getLastRow(this.beans) : _getFirstRow(this.beans);\r\n    if (nextRow) {\r\n      const column = params.column ?? this.focusedHeader?.column;\r\n      const { rowIndex, rowPinned } = nextRow;\r\n      const rowNode = _getRowNode(this.beans, nextRow);\r\n      if (!column || !rowNode || rowIndex == null) {\r\n        return false;\r\n      }\r\n      if (column.isSuppressNavigable(rowNode)) {\r\n        const isRtl = this.gos.get(\"enableRtl\");\r\n        let key;\r\n        if (!event || event.key === KeyCode.TAB) {\r\n          key = isRtl ? KeyCode.LEFT : KeyCode.RIGHT;\r\n        } else {\r\n          key = event.key;\r\n        }\r\n        this.beans.navigation?.navigateToNextCell(\r\n          null,\r\n          key,\r\n          { rowIndex, column, rowPinned: rowPinned || null },\r\n          true\r\n        );\r\n        return true;\r\n      }\r\n      this.navigation?.ensureCellVisible({ rowIndex, column, rowPinned });\r\n      if (backwards) {\r\n        const rowCtrl = this.rowRenderer.getRowByPosition(nextRow);\r\n        if (rowCtrl?.isFullWidth() && this.navigation?.tryToFocusFullWidthRow(nextRow, backwards)) {\r\n          return true;\r\n        }\r\n      }\r\n      this.setFocusedCell({\r\n        rowIndex,\r\n        column,\r\n        rowPinned: _makeNull(rowPinned),\r\n        forceBrowserFocus: true\r\n      });\r\n      this.beans.rangeSvc?.setRangeToCell({ rowIndex, rowPinned, column });\r\n      return true;\r\n    }\r\n    if (canFocusOverlay && this.focusOverlay(backwards)) {\r\n      return true;\r\n    }\r\n    if (backwards && this.focusLastHeader()) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  focusAdvancedFilter(position) {\r\n    this.advFilterFocusColumn = position?.column;\r\n    return this.beans.advancedFilter?.getCtrl().focusHeaderComp() ?? false;\r\n  }\r\n  focusNextFromAdvancedFilter(backwards, forceFirstColumn) {\r\n    const column = (forceFirstColumn ? void 0 : this.advFilterFocusColumn) ?? this.visibleCols.allCols?.[0];\r\n    if (backwards) {\r\n      return this.focusHeaderPosition({\r\n        headerPosition: {\r\n          column,\r\n          headerRowIndex: getFocusHeaderRowCount(this.beans) - 1\r\n        }\r\n      });\r\n    } else {\r\n      return this.focusGridView({ column });\r\n    }\r\n  }\r\n  clearAdvancedFilterColumn() {\r\n    this.advFilterFocusColumn = void 0;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/gridBodyComp/scrollVisibleService.ts\r\nvar ScrollVisibleService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"scrollVisibleSvc\";\r\n  }\r\n  wireBeans(beans) {\r\n    this.ctrlsSvc = beans.ctrlsSvc;\r\n    this.colAnimation = beans.colAnimation;\r\n  }\r\n  postConstruct() {\r\n    this.getScrollbarWidth();\r\n    this.addManagedEventListeners({\r\n      displayedColumnsChanged: this.updateScrollVisible.bind(this),\r\n      displayedColumnsWidthChanged: this.updateScrollVisible.bind(this)\r\n    });\r\n  }\r\n  updateScrollVisible() {\r\n    const { colAnimation } = this;\r\n    if (colAnimation?.isActive()) {\r\n      colAnimation.executeLaterVMTurn(() => {\r\n        colAnimation.executeLaterVMTurn(() => this.updateScrollVisibleImpl());\r\n      });\r\n    } else {\r\n      this.updateScrollVisibleImpl();\r\n    }\r\n  }\r\n  updateScrollVisibleImpl() {\r\n    const centerRowCtrl = this.ctrlsSvc.get(\"center\");\r\n    if (!centerRowCtrl || this.colAnimation?.isActive()) {\r\n      return;\r\n    }\r\n    const params = {\r\n      horizontalScrollShowing: centerRowCtrl.isHorizontalScrollShowing(),\r\n      verticalScrollShowing: this.verticalScrollShowing\r\n    };\r\n    this.setScrollsVisible(params);\r\n    this.updateScrollGap();\r\n  }\r\n  updateScrollGap() {\r\n    const centerRowCtrl = this.ctrlsSvc.get(\"center\");\r\n    const horizontalGap = centerRowCtrl.hasHorizontalScrollGap();\r\n    const verticalGap = centerRowCtrl.hasVerticalScrollGap();\r\n    const atLeastOneDifferent = this.horizontalScrollGap !== horizontalGap || this.verticalScrollGap !== verticalGap;\r\n    if (atLeastOneDifferent) {\r\n      this.horizontalScrollGap = horizontalGap;\r\n      this.verticalScrollGap = verticalGap;\r\n      this.eventSvc.dispatchEvent({\r\n        type: \"scrollGapChanged\"\r\n      });\r\n    }\r\n  }\r\n  setScrollsVisible(params) {\r\n    const atLeastOneDifferent = this.horizontalScrollShowing !== params.horizontalScrollShowing || this.verticalScrollShowing !== params.verticalScrollShowing;\r\n    if (atLeastOneDifferent) {\r\n      this.horizontalScrollShowing = params.horizontalScrollShowing;\r\n      this.verticalScrollShowing = params.verticalScrollShowing;\r\n      this.eventSvc.dispatchEvent({\r\n        type: \"scrollVisibilityChanged\"\r\n      });\r\n    }\r\n  }\r\n  // the user might be using some non-standard scrollbar, eg a scrollbar that has zero\r\n  // width and overlays (like the Safari scrollbar, but presented in Chrome). so we\r\n  // allow the user to provide the scroll width before we work it out.\r\n  getScrollbarWidth() {\r\n    if (this.scrollbarWidth == null) {\r\n      const gridOptionsScrollbarWidth = this.gos.get(\"scrollbarWidth\");\r\n      const useGridOptions = typeof gridOptionsScrollbarWidth === \"number\" && gridOptionsScrollbarWidth >= 0;\r\n      const scrollbarWidth = useGridOptions ? gridOptionsScrollbarWidth : _getScrollbarWidth();\r\n      if (scrollbarWidth != null) {\r\n        this.scrollbarWidth = scrollbarWidth;\r\n        this.eventSvc.dispatchEvent({\r\n          type: \"scrollbarWidthChanged\"\r\n        });\r\n      }\r\n    }\r\n    return this.scrollbarWidth;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/gridDestroyService.ts\r\nvar GridDestroyService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"gridDestroySvc\";\r\n    this.destroyCalled = false;\r\n  }\r\n  destroy() {\r\n    if (this.destroyCalled) {\r\n      return;\r\n    }\r\n    const { stateSvc, ctrlsSvc, context } = this.beans;\r\n    this.eventSvc.dispatchEvent({\r\n      type: \"gridPreDestroyed\",\r\n      state: stateSvc?.getState() ?? {}\r\n    });\r\n    this.destroyCalled = true;\r\n    ctrlsSvc.get(\"gridCtrl\")?.destroyGridUi();\r\n    context.destroy();\r\n    super.destroy();\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/events.ts\r\nvar ALWAYS_SYNC_GLOBAL_EVENTS = /* @__PURE__ */ new Set([\"gridPreDestroyed\", \"fillStart\", \"pasteStart\"]);\r\n\r\n// packages/ag-grid-community/src/eventTypes.ts\r\nvar _PUBLIC_EVENTS = [\r\n  \"columnEverythingChanged\",\r\n  \"newColumnsLoaded\",\r\n  \"columnPivotModeChanged\",\r\n  \"pivotMaxColumnsExceeded\",\r\n  \"columnRowGroupChanged\",\r\n  \"expandOrCollapseAll\",\r\n  \"columnPivotChanged\",\r\n  \"gridColumnsChanged\",\r\n  \"columnValueChanged\",\r\n  \"columnMoved\",\r\n  \"columnVisible\",\r\n  \"columnPinned\",\r\n  \"columnGroupOpened\",\r\n  \"columnResized\",\r\n  \"displayedColumnsChanged\",\r\n  \"virtualColumnsChanged\",\r\n  \"columnHeaderMouseOver\",\r\n  \"columnHeaderMouseLeave\",\r\n  \"columnHeaderClicked\",\r\n  \"columnHeaderContextMenu\",\r\n  \"asyncTransactionsFlushed\",\r\n  \"rowGroupOpened\",\r\n  \"rowDataUpdated\",\r\n  \"pinnedRowDataChanged\",\r\n  \"pinnedRowsChanged\",\r\n  \"rangeSelectionChanged\",\r\n  \"cellSelectionChanged\",\r\n  \"chartCreated\",\r\n  \"chartRangeSelectionChanged\",\r\n  \"chartOptionsChanged\",\r\n  \"chartDestroyed\",\r\n  \"toolPanelVisibleChanged\",\r\n  \"toolPanelSizeChanged\",\r\n  \"modelUpdated\",\r\n  \"cutStart\",\r\n  \"cutEnd\",\r\n  \"pasteStart\",\r\n  \"pasteEnd\",\r\n  \"fillStart\",\r\n  \"fillEnd\",\r\n  \"cellSelectionDeleteStart\",\r\n  \"cellSelectionDeleteEnd\",\r\n  \"rangeDeleteStart\",\r\n  \"rangeDeleteEnd\",\r\n  \"undoStarted\",\r\n  \"undoEnded\",\r\n  \"redoStarted\",\r\n  \"redoEnded\",\r\n  \"cellClicked\",\r\n  \"cellDoubleClicked\",\r\n  \"cellMouseDown\",\r\n  \"cellContextMenu\",\r\n  \"cellValueChanged\",\r\n  \"cellEditRequest\",\r\n  \"rowValueChanged\",\r\n  \"headerFocused\",\r\n  \"cellFocused\",\r\n  \"rowSelected\",\r\n  \"selectionChanged\",\r\n  \"tooltipShow\",\r\n  \"tooltipHide\",\r\n  \"cellKeyDown\",\r\n  \"cellMouseOver\",\r\n  \"cellMouseOut\",\r\n  \"filterChanged\",\r\n  \"filterModified\",\r\n  \"filterUiChanged\",\r\n  \"filterOpened\",\r\n  \"floatingFilterUiChanged\",\r\n  \"advancedFilterBuilderVisibleChanged\",\r\n  \"sortChanged\",\r\n  \"virtualRowRemoved\",\r\n  \"rowClicked\",\r\n  \"rowDoubleClicked\",\r\n  \"gridReady\",\r\n  \"gridPreDestroyed\",\r\n  \"gridSizeChanged\",\r\n  \"viewportChanged\",\r\n  \"firstDataRendered\",\r\n  \"dragStarted\",\r\n  \"dragStopped\",\r\n  \"dragCancelled\",\r\n  \"rowEditingStarted\",\r\n  \"rowEditingStopped\",\r\n  \"cellEditingStarted\",\r\n  \"cellEditingStopped\",\r\n  \"bodyScroll\",\r\n  \"bodyScrollEnd\",\r\n  \"paginationChanged\",\r\n  \"componentStateChanged\",\r\n  \"storeRefreshed\",\r\n  \"stateUpdated\",\r\n  \"columnMenuVisibleChanged\",\r\n  \"contextMenuVisibleChanged\",\r\n  \"rowDragEnter\",\r\n  \"rowDragMove\",\r\n  \"rowDragLeave\",\r\n  \"rowDragEnd\",\r\n  \"rowDragCancel\",\r\n  \"findChanged\",\r\n  \"rowResizeStarted\",\r\n  \"rowResizeEnded\",\r\n  \"columnsReset\",\r\n  \"bulkEditingStarted\",\r\n  \"bulkEditingStopped\",\r\n  \"batchEditingStarted\",\r\n  \"batchEditingStopped\"\r\n];\r\nvar _INTERNAL_EVENTS = [\r\n  \"scrollbarWidthChanged\",\r\n  \"keyShortcutChangedCellStart\",\r\n  \"keyShortcutChangedCellEnd\",\r\n  \"pinnedHeightChanged\",\r\n  \"cellFocusCleared\",\r\n  \"fullWidthRowFocused\",\r\n  \"checkboxChanged\",\r\n  \"heightScaleChanged\",\r\n  \"suppressMovableColumns\",\r\n  \"suppressMenuHide\",\r\n  \"suppressFieldDotNotation\",\r\n  \"columnPanelItemDragStart\",\r\n  \"columnPanelItemDragEnd\",\r\n  \"bodyHeightChanged\",\r\n  \"columnContainerWidthChanged\",\r\n  \"displayedColumnsWidthChanged\",\r\n  \"scrollVisibilityChanged\",\r\n  \"scrollGapChanged\",\r\n  \"columnHoverChanged\",\r\n  \"flashCells\",\r\n  \"paginationPixelOffsetChanged\",\r\n  \"displayedRowsChanged\",\r\n  \"leftPinnedWidthChanged\",\r\n  \"rightPinnedWidthChanged\",\r\n  \"rowContainerHeightChanged\",\r\n  \"headerHeightChanged\",\r\n  \"columnGroupHeaderHeightChanged\",\r\n  \"columnHeaderHeightChanged\",\r\n  \"gridStylesChanged\",\r\n  \"storeUpdated\",\r\n  \"filterDestroyed\",\r\n  \"rowDataUpdateStarted\",\r\n  \"rowCountReady\",\r\n  \"advancedFilterEnabledChanged\",\r\n  \"dataTypesInferred\",\r\n  \"fieldValueChanged\",\r\n  \"fieldPickerValueSelected\",\r\n  \"richSelectListRowSelected\",\r\n  \"sideBarUpdated\",\r\n  \"alignedGridScroll\",\r\n  \"alignedGridColumn\",\r\n  \"gridOptionsChanged\",\r\n  \"chartTitleEdit\",\r\n  \"recalculateRowBounds\",\r\n  \"stickyTopOffsetChanged\",\r\n  \"overlayExclusiveChanged\",\r\n  \"rowNodeDataChanged\",\r\n  \"cellEditValuesChanged\",\r\n  \"filterSwitched\",\r\n  \"filterClosed\",\r\n  \"headerRowsChanged\"\r\n];\r\nvar _GET_ALL_EVENTS = () => [..._PUBLIC_EVENTS, ..._INTERNAL_EVENTS];\r\n\r\n// packages/ag-grid-community/src/publicEventHandlersMap.ts\r\nvar _PUBLIC_EVENT_HANDLERS_MAP = _PUBLIC_EVENTS.reduce(\r\n  (mem, ev) => {\r\n    mem[ev] = _getCallbackForEvent(ev);\r\n    return mem;\r\n  },\r\n  {}\r\n);\r\n\r\n// packages/ag-grid-community/src/sort/sortIndicatorComp.ts\r\nvar makeIconParams = (dataRefSuffix, classSuffix) => ({\r\n  tag: \"span\",\r\n  ref: `eSort${dataRefSuffix}`,\r\n  cls: `ag-sort-indicator-icon ag-sort-${classSuffix} ag-hidden`,\r\n  attrs: { \"aria-hidden\": \"true\" }\r\n});\r\nvar SortIndicatorElement = {\r\n  tag: \"span\",\r\n  cls: \"ag-sort-indicator-container\",\r\n  children: [\r\n    makeIconParams(\"Order\", \"order\"),\r\n    makeIconParams(\"Asc\", \"ascending-icon\"),\r\n    makeIconParams(\"Desc\", \"descending-icon\"),\r\n    makeIconParams(\"Mixed\", \"mixed-icon\"),\r\n    makeIconParams(\"None\", \"none-icon\")\r\n  ]\r\n};\r\nvar SortIndicatorComp = class extends Component {\r\n  constructor(skipTemplate) {\r\n    super();\r\n    // Elements might by undefined when the user provides a custom template\r\n    this.eSortOrder = RefPlaceholder;\r\n    this.eSortAsc = RefPlaceholder;\r\n    this.eSortDesc = RefPlaceholder;\r\n    this.eSortMixed = RefPlaceholder;\r\n    this.eSortNone = RefPlaceholder;\r\n    if (!skipTemplate) {\r\n      this.setTemplate(SortIndicatorElement);\r\n    }\r\n  }\r\n  attachCustomElements(eSortOrder, eSortAsc, eSortDesc, eSortMixed, eSortNone) {\r\n    this.eSortOrder = eSortOrder;\r\n    this.eSortAsc = eSortAsc;\r\n    this.eSortDesc = eSortDesc;\r\n    this.eSortMixed = eSortMixed;\r\n    this.eSortNone = eSortNone;\r\n  }\r\n  setupSort(column, suppressOrder = false) {\r\n    this.column = column;\r\n    this.suppressOrder = suppressOrder;\r\n    this.setupMultiSortIndicator();\r\n    if (!column.isSortable() && !column.getColDef().showRowGroup) {\r\n      return;\r\n    }\r\n    this.addInIcon(\"sortAscending\", this.eSortAsc, column);\r\n    this.addInIcon(\"sortDescending\", this.eSortDesc, column);\r\n    this.addInIcon(\"sortUnSort\", this.eSortNone, column);\r\n    const updateIcons = this.updateIcons.bind(this);\r\n    const sortUpdated = this.onSortChanged.bind(this);\r\n    this.addManagedPropertyListener(\"unSortIcon\", updateIcons);\r\n    this.addManagedEventListeners({\r\n      newColumnsLoaded: updateIcons,\r\n      // Watch global events, as row group columns can effect their display column.\r\n      sortChanged: sortUpdated,\r\n      // when grouping changes so can sort indexes and icons\r\n      columnRowGroupChanged: sortUpdated\r\n    });\r\n    this.onSortChanged();\r\n  }\r\n  addInIcon(iconName, eParent, column) {\r\n    if (eParent == null) {\r\n      return;\r\n    }\r\n    const eIcon = _createIconNoSpan(iconName, this.beans, column);\r\n    if (eIcon) {\r\n      eParent.appendChild(eIcon);\r\n    }\r\n  }\r\n  onSortChanged() {\r\n    this.updateIcons();\r\n    if (!this.suppressOrder) {\r\n      this.updateSortOrder();\r\n    }\r\n  }\r\n  updateIcons() {\r\n    const { eSortAsc, eSortDesc, eSortNone, column, gos, beans } = this;\r\n    const sortDirection = beans.sortSvc.getDisplaySortForColumn(column);\r\n    if (eSortAsc) {\r\n      const isAscending = sortDirection === \"asc\";\r\n      _setDisplayed(eSortAsc, isAscending, { skipAriaHidden: true });\r\n    }\r\n    if (eSortDesc) {\r\n      const isDescending = sortDirection === \"desc\";\r\n      _setDisplayed(eSortDesc, isDescending, { skipAriaHidden: true });\r\n    }\r\n    if (eSortNone) {\r\n      const alwaysHideNoSort = !column.getColDef().unSortIcon && !gos.get(\"unSortIcon\");\r\n      const isNone = sortDirection === null || sortDirection === void 0;\r\n      _setDisplayed(eSortNone, !alwaysHideNoSort && isNone, { skipAriaHidden: true });\r\n    }\r\n  }\r\n  setupMultiSortIndicator() {\r\n    const { eSortMixed, column, gos } = this;\r\n    this.addInIcon(\"sortUnSort\", eSortMixed, column);\r\n    const isColumnShowingRowGroup = column.getColDef().showRowGroup;\r\n    const areGroupsCoupled = _isColumnsSortingCoupledToGroup(gos);\r\n    if (areGroupsCoupled && isColumnShowingRowGroup) {\r\n      this.addManagedEventListeners({\r\n        // Watch global events, as row group columns can effect their display column.\r\n        sortChanged: this.updateMultiSortIndicator.bind(this),\r\n        // when grouping changes so can sort indexes and icons\r\n        columnRowGroupChanged: this.updateMultiSortIndicator.bind(this)\r\n      });\r\n      this.updateMultiSortIndicator();\r\n    }\r\n  }\r\n  updateMultiSortIndicator() {\r\n    const { eSortMixed, beans, column } = this;\r\n    if (eSortMixed) {\r\n      const isMixedSort = beans.sortSvc.getDisplaySortForColumn(column) === \"mixed\";\r\n      _setDisplayed(eSortMixed, isMixedSort, { skipAriaHidden: true });\r\n    }\r\n  }\r\n  // we listen here for global sort events, NOT column sort events, as we want to do this\r\n  // when sorting has been set on all column (if we listened just for our col (where we\r\n  // set the asc / desc icons) then it's possible other cols are yet to get their sorting state.\r\n  updateSortOrder() {\r\n    const {\r\n      eSortOrder,\r\n      column,\r\n      beans: { sortSvc }\r\n    } = this;\r\n    if (!eSortOrder) {\r\n      return;\r\n    }\r\n    const allColumnsWithSorting = sortSvc.getColumnsWithSortingOrdered();\r\n    const indexThisCol = sortSvc.getDisplaySortIndexForColumn(column) ?? -1;\r\n    const moreThanOneColSorting = allColumnsWithSorting.some(\r\n      (col) => sortSvc.getDisplaySortIndexForColumn(col) ?? -1 >= 1\r\n    );\r\n    const showIndex = indexThisCol >= 0 && moreThanOneColSorting;\r\n    _setDisplayed(eSortOrder, showIndex, { skipAriaHidden: true });\r\n    if (indexThisCol >= 0) {\r\n      eSortOrder.textContent = (indexThisCol + 1).toString();\r\n    } else {\r\n      _clearElement(eSortOrder);\r\n    }\r\n  }\r\n};\r\nvar SortIndicatorSelector = {\r\n  selector: \"AG-SORT-INDICATOR\",\r\n  component: SortIndicatorComp\r\n};\r\n\r\n// packages/ag-grid-community/src/sort/sortService.ts\r\nvar DEFAULT_SORTING_ORDER = [\"asc\", \"desc\", null];\r\nvar SortService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"sortSvc\";\r\n  }\r\n  progressSort(column, multiSort, source) {\r\n    const nextDirection = this.getNextSortDirection(column);\r\n    this.setSortForColumn(column, nextDirection, multiSort, source);\r\n  }\r\n  progressSortFromEvent(column, event) {\r\n    const sortUsingCtrl = this.gos.get(\"multiSortKey\") === \"ctrl\";\r\n    const multiSort = sortUsingCtrl ? event.ctrlKey || event.metaKey : event.shiftKey;\r\n    this.progressSort(column, multiSort, \"uiColumnSorted\");\r\n  }\r\n  setSortForColumn(column, sort, multiSort, source) {\r\n    if (sort !== \"asc\" && sort !== \"desc\") {\r\n      sort = null;\r\n    }\r\n    const { gos, showRowGroupCols } = this.beans;\r\n    const isColumnsSortingCoupledToGroup = _isColumnsSortingCoupledToGroup(gos);\r\n    let columnsToUpdate = [column];\r\n    if (isColumnsSortingCoupledToGroup) {\r\n      if (column.getColDef().showRowGroup) {\r\n        const rowGroupColumns = showRowGroupCols?.getSourceColumnsForGroupColumn?.(column);\r\n        const sortableRowGroupColumns = rowGroupColumns?.filter((col) => col.isSortable());\r\n        if (sortableRowGroupColumns) {\r\n          columnsToUpdate = [column, ...sortableRowGroupColumns];\r\n        }\r\n      }\r\n    }\r\n    columnsToUpdate.forEach((col) => this.setColSort(col, sort, source));\r\n    const doingMultiSort = (multiSort || gos.get(\"alwaysMultiSort\")) && !gos.get(\"suppressMultiSort\");\r\n    const updatedColumns = [];\r\n    if (!doingMultiSort) {\r\n      const clearedColumns = this.clearSortBarTheseColumns(columnsToUpdate, source);\r\n      updatedColumns.push(...clearedColumns);\r\n    }\r\n    this.updateSortIndex(column);\r\n    updatedColumns.push(...columnsToUpdate);\r\n    this.dispatchSortChangedEvents(source, updatedColumns);\r\n  }\r\n  updateSortIndex(lastColToChange) {\r\n    const { gos, colModel, showRowGroupCols } = this.beans;\r\n    const isCoupled = _isColumnsSortingCoupledToGroup(gos);\r\n    const groupParent = showRowGroupCols?.getShowRowGroupCol(lastColToChange.getId());\r\n    const lastSortIndexCol = isCoupled ? groupParent || lastColToChange : lastColToChange;\r\n    const allSortedCols = this.getColumnsWithSortingOrdered();\r\n    colModel.forAllCols((col) => this.setColSortIndex(col, null));\r\n    const allSortedColsWithoutChangesOrGroups = allSortedCols.filter((col) => {\r\n      if (isCoupled && col.getColDef().showRowGroup) {\r\n        return false;\r\n      }\r\n      return col !== lastSortIndexCol;\r\n    });\r\n    const sortedColsWithIndices = lastSortIndexCol.getSort() ? [...allSortedColsWithoutChangesOrGroups, lastSortIndexCol] : allSortedColsWithoutChangesOrGroups;\r\n    sortedColsWithIndices.forEach((col, idx) => this.setColSortIndex(col, idx));\r\n  }\r\n  // gets called by API, so if data changes, use can call this, which will end up\r\n  // working out the sort order again of the rows.\r\n  onSortChanged(source, columns) {\r\n    this.dispatchSortChangedEvents(source, columns);\r\n  }\r\n  isSortActive() {\r\n    let isSorting = false;\r\n    this.beans.colModel.forAllCols((col) => {\r\n      if (col.getSort()) {\r\n        isSorting = true;\r\n      }\r\n    });\r\n    return isSorting;\r\n  }\r\n  dispatchSortChangedEvents(source, columns) {\r\n    const event = {\r\n      type: \"sortChanged\",\r\n      source\r\n    };\r\n    if (columns) {\r\n      event.columns = columns;\r\n    }\r\n    this.eventSvc.dispatchEvent(event);\r\n  }\r\n  clearSortBarTheseColumns(columnsToSkip, source) {\r\n    const clearedColumns = [];\r\n    this.beans.colModel.forAllCols((columnToClear) => {\r\n      if (!columnsToSkip.includes(columnToClear)) {\r\n        if (columnToClear.getSort()) {\r\n          clearedColumns.push(columnToClear);\r\n        }\r\n        this.setColSort(columnToClear, void 0, source);\r\n      }\r\n    });\r\n    return clearedColumns;\r\n  }\r\n  getNextSortDirection(column) {\r\n    const sortingOrder = column.getColDef().sortingOrder ?? this.gos.get(\"sortingOrder\") ?? DEFAULT_SORTING_ORDER;\r\n    const currentIndex = sortingOrder.indexOf(column.getSort());\r\n    const notInArray = currentIndex < 0;\r\n    const lastItemInArray = currentIndex == sortingOrder.length - 1;\r\n    return notInArray || lastItemInArray ? sortingOrder[0] : sortingOrder[currentIndex + 1];\r\n  }\r\n  /**\r\n   * @returns a map of sort indexes for every sorted column, if groups sort primaries then they will have equivalent indices\r\n   */\r\n  getIndexedSortMap() {\r\n    const { gos, colModel, showRowGroupCols, rowGroupColsSvc } = this.beans;\r\n    let allSortedCols = [];\r\n    colModel.forAllCols((col) => {\r\n      if (col.getSort()) {\r\n        allSortedCols.push(col);\r\n      }\r\n    });\r\n    if (colModel.isPivotMode()) {\r\n      const isSortingLinked = _isColumnsSortingCoupledToGroup(gos);\r\n      allSortedCols = allSortedCols.filter((col) => {\r\n        const isAggregated = !!col.getAggFunc();\r\n        const isSecondary = !col.isPrimary();\r\n        const isGroup = isSortingLinked ? showRowGroupCols?.getShowRowGroupCol(col.getId()) : col.getColDef().showRowGroup;\r\n        return isAggregated || isSecondary || isGroup;\r\n      });\r\n    }\r\n    const sortedRowGroupCols = rowGroupColsSvc?.columns.filter((col) => !!col.getSort()) ?? [];\r\n    const allColsIndexes = {};\r\n    allSortedCols.forEach((col, index) => allColsIndexes[col.getId()] = index);\r\n    allSortedCols.sort((a, b) => {\r\n      const iA = a.getSortIndex();\r\n      const iB = b.getSortIndex();\r\n      if (iA != null && iB != null) {\r\n        return iA - iB;\r\n      } else if (iA == null && iB == null) {\r\n        const posA = allColsIndexes[a.getId()];\r\n        const posB = allColsIndexes[b.getId()];\r\n        return posA > posB ? 1 : -1;\r\n      } else if (iB == null) {\r\n        return -1;\r\n      } else {\r\n        return 1;\r\n      }\r\n    });\r\n    const isSortLinked = _isColumnsSortingCoupledToGroup(gos) && !!sortedRowGroupCols.length;\r\n    if (isSortLinked) {\r\n      allSortedCols = [\r\n        ...new Set(\r\n          // if linked sorting, replace all columns with the display group column for index purposes, and ensure uniqueness\r\n          allSortedCols.map((col) => showRowGroupCols?.getShowRowGroupCol(col.getId()) ?? col)\r\n        )\r\n      ];\r\n    }\r\n    const indexMap = /* @__PURE__ */ new Map();\r\n    allSortedCols.forEach((col, idx) => indexMap.set(col, idx));\r\n    if (isSortLinked) {\r\n      sortedRowGroupCols.forEach((col) => {\r\n        const groupDisplayCol = showRowGroupCols.getShowRowGroupCol(col.getId());\r\n        indexMap.set(col, indexMap.get(groupDisplayCol));\r\n      });\r\n    }\r\n    return indexMap;\r\n  }\r\n  getColumnsWithSortingOrdered() {\r\n    return [...this.getIndexedSortMap().entries()].sort(([, idx1], [, idx2]) => idx1 - idx2).map(([col]) => col);\r\n  }\r\n  // used by server side row models, to sent sort to server\r\n  getSortModel() {\r\n    return this.getColumnsWithSortingOrdered().filter((column) => column.getSort()).map((column) => ({\r\n      sort: column.getSort(),\r\n      colId: column.getId()\r\n    }));\r\n  }\r\n  getSortOptions() {\r\n    return this.getColumnsWithSortingOrdered().filter((column) => column.getSort()).map((column) => ({\r\n      sort: column.getSort(),\r\n      column\r\n    }));\r\n  }\r\n  canColumnDisplayMixedSort(column) {\r\n    const isColumnSortCouplingActive = _isColumnsSortingCoupledToGroup(this.gos);\r\n    const isGroupDisplayColumn = !!column.getColDef().showRowGroup;\r\n    return isColumnSortCouplingActive && isGroupDisplayColumn;\r\n  }\r\n  getDisplaySortForColumn(column) {\r\n    const linkedColumns = this.beans.showRowGroupCols?.getSourceColumnsForGroupColumn(column);\r\n    if (!this.canColumnDisplayMixedSort(column) || !linkedColumns?.length) {\r\n      return column.getSort();\r\n    }\r\n    const columnHasUniqueData = column.getColDef().field != null || !!column.getColDef().valueGetter;\r\n    const sortableColumns = columnHasUniqueData ? [column, ...linkedColumns] : linkedColumns;\r\n    const firstSort = sortableColumns[0].getSort();\r\n    const allMatch = sortableColumns.every((col) => col.getSort() == firstSort);\r\n    if (!allMatch) {\r\n      return \"mixed\";\r\n    }\r\n    return firstSort;\r\n  }\r\n  getDisplaySortIndexForColumn(column) {\r\n    return this.getIndexedSortMap().get(column);\r\n  }\r\n  setupHeader(comp, column, clickElement) {\r\n    let lastMovingChanged = 0;\r\n    comp.addManagedListeners(column, {\r\n      movingChanged: () => {\r\n        lastMovingChanged = Date.now();\r\n      }\r\n    });\r\n    if (clickElement) {\r\n      comp.addManagedElementListeners(clickElement, {\r\n        click: (event) => {\r\n          const moving = column.isMoving();\r\n          const nowTime = Date.now();\r\n          const movedRecently = nowTime - lastMovingChanged < 50;\r\n          const columnMoving = moving || movedRecently;\r\n          if (!columnMoving) {\r\n            this.progressSortFromEvent(column, event);\r\n          }\r\n        }\r\n      });\r\n    }\r\n    const onSortingChanged = () => {\r\n      const sort = column.getSort();\r\n      comp.toggleCss(\"ag-header-cell-sorted-asc\", sort === \"asc\");\r\n      comp.toggleCss(\"ag-header-cell-sorted-desc\", sort === \"desc\");\r\n      comp.toggleCss(\"ag-header-cell-sorted-none\", !sort);\r\n      if (column.getColDef().showRowGroup) {\r\n        const sourceColumns = this.beans.showRowGroupCols?.getSourceColumnsForGroupColumn(column);\r\n        const sortDirectionsMatch = sourceColumns?.every(\r\n          (sourceCol) => column.getSort() == sourceCol.getSort()\r\n        );\r\n        const isMultiSorting = !sortDirectionsMatch;\r\n        comp.toggleCss(\"ag-header-cell-sorted-mixed\", isMultiSorting);\r\n      }\r\n    };\r\n    comp.addManagedEventListeners({\r\n      sortChanged: onSortingChanged,\r\n      columnRowGroupChanged: onSortingChanged\r\n    });\r\n  }\r\n  initCol(column) {\r\n    const { sort, initialSort, sortIndex, initialSortIndex } = column.colDef;\r\n    if (sort !== void 0) {\r\n      if (sort === \"asc\" || sort === \"desc\") {\r\n        column.sort = sort;\r\n      }\r\n    } else {\r\n      if (initialSort === \"asc\" || initialSort === \"desc\") {\r\n        column.sort = initialSort;\r\n      }\r\n    }\r\n    if (sortIndex !== void 0) {\r\n      if (sortIndex !== null) {\r\n        column.sortIndex = sortIndex;\r\n      }\r\n    } else {\r\n      if (initialSortIndex !== null) {\r\n        column.sortIndex = initialSortIndex;\r\n      }\r\n    }\r\n  }\r\n  updateColSort(column, sort, source) {\r\n    if (sort !== void 0) {\r\n      if (sort === \"desc\" || sort === \"asc\") {\r\n        this.setColSort(column, sort, source);\r\n      } else {\r\n        this.setColSort(column, void 0, source);\r\n      }\r\n    }\r\n  }\r\n  setColSort(column, sort, source) {\r\n    if (column.sort !== sort) {\r\n      column.sort = sort;\r\n      column.dispatchColEvent(\"sortChanged\", source);\r\n    }\r\n    column.dispatchStateUpdatedEvent(\"sort\");\r\n  }\r\n  setColSortIndex(column, sortOrder) {\r\n    column.sortIndex = sortOrder;\r\n    column.dispatchStateUpdatedEvent(\"sortIndex\");\r\n  }\r\n  createSortIndicator(skipTemplate) {\r\n    return new SortIndicatorComp(skipTemplate);\r\n  }\r\n  getSortIndicatorSelector() {\r\n    return SortIndicatorSelector;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/validation/rules/userCompValidations.ts\r\nvar USER_COMP_MODULES = {\r\n  agSetColumnFilter: \"SetFilter\",\r\n  agSetColumnFloatingFilter: \"SetFilter\",\r\n  agMultiColumnFilter: \"MultiFilter\",\r\n  agMultiColumnFloatingFilter: \"MultiFilter\",\r\n  agGroupColumnFilter: \"GroupFilter\",\r\n  agGroupColumnFloatingFilter: \"GroupFilter\",\r\n  agGroupCellRenderer: \"GroupCellRenderer\",\r\n  agGroupRowRenderer: \"GroupCellRenderer\",\r\n  agRichSelect: \"RichSelect\",\r\n  agRichSelectCellEditor: \"RichSelect\",\r\n  agDetailCellRenderer: \"SharedMasterDetail\",\r\n  agSparklineCellRenderer: \"Sparklines\",\r\n  agDragAndDropImage: \"SharedDragAndDrop\",\r\n  agColumnHeader: \"ColumnHeaderComp\",\r\n  agColumnGroupHeader: \"ColumnGroupHeaderComp\",\r\n  agSortIndicator: \"Sort\",\r\n  agAnimateShowChangeCellRenderer: \"HighlightChanges\",\r\n  agAnimateSlideCellRenderer: \"HighlightChanges\",\r\n  agLoadingCellRenderer: \"LoadingCellRenderer\",\r\n  agSkeletonCellRenderer: \"SkeletonCellRenderer\",\r\n  agCheckboxCellRenderer: \"CheckboxCellRenderer\",\r\n  agLoadingOverlay: \"Overlay\",\r\n  agNoRowsOverlay: \"Overlay\",\r\n  agTooltipComponent: \"Tooltip\",\r\n  agReadOnlyFloatingFilter: \"CustomFilter\",\r\n  agTextColumnFilter: \"TextFilter\",\r\n  agNumberColumnFilter: \"NumberFilter\",\r\n  agDateColumnFilter: \"DateFilter\",\r\n  agDateInput: \"DateFilter\",\r\n  agTextColumnFloatingFilter: \"TextFilter\",\r\n  agNumberColumnFloatingFilter: \"NumberFilter\",\r\n  agDateColumnFloatingFilter: \"DateFilter\",\r\n  agCellEditor: \"TextEditor\",\r\n  agSelectCellEditor: \"SelectEditor\",\r\n  agTextCellEditor: \"TextEditor\",\r\n  agNumberCellEditor: \"NumberEditor\",\r\n  agDateCellEditor: \"DateEditor\",\r\n  agDateStringCellEditor: \"DateEditor\",\r\n  agCheckboxCellEditor: \"CheckboxEditor\",\r\n  agLargeTextCellEditor: \"LargeTextEditor\",\r\n  agMenuItem: \"MenuItem\",\r\n  agColumnsToolPanel: \"ColumnsToolPanel\",\r\n  agFiltersToolPanel: \"FiltersToolPanel\",\r\n  agNewFiltersToolPanel: \"NewFiltersToolPanel\",\r\n  agAggregationComponent: \"StatusBar\",\r\n  agSelectedRowCountComponent: \"StatusBar\",\r\n  agTotalRowCountComponent: \"StatusBar\",\r\n  agFilteredRowCountComponent: \"StatusBar\",\r\n  agTotalAndFilteredRowCountComponent: \"StatusBar\",\r\n  agFindCellRenderer: \"Find\"\r\n};\r\n\r\n// packages/ag-grid-community/src/validation/rules/colDefValidations.ts\r\nvar COLUMN_DEFINITION_DEPRECATIONS = () => ({\r\n  checkboxSelection: { version: \"32.2\", message: \"Use `rowSelection.checkboxes` in `GridOptions` instead.\" },\r\n  headerCheckboxSelection: {\r\n    version: \"32.2\",\r\n    message: \"Use `rowSelection.headerCheckbox = true` in `GridOptions` instead.\"\r\n  },\r\n  headerCheckboxSelectionFilteredOnly: {\r\n    version: \"32.2\",\r\n    message: 'Use `rowSelection.selectAll = \"filtered\"` in `GridOptions` instead.'\r\n  },\r\n  headerCheckboxSelectionCurrentPageOnly: {\r\n    version: \"32.2\",\r\n    message: 'Use `rowSelection.selectAll = \"currentPage\"` in `GridOptions` instead.'\r\n  },\r\n  showDisabledCheckboxes: {\r\n    version: \"32.2\",\r\n    message: \"Use `rowSelection.hideDisabledCheckboxes = true` in `GridOptions` instead.\"\r\n  }\r\n});\r\nvar COLUMN_DEFINITION_MOD_VALIDATIONS = {\r\n  aggFunc: \"SharedAggregation\",\r\n  autoHeight: \"RowAutoHeight\",\r\n  cellClass: \"CellStyle\",\r\n  cellClassRules: \"CellStyle\",\r\n  cellEditor: ({ cellEditor, editable }) => {\r\n    if (!editable) {\r\n      return null;\r\n    }\r\n    if (typeof cellEditor === \"string\") {\r\n      return USER_COMP_MODULES[cellEditor] ?? \"CustomEditor\";\r\n    }\r\n    return \"CustomEditor\";\r\n  },\r\n  cellRenderer: ({ cellRenderer }) => {\r\n    if (typeof cellRenderer !== \"string\") {\r\n      return null;\r\n    }\r\n    return USER_COMP_MODULES[cellRenderer];\r\n  },\r\n  cellStyle: \"CellStyle\",\r\n  columnChooserParams: \"ColumnMenu\",\r\n  contextMenuItems: \"ContextMenu\",\r\n  dndSource: \"DragAndDrop\",\r\n  dndSourceOnRowDrag: \"DragAndDrop\",\r\n  editable: ({ editable, cellEditor }) => {\r\n    if (editable && !cellEditor) {\r\n      return \"TextEditor\";\r\n    }\r\n    return null;\r\n  },\r\n  enableCellChangeFlash: \"HighlightChanges\",\r\n  enablePivot: \"SharedPivot\",\r\n  enableRowGroup: \"SharedRowGrouping\",\r\n  enableValue: \"SharedAggregation\",\r\n  filter: ({ filter }) => {\r\n    if (filter && typeof filter !== \"string\" && typeof filter !== \"boolean\") {\r\n      return \"CustomFilter\";\r\n    }\r\n    if (typeof filter === \"string\") {\r\n      return USER_COMP_MODULES[filter] ?? \"ColumnFilter\";\r\n    }\r\n    return \"ColumnFilter\";\r\n  },\r\n  floatingFilter: \"ColumnFilter\",\r\n  getQuickFilterText: \"QuickFilter\",\r\n  headerTooltip: \"Tooltip\",\r\n  mainMenuItems: \"ColumnMenu\",\r\n  menuTabs: (options) => {\r\n    const enterpriseMenuTabs = [\"columnsMenuTab\", \"generalMenuTab\"];\r\n    if (options.menuTabs?.some((tab) => enterpriseMenuTabs.includes(tab))) {\r\n      return \"ColumnMenu\";\r\n    }\r\n    return null;\r\n  },\r\n  pivot: \"SharedPivot\",\r\n  pivotIndex: \"SharedPivot\",\r\n  rowDrag: \"RowDrag\",\r\n  rowGroup: \"SharedRowGrouping\",\r\n  rowGroupIndex: \"SharedRowGrouping\",\r\n  tooltipField: \"Tooltip\",\r\n  tooltipValueGetter: \"Tooltip\",\r\n  spanRows: \"CellSpan\"\r\n};\r\nvar COLUMN_DEFINITION_VALIDATIONS = () => {\r\n  const validations = {\r\n    autoHeight: {\r\n      supportedRowModels: [\"clientSide\", \"serverSide\"],\r\n      validate: (_colDef, { paginationAutoPageSize }) => {\r\n        if (paginationAutoPageSize) {\r\n          return \"colDef.autoHeight is not supported with paginationAutoPageSize.\";\r\n        }\r\n        return null;\r\n      }\r\n    },\r\n    cellRendererParams: {\r\n      validate: (colDef) => {\r\n        const groupColumn = colDef.rowGroup != null || colDef.rowGroupIndex != null || colDef.cellRenderer === \"agGroupCellRenderer\";\r\n        if (groupColumn && \"checkbox\" in colDef.cellRendererParams) {\r\n          return 'Since v33.0, `cellRendererParams.checkbox` has been deprecated. Use `rowSelection.checkboxLocation = \"autoGroupColumn\"` instead.';\r\n        }\r\n        return null;\r\n      }\r\n    },\r\n    flex: {\r\n      validate: (_options, gridOptions) => {\r\n        if (gridOptions.autoSizeStrategy) {\r\n          return \"colDef.flex is not supported with gridOptions.autoSizeStrategy\";\r\n        }\r\n        return null;\r\n      }\r\n    },\r\n    headerCheckboxSelection: {\r\n      supportedRowModels: [\"clientSide\", \"serverSide\"],\r\n      validate: (_options, { rowSelection }) => rowSelection === \"multiple\" ? null : \"headerCheckboxSelection is only supported with rowSelection=multiple\"\r\n    },\r\n    headerCheckboxSelectionCurrentPageOnly: {\r\n      supportedRowModels: [\"clientSide\"],\r\n      validate: (_options, { rowSelection }) => rowSelection === \"multiple\" ? null : \"headerCheckboxSelectionCurrentPageOnly is only supported with rowSelection=multiple\"\r\n    },\r\n    headerCheckboxSelectionFilteredOnly: {\r\n      supportedRowModels: [\"clientSide\"],\r\n      validate: (_options, { rowSelection }) => rowSelection === \"multiple\" ? null : \"headerCheckboxSelectionFilteredOnly is only supported with rowSelection=multiple\"\r\n    },\r\n    headerValueGetter: {\r\n      validate: (_options) => {\r\n        const headerValueGetter = _options.headerValueGetter;\r\n        if (typeof headerValueGetter === \"function\" || typeof headerValueGetter === \"string\") {\r\n          return null;\r\n        }\r\n        return \"headerValueGetter must be a function or a valid string expression\";\r\n      }\r\n    },\r\n    icons: {\r\n      validate: ({ icons }) => {\r\n        if (icons) {\r\n          if (icons[\"smallDown\"]) {\r\n            return _errMsg(262);\r\n          }\r\n          if (icons[\"smallLeft\"]) {\r\n            return _errMsg(263);\r\n          }\r\n          if (icons[\"smallRight\"]) {\r\n            return _errMsg(264);\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n    },\r\n    sortingOrder: {\r\n      validate: (_options) => {\r\n        const sortingOrder = _options.sortingOrder;\r\n        if (Array.isArray(sortingOrder) && sortingOrder.length > 0) {\r\n          const invalidItems = sortingOrder.filter((a) => !DEFAULT_SORTING_ORDER.includes(a));\r\n          if (invalidItems.length > 0) {\r\n            return `sortingOrder must be an array with elements from [${DEFAULT_SORTING_ORDER.map(toStringWithNullUndefined).join()}], currently it includes [${invalidItems.map(toStringWithNullUndefined).join()}]`;\r\n          }\r\n        } else if (!Array.isArray(sortingOrder) || sortingOrder.length <= 0) {\r\n          return `sortingOrder must be an array with at least one element, currently it's ${sortingOrder}`;\r\n        }\r\n        return null;\r\n      }\r\n    },\r\n    type: {\r\n      validate: (_options) => {\r\n        const type = _options.type;\r\n        if (type instanceof Array) {\r\n          const invalidArray = type.some((a) => typeof a !== \"string\");\r\n          if (invalidArray) {\r\n            return \"if colDef.type is supplied an array it should be of type 'string[]'\";\r\n          }\r\n          return null;\r\n        }\r\n        if (typeof type === \"string\") {\r\n          return null;\r\n        }\r\n        return \"colDef.type should be of type 'string' | 'string[]'\";\r\n      }\r\n    },\r\n    rowSpan: {\r\n      validate: (_options, { suppressRowTransform }) => {\r\n        if (!suppressRowTransform) {\r\n          return \"colDef.rowSpan requires suppressRowTransform to be enabled.\";\r\n        }\r\n        return null;\r\n      }\r\n    },\r\n    spanRows: {\r\n      dependencies: {\r\n        editable: { required: [false, void 0] },\r\n        rowDrag: { required: [false, void 0] },\r\n        colSpan: { required: [void 0] },\r\n        rowSpan: { required: [void 0] }\r\n      },\r\n      validate: (_options, {\r\n        rowSelection,\r\n        cellSelection,\r\n        suppressRowTransform,\r\n        enableCellSpan,\r\n        rowDragEntireRow,\r\n        enableCellTextSelection\r\n      }) => {\r\n        if (typeof rowSelection === \"object\") {\r\n          if (rowSelection?.mode === \"singleRow\" && rowSelection?.enableClickSelection) {\r\n            return \"colDef.spanRows is not supported with rowSelection.clickSelection\";\r\n          }\r\n        }\r\n        if (cellSelection) {\r\n          return \"colDef.spanRows is not supported with cellSelection.\";\r\n        }\r\n        if (suppressRowTransform) {\r\n          return \"colDef.spanRows is not supported with suppressRowTransform.\";\r\n        }\r\n        if (!enableCellSpan) {\r\n          return \"colDef.spanRows requires enableCellSpan to be enabled.\";\r\n        }\r\n        if (rowDragEntireRow) {\r\n          return \"colDef.spanRows is not supported with rowDragEntireRow.\";\r\n        }\r\n        if (enableCellTextSelection) {\r\n          return \"colDef.spanRows is not supported with enableCellTextSelection.\";\r\n        }\r\n        return null;\r\n      }\r\n    }\r\n  };\r\n  return validations;\r\n};\r\nvar colDefPropertyMap = {\r\n  headerName: void 0,\r\n  columnGroupShow: void 0,\r\n  headerStyle: void 0,\r\n  headerClass: void 0,\r\n  toolPanelClass: void 0,\r\n  headerValueGetter: void 0,\r\n  pivotKeys: void 0,\r\n  groupId: void 0,\r\n  colId: void 0,\r\n  sort: void 0,\r\n  initialSort: void 0,\r\n  field: void 0,\r\n  type: void 0,\r\n  cellDataType: void 0,\r\n  tooltipComponent: void 0,\r\n  tooltipField: void 0,\r\n  headerTooltip: void 0,\r\n  cellClass: void 0,\r\n  showRowGroup: void 0,\r\n  filter: void 0,\r\n  initialAggFunc: void 0,\r\n  defaultAggFunc: void 0,\r\n  aggFunc: void 0,\r\n  pinned: void 0,\r\n  initialPinned: void 0,\r\n  chartDataType: void 0,\r\n  cellAriaRole: void 0,\r\n  cellEditorPopupPosition: void 0,\r\n  headerGroupComponent: void 0,\r\n  headerGroupComponentParams: void 0,\r\n  cellStyle: void 0,\r\n  cellRenderer: void 0,\r\n  cellRendererParams: void 0,\r\n  cellEditor: void 0,\r\n  cellEditorParams: void 0,\r\n  filterParams: void 0,\r\n  pivotValueColumn: void 0,\r\n  headerComponent: void 0,\r\n  headerComponentParams: void 0,\r\n  floatingFilterComponent: void 0,\r\n  floatingFilterComponentParams: void 0,\r\n  tooltipComponentParams: void 0,\r\n  refData: void 0,\r\n  columnChooserParams: void 0,\r\n  children: void 0,\r\n  sortingOrder: void 0,\r\n  allowedAggFuncs: void 0,\r\n  menuTabs: void 0,\r\n  pivotTotalColumnIds: void 0,\r\n  cellClassRules: void 0,\r\n  icons: void 0,\r\n  sortIndex: void 0,\r\n  initialSortIndex: void 0,\r\n  flex: void 0,\r\n  initialFlex: void 0,\r\n  width: void 0,\r\n  initialWidth: void 0,\r\n  minWidth: void 0,\r\n  maxWidth: void 0,\r\n  rowGroupIndex: void 0,\r\n  initialRowGroupIndex: void 0,\r\n  pivotIndex: void 0,\r\n  initialPivotIndex: void 0,\r\n  suppressColumnsToolPanel: void 0,\r\n  suppressFiltersToolPanel: void 0,\r\n  openByDefault: void 0,\r\n  marryChildren: void 0,\r\n  suppressStickyLabel: void 0,\r\n  hide: void 0,\r\n  initialHide: void 0,\r\n  rowGroup: void 0,\r\n  initialRowGroup: void 0,\r\n  pivot: void 0,\r\n  initialPivot: void 0,\r\n  checkboxSelection: void 0,\r\n  showDisabledCheckboxes: void 0,\r\n  headerCheckboxSelection: void 0,\r\n  headerCheckboxSelectionFilteredOnly: void 0,\r\n  headerCheckboxSelectionCurrentPageOnly: void 0,\r\n  suppressHeaderMenuButton: void 0,\r\n  suppressMovable: void 0,\r\n  lockPosition: void 0,\r\n  lockVisible: void 0,\r\n  lockPinned: void 0,\r\n  unSortIcon: void 0,\r\n  suppressSizeToFit: void 0,\r\n  suppressAutoSize: void 0,\r\n  enableRowGroup: void 0,\r\n  enablePivot: void 0,\r\n  enableValue: void 0,\r\n  editable: void 0,\r\n  suppressPaste: void 0,\r\n  suppressNavigable: void 0,\r\n  enableCellChangeFlash: void 0,\r\n  rowDrag: void 0,\r\n  dndSource: void 0,\r\n  autoHeight: void 0,\r\n  wrapText: void 0,\r\n  sortable: void 0,\r\n  resizable: void 0,\r\n  singleClickEdit: void 0,\r\n  floatingFilter: void 0,\r\n  cellEditorPopup: void 0,\r\n  suppressFillHandle: void 0,\r\n  wrapHeaderText: void 0,\r\n  autoHeaderHeight: void 0,\r\n  dndSourceOnRowDrag: void 0,\r\n  valueGetter: void 0,\r\n  valueSetter: void 0,\r\n  filterValueGetter: void 0,\r\n  keyCreator: void 0,\r\n  valueFormatter: void 0,\r\n  valueParser: void 0,\r\n  comparator: void 0,\r\n  equals: void 0,\r\n  pivotComparator: void 0,\r\n  suppressKeyboardEvent: void 0,\r\n  suppressHeaderKeyboardEvent: void 0,\r\n  colSpan: void 0,\r\n  rowSpan: void 0,\r\n  spanRows: void 0,\r\n  getQuickFilterText: void 0,\r\n  onCellValueChanged: void 0,\r\n  onCellClicked: void 0,\r\n  onCellDoubleClicked: void 0,\r\n  onCellContextMenu: void 0,\r\n  rowDragText: void 0,\r\n  tooltipValueGetter: void 0,\r\n  cellRendererSelector: void 0,\r\n  cellEditorSelector: void 0,\r\n  suppressSpanHeaderHeight: void 0,\r\n  useValueFormatterForExport: void 0,\r\n  useValueParserForImport: void 0,\r\n  mainMenuItems: void 0,\r\n  contextMenuItems: void 0,\r\n  suppressFloatingFilterButton: void 0,\r\n  suppressHeaderFilterButton: void 0,\r\n  suppressHeaderContextMenu: void 0,\r\n  loadingCellRenderer: void 0,\r\n  loadingCellRendererParams: void 0,\r\n  loadingCellRendererSelector: void 0,\r\n  context: void 0,\r\n  dateComponent: void 0,\r\n  dateComponentParams: void 0,\r\n  getFindText: void 0\r\n};\r\nvar ALL_PROPERTIES = () => Object.keys(colDefPropertyMap);\r\nvar COL_DEF_VALIDATORS = () => ({\r\n  objectName: \"colDef\",\r\n  allProperties: ALL_PROPERTIES(),\r\n  docsUrl: \"column-properties/\",\r\n  deprecations: COLUMN_DEFINITION_DEPRECATIONS(),\r\n  validations: COLUMN_DEFINITION_VALIDATIONS()\r\n});\r\n\r\n// packages/ag-grid-community/src/propertyKeys.ts\r\nvar STRING_GRID_OPTIONS = [\r\n  \"overlayLoadingTemplate\",\r\n  \"overlayNoRowsTemplate\",\r\n  \"gridId\",\r\n  \"quickFilterText\",\r\n  \"rowModelType\",\r\n  \"editType\",\r\n  \"domLayout\",\r\n  \"clipboardDelimiter\",\r\n  \"rowGroupPanelShow\",\r\n  \"multiSortKey\",\r\n  \"pivotColumnGroupTotals\",\r\n  \"pivotRowTotals\",\r\n  \"pivotPanelShow\",\r\n  \"fillHandleDirection\",\r\n  \"groupDisplayType\",\r\n  \"treeDataDisplayType\",\r\n  \"treeDataChildrenField\",\r\n  \"treeDataParentIdField\",\r\n  \"colResizeDefault\",\r\n  \"tooltipTrigger\",\r\n  \"serverSidePivotResultFieldSeparator\",\r\n  \"columnMenu\",\r\n  \"tooltipShowMode\",\r\n  \"invalidEditValueMode\",\r\n  \"grandTotalRow\",\r\n  \"themeCssLayer\",\r\n  \"findSearchValue\",\r\n  \"styleNonce\",\r\n  \"renderingMode\"\r\n];\r\nvar OBJECT_GRID_OPTIONS = [\r\n  \"components\",\r\n  \"rowStyle\",\r\n  \"context\",\r\n  \"autoGroupColumnDef\",\r\n  \"localeText\",\r\n  \"icons\",\r\n  \"datasource\",\r\n  \"dragAndDropImageComponentParams\",\r\n  \"serverSideDatasource\",\r\n  \"viewportDatasource\",\r\n  \"groupRowRendererParams\",\r\n  \"aggFuncs\",\r\n  \"fullWidthCellRendererParams\",\r\n  \"defaultColGroupDef\",\r\n  \"defaultColDef\",\r\n  \"defaultCsvExportParams\",\r\n  \"defaultExcelExportParams\",\r\n  \"columnTypes\",\r\n  \"rowClassRules\",\r\n  \"detailCellRendererParams\",\r\n  \"loadingCellRendererParams\",\r\n  \"loadingOverlayComponentParams\",\r\n  \"noRowsOverlayComponentParams\",\r\n  \"popupParent\",\r\n  \"themeStyleContainer\",\r\n  \"statusBar\",\r\n  \"chartThemeOverrides\",\r\n  \"customChartThemes\",\r\n  \"chartToolPanelsDef\",\r\n  \"dataTypeDefinitions\",\r\n  \"advancedFilterParent\",\r\n  \"advancedFilterBuilderParams\",\r\n  \"advancedFilterParams\",\r\n  \"initialState\",\r\n  \"autoSizeStrategy\",\r\n  \"selectionColumnDef\",\r\n  \"findOptions\",\r\n  \"filterHandlers\"\r\n];\r\nvar ARRAY_GRID_OPTIONS = [\r\n  \"sortingOrder\",\r\n  \"alignedGrids\",\r\n  \"rowData\",\r\n  \"columnDefs\",\r\n  \"excelStyles\",\r\n  \"pinnedTopRowData\",\r\n  \"pinnedBottomRowData\",\r\n  \"chartThemes\",\r\n  \"rowClass\",\r\n  \"paginationPageSizeSelector\"\r\n];\r\nvar _NUMBER_GRID_OPTIONS = [\r\n  \"rowHeight\",\r\n  \"detailRowHeight\",\r\n  \"rowBuffer\",\r\n  \"headerHeight\",\r\n  \"groupHeaderHeight\",\r\n  \"groupLockGroupColumns\",\r\n  \"floatingFiltersHeight\",\r\n  \"pivotHeaderHeight\",\r\n  \"pivotGroupHeaderHeight\",\r\n  \"groupDefaultExpanded\",\r\n  \"pivotDefaultExpanded\",\r\n  \"viewportRowModelPageSize\",\r\n  \"viewportRowModelBufferSize\",\r\n  \"autoSizePadding\",\r\n  \"maxBlocksInCache\",\r\n  \"maxConcurrentDatasourceRequests\",\r\n  \"tooltipShowDelay\",\r\n  \"tooltipHideDelay\",\r\n  \"cacheOverflowSize\",\r\n  \"paginationPageSize\",\r\n  \"cacheBlockSize\",\r\n  \"infiniteInitialRowCount\",\r\n  \"serverSideInitialRowCount\",\r\n  \"scrollbarWidth\",\r\n  \"asyncTransactionWaitMillis\",\r\n  \"blockLoadDebounceMillis\",\r\n  \"keepDetailRowsCount\",\r\n  \"undoRedoCellEditingLimit\",\r\n  \"cellFlashDuration\",\r\n  \"cellFadeDuration\",\r\n  \"tabIndex\",\r\n  \"pivotMaxGeneratedColumns\",\r\n  \"rowDragInsertDelay\"\r\n];\r\nvar OTHER_GRID_OPTIONS = [\"theme\", \"rowSelection\"];\r\nvar _BOOLEAN_MIXED_GRID_OPTIONS = [\r\n  \"cellSelection\",\r\n  \"sideBar\",\r\n  \"rowNumbers\",\r\n  \"suppressGroupChangesColumnVisibility\",\r\n  \"groupAggFiltering\",\r\n  \"suppressStickyTotalRow\",\r\n  \"groupHideParentOfSingleChild\",\r\n  \"enableRowPinning\"\r\n];\r\nvar _BOOLEAN_GRID_OPTIONS = [\r\n  \"loadThemeGoogleFonts\",\r\n  \"suppressMakeColumnVisibleAfterUnGroup\",\r\n  \"suppressRowClickSelection\",\r\n  \"suppressCellFocus\",\r\n  \"suppressHeaderFocus\",\r\n  \"suppressHorizontalScroll\",\r\n  \"groupSelectsChildren\",\r\n  \"alwaysShowHorizontalScroll\",\r\n  \"alwaysShowVerticalScroll\",\r\n  \"debug\",\r\n  \"enableBrowserTooltips\",\r\n  \"enableCellExpressions\",\r\n  \"groupSuppressBlankHeader\",\r\n  \"suppressMenuHide\",\r\n  \"suppressRowDeselection\",\r\n  \"unSortIcon\",\r\n  \"suppressMultiSort\",\r\n  \"alwaysMultiSort\",\r\n  \"singleClickEdit\",\r\n  \"suppressLoadingOverlay\",\r\n  \"suppressNoRowsOverlay\",\r\n  \"suppressAutoSize\",\r\n  \"skipHeaderOnAutoSize\",\r\n  \"suppressColumnMoveAnimation\",\r\n  \"suppressMoveWhenColumnDragging\",\r\n  \"suppressMovableColumns\",\r\n  \"suppressFieldDotNotation\",\r\n  \"enableRangeSelection\",\r\n  \"enableRangeHandle\",\r\n  \"enableFillHandle\",\r\n  \"suppressClearOnFillReduction\",\r\n  \"deltaSort\",\r\n  \"suppressTouch\",\r\n  \"allowContextMenuWithControlKey\",\r\n  \"suppressContextMenu\",\r\n  \"suppressDragLeaveHidesColumns\",\r\n  \"suppressRowGroupHidesColumns\",\r\n  \"suppressMiddleClickScrolls\",\r\n  \"suppressPreventDefaultOnMouseWheel\",\r\n  \"suppressCopyRowsToClipboard\",\r\n  \"copyHeadersToClipboard\",\r\n  \"copyGroupHeadersToClipboard\",\r\n  \"pivotMode\",\r\n  \"suppressAggFuncInHeader\",\r\n  \"suppressColumnVirtualisation\",\r\n  \"alwaysAggregateAtRootLevel\",\r\n  \"suppressFocusAfterRefresh\",\r\n  \"functionsReadOnly\",\r\n  \"animateRows\",\r\n  \"groupSelectsFiltered\",\r\n  \"groupRemoveSingleChildren\",\r\n  \"groupRemoveLowestSingleChildren\",\r\n  \"enableRtl\",\r\n  \"enableCellSpan\",\r\n  \"suppressClickEdit\",\r\n  \"rowDragEntireRow\",\r\n  \"rowDragManaged\",\r\n  \"suppressRowDrag\",\r\n  \"suppressMoveWhenRowDragging\",\r\n  \"rowDragMultiRow\",\r\n  \"enableGroupEdit\",\r\n  \"embedFullWidthRows\",\r\n  \"suppressPaginationPanel\",\r\n  \"groupHideOpenParents\",\r\n  \"groupAllowUnbalanced\",\r\n  \"pagination\",\r\n  \"paginationAutoPageSize\",\r\n  \"suppressScrollOnNewData\",\r\n  \"suppressScrollWhenPopupsAreOpen\",\r\n  \"purgeClosedRowNodes\",\r\n  \"cacheQuickFilter\",\r\n  \"includeHiddenColumnsInQuickFilter\",\r\n  \"ensureDomOrder\",\r\n  \"accentedSort\",\r\n  \"suppressChangeDetection\",\r\n  \"valueCache\",\r\n  \"valueCacheNeverExpires\",\r\n  \"aggregateOnlyChangedColumns\",\r\n  \"suppressAnimationFrame\",\r\n  \"suppressExcelExport\",\r\n  \"suppressCsvExport\",\r\n  \"includeHiddenColumnsInAdvancedFilter\",\r\n  \"suppressMultiRangeSelection\",\r\n  \"enterNavigatesVerticallyAfterEdit\",\r\n  \"enterNavigatesVertically\",\r\n  \"suppressPropertyNamesCheck\",\r\n  \"rowMultiSelectWithClick\",\r\n  \"suppressRowHoverHighlight\",\r\n  \"suppressRowTransform\",\r\n  \"suppressClipboardPaste\",\r\n  \"suppressLastEmptyLineOnPaste\",\r\n  \"enableCharts\",\r\n  \"suppressMaintainUnsortedOrder\",\r\n  \"enableCellTextSelection\",\r\n  \"suppressBrowserResizeObserver\",\r\n  \"suppressMaxRenderedRowRestriction\",\r\n  \"excludeChildrenWhenTreeDataFiltering\",\r\n  \"tooltipMouseTrack\",\r\n  \"tooltipInteraction\",\r\n  \"keepDetailRows\",\r\n  \"paginateChildRows\",\r\n  \"preventDefaultOnContextMenu\",\r\n  \"undoRedoCellEditing\",\r\n  \"allowDragFromColumnsToolPanel\",\r\n  \"pivotSuppressAutoColumn\",\r\n  \"suppressExpandablePivotGroups\",\r\n  \"debounceVerticalScrollbar\",\r\n  \"detailRowAutoHeight\",\r\n  \"serverSideSortAllLevels\",\r\n  \"serverSideEnableClientSideSort\",\r\n  \"serverSideOnlyRefreshFilteredGroups\",\r\n  \"suppressAggFilteredOnly\",\r\n  \"showOpenedGroup\",\r\n  \"suppressClipboardApi\",\r\n  \"suppressModelUpdateAfterUpdateTransaction\",\r\n  \"stopEditingWhenCellsLoseFocus\",\r\n  \"groupMaintainOrder\",\r\n  \"columnHoverHighlight\",\r\n  \"readOnlyEdit\",\r\n  \"suppressRowVirtualisation\",\r\n  \"enableCellEditingOnBackspace\",\r\n  \"resetRowDataOnUpdate\",\r\n  \"removePivotHeaderRowWhenSingleValueColumn\",\r\n  \"suppressCopySingleCellRanges\",\r\n  \"suppressGroupRowsSticky\",\r\n  \"suppressCutToClipboard\",\r\n  \"rowGroupPanelSuppressSort\",\r\n  \"allowShowChangeAfterFilter\",\r\n  \"enableAdvancedFilter\",\r\n  \"masterDetail\",\r\n  \"treeData\",\r\n  \"reactiveCustomComponents\",\r\n  \"applyQuickFilterBeforePivotOrAgg\",\r\n  \"suppressServerSideFullWidthLoadingRow\",\r\n  \"suppressAdvancedFilterEval\",\r\n  \"loading\",\r\n  \"maintainColumnOrder\",\r\n  \"enableStrictPivotColumnOrder\",\r\n  \"suppressSetFilterByDefault\",\r\n  \"enableFilterHandlers\",\r\n  \"suppressStartEditOnTab\",\r\n  \"hidePaddedHeaderRows\"\r\n];\r\nvar _FUNCTION_GRID_OPTIONS = [\r\n  \"doesExternalFilterPass\",\r\n  \"processPivotResultColDef\",\r\n  \"processPivotResultColGroupDef\",\r\n  \"getBusinessKeyForNode\",\r\n  \"isRowSelectable\",\r\n  \"rowDragText\",\r\n  \"groupRowRenderer\",\r\n  \"dragAndDropImageComponent\",\r\n  \"fullWidthCellRenderer\",\r\n  \"loadingCellRenderer\",\r\n  \"loadingOverlayComponent\",\r\n  \"noRowsOverlayComponent\",\r\n  \"detailCellRenderer\",\r\n  \"quickFilterParser\",\r\n  \"quickFilterMatcher\",\r\n  \"getLocaleText\",\r\n  \"isExternalFilterPresent\",\r\n  \"getRowHeight\",\r\n  \"getRowClass\",\r\n  \"getRowStyle\",\r\n  \"getFullRowEditValidationErrors\",\r\n  \"getContextMenuItems\",\r\n  \"getMainMenuItems\",\r\n  \"processRowPostCreate\",\r\n  \"processCellForClipboard\",\r\n  \"getGroupRowAgg\",\r\n  \"isFullWidthRow\",\r\n  \"sendToClipboard\",\r\n  \"focusGridInnerElement\",\r\n  \"navigateToNextHeader\",\r\n  \"tabToNextHeader\",\r\n  \"navigateToNextCell\",\r\n  \"tabToNextCell\",\r\n  \"processCellFromClipboard\",\r\n  \"getDocument\",\r\n  \"postProcessPopup\",\r\n  \"getChildCount\",\r\n  \"getDataPath\",\r\n  \"isRowMaster\",\r\n  \"postSortRows\",\r\n  \"processHeaderForClipboard\",\r\n  \"processUnpinnedColumns\",\r\n  \"processGroupHeaderForClipboard\",\r\n  \"paginationNumberFormatter\",\r\n  \"processDataFromClipboard\",\r\n  \"getServerSideGroupKey\",\r\n  \"isServerSideGroup\",\r\n  \"createChartContainer\",\r\n  \"getChartToolbarItems\",\r\n  \"fillOperation\",\r\n  \"isApplyServerSideTransaction\",\r\n  \"getServerSideGroupLevelParams\",\r\n  \"isServerSideGroupOpenByDefault\",\r\n  \"isGroupOpenByDefault\",\r\n  \"initialGroupOrderComparator\",\r\n  \"loadingCellRendererSelector\",\r\n  \"getRowId\",\r\n  \"chartMenuItems\",\r\n  \"groupTotalRow\",\r\n  \"alwaysPassFilter\",\r\n  \"isRowPinnable\",\r\n  \"isRowPinned\",\r\n  \"isRowValidDropPosition\"\r\n];\r\nvar _GET_ALL_GRID_OPTIONS = () => [\r\n  ...ARRAY_GRID_OPTIONS,\r\n  ...OBJECT_GRID_OPTIONS,\r\n  ...STRING_GRID_OPTIONS,\r\n  ..._NUMBER_GRID_OPTIONS,\r\n  ..._FUNCTION_GRID_OPTIONS,\r\n  ..._BOOLEAN_GRID_OPTIONS,\r\n  ..._BOOLEAN_MIXED_GRID_OPTIONS,\r\n  ...OTHER_GRID_OPTIONS\r\n];\r\n\r\n// packages/ag-grid-community/src/validation/rules/gridOptionsValidations.ts\r\nvar GRID_OPTION_DEPRECATIONS = () => ({\r\n  suppressLoadingOverlay: { version: \"32\", message: \"Use `loading`=false instead.\" },\r\n  enableFillHandle: { version: \"32.2\", message: \"Use `cellSelection.handle` instead.\" },\r\n  enableRangeHandle: { version: \"32.2\", message: \"Use `cellSelection.handle` instead.\" },\r\n  enableRangeSelection: { version: \"32.2\", message: \"Use `cellSelection = true` instead.\" },\r\n  suppressMultiRangeSelection: {\r\n    version: \"32.2\",\r\n    message: \"Use `cellSelection.suppressMultiRanges` instead.\"\r\n  },\r\n  suppressClearOnFillReduction: {\r\n    version: \"32.2\",\r\n    message: \"Use `cellSelection.handle.suppressClearOnFillReduction` instead.\"\r\n  },\r\n  fillHandleDirection: { version: \"32.2\", message: \"Use `cellSelection.handle.direction` instead.\" },\r\n  fillOperation: { version: \"32.2\", message: \"Use `cellSelection.handle.setFillValue` instead.\" },\r\n  suppressRowClickSelection: {\r\n    version: \"32.2\",\r\n    message: \"Use `rowSelection.enableClickSelection` instead.\"\r\n  },\r\n  suppressRowDeselection: { version: \"32.2\", message: \"Use `rowSelection.enableClickSelection` instead.\" },\r\n  rowMultiSelectWithClick: {\r\n    version: \"32.2\",\r\n    message: \"Use `rowSelection.enableSelectionWithoutKeys` instead.\"\r\n  },\r\n  groupSelectsChildren: {\r\n    version: \"32.2\",\r\n    message: 'Use `rowSelection.groupSelects = \"descendants\"` instead.'\r\n  },\r\n  groupSelectsFiltered: {\r\n    version: \"32.2\",\r\n    message: 'Use `rowSelection.groupSelects = \"filteredDescendants\"` instead.'\r\n  },\r\n  isRowSelectable: { version: \"32.2\", message: \"Use `selectionOptions.isRowSelectable` instead.\" },\r\n  suppressCopySingleCellRanges: { version: \"32.2\", message: \"Use `rowSelection.copySelectedRows` instead.\" },\r\n  suppressCopyRowsToClipboard: { version: \"32.2\", message: \"Use `rowSelection.copySelectedRows` instead.\" },\r\n  onRangeSelectionChanged: { version: \"32.2\", message: \"Use `onCellSelectionChanged` instead.\" },\r\n  onRangeDeleteStart: { version: \"32.2\", message: \"Use `onCellSelectionDeleteStart` instead.\" },\r\n  onRangeDeleteEnd: { version: \"32.2\", message: \"Use `onCellSelectionDeleteEnd` instead.\" },\r\n  suppressBrowserResizeObserver: {\r\n    version: \"32.2\",\r\n    message: \"The grid always uses the browser's ResizeObserver, this grid option has no effect.\"\r\n  },\r\n  onColumnEverythingChanged: {\r\n    version: \"32.2\",\r\n    message: \"Either use `onDisplayedColumnsChanged` which is fired at the same time, or use one of the more specific column events.\"\r\n  },\r\n  groupRemoveSingleChildren: {\r\n    version: \"33\",\r\n    message: \"Use `groupHideParentOfSingleChild` instead.\"\r\n  },\r\n  groupRemoveLowestSingleChildren: {\r\n    version: \"33\",\r\n    message: 'Use `groupHideParentOfSingleChild: \"leafGroupsOnly\"` instead.'\r\n  },\r\n  suppressRowGroupHidesColumns: {\r\n    version: \"33\",\r\n    message: 'Use `suppressGroupChangesColumnVisibility: \"suppressHideOnGroup\"` instead.'\r\n  },\r\n  suppressMakeColumnVisibleAfterUnGroup: {\r\n    version: \"33\",\r\n    message: 'Use `suppressGroupChangesColumnVisibility: \"suppressShowOnUngroup\"` instead.'\r\n  },\r\n  unSortIcon: { version: \"33\", message: \"Use `defaultColDef.unSortIcon` instead.\" },\r\n  sortingOrder: { version: \"33\", message: \"Use `defaultColDef.sortingOrder` instead.\" },\r\n  suppressPropertyNamesCheck: {\r\n    version: \"33\",\r\n    message: \"`gridOptions` and `columnDefs` both have a `context` property that should be used for arbitrary user data. This means that column definitions and gridOptions should only contain valid properties making this property redundant.\"\r\n  },\r\n  suppressAdvancedFilterEval: {\r\n    version: \"34\",\r\n    message: \"Advanced filter no longer uses function evaluation, so this option has no effect.\"\r\n  }\r\n});\r\nfunction toConstrainedNum(key, value, min) {\r\n  if (typeof value === \"number\" || value == null) {\r\n    if (value == null) {\r\n      return null;\r\n    }\r\n    return value >= min ? null : `${key}: value should be greater than or equal to ${min}`;\r\n  }\r\n  return `${key}: value should be a number`;\r\n}\r\nvar GRID_OPTIONS_MODULES = {\r\n  alignedGrids: \"AlignedGrids\",\r\n  allowContextMenuWithControlKey: \"ContextMenu\",\r\n  autoSizeStrategy: \"ColumnAutoSize\",\r\n  cellSelection: \"CellSelection\",\r\n  columnHoverHighlight: \"ColumnHover\",\r\n  datasource: \"InfiniteRowModel\",\r\n  doesExternalFilterPass: \"ExternalFilter\",\r\n  editType: \"EditCore\",\r\n  invalidEditValueMode: \"EditCore\",\r\n  enableAdvancedFilter: \"AdvancedFilter\",\r\n  enableCellSpan: \"CellSpan\",\r\n  enableCharts: \"IntegratedCharts\",\r\n  enableRangeSelection: \"CellSelection\",\r\n  enableRowPinning: \"PinnedRow\",\r\n  findSearchValue: \"Find\",\r\n  getFullRowEditValidationErrors: \"EditCore\",\r\n  getContextMenuItems: \"ContextMenu\",\r\n  getLocaleText: \"Locale\",\r\n  getMainMenuItems: \"ColumnMenu\",\r\n  getRowClass: \"RowStyle\",\r\n  getRowStyle: \"RowStyle\",\r\n  groupTotalRow: \"SharedRowGrouping\",\r\n  grandTotalRow: \"SharedRowGrouping\",\r\n  initialState: \"GridState\",\r\n  isExternalFilterPresent: \"ExternalFilter\",\r\n  isRowPinnable: \"PinnedRow\",\r\n  isRowPinned: \"PinnedRow\",\r\n  localeText: \"Locale\",\r\n  masterDetail: \"SharedMasterDetail\",\r\n  pagination: \"Pagination\",\r\n  pinnedBottomRowData: \"PinnedRow\",\r\n  pinnedTopRowData: \"PinnedRow\",\r\n  pivotMode: \"SharedPivot\",\r\n  pivotPanelShow: \"RowGroupingPanel\",\r\n  quickFilterText: \"QuickFilter\",\r\n  rowClass: \"RowStyle\",\r\n  rowClassRules: \"RowStyle\",\r\n  rowData: \"ClientSideRowModel\",\r\n  rowDragManaged: \"RowDrag\",\r\n  rowGroupPanelShow: \"RowGroupingPanel\",\r\n  rowNumbers: \"RowNumbers\",\r\n  rowSelection: \"SharedRowSelection\",\r\n  rowStyle: \"RowStyle\",\r\n  serverSideDatasource: \"ServerSideRowModel\",\r\n  sideBar: \"SideBar\",\r\n  statusBar: \"StatusBar\",\r\n  treeData: \"SharedTreeData\",\r\n  undoRedoCellEditing: \"UndoRedoEdit\",\r\n  valueCache: \"ValueCache\",\r\n  viewportDatasource: \"ViewportRowModel\"\r\n};\r\nvar GRID_OPTION_VALIDATIONS = () => {\r\n  const definedValidations = {\r\n    autoSizePadding: {\r\n      validate({ autoSizePadding }) {\r\n        return toConstrainedNum(\"autoSizePadding\", autoSizePadding, 0);\r\n      }\r\n    },\r\n    cacheBlockSize: {\r\n      supportedRowModels: [\"serverSide\", \"infinite\"],\r\n      validate({ cacheBlockSize }) {\r\n        return toConstrainedNum(\"cacheBlockSize\", cacheBlockSize, 1);\r\n      }\r\n    },\r\n    cacheOverflowSize: {\r\n      validate({ cacheOverflowSize }) {\r\n        return toConstrainedNum(\"cacheOverflowSize\", cacheOverflowSize, 1);\r\n      }\r\n    },\r\n    datasource: {\r\n      supportedRowModels: [\"infinite\"]\r\n    },\r\n    domLayout: {\r\n      validate: (options) => {\r\n        const domLayout = options.domLayout;\r\n        const validLayouts = [\"autoHeight\", \"normal\", \"print\"];\r\n        if (domLayout && !validLayouts.includes(domLayout)) {\r\n          return `domLayout must be one of [${validLayouts.join()}], currently it's ${domLayout}`;\r\n        }\r\n        return null;\r\n      }\r\n    },\r\n    enableFillHandle: {\r\n      dependencies: {\r\n        enableRangeSelection: { required: [true] }\r\n      }\r\n    },\r\n    enableRangeHandle: {\r\n      dependencies: {\r\n        enableRangeSelection: { required: [true] }\r\n      }\r\n    },\r\n    enableRangeSelection: {\r\n      dependencies: {\r\n        rowDragEntireRow: { required: [false, void 0] }\r\n      }\r\n    },\r\n    enableRowPinning: {\r\n      supportedRowModels: [\"clientSide\"],\r\n      validate({ enableRowPinning, pinnedTopRowData, pinnedBottomRowData }) {\r\n        if (enableRowPinning && (pinnedTopRowData || pinnedBottomRowData)) {\r\n          return \"Manual row pinning cannot be used together with pinned row data. Either set `enableRowPinning` to `false`, or remove `pinnedTopRowData` and `pinnedBottomRowData`.\";\r\n        }\r\n        return null;\r\n      }\r\n    },\r\n    isRowPinnable: {\r\n      supportedRowModels: [\"clientSide\"],\r\n      validate({ enableRowPinning, isRowPinnable, pinnedTopRowData, pinnedBottomRowData }) {\r\n        if (isRowPinnable && (pinnedTopRowData || pinnedBottomRowData)) {\r\n          return \"Manual row pinning cannot be used together with pinned row data. Either remove `isRowPinnable`, or remove `pinnedTopRowData` and `pinnedBottomRowData`.\";\r\n        }\r\n        if (!enableRowPinning && isRowPinnable) {\r\n          return \"`isRowPinnable` requires `enableRowPinning` to be set.\";\r\n        }\r\n        return null;\r\n      }\r\n    },\r\n    isRowPinned: {\r\n      supportedRowModels: [\"clientSide\"],\r\n      validate({ enableRowPinning, isRowPinned, pinnedTopRowData, pinnedBottomRowData }) {\r\n        if (isRowPinned && (pinnedTopRowData || pinnedBottomRowData)) {\r\n          return \"Manual row pinning cannot be used together with pinned row data. Either remove `isRowPinned`, or remove `pinnedTopRowData` and `pinnedBottomRowData`.\";\r\n        }\r\n        if (!enableRowPinning && isRowPinned) {\r\n          return \"`isRowPinned` requires `enableRowPinning` to be set.\";\r\n        }\r\n        return null;\r\n      }\r\n    },\r\n    groupDefaultExpanded: {\r\n      supportedRowModels: [\"clientSide\"]\r\n    },\r\n    groupHideOpenParents: {\r\n      supportedRowModels: [\"clientSide\", \"serverSide\"],\r\n      dependencies: {\r\n        groupTotalRow: { required: [void 0, \"bottom\"] },\r\n        treeData: {\r\n          required: [void 0, false],\r\n          reason: \"Tree Data has values at the group level so it doesn't make sense to hide them.\"\r\n        }\r\n      }\r\n    },\r\n    groupHideParentOfSingleChild: {\r\n      dependencies: {\r\n        groupHideOpenParents: { required: [void 0, false] }\r\n      }\r\n    },\r\n    groupRemoveLowestSingleChildren: {\r\n      dependencies: {\r\n        groupHideOpenParents: { required: [void 0, false] },\r\n        groupRemoveSingleChildren: { required: [void 0, false] }\r\n      }\r\n    },\r\n    groupRemoveSingleChildren: {\r\n      dependencies: {\r\n        groupHideOpenParents: { required: [void 0, false] },\r\n        groupRemoveLowestSingleChildren: { required: [void 0, false] }\r\n      }\r\n    },\r\n    groupSelectsChildren: {\r\n      dependencies: {\r\n        rowSelection: { required: [\"multiple\"] }\r\n      }\r\n    },\r\n    icons: {\r\n      validate: ({ icons }) => {\r\n        if (icons) {\r\n          if (icons[\"smallDown\"]) {\r\n            return _errMsg(262);\r\n          }\r\n          if (icons[\"smallLeft\"]) {\r\n            return _errMsg(263);\r\n          }\r\n          if (icons[\"smallRight\"]) {\r\n            return _errMsg(264);\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n    },\r\n    infiniteInitialRowCount: {\r\n      validate({ infiniteInitialRowCount }) {\r\n        return toConstrainedNum(\"infiniteInitialRowCount\", infiniteInitialRowCount, 1);\r\n      }\r\n    },\r\n    initialGroupOrderComparator: {\r\n      supportedRowModels: [\"clientSide\"]\r\n    },\r\n    keepDetailRowsCount: {\r\n      validate({ keepDetailRowsCount }) {\r\n        return toConstrainedNum(\"keepDetailRowsCount\", keepDetailRowsCount, 1);\r\n      }\r\n    },\r\n    paginationPageSize: {\r\n      validate({ paginationPageSize }) {\r\n        return toConstrainedNum(\"paginationPageSize\", paginationPageSize, 1);\r\n      }\r\n    },\r\n    paginationPageSizeSelector: {\r\n      validate: (options) => {\r\n        const values = options.paginationPageSizeSelector;\r\n        if (typeof values === \"boolean\" || values == null) {\r\n          return null;\r\n        }\r\n        if (!values.length) {\r\n          return `'paginationPageSizeSelector' cannot be an empty array.\r\n                    If you want to hide the page size selector, set paginationPageSizeSelector to false.`;\r\n        }\r\n        return null;\r\n      }\r\n    },\r\n    pivotMode: {\r\n      dependencies: {\r\n        treeData: {\r\n          required: [false, void 0],\r\n          reason: \"Pivot Mode is not supported with Tree Data.\"\r\n        }\r\n      }\r\n    },\r\n    quickFilterText: {\r\n      supportedRowModels: [\"clientSide\"]\r\n    },\r\n    rowBuffer: {\r\n      validate({ rowBuffer }) {\r\n        return toConstrainedNum(\"rowBuffer\", rowBuffer, 0);\r\n      }\r\n    },\r\n    rowClass: {\r\n      validate: (options) => {\r\n        const rowClass = options.rowClass;\r\n        if (typeof rowClass === \"function\") {\r\n          return \"rowClass should not be a function, please use getRowClass instead\";\r\n        }\r\n        return null;\r\n      }\r\n    },\r\n    rowData: {\r\n      supportedRowModels: [\"clientSide\"]\r\n    },\r\n    rowDragManaged: {\r\n      supportedRowModels: [\"clientSide\"],\r\n      dependencies: {\r\n        pagination: {\r\n          required: [false, void 0]\r\n        }\r\n      }\r\n    },\r\n    rowSelection: {\r\n      validate({ rowSelection }) {\r\n        if (rowSelection && typeof rowSelection === \"string\") {\r\n          return 'As of version 32.2.1, using `rowSelection` with the values \"single\" or \"multiple\" has been deprecated. Use the object value instead.';\r\n        }\r\n        if (rowSelection && typeof rowSelection !== \"object\") {\r\n          return \"Expected `RowSelectionOptions` object for the `rowSelection` property.\";\r\n        }\r\n        if (rowSelection && rowSelection.mode !== \"multiRow\" && rowSelection.mode !== \"singleRow\") {\r\n          return `Selection mode \"${rowSelection.mode}\" is invalid. Use one of 'singleRow' or 'multiRow'.`;\r\n        }\r\n        return null;\r\n      }\r\n    },\r\n    rowStyle: {\r\n      validate: (options) => {\r\n        const rowStyle = options.rowStyle;\r\n        if (rowStyle && typeof rowStyle === \"function\") {\r\n          return \"rowStyle should be an object of key/value styles, not be a function, use getRowStyle() instead\";\r\n        }\r\n        return null;\r\n      }\r\n    },\r\n    serverSideDatasource: {\r\n      supportedRowModels: [\"serverSide\"]\r\n    },\r\n    serverSideInitialRowCount: {\r\n      supportedRowModels: [\"serverSide\"],\r\n      validate({ serverSideInitialRowCount }) {\r\n        return toConstrainedNum(\"serverSideInitialRowCount\", serverSideInitialRowCount, 1);\r\n      }\r\n    },\r\n    serverSideOnlyRefreshFilteredGroups: {\r\n      supportedRowModels: [\"serverSide\"]\r\n    },\r\n    serverSideSortAllLevels: {\r\n      supportedRowModels: [\"serverSide\"]\r\n    },\r\n    sortingOrder: {\r\n      validate: (_options) => {\r\n        const sortingOrder = _options.sortingOrder;\r\n        if (Array.isArray(sortingOrder) && sortingOrder.length > 0) {\r\n          const invalidItems = sortingOrder.filter((a) => !DEFAULT_SORTING_ORDER.includes(a));\r\n          if (invalidItems.length > 0) {\r\n            return `sortingOrder must be an array with elements from [${DEFAULT_SORTING_ORDER.map(toStringWithNullUndefined).join()}], currently it includes [${invalidItems.map(toStringWithNullUndefined).join()}]`;\r\n          }\r\n        } else if (!Array.isArray(sortingOrder) || sortingOrder.length <= 0) {\r\n          return `sortingOrder must be an array with at least one element, currently it's ${sortingOrder}`;\r\n        }\r\n        return null;\r\n      }\r\n    },\r\n    tooltipHideDelay: {\r\n      validate: (options) => {\r\n        if (options.tooltipHideDelay && options.tooltipHideDelay < 0) {\r\n          return \"tooltipHideDelay should not be lower than 0\";\r\n        }\r\n        return null;\r\n      }\r\n    },\r\n    tooltipShowDelay: {\r\n      validate: (options) => {\r\n        if (options.tooltipShowDelay && options.tooltipShowDelay < 0) {\r\n          return \"tooltipShowDelay should not be lower than 0\";\r\n        }\r\n        return null;\r\n      }\r\n    },\r\n    treeData: {\r\n      supportedRowModels: [\"clientSide\", \"serverSide\"],\r\n      validate: (options) => {\r\n        const rowModel = options.rowModelType ?? \"clientSide\";\r\n        switch (rowModel) {\r\n          case \"clientSide\": {\r\n            const { treeDataChildrenField, treeDataParentIdField, getDataPath, getRowId } = options;\r\n            if (!treeDataChildrenField && !treeDataParentIdField && !getDataPath) {\r\n              return \"treeData requires either 'treeDataChildrenField' or 'treeDataParentIdField' or 'getDataPath' in the clientSide row model.\";\r\n            }\r\n            if (treeDataChildrenField) {\r\n              if (getDataPath) {\r\n                return \"Cannot use both 'treeDataChildrenField' and 'getDataPath' at the same time.\";\r\n              }\r\n              if (treeDataParentIdField) {\r\n                return \"Cannot use both 'treeDataChildrenField' and 'treeDataParentIdField' at the same time.\";\r\n              }\r\n            }\r\n            if (treeDataParentIdField) {\r\n              if (!getRowId) {\r\n                return \"getRowId callback not provided, tree data with parent id cannot be built.\";\r\n              }\r\n              if (getDataPath) {\r\n                return \"Cannot use both 'treeDataParentIdField' and 'getDataPath' at the same time.\";\r\n              }\r\n            }\r\n            return null;\r\n          }\r\n          case \"serverSide\": {\r\n            const ssrmWarning = `treeData requires 'isServerSideGroup' and 'getServerSideGroupKey' in the ${rowModel} row model.`;\r\n            return options.isServerSideGroup && options.getServerSideGroupKey ? null : ssrmWarning;\r\n          }\r\n        }\r\n        return null;\r\n      }\r\n    },\r\n    viewportDatasource: {\r\n      supportedRowModels: [\"viewport\"]\r\n    },\r\n    viewportRowModelBufferSize: {\r\n      validate({ viewportRowModelBufferSize }) {\r\n        return toConstrainedNum(\"viewportRowModelBufferSize\", viewportRowModelBufferSize, 0);\r\n      }\r\n    },\r\n    viewportRowModelPageSize: {\r\n      validate({ viewportRowModelPageSize }) {\r\n        return toConstrainedNum(\"viewportRowModelPageSize\", viewportRowModelPageSize, 1);\r\n      }\r\n    },\r\n    rowDragEntireRow: {\r\n      dependencies: {\r\n        cellSelection: { required: [void 0] }\r\n      }\r\n    },\r\n    autoGroupColumnDef: {\r\n      validate({ autoGroupColumnDef, showOpenedGroup }) {\r\n        if (autoGroupColumnDef?.field && showOpenedGroup) {\r\n          return \"autoGroupColumnDef.field and showOpenedGroup are not supported when used together.\";\r\n        }\r\n        if (autoGroupColumnDef?.valueGetter && showOpenedGroup) {\r\n          return \"autoGroupColumnDef.valueGetter and showOpenedGroup are not supported when used together.\";\r\n        }\r\n        return null;\r\n      }\r\n    },\r\n    renderingMode: {\r\n      validate: (options) => {\r\n        const renderingMode = options.renderingMode;\r\n        const validModes = [\"default\", \"legacy\"];\r\n        if (renderingMode && !validModes.includes(renderingMode)) {\r\n          return `renderingMode must be one of [${validModes.join()}], currently it's ${renderingMode}`;\r\n        }\r\n        return null;\r\n      }\r\n    }\r\n  };\r\n  const validations = {};\r\n  _BOOLEAN_GRID_OPTIONS.forEach((key) => {\r\n    validations[key] = { expectedType: \"boolean\" };\r\n  });\r\n  _NUMBER_GRID_OPTIONS.forEach((key) => {\r\n    validations[key] = { expectedType: \"number\" };\r\n  });\r\n  _mergeDeep(validations, definedValidations);\r\n  return validations;\r\n};\r\nvar GRID_OPTIONS_VALIDATORS = () => ({\r\n  objectName: \"gridOptions\",\r\n  allProperties: [..._GET_ALL_GRID_OPTIONS(), ...Object.values(_PUBLIC_EVENT_HANDLERS_MAP)],\r\n  propertyExceptions: [\"api\"],\r\n  docsUrl: \"grid-options/\",\r\n  deprecations: GRID_OPTION_DEPRECATIONS(),\r\n  validations: GRID_OPTION_VALIDATIONS()\r\n});\r\n\r\n// packages/ag-grid-community/src/gridOptionsService.ts\r\nvar changeSetId = 0;\r\nvar gridInstanceSequence = 0;\r\nvar GridOptionsService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"gos\";\r\n    this.domDataKey = \"__AG_\" + Math.random().toString();\r\n    /** This is only used for the main DOM element */\r\n    this.gridInstanceId = gridInstanceSequence++;\r\n    // Used to hold user events until the grid is ready\r\n    // Required to support React 19 StrictMode. See IFrameworkOverrides.runWhenReadyAsync but also is likely a good idea that onGridReady is the first event fired.\r\n    this.gridReadyFired = false;\r\n    this.queueEvents = [];\r\n    this.propEventSvc = new LocalEventService();\r\n    // responsible for calling the onXXX functions on gridOptions\r\n    // It forces events defined in GridOptionsService.alwaysSyncGlobalEvents to be fired synchronously.\r\n    // This is required for events such as GridPreDestroyed.\r\n    // Other events can be fired asynchronously or synchronously depending on config.\r\n    this.globalEventHandlerFactory = (restrictToSyncOnly) => {\r\n      return (eventName, event) => {\r\n        if (!this.isAlive()) {\r\n          return;\r\n        }\r\n        const alwaysSync = ALWAYS_SYNC_GLOBAL_EVENTS.has(eventName);\r\n        if (alwaysSync && !restrictToSyncOnly || !alwaysSync && restrictToSyncOnly) {\r\n          return;\r\n        }\r\n        if (!isPublicEventHandler(eventName)) {\r\n          return;\r\n        }\r\n        const fireEvent = (name, e) => {\r\n          const eventHandlerName = _PUBLIC_EVENT_HANDLERS_MAP[name];\r\n          const eventHandler = this.gridOptions[eventHandlerName];\r\n          if (typeof eventHandler === \"function\") {\r\n            this.beans.frameworkOverrides.wrapOutgoing(() => eventHandler(e));\r\n          }\r\n        };\r\n        if (this.gridReadyFired) {\r\n          fireEvent(eventName, event);\r\n        } else {\r\n          if (eventName === \"gridReady\") {\r\n            fireEvent(eventName, event);\r\n            this.gridReadyFired = true;\r\n            for (const q of this.queueEvents) {\r\n              fireEvent(q.eventName, q.event);\r\n            }\r\n            this.queueEvents = [];\r\n          } else {\r\n            this.queueEvents.push({ eventName, event });\r\n          }\r\n        }\r\n      };\r\n    };\r\n  }\r\n  wireBeans(beans) {\r\n    this.gridOptions = beans.gridOptions;\r\n    this.validation = beans.validation;\r\n    this.api = beans.gridApi;\r\n    this.gridId = beans.context.getGridId();\r\n  }\r\n  // This is quicker then having code call gridOptionsService.get('context')\r\n  get gridOptionsContext() {\r\n    return this.gridOptions[\"context\"];\r\n  }\r\n  postConstruct() {\r\n    this.validateGridOptions(this.gridOptions);\r\n    this.eventSvc.addGlobalListener(this.globalEventHandlerFactory().bind(this), true);\r\n    this.eventSvc.addGlobalListener(this.globalEventHandlerFactory(true).bind(this), false);\r\n    this.propEventSvc.setFrameworkOverrides(this.beans.frameworkOverrides);\r\n    this.addManagedEventListeners({\r\n      gridOptionsChanged: ({ options }) => {\r\n        this.updateGridOptions({ options, force: true, source: \"gridOptionsUpdated\" });\r\n      }\r\n    });\r\n  }\r\n  destroy() {\r\n    super.destroy();\r\n    this.queueEvents = [];\r\n  }\r\n  /**\r\n   * Get the raw value of the GridOptions property provided.\r\n   * @param property\r\n   */\r\n  get(property) {\r\n    return this.gridOptions[property] ?? GRID_OPTION_DEFAULTS[property];\r\n  }\r\n  /**\r\n   * Get the GridOption callback but wrapped so that the common params of api and context are automatically applied to the params.\r\n   * @param property GridOption callback properties based on the fact that this property has a callback with params extending AgGridCommon\r\n   */\r\n  getCallback(property) {\r\n    return this.mergeGridCommonParams(this.gridOptions[property]);\r\n  }\r\n  /**\r\n   * Returns `true` if a value has been specified for this GridOption.\r\n   * @param property GridOption property\r\n   */\r\n  exists(property) {\r\n    return _exists(this.gridOptions[property]);\r\n  }\r\n  /**\r\n   * Wrap the user callback and attach the api and context to the params object on the way through.\r\n   * @param callback User provided callback\r\n   * @returns Wrapped callback where the params object not require api and context\r\n   */\r\n  mergeGridCommonParams(callback) {\r\n    if (callback) {\r\n      const wrapped = (callbackParams) => {\r\n        return callback(this.addGridCommonParams(callbackParams));\r\n      };\r\n      return wrapped;\r\n    }\r\n    return callback;\r\n  }\r\n  updateGridOptions({\r\n    options,\r\n    force,\r\n    source = \"api\"\r\n  }) {\r\n    const changeSet = { id: changeSetId++, properties: [] };\r\n    const events = [];\r\n    const { gridOptions, validation: validation2 } = this;\r\n    for (const key of Object.keys(options)) {\r\n      const value = options[key];\r\n      validation2?.warnOnInitialPropertyUpdate(source, key);\r\n      const shouldForce = force || typeof value === \"object\" && source === \"api\";\r\n      const previousValue = gridOptions[key];\r\n      if (shouldForce || previousValue !== value) {\r\n        gridOptions[key] = value;\r\n        const event = {\r\n          type: key,\r\n          currentValue: value,\r\n          previousValue,\r\n          changeSet,\r\n          source\r\n        };\r\n        events.push(event);\r\n      }\r\n    }\r\n    this.validateGridOptions(this.gridOptions);\r\n    changeSet.properties = events.map((event) => event.type);\r\n    events.forEach((event) => {\r\n      _logIfDebug(this, `Updated property ${event.type} from`, event.previousValue, ` to `, event.currentValue);\r\n      this.propEventSvc.dispatchEvent(event);\r\n    });\r\n  }\r\n  addPropertyEventListener(key, listener) {\r\n    this.propEventSvc.addEventListener(key, listener);\r\n  }\r\n  removePropertyEventListener(key, listener) {\r\n    this.propEventSvc.removeEventListener(key, listener);\r\n  }\r\n  getDomDataKey() {\r\n    return this.domDataKey;\r\n  }\r\n  /** Prefer _addGridCommonParams from gridOptionsUtils for bundle size savings */\r\n  addGridCommonParams(params) {\r\n    params.api = this.api;\r\n    params.context = this.gridOptionsContext;\r\n    return params;\r\n  }\r\n  validateOptions(options, modValidations) {\r\n    for (const key of Object.keys(options)) {\r\n      const value = options[key];\r\n      if (value == null || value === false) {\r\n        continue;\r\n      }\r\n      let moduleToCheck = modValidations[key];\r\n      if (typeof moduleToCheck === \"function\") {\r\n        moduleToCheck = moduleToCheck(options, this.gridOptions, this.beans);\r\n      }\r\n      if (moduleToCheck) {\r\n        this.assertModuleRegistered(moduleToCheck, key);\r\n      }\r\n    }\r\n  }\r\n  validateGridOptions(gridOptions) {\r\n    this.validateOptions(gridOptions, GRID_OPTIONS_MODULES);\r\n    this.validation?.processGridOptions(gridOptions);\r\n  }\r\n  validateColDef(colDef, colId, skipInferenceCheck) {\r\n    if (skipInferenceCheck || !this.beans.dataTypeSvc?.isColPendingInference(colId)) {\r\n      this.validateOptions(colDef, COLUMN_DEFINITION_MOD_VALIDATIONS);\r\n      this.validation?.validateColDef(colDef);\r\n    }\r\n  }\r\n  assertModuleRegistered(moduleName, reasonOrId) {\r\n    const registered = Array.isArray(moduleName) ? moduleName.some((modName) => this.isModuleRegistered(modName)) : this.isModuleRegistered(moduleName);\r\n    if (!registered) {\r\n      _error(200, {\r\n        ...this.getModuleErrorParams(),\r\n        moduleName,\r\n        reasonOrId\r\n      });\r\n    }\r\n    return registered;\r\n  }\r\n  getModuleErrorParams() {\r\n    return {\r\n      gridId: this.gridId,\r\n      gridScoped: _areModulesGridScoped(),\r\n      rowModelType: this.get(\"rowModelType\"),\r\n      isUmd: _isUmd()\r\n    };\r\n  }\r\n  isModuleRegistered(moduleName) {\r\n    return _isModuleRegistered(moduleName, this.gridId, this.get(\"rowModelType\"));\r\n  }\r\n};\r\nfunction isPublicEventHandler(eventName) {\r\n  return !!_PUBLIC_EVENT_HANDLERS_MAP[eventName];\r\n}\r\n\r\n// packages/ag-grid-community/src/headerRendering/cells/column/headerComp.ts\r\nfunction getHeaderCompElementParams(includeSortIndicator) {\r\n  const hiddenAttrs = { \"aria-hidden\": \"true\" };\r\n  return {\r\n    tag: \"div\",\r\n    cls: \"ag-cell-label-container\",\r\n    role: \"presentation\",\r\n    children: [\r\n      {\r\n        tag: \"span\",\r\n        ref: \"eMenu\",\r\n        cls: \"ag-header-icon ag-header-cell-menu-button\",\r\n        attrs: hiddenAttrs\r\n      },\r\n      {\r\n        tag: \"span\",\r\n        ref: \"eFilterButton\",\r\n        cls: \"ag-header-icon ag-header-cell-filter-button\",\r\n        attrs: hiddenAttrs\r\n      },\r\n      {\r\n        tag: \"div\",\r\n        ref: \"eLabel\",\r\n        cls: \"ag-header-cell-label\",\r\n        role: \"presentation\",\r\n        children: [\r\n          { tag: \"span\", ref: \"eText\", cls: \"ag-header-cell-text\" },\r\n          {\r\n            tag: \"span\",\r\n            ref: \"eFilter\",\r\n            cls: \"ag-header-icon ag-header-label-icon ag-filter-icon\",\r\n            attrs: hiddenAttrs\r\n          },\r\n          includeSortIndicator ? { tag: \"ag-sort-indicator\", ref: \"eSortIndicator\" } : null\r\n        ]\r\n      }\r\n    ]\r\n  };\r\n}\r\nvar HeaderCompElement = getHeaderCompElementParams(true);\r\nvar HeaderCompElementNoSort = getHeaderCompElementParams(false);\r\nvar HeaderComp = class extends Component {\r\n  constructor() {\r\n    super(...arguments);\r\n    // All the elements are optional, as they are not guaranteed to be present if the user provides a custom template\r\n    this.eFilter = RefPlaceholder;\r\n    this.eFilterButton = RefPlaceholder;\r\n    this.eSortIndicator = RefPlaceholder;\r\n    this.eMenu = RefPlaceholder;\r\n    this.eLabel = RefPlaceholder;\r\n    this.eText = RefPlaceholder;\r\n    /**\r\n     * Selectors for custom headers templates, i.e when the ag-sort-indicator is not present.\r\n     */\r\n    this.eSortOrder = RefPlaceholder;\r\n    this.eSortAsc = RefPlaceholder;\r\n    this.eSortDesc = RefPlaceholder;\r\n    this.eSortMixed = RefPlaceholder;\r\n    this.eSortNone = RefPlaceholder;\r\n    this.isLoadingInnerComponent = false;\r\n  }\r\n  refresh(params) {\r\n    const oldParams = this.params;\r\n    this.params = params;\r\n    if (this.workOutTemplate(params, !!this.beans?.sortSvc) != this.currentTemplate || this.workOutShowMenu() != this.currentShowMenu || params.enableSorting != this.currentSort || this.currentSuppressMenuHide != null && this.shouldSuppressMenuHide() != this.currentSuppressMenuHide || oldParams.enableFilterButton != params.enableFilterButton || oldParams.enableFilterIcon != params.enableFilterIcon) {\r\n      return false;\r\n    }\r\n    if (this.innerHeaderComponent) {\r\n      const mergedParams = { ...params };\r\n      _mergeDeep(mergedParams, params.innerHeaderComponentParams);\r\n      this.innerHeaderComponent.refresh?.(mergedParams);\r\n    } else {\r\n      this.setDisplayName(params);\r\n    }\r\n    return true;\r\n  }\r\n  workOutTemplate(params, isSorting) {\r\n    const paramsTemplate = params.template;\r\n    if (paramsTemplate) {\r\n      return paramsTemplate?.trim ? paramsTemplate.trim() : paramsTemplate;\r\n    } else {\r\n      return isSorting ? HeaderCompElement : HeaderCompElementNoSort;\r\n    }\r\n  }\r\n  init(params) {\r\n    this.params = params;\r\n    const { sortSvc, touchSvc, rowNumbersSvc, userCompFactory } = this.beans;\r\n    const sortComp = sortSvc?.getSortIndicatorSelector();\r\n    this.currentTemplate = this.workOutTemplate(params, !!sortComp);\r\n    this.setTemplate(this.currentTemplate, sortComp ? [sortComp] : void 0);\r\n    touchSvc?.setupForHeader(this);\r\n    this.setMenu();\r\n    this.setupSort();\r\n    rowNumbersSvc?.setupForHeader(this);\r\n    this.setupFilterIcon();\r\n    this.setupFilterButton();\r\n    this.workOutInnerHeaderComponent(userCompFactory, params);\r\n    this.setDisplayName(params);\r\n  }\r\n  workOutInnerHeaderComponent(userCompFactory, params) {\r\n    const userCompDetails = _getInnerHeaderCompDetails(userCompFactory, params, params);\r\n    if (!userCompDetails) {\r\n      return;\r\n    }\r\n    this.isLoadingInnerComponent = true;\r\n    userCompDetails.newAgStackInstance().then((comp) => {\r\n      this.isLoadingInnerComponent = false;\r\n      if (!comp) {\r\n        return;\r\n      }\r\n      if (this.isAlive()) {\r\n        this.innerHeaderComponent = comp;\r\n        if (this.eText) {\r\n          this.eText.appendChild(comp.getGui());\r\n        }\r\n      } else {\r\n        this.destroyBean(comp);\r\n      }\r\n    });\r\n  }\r\n  setDisplayName(params) {\r\n    const { displayName } = params;\r\n    const oldDisplayName = this.currentDisplayName;\r\n    this.currentDisplayName = displayName;\r\n    if (!this.eText || oldDisplayName === displayName || this.innerHeaderComponent || this.isLoadingInnerComponent) {\r\n      return;\r\n    }\r\n    this.eText.textContent = _toString(displayName);\r\n  }\r\n  addInIcon(iconName, eParent, column) {\r\n    const eIcon = _createIconNoSpan(iconName, this.beans, column);\r\n    if (eIcon) {\r\n      eParent.appendChild(eIcon);\r\n    }\r\n  }\r\n  workOutShowMenu() {\r\n    return this.params.enableMenu && !!this.beans.menuSvc?.isHeaderMenuButtonEnabled();\r\n  }\r\n  shouldSuppressMenuHide() {\r\n    return !!this.beans.menuSvc?.isHeaderMenuButtonAlwaysShowEnabled();\r\n  }\r\n  setMenu() {\r\n    if (!this.eMenu) {\r\n      return;\r\n    }\r\n    this.currentShowMenu = this.workOutShowMenu();\r\n    if (!this.currentShowMenu) {\r\n      _removeFromParent(this.eMenu);\r\n      this.eMenu = void 0;\r\n      return;\r\n    }\r\n    const { gos, eMenu, params } = this;\r\n    const isLegacyMenu = _isLegacyMenuEnabled(gos);\r\n    this.addInIcon(isLegacyMenu ? \"menu\" : \"menuAlt\", eMenu, params.column);\r\n    eMenu.classList.toggle(\"ag-header-menu-icon\", !isLegacyMenu);\r\n    const currentSuppressMenuHide = this.shouldSuppressMenuHide();\r\n    this.currentSuppressMenuHide = currentSuppressMenuHide;\r\n    this.addManagedElementListeners(eMenu, { click: () => this.showColumnMenu(this.eMenu) });\r\n    this.toggleMenuAlwaysShow(currentSuppressMenuHide);\r\n  }\r\n  toggleMenuAlwaysShow(alwaysShow) {\r\n    this.eMenu?.classList.toggle(\"ag-header-menu-always-show\", alwaysShow);\r\n  }\r\n  showColumnMenu(element) {\r\n    const { currentSuppressMenuHide, params } = this;\r\n    if (!currentSuppressMenuHide) {\r\n      this.toggleMenuAlwaysShow(true);\r\n    }\r\n    params.showColumnMenu(element, () => {\r\n      if (!currentSuppressMenuHide) {\r\n        this.toggleMenuAlwaysShow(false);\r\n      }\r\n    });\r\n  }\r\n  onMenuKeyboardShortcut(isFilterShortcut) {\r\n    const { params, gos, beans, eMenu, eFilterButton } = this;\r\n    const column = params.column;\r\n    const isLegacyMenuEnabled = _isLegacyMenuEnabled(gos);\r\n    if (isFilterShortcut && !isLegacyMenuEnabled) {\r\n      if (beans.menuSvc?.isFilterMenuInHeaderEnabled(column)) {\r\n        params.showFilter(eFilterButton ?? eMenu ?? this.getGui());\r\n        return true;\r\n      }\r\n    } else if (params.enableMenu) {\r\n      this.showColumnMenu(eMenu ?? eFilterButton ?? this.getGui());\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  setupSort() {\r\n    const { sortSvc } = this.beans;\r\n    if (!sortSvc) {\r\n      return;\r\n    }\r\n    const { enableSorting, column } = this.params;\r\n    this.currentSort = enableSorting;\r\n    if (!this.eSortIndicator) {\r\n      this.eSortIndicator = this.createBean(sortSvc.createSortIndicator(true));\r\n      const { eSortIndicator, eSortOrder, eSortAsc, eSortDesc, eSortMixed, eSortNone } = this;\r\n      eSortIndicator.attachCustomElements(eSortOrder, eSortAsc, eSortDesc, eSortMixed, eSortNone);\r\n    }\r\n    this.eSortIndicator.setupSort(column);\r\n    if (!this.currentSort) {\r\n      return;\r\n    }\r\n    sortSvc.setupHeader(this, column, this.eLabel);\r\n  }\r\n  setupFilterIcon() {\r\n    const { eFilter, params } = this;\r\n    if (!eFilter) {\r\n      return;\r\n    }\r\n    const onFilterChangedIcon = () => {\r\n      const filterPresent = params.column.isFilterActive();\r\n      _setDisplayed(eFilter, filterPresent, { skipAriaHidden: true });\r\n    };\r\n    this.configureFilter(params.enableFilterIcon, eFilter, onFilterChangedIcon, \"filterActive\");\r\n  }\r\n  setupFilterButton() {\r\n    const { eFilterButton, params } = this;\r\n    if (!eFilterButton) {\r\n      return;\r\n    }\r\n    const configured = this.configureFilter(\r\n      params.enableFilterButton,\r\n      eFilterButton,\r\n      this.onFilterChangedButton.bind(this),\r\n      \"filter\"\r\n    );\r\n    if (configured) {\r\n      this.addManagedElementListeners(eFilterButton, {\r\n        click: () => params.showFilter(eFilterButton)\r\n      });\r\n    } else {\r\n      this.eFilterButton = void 0;\r\n    }\r\n  }\r\n  configureFilter(enabled, element, filterChangedCallback, icon) {\r\n    if (!enabled) {\r\n      _removeFromParent(element);\r\n      return false;\r\n    }\r\n    const column = this.params.column;\r\n    this.addInIcon(icon, element, column);\r\n    this.addManagedListeners(column, { filterChanged: filterChangedCallback });\r\n    filterChangedCallback();\r\n    return true;\r\n  }\r\n  onFilterChangedButton() {\r\n    const filterPresent = this.params.column.isFilterActive();\r\n    this.eFilterButton.classList.toggle(\"ag-filter-active\", filterPresent);\r\n  }\r\n  getAnchorElementForMenu(isFilter) {\r\n    const { eFilterButton, eMenu } = this;\r\n    if (isFilter) {\r\n      return eFilterButton ?? eMenu ?? this.getGui();\r\n    }\r\n    return eMenu ?? eFilterButton ?? this.getGui();\r\n  }\r\n  destroy() {\r\n    super.destroy();\r\n    if (this.innerHeaderComponent) {\r\n      this.destroyBean(this.innerHeaderComponent);\r\n      this.innerHeaderComponent = void 0;\r\n    }\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/headerRendering/cells/columnGroup/headerGroupComp.ts\r\nvar HeaderGroupCompElement = {\r\n  tag: \"div\",\r\n  cls: \"ag-header-group-cell-label\",\r\n  role: \"presentation\",\r\n  children: [\r\n    { tag: \"span\", ref: \"agLabel\", cls: \"ag-header-group-text\", role: \"presentation\" },\r\n    { tag: \"span\", ref: \"agOpened\", cls: `ag-header-icon ag-header-expand-icon ag-header-expand-icon-expanded` },\r\n    { tag: \"span\", ref: \"agClosed\", cls: `ag-header-icon ag-header-expand-icon ag-header-expand-icon-collapsed` }\r\n  ]\r\n};\r\nvar HeaderGroupComp = class extends Component {\r\n  constructor() {\r\n    super(HeaderGroupCompElement);\r\n    this.agOpened = RefPlaceholder;\r\n    this.agClosed = RefPlaceholder;\r\n    this.agLabel = RefPlaceholder;\r\n    this.isLoadingInnerComponent = false;\r\n  }\r\n  init(params) {\r\n    const { userCompFactory, touchSvc } = this.beans;\r\n    this.params = params;\r\n    this.checkWarnings();\r\n    this.workOutInnerHeaderGroupComponent(userCompFactory, params);\r\n    this.setupLabel(params);\r\n    this.addGroupExpandIcon(params);\r\n    this.setupExpandIcons();\r\n    touchSvc?.setupForHeaderGroup(this);\r\n  }\r\n  checkWarnings() {\r\n    const paramsAny = this.params;\r\n    if (paramsAny.template) {\r\n      _warn(89);\r\n    }\r\n  }\r\n  workOutInnerHeaderGroupComponent(userCompFactory, params) {\r\n    const userCompDetails = _getInnerHeaderGroupCompDetails(userCompFactory, params, params);\r\n    if (!userCompDetails) {\r\n      return;\r\n    }\r\n    this.isLoadingInnerComponent = true;\r\n    userCompDetails.newAgStackInstance().then((comp) => {\r\n      this.isLoadingInnerComponent = false;\r\n      if (!comp) {\r\n        return;\r\n      }\r\n      if (this.isAlive()) {\r\n        this.innerHeaderGroupComponent = comp;\r\n        this.agLabel.appendChild(comp.getGui());\r\n      } else {\r\n        this.destroyBean(comp);\r\n      }\r\n    });\r\n  }\r\n  setupExpandIcons() {\r\n    const {\r\n      agOpened,\r\n      agClosed,\r\n      params: { columnGroup },\r\n      beans\r\n    } = this;\r\n    this.addInIcon(\"columnGroupOpened\", agOpened);\r\n    this.addInIcon(\"columnGroupClosed\", agClosed);\r\n    const expandAction = (event) => {\r\n      if (_isStopPropagationForAgGrid(event)) {\r\n        return;\r\n      }\r\n      const newExpandedValue = !columnGroup.isExpanded();\r\n      beans.colGroupSvc.setColumnGroupOpened(\r\n        columnGroup.getProvidedColumnGroup(),\r\n        newExpandedValue,\r\n        \"uiColumnExpanded\"\r\n      );\r\n    };\r\n    this.addTouchAndClickListeners(beans, agClosed, expandAction);\r\n    this.addTouchAndClickListeners(beans, agOpened, expandAction);\r\n    const stopPropagationAction = (event) => {\r\n      _stopPropagationForAgGrid(event);\r\n    };\r\n    this.addManagedElementListeners(agClosed, { dblclick: stopPropagationAction });\r\n    this.addManagedElementListeners(agOpened, { dblclick: stopPropagationAction });\r\n    this.addManagedElementListeners(this.getGui(), { dblclick: expandAction });\r\n    this.updateIconVisibility();\r\n    const providedColumnGroup = columnGroup.getProvidedColumnGroup();\r\n    const updateIcon = this.updateIconVisibility.bind(this);\r\n    this.addManagedListeners(providedColumnGroup, {\r\n      expandedChanged: updateIcon,\r\n      expandableChanged: updateIcon\r\n    });\r\n  }\r\n  addTouchAndClickListeners(beans, eElement, action) {\r\n    beans.touchSvc?.setupForHeaderGroupElement(this, eElement, action);\r\n    this.addManagedElementListeners(eElement, { click: action });\r\n  }\r\n  updateIconVisibility() {\r\n    const {\r\n      agOpened,\r\n      agClosed,\r\n      params: { columnGroup }\r\n    } = this;\r\n    if (columnGroup.isExpandable()) {\r\n      const expanded = columnGroup.isExpanded();\r\n      _setDisplayed(agOpened, expanded);\r\n      _setDisplayed(agClosed, !expanded);\r\n    } else {\r\n      _setDisplayed(agOpened, false);\r\n      _setDisplayed(agClosed, false);\r\n    }\r\n  }\r\n  addInIcon(iconName, element) {\r\n    const eIcon = _createIconNoSpan(iconName, this.beans, null);\r\n    if (eIcon) {\r\n      element.appendChild(eIcon);\r\n    }\r\n  }\r\n  addGroupExpandIcon(params) {\r\n    if (!params.columnGroup.isExpandable()) {\r\n      const { agOpened, agClosed } = this;\r\n      _setDisplayed(agOpened, false);\r\n      _setDisplayed(agClosed, false);\r\n      return;\r\n    }\r\n  }\r\n  setupLabel(params) {\r\n    const { displayName, columnGroup } = params;\r\n    const hasInnerComponent = this.innerHeaderGroupComponent || this.isLoadingInnerComponent;\r\n    if (_exists(displayName) && !hasInnerComponent) {\r\n      this.agLabel.textContent = _toString(displayName);\r\n    }\r\n    this.toggleCss(\"ag-sticky-label\", !columnGroup.getColGroupDef()?.suppressStickyLabel);\r\n  }\r\n  destroy() {\r\n    super.destroy();\r\n    if (this.innerHeaderGroupComponent) {\r\n      this.destroyBean(this.innerHeaderGroupComponent);\r\n      this.innerHeaderGroupComponent = void 0;\r\n    }\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/headerRendering/cells/headerModule.ts\r\nvar ColumnHeaderCompModule = {\r\n  moduleName: \"ColumnHeaderComp\",\r\n  version: VERSION,\r\n  userComponents: {\r\n    agColumnHeader: HeaderComp\r\n  },\r\n  icons: {\r\n    // button to launch legacy column menu\r\n    menu: \"menu\",\r\n    // button to launch new enterprise column menu\r\n    menuAlt: \"menu-alt\"\r\n  }\r\n};\r\nvar ColumnGroupHeaderCompModule = {\r\n  moduleName: \"ColumnGroupHeaderComp\",\r\n  version: VERSION,\r\n  userComponents: {\r\n    agColumnGroupHeader: HeaderGroupComp\r\n  },\r\n  icons: {\r\n    // header column group shown when expanded (click to contract)\r\n    columnGroupOpened: \"expanded\",\r\n    // header column group shown when contracted (click to expand)\r\n    columnGroupClosed: \"contracted\"\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/misc/animationFrameService.ts\r\nvar AnimationFrameService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"animationFrameSvc\";\r\n    // p1 and p2 are create tasks are to do with row and cell creation.\r\n    // for them we want to execute according to row order, so we use\r\n    // TaskItem so we know what index the item is for.\r\n    this.p1 = { list: [], sorted: false };\r\n    // eg drawing back-ground of rows\r\n    this.p2 = { list: [], sorted: false };\r\n    // eg cell renderers, adding hover functionality\r\n    this.f1 = { list: [], sorted: false };\r\n    // eg framework cell renderers\r\n    // destroy tasks are to do with row removal. they are done after row creation as the user will need to see new\r\n    // rows first (as blank is scrolled into view), when we remove the old rows (no longer in view) is not as\r\n    // important.\r\n    this.destroyTasks = [];\r\n    this.ticking = false;\r\n    // we need to know direction of scroll, to build up rows in the direction of\r\n    // the scroll. eg if user scrolls down, we extend the rows by building down.\r\n    this.scrollGoingDown = true;\r\n    this.lastScrollTop = 0;\r\n    this.taskCount = 0;\r\n  }\r\n  setScrollTop(scrollTop) {\r\n    this.scrollGoingDown = scrollTop >= this.lastScrollTop;\r\n    if (scrollTop === 0) {\r\n      this.scrollGoingDown = true;\r\n    }\r\n    this.lastScrollTop = scrollTop;\r\n  }\r\n  postConstruct() {\r\n    this.active = !this.gos.get(\"suppressAnimationFrame\");\r\n    this.batchFrameworkComps = this.beans.frameworkOverrides.batchFrameworkComps;\r\n  }\r\n  // this method is for our AG Grid sanity only - if animation frames are turned off,\r\n  // then no place in the code should be looking to add any work to be done in animation\r\n  // frames. this stops bugs - where some code is asking for a frame to be executed\r\n  // when it should not.\r\n  verify() {\r\n    if (this.active === false) {\r\n      _warn(92);\r\n    }\r\n  }\r\n  createTask(task, index, list, isFramework, isDeferred = false) {\r\n    this.verify();\r\n    let taskList = list;\r\n    if (isFramework && this.batchFrameworkComps) {\r\n      taskList = \"f1\";\r\n    }\r\n    const taskItem = { task, index, createOrder: ++this.taskCount, deferred: isDeferred };\r\n    this.addTaskToList(this[taskList], taskItem);\r\n    this.schedule();\r\n  }\r\n  addTaskToList(taskList, task) {\r\n    taskList.list.push(task);\r\n    taskList.sorted = false;\r\n  }\r\n  sortTaskList(taskList) {\r\n    if (taskList.sorted) {\r\n      return;\r\n    }\r\n    const sortDirection = this.scrollGoingDown ? 1 : -1;\r\n    taskList.list.sort((a, b) => {\r\n      if (a.deferred !== b.deferred) {\r\n        return a.deferred ? -1 : 1;\r\n      }\r\n      if (a.index !== b.index) {\r\n        return sortDirection * (b.index - a.index);\r\n      }\r\n      return b.createOrder - a.createOrder;\r\n    });\r\n    taskList.sorted = true;\r\n  }\r\n  addDestroyTask(task) {\r\n    this.verify();\r\n    this.destroyTasks.push(task);\r\n    this.schedule();\r\n  }\r\n  executeFrame(millis) {\r\n    const { p1, p2, f1, destroyTasks, beans } = this;\r\n    const { ctrlsSvc, frameworkOverrides } = beans;\r\n    const p1Tasks = p1.list;\r\n    const p2Tasks = p2.list;\r\n    const f1Tasks = f1.list;\r\n    const frameStart = Date.now();\r\n    let duration = 0;\r\n    const noMaxMillis = millis <= 0;\r\n    const scrollFeature = ctrlsSvc.getScrollFeature();\r\n    while (noMaxMillis || duration < millis) {\r\n      const gridBodyDidSomething = scrollFeature.scrollGridIfNeeded();\r\n      if (!gridBodyDidSomething) {\r\n        let task;\r\n        if (p1Tasks.length) {\r\n          this.sortTaskList(p1);\r\n          task = p1Tasks.pop().task;\r\n        } else if (p2Tasks.length) {\r\n          this.sortTaskList(p2);\r\n          task = p2Tasks.pop().task;\r\n        } else if (f1Tasks.length) {\r\n          frameworkOverrides.wrapOutgoing(() => {\r\n            while (noMaxMillis || duration < millis) {\r\n              const gridBodyDidSomething2 = scrollFeature.scrollGridIfNeeded();\r\n              if (!gridBodyDidSomething2) {\r\n                if (f1Tasks.length) {\r\n                  this.sortTaskList(f1);\r\n                  task = f1Tasks.pop().task;\r\n                  task();\r\n                } else {\r\n                  break;\r\n                }\r\n              } else {\r\n                break;\r\n              }\r\n              duration = Date.now() - frameStart;\r\n            }\r\n          });\r\n          task = () => {\r\n          };\r\n        } else if (destroyTasks.length) {\r\n          task = destroyTasks.pop();\r\n        } else {\r\n          break;\r\n        }\r\n        task();\r\n      }\r\n      duration = Date.now() - frameStart;\r\n    }\r\n    if (p1Tasks.length || p2Tasks.length || f1Tasks.length || destroyTasks.length) {\r\n      this.requestFrame();\r\n    } else {\r\n      this.ticking = false;\r\n    }\r\n  }\r\n  flushAllFrames() {\r\n    if (!this.active) {\r\n      return;\r\n    }\r\n    this.executeFrame(-1);\r\n  }\r\n  schedule() {\r\n    if (!this.active) {\r\n      return;\r\n    }\r\n    if (!this.ticking) {\r\n      this.ticking = true;\r\n      this.requestFrame();\r\n    }\r\n  }\r\n  requestFrame() {\r\n    const callback = this.executeFrame.bind(this, 60);\r\n    _requestAnimationFrame(this.beans, callback);\r\n  }\r\n  isQueueEmpty() {\r\n    return !this.ticking;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/misc/animationFrameModule.ts\r\nvar AnimationFrameModule = {\r\n  moduleName: \"AnimationFrame\",\r\n  version: VERSION,\r\n  beans: [AnimationFrameService]\r\n};\r\n\r\n// packages/ag-grid-community/src/misc/touchService.ts\r\nvar TouchService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"touchSvc\";\r\n  }\r\n  mockBodyContextMenu(ctrl, listener) {\r\n    this.mockContextMenu(ctrl, ctrl.eBodyViewport, listener);\r\n  }\r\n  mockHeaderContextMenu(ctrl, listener) {\r\n    this.mockContextMenu(ctrl, ctrl.eGui, listener);\r\n  }\r\n  mockRowContextMenu(ctrl) {\r\n    if (!_isIOSUserAgent()) {\r\n      return;\r\n    }\r\n    const listener = (mouseListener, touch, touchEvent) => {\r\n      const { rowCtrl, cellCtrl } = ctrl.getControlsForEventTarget(touchEvent?.target ?? null);\r\n      if (cellCtrl?.column) {\r\n        cellCtrl.dispatchCellContextMenuEvent(touchEvent ?? null);\r\n      }\r\n      this.beans.contextMenuSvc?.handleContextMenuMouseEvent(void 0, touchEvent, rowCtrl, cellCtrl);\r\n    };\r\n    this.mockContextMenu(ctrl, ctrl.element, listener);\r\n  }\r\n  handleCellDoubleClick(ctrl, mouseEvent) {\r\n    const isDoubleClickOnIPad = () => {\r\n      if (!_isIOSUserAgent() || _isEventSupported(\"dblclick\")) {\r\n        return false;\r\n      }\r\n      const nowMillis = Date.now();\r\n      const res = nowMillis - ctrl.lastIPadMouseClickEvent < 200;\r\n      ctrl.lastIPadMouseClickEvent = nowMillis;\r\n      return res;\r\n    };\r\n    if (isDoubleClickOnIPad()) {\r\n      ctrl.onCellDoubleClicked(mouseEvent);\r\n      mouseEvent.preventDefault();\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  setupForHeader(comp) {\r\n    const { gos, sortSvc, menuSvc } = this.beans;\r\n    if (gos.get(\"suppressTouch\")) {\r\n      return;\r\n    }\r\n    const { params, eMenu, eFilterButton } = comp;\r\n    const touchListener = new TouchListener(comp.getGui(), true);\r\n    const suppressMenuHide = comp.shouldSuppressMenuHide();\r\n    const tapMenuButton = suppressMenuHide && _exists(eMenu) && params.enableMenu;\r\n    const menuTouchListener = tapMenuButton ? new TouchListener(eMenu, true) : touchListener;\r\n    if (params.enableMenu || menuSvc?.isHeaderContextMenuEnabled(params.column)) {\r\n      const eventType = tapMenuButton ? \"tap\" : \"longTap\";\r\n      const showMenuFn = (event) => params.showColumnMenuAfterMouseClick(event.touchStart);\r\n      comp.addManagedListeners(menuTouchListener, { [eventType]: showMenuFn });\r\n    }\r\n    if (params.enableSorting) {\r\n      const tapListener = (event) => {\r\n        const target = event.touchStart.target;\r\n        if (suppressMenuHide && (eMenu?.contains(target) || eFilterButton?.contains(target))) {\r\n          return;\r\n        }\r\n        sortSvc?.progressSort(params.column, false, \"uiColumnSorted\");\r\n      };\r\n      comp.addManagedListeners(touchListener, { tap: tapListener });\r\n    }\r\n    if (params.enableFilterButton && eFilterButton) {\r\n      const filterButtonTouchListener = new TouchListener(eFilterButton, true);\r\n      comp.addManagedListeners(filterButtonTouchListener, {\r\n        tap: () => params.showFilter(eFilterButton)\r\n      });\r\n      comp.addDestroyFunc(() => filterButtonTouchListener.destroy());\r\n    }\r\n    comp.addDestroyFunc(() => touchListener.destroy());\r\n    if (tapMenuButton) {\r\n      comp.addDestroyFunc(() => menuTouchListener.destroy());\r\n    }\r\n  }\r\n  setupForHeaderGroup(comp) {\r\n    const params = comp.params;\r\n    if (this.beans.menuSvc?.isHeaderContextMenuEnabled(\r\n      params.columnGroup.getProvidedColumnGroup()\r\n    )) {\r\n      const touchListener = new TouchListener(params.eGridHeader, true);\r\n      const showMenuFn = (event) => params.showColumnMenuAfterMouseClick(event.touchStart);\r\n      comp.addManagedListeners(touchListener, { longTap: showMenuFn });\r\n      comp.addDestroyFunc(() => touchListener.destroy());\r\n    }\r\n  }\r\n  setupForHeaderGroupElement(comp, eElement, action) {\r\n    const touchListener = new TouchListener(eElement, true);\r\n    comp.addManagedListeners(touchListener, { tap: action });\r\n    comp.addDestroyFunc(() => touchListener.destroy());\r\n  }\r\n  mockContextMenu(ctrl, element, listener) {\r\n    if (!_isIOSUserAgent()) {\r\n      return;\r\n    }\r\n    const touchListener = new TouchListener(element);\r\n    const longTapListener = (event) => {\r\n      if (!_isEventFromThisGrid(this.gos, event.touchEvent)) {\r\n        return;\r\n      }\r\n      listener(void 0, event.touchStart, event.touchEvent);\r\n    };\r\n    ctrl.addManagedListeners(touchListener, { longTap: longTapListener });\r\n    ctrl.addDestroyFunc(() => touchListener.destroy());\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/misc/touchModule.ts\r\nvar TouchModule = {\r\n  moduleName: \"Touch\",\r\n  version: VERSION,\r\n  beans: [TouchService]\r\n};\r\n\r\n// packages/ag-grid-community/src/navigation/cellNavigationService.ts\r\nvar CellNavigationService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"cellNavigation\";\r\n  }\r\n  wireBeans(beans) {\r\n    this.rowSpanSvc = beans.rowSpanSvc;\r\n  }\r\n  // returns null if no cell to focus on, ie at the end of the grid\r\n  getNextCellToFocus(key, focusedCell, ctrlPressed = false) {\r\n    if (ctrlPressed) {\r\n      return this.getNextCellToFocusWithCtrlPressed(key, focusedCell);\r\n    }\r\n    return this.getNextCellToFocusWithoutCtrlPressed(key, focusedCell);\r\n  }\r\n  getNextCellToFocusWithCtrlPressed(key, focusedCell) {\r\n    const upKey = key === KeyCode.UP;\r\n    const downKey = key === KeyCode.DOWN;\r\n    const leftKey = key === KeyCode.LEFT;\r\n    let column;\r\n    let rowIndex;\r\n    const { pageBounds, gos, visibleCols, pinnedRowModel } = this.beans;\r\n    const { rowPinned } = focusedCell;\r\n    if (upKey || downKey) {\r\n      if (rowPinned && pinnedRowModel) {\r\n        if (upKey) {\r\n          rowIndex = 0;\r\n        } else {\r\n          rowIndex = rowPinned === \"top\" ? pinnedRowModel.getPinnedTopRowCount() - 1 : pinnedRowModel.getPinnedBottomRowCount() - 1;\r\n        }\r\n      } else {\r\n        rowIndex = upKey ? pageBounds.getFirstRow() : pageBounds.getLastRow();\r\n      }\r\n      column = focusedCell.column;\r\n    } else {\r\n      const isRtl = gos.get(\"enableRtl\");\r\n      rowIndex = focusedCell.rowIndex;\r\n      const allColumns = leftKey !== isRtl ? visibleCols.allCols : [...visibleCols.allCols].reverse();\r\n      column = allColumns.find(\r\n        (col) => this.isCellGoodToFocusOn({\r\n          rowIndex,\r\n          rowPinned: null,\r\n          column: col\r\n        })\r\n      );\r\n    }\r\n    return column ? {\r\n      rowIndex,\r\n      rowPinned,\r\n      column\r\n    } : null;\r\n  }\r\n  getNextCellToFocusWithoutCtrlPressed(key, focusedCell) {\r\n    let pointer = focusedCell;\r\n    let finished = false;\r\n    while (!finished) {\r\n      switch (key) {\r\n        case KeyCode.UP:\r\n          pointer = this.getCellAbove(pointer);\r\n          break;\r\n        case KeyCode.DOWN:\r\n          pointer = this.getCellBelow(pointer);\r\n          break;\r\n        case KeyCode.RIGHT:\r\n          pointer = this.gos.get(\"enableRtl\") ? this.getCellToLeft(pointer) : this.getCellToRight(pointer);\r\n          break;\r\n        case KeyCode.LEFT:\r\n          pointer = this.gos.get(\"enableRtl\") ? this.getCellToRight(pointer) : this.getCellToLeft(pointer);\r\n          break;\r\n        default:\r\n          pointer = null;\r\n          _warn(8, { key });\r\n          break;\r\n      }\r\n      if (pointer) {\r\n        finished = this.isCellGoodToFocusOn(pointer);\r\n      } else {\r\n        finished = true;\r\n      }\r\n    }\r\n    return pointer;\r\n  }\r\n  isCellGoodToFocusOn(gridCell) {\r\n    const column = gridCell.column;\r\n    let rowNode;\r\n    const { pinnedRowModel, rowModel } = this.beans;\r\n    switch (gridCell.rowPinned) {\r\n      case \"top\":\r\n        rowNode = pinnedRowModel?.getPinnedTopRow(gridCell.rowIndex);\r\n        break;\r\n      case \"bottom\":\r\n        rowNode = pinnedRowModel?.getPinnedBottomRow(gridCell.rowIndex);\r\n        break;\r\n      default:\r\n        rowNode = rowModel.getRow(gridCell.rowIndex);\r\n        break;\r\n    }\r\n    if (!rowNode) {\r\n      return false;\r\n    }\r\n    const suppressNavigable = this.isSuppressNavigable(column, rowNode);\r\n    return !suppressNavigable;\r\n  }\r\n  getCellToLeft(lastCell) {\r\n    if (!lastCell) {\r\n      return null;\r\n    }\r\n    const colToLeft = this.beans.visibleCols.getColBefore(lastCell.column);\r\n    if (!colToLeft) {\r\n      return null;\r\n    }\r\n    return {\r\n      rowIndex: lastCell.rowIndex,\r\n      column: colToLeft,\r\n      rowPinned: lastCell.rowPinned\r\n    };\r\n  }\r\n  getCellToRight(lastCell) {\r\n    if (!lastCell) {\r\n      return null;\r\n    }\r\n    const colToRight = this.beans.visibleCols.getColAfter(lastCell.column);\r\n    if (!colToRight) {\r\n      return null;\r\n    }\r\n    return {\r\n      rowIndex: lastCell.rowIndex,\r\n      column: colToRight,\r\n      rowPinned: lastCell.rowPinned\r\n    };\r\n  }\r\n  getCellBelow(lastCell) {\r\n    if (!lastCell) {\r\n      return null;\r\n    }\r\n    const adjustedLastCell = this.rowSpanSvc?.getCellEnd(lastCell) ?? lastCell;\r\n    const rowBelow = _getRowBelow(this.beans, adjustedLastCell);\r\n    if (rowBelow) {\r\n      return {\r\n        rowIndex: rowBelow.rowIndex,\r\n        column: lastCell.column,\r\n        rowPinned: rowBelow.rowPinned\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n  getCellAbove(lastCell) {\r\n    if (!lastCell) {\r\n      return null;\r\n    }\r\n    const adjustedLastCell = this.rowSpanSvc?.getCellStart(lastCell) ?? lastCell;\r\n    const rowAbove = _getRowAbove(this.beans, {\r\n      rowIndex: adjustedLastCell.rowIndex,\r\n      rowPinned: adjustedLastCell.rowPinned\r\n    });\r\n    if (rowAbove) {\r\n      return {\r\n        rowIndex: rowAbove.rowIndex,\r\n        column: lastCell.column,\r\n        rowPinned: rowAbove.rowPinned\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n  getNextTabbedCell(gridCell, backwards) {\r\n    if (backwards) {\r\n      return this.getNextTabbedCellBackwards(gridCell);\r\n    }\r\n    return this.getNextTabbedCellForwards(gridCell);\r\n  }\r\n  getNextTabbedCellForwards(gridCell) {\r\n    const { visibleCols, pagination } = this.beans;\r\n    const displayedColumns = visibleCols.allCols;\r\n    let newRowIndex = gridCell.rowIndex;\r\n    let newFloating = gridCell.rowPinned;\r\n    let newColumn = visibleCols.getColAfter(gridCell.column);\r\n    if (!newColumn) {\r\n      newColumn = displayedColumns[0];\r\n      const rowBelow = _getRowBelow(this.beans, gridCell);\r\n      if (_missing(rowBelow)) {\r\n        return null;\r\n      }\r\n      if (!rowBelow.rowPinned && !(pagination?.isRowInPage(rowBelow.rowIndex) ?? true)) {\r\n        return null;\r\n      }\r\n      newRowIndex = rowBelow ? rowBelow.rowIndex : null;\r\n      newFloating = rowBelow ? rowBelow.rowPinned : null;\r\n    }\r\n    return { rowIndex: newRowIndex, column: newColumn, rowPinned: newFloating };\r\n  }\r\n  getNextTabbedCellBackwards(gridCell) {\r\n    const { beans } = this;\r\n    const { visibleCols, pagination } = beans;\r\n    const displayedColumns = visibleCols.allCols;\r\n    let newRowIndex = gridCell.rowIndex;\r\n    let newFloating = gridCell.rowPinned;\r\n    let newColumn = visibleCols.getColBefore(gridCell.column);\r\n    if (!newColumn) {\r\n      newColumn = _last(displayedColumns);\r\n      const rowAbove = _getRowAbove(beans, { rowIndex: gridCell.rowIndex, rowPinned: gridCell.rowPinned });\r\n      if (_missing(rowAbove)) {\r\n        return null;\r\n      }\r\n      if (!rowAbove.rowPinned && !(pagination?.isRowInPage(rowAbove.rowIndex) ?? true)) {\r\n        return null;\r\n      }\r\n      newRowIndex = rowAbove ? rowAbove.rowIndex : null;\r\n      newFloating = rowAbove ? rowAbove.rowPinned : null;\r\n    }\r\n    return { rowIndex: newRowIndex, column: newColumn, rowPinned: newFloating };\r\n  }\r\n  isSuppressNavigable(column, rowNode) {\r\n    const { suppressNavigable } = column.colDef;\r\n    if (typeof suppressNavigable === \"boolean\") {\r\n      return suppressNavigable;\r\n    }\r\n    if (typeof suppressNavigable === \"function\") {\r\n      const params = column.createColumnFunctionCallbackParams(rowNode);\r\n      const userFunc = suppressNavigable;\r\n      return userFunc(params);\r\n    }\r\n    return false;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/navigation/navigationApi.ts\r\nfunction getFocusedCell(beans) {\r\n  return beans.focusSvc.getFocusedCell();\r\n}\r\nfunction clearFocusedCell(beans) {\r\n  return beans.focusSvc.clearFocusedCell();\r\n}\r\nfunction setFocusedCell(beans, rowIndex, colKey, rowPinned) {\r\n  beans.focusSvc.setFocusedCell({ rowIndex, column: colKey, rowPinned, forceBrowserFocus: true });\r\n}\r\nfunction tabToNextCell(beans, event) {\r\n  return beans.navigation?.tabToNextCell(false, event) ?? false;\r\n}\r\nfunction tabToPreviousCell(beans, event) {\r\n  return beans.navigation?.tabToNextCell(true, event) ?? false;\r\n}\r\nfunction setFocusedHeader(beans, colKey, floatingFilter = false) {\r\n  const headerPosition = beans.headerNavigation?.getHeaderPositionForColumn(colKey, floatingFilter);\r\n  if (!headerPosition) {\r\n    return;\r\n  }\r\n  beans.focusSvc.focusHeaderPosition({ headerPosition });\r\n}\r\n\r\n// packages/ag-grid-community/src/navigation/navigationService.ts\r\nvar NavigationService = class extends BeanStub {\r\n  constructor() {\r\n    super();\r\n    this.beanName = \"navigation\";\r\n    this.onPageDown = _throttle(this.onPageDown, 100);\r\n    this.onPageUp = _throttle(this.onPageUp, 100);\r\n  }\r\n  postConstruct() {\r\n    this.beans.ctrlsSvc.whenReady(this, (p) => {\r\n      this.gridBodyCon = p.gridBodyCtrl;\r\n    });\r\n  }\r\n  handlePageScrollingKey(event, fromFullWidth = false) {\r\n    const key = event.key;\r\n    const alt = event.altKey;\r\n    const ctrl = event.ctrlKey || event.metaKey;\r\n    const rangeServiceShouldHandleShift = !!this.beans.rangeSvc && event.shiftKey;\r\n    const currentCell = _getCellPositionForEvent(this.gos, event);\r\n    let processed = false;\r\n    switch (key) {\r\n      case KeyCode.PAGE_HOME:\r\n      case KeyCode.PAGE_END:\r\n        if (!ctrl && !alt) {\r\n          this.onHomeOrEndKey(key);\r\n          processed = true;\r\n        }\r\n        break;\r\n      case KeyCode.LEFT:\r\n      case KeyCode.RIGHT:\r\n      case KeyCode.UP:\r\n      case KeyCode.DOWN:\r\n        if (!currentCell) {\r\n          return false;\r\n        }\r\n        if (ctrl && !alt && !rangeServiceShouldHandleShift) {\r\n          this.onCtrlUpDownLeftRight(key, currentCell);\r\n          processed = true;\r\n        }\r\n        break;\r\n      case KeyCode.PAGE_DOWN:\r\n      case KeyCode.PAGE_UP:\r\n        if (!ctrl && !alt) {\r\n          processed = this.handlePageUpDown(key, currentCell, fromFullWidth);\r\n        }\r\n        break;\r\n    }\r\n    if (processed) {\r\n      event.preventDefault();\r\n    }\r\n    return processed;\r\n  }\r\n  handlePageUpDown(key, currentCell, fromFullWidth) {\r\n    if (fromFullWidth) {\r\n      currentCell = this.beans.focusSvc.getFocusedCell();\r\n    }\r\n    if (!currentCell) {\r\n      return false;\r\n    }\r\n    if (key === KeyCode.PAGE_UP) {\r\n      this.onPageUp(currentCell);\r\n    } else {\r\n      this.onPageDown(currentCell);\r\n    }\r\n    return true;\r\n  }\r\n  navigateTo({\r\n    scrollIndex,\r\n    scrollType,\r\n    scrollColumn,\r\n    focusIndex,\r\n    focusColumn,\r\n    isAsync,\r\n    rowPinned\r\n  }) {\r\n    const { scrollFeature } = this.gridBodyCon;\r\n    if (_exists(scrollColumn) && !scrollColumn.isPinned()) {\r\n      scrollFeature.ensureColumnVisible(scrollColumn);\r\n    }\r\n    if (_exists(scrollIndex)) {\r\n      scrollFeature.ensureIndexVisible(scrollIndex, scrollType);\r\n    }\r\n    if (!isAsync) {\r\n      scrollFeature.ensureIndexVisible(focusIndex);\r\n    }\r\n    const { focusSvc, rangeSvc } = this.beans;\r\n    focusSvc.setFocusedCell({\r\n      rowIndex: focusIndex,\r\n      column: focusColumn,\r\n      rowPinned,\r\n      forceBrowserFocus: true\r\n    });\r\n    rangeSvc?.setRangeToCell({ rowIndex: focusIndex, rowPinned, column: focusColumn });\r\n  }\r\n  // this method is throttled, see the `constructor`\r\n  onPageDown(gridCell) {\r\n    const beans = this.beans;\r\n    const scrollPosition = getVScroll(beans);\r\n    const pixelsInOnePage = this.getViewportHeight();\r\n    const { pageBounds, rowModel, rowAutoHeight } = beans;\r\n    const pagingPixelOffset = pageBounds.getPixelOffset();\r\n    const currentPageBottomPixel = scrollPosition.top + pixelsInOnePage;\r\n    const currentPageBottomRow = rowModel.getRowIndexAtPixel(currentPageBottomPixel + pagingPixelOffset);\r\n    if (rowAutoHeight?.active) {\r\n      this.navigateToNextPageWithAutoHeight(gridCell, currentPageBottomRow);\r\n    } else {\r\n      this.navigateToNextPage(gridCell, currentPageBottomRow);\r\n    }\r\n  }\r\n  // this method is throttled, see the `constructor`\r\n  onPageUp(gridCell) {\r\n    const beans = this.beans;\r\n    const scrollPosition = getVScroll(beans);\r\n    const { pageBounds, rowModel, rowAutoHeight } = beans;\r\n    const pagingPixelOffset = pageBounds.getPixelOffset();\r\n    const currentPageTopPixel = scrollPosition.top;\r\n    const currentPageTopRow = rowModel.getRowIndexAtPixel(currentPageTopPixel + pagingPixelOffset);\r\n    if (rowAutoHeight?.active) {\r\n      this.navigateToNextPageWithAutoHeight(gridCell, currentPageTopRow, true);\r\n    } else {\r\n      this.navigateToNextPage(gridCell, currentPageTopRow, true);\r\n    }\r\n  }\r\n  navigateToNextPage(gridCell, scrollIndex, up = false) {\r\n    const { pageBounds, rowModel } = this.beans;\r\n    const pixelsInOnePage = this.getViewportHeight();\r\n    const firstRow = pageBounds.getFirstRow();\r\n    const lastRow = pageBounds.getLastRow();\r\n    const pagingPixelOffset = pageBounds.getPixelOffset();\r\n    const currentRowNode = rowModel.getRow(gridCell.rowIndex);\r\n    const rowPixelDiff = up ? (\r\n      // eslint-disable-next-line @typescript-eslint/no-non-null-asserted-optional-chain\r\n      currentRowNode?.rowHeight - pixelsInOnePage - pagingPixelOffset\r\n    ) : pixelsInOnePage - pagingPixelOffset;\r\n    const nextCellPixel = currentRowNode?.rowTop + rowPixelDiff;\r\n    let focusIndex = rowModel.getRowIndexAtPixel(nextCellPixel + pagingPixelOffset);\r\n    if (focusIndex === gridCell.rowIndex) {\r\n      const diff = up ? -1 : 1;\r\n      scrollIndex = focusIndex = gridCell.rowIndex + diff;\r\n    }\r\n    let scrollType;\r\n    if (up) {\r\n      scrollType = \"bottom\";\r\n      if (focusIndex < firstRow) {\r\n        focusIndex = firstRow;\r\n      }\r\n      if (scrollIndex < firstRow) {\r\n        scrollIndex = firstRow;\r\n      }\r\n    } else {\r\n      scrollType = \"top\";\r\n      if (focusIndex > lastRow) {\r\n        focusIndex = lastRow;\r\n      }\r\n      if (scrollIndex > lastRow) {\r\n        scrollIndex = lastRow;\r\n      }\r\n    }\r\n    if (this.isRowTallerThanView(rowModel.getRow(focusIndex))) {\r\n      scrollIndex = focusIndex;\r\n      scrollType = \"top\";\r\n    }\r\n    this.navigateTo({\r\n      scrollIndex,\r\n      scrollType,\r\n      scrollColumn: null,\r\n      focusIndex,\r\n      focusColumn: gridCell.column\r\n    });\r\n  }\r\n  navigateToNextPageWithAutoHeight(gridCell, scrollIndex, up = false) {\r\n    this.navigateTo({\r\n      scrollIndex,\r\n      scrollType: up ? \"bottom\" : \"top\",\r\n      scrollColumn: null,\r\n      focusIndex: scrollIndex,\r\n      focusColumn: gridCell.column\r\n    });\r\n    setTimeout(() => {\r\n      const focusIndex = this.getNextFocusIndexForAutoHeight(gridCell, up);\r\n      this.navigateTo({\r\n        scrollIndex,\r\n        scrollType: up ? \"bottom\" : \"top\",\r\n        scrollColumn: null,\r\n        focusIndex,\r\n        focusColumn: gridCell.column,\r\n        isAsync: true\r\n      });\r\n    }, 50);\r\n  }\r\n  getNextFocusIndexForAutoHeight(gridCell, up = false) {\r\n    const step = up ? -1 : 1;\r\n    const pixelsInOnePage = this.getViewportHeight();\r\n    const { pageBounds, rowModel } = this.beans;\r\n    const lastRowIndex = pageBounds.getLastRow();\r\n    let pixelSum = 0;\r\n    let currentIndex = gridCell.rowIndex;\r\n    while (currentIndex >= 0 && currentIndex <= lastRowIndex) {\r\n      const currentCell = rowModel.getRow(currentIndex);\r\n      if (currentCell) {\r\n        const currentCellHeight = currentCell.rowHeight ?? 0;\r\n        if (pixelSum + currentCellHeight > pixelsInOnePage) {\r\n          break;\r\n        }\r\n        pixelSum += currentCellHeight;\r\n      }\r\n      currentIndex += step;\r\n    }\r\n    return Math.max(0, Math.min(currentIndex, lastRowIndex));\r\n  }\r\n  getViewportHeight() {\r\n    const beans = this.beans;\r\n    const scrollPosition = getVScroll(beans);\r\n    const scrollbarWidth = this.beans.scrollVisibleSvc.getScrollbarWidth();\r\n    let pixelsInOnePage = scrollPosition.bottom - scrollPosition.top;\r\n    if (beans.ctrlsSvc.get(\"center\").isHorizontalScrollShowing()) {\r\n      pixelsInOnePage -= scrollbarWidth;\r\n    }\r\n    return pixelsInOnePage;\r\n  }\r\n  isRowTallerThanView(rowNode) {\r\n    if (!rowNode) {\r\n      return false;\r\n    }\r\n    const rowHeight = rowNode.rowHeight;\r\n    if (typeof rowHeight !== \"number\") {\r\n      return false;\r\n    }\r\n    return rowHeight > this.getViewportHeight();\r\n  }\r\n  onCtrlUpDownLeftRight(key, gridCell) {\r\n    const cellToFocus = this.beans.cellNavigation.getNextCellToFocus(key, gridCell, true);\r\n    const { rowIndex, rowPinned } = cellToFocus;\r\n    const column = cellToFocus.column;\r\n    this.navigateTo({\r\n      scrollIndex: rowIndex,\r\n      scrollType: null,\r\n      scrollColumn: column,\r\n      focusIndex: rowIndex,\r\n      focusColumn: column,\r\n      rowPinned\r\n    });\r\n  }\r\n  // home brings focus to top left cell, end brings focus to bottom right, grid scrolled to bring\r\n  // same cell into view (which means either scroll all the way up, or all the way down).\r\n  onHomeOrEndKey(key) {\r\n    const homeKey = key === KeyCode.PAGE_HOME;\r\n    const { visibleCols, pageBounds, rowModel } = this.beans;\r\n    const allColumns = visibleCols.allCols;\r\n    const scrollIndex = homeKey ? pageBounds.getFirstRow() : pageBounds.getLastRow();\r\n    const rowNode = rowModel.getRow(scrollIndex);\r\n    if (!rowNode) {\r\n      return;\r\n    }\r\n    const columnToSelect = (homeKey ? allColumns : [...allColumns].reverse()).find(\r\n      (col) => !col.isSuppressNavigable(rowNode)\r\n    );\r\n    if (!columnToSelect) {\r\n      return;\r\n    }\r\n    this.navigateTo({\r\n      scrollIndex,\r\n      scrollType: null,\r\n      scrollColumn: columnToSelect,\r\n      focusIndex: scrollIndex,\r\n      focusColumn: columnToSelect\r\n    });\r\n  }\r\n  // result of keyboard event\r\n  onTabKeyDown(previous, keyboardEvent) {\r\n    const backwards = keyboardEvent.shiftKey;\r\n    const movedToNextCell = this.tabToNextCellCommon(previous, backwards, keyboardEvent);\r\n    const beans = this.beans;\r\n    const { ctrlsSvc, pageBounds, focusSvc, gos } = beans;\r\n    if (movedToNextCell !== false) {\r\n      if (movedToNextCell) {\r\n        keyboardEvent.preventDefault();\r\n      } else if (movedToNextCell === null) {\r\n        ctrlsSvc.get(\"gridCtrl\").allowFocusForNextCoreContainer(backwards);\r\n      }\r\n      return;\r\n    }\r\n    if (backwards) {\r\n      const { rowIndex, rowPinned } = previous.getRowPosition();\r\n      const firstRow = rowPinned ? rowIndex === 0 : rowIndex === pageBounds.getFirstRow();\r\n      if (firstRow) {\r\n        if (gos.get(\"headerHeight\") === 0 || _isHeaderFocusSuppressed(beans)) {\r\n          _focusNextGridCoreContainer(beans, true, true);\r\n        } else {\r\n          keyboardEvent.preventDefault();\r\n          focusSvc.focusPreviousFromFirstCell(keyboardEvent);\r\n        }\r\n      }\r\n    } else {\r\n      if (previous instanceof CellCtrl) {\r\n        previous.focusCell(true);\r\n      }\r\n      if (!backwards && focusSvc.focusOverlay(false) || _focusNextGridCoreContainer(beans, backwards)) {\r\n        keyboardEvent.preventDefault();\r\n      }\r\n    }\r\n  }\r\n  // comes from API\r\n  tabToNextCell(backwards, event) {\r\n    const beans = this.beans;\r\n    const { focusSvc, rowRenderer } = beans;\r\n    const focusedCell = focusSvc.getFocusedCell();\r\n    if (!focusedCell) {\r\n      return false;\r\n    }\r\n    let cellOrRow = _getCellByPosition(beans, focusedCell);\r\n    if (!cellOrRow) {\r\n      cellOrRow = rowRenderer.getRowByPosition(focusedCell);\r\n      if (!cellOrRow || !cellOrRow.isFullWidth()) {\r\n        return false;\r\n      }\r\n    }\r\n    return !!this.tabToNextCellCommon(cellOrRow, backwards, event, \"api\");\r\n  }\r\n  tabToNextCellCommon(previous, backwards, event, source = \"ui\") {\r\n    const { editSvc, focusSvc } = this.beans;\r\n    let res = void 0;\r\n    const cellCtrl = previous instanceof CellCtrl ? previous : previous.getAllCellCtrls()?.[0];\r\n    if (editSvc?.isEditing()) {\r\n      res = editSvc?.moveToNextCell(cellCtrl, backwards, event, source);\r\n    } else {\r\n      res = this.moveToNextCellNotEditing(previous, backwards, event);\r\n    }\r\n    if (res === null) {\r\n      return res;\r\n    }\r\n    return res || !!focusSvc.focusedHeader;\r\n  }\r\n  // returns null if no navigation should be performed\r\n  moveToNextCellNotEditing(previousCell, backwards, event) {\r\n    const displayedColumns = this.beans.visibleCols.allCols;\r\n    let cellPos;\r\n    if (previousCell instanceof RowCtrl) {\r\n      cellPos = {\r\n        ...previousCell.getRowPosition(),\r\n        column: backwards ? displayedColumns[0] : _last(displayedColumns)\r\n      };\r\n      if (this.gos.get(\"embedFullWidthRows\") && event) {\r\n        const focusedContainer = previousCell.findFullWidthInfoForEvent(event);\r\n        if (focusedContainer) {\r\n          cellPos.column = focusedContainer.column;\r\n        }\r\n      }\r\n    } else {\r\n      cellPos = previousCell.getFocusedCellPosition();\r\n    }\r\n    const nextCell = this.findNextCellToFocusOn(cellPos, { backwards, startEditing: false });\r\n    if (nextCell === false) {\r\n      return null;\r\n    }\r\n    if (nextCell instanceof CellCtrl) {\r\n      nextCell.focusCell(true);\r\n    } else if (nextCell) {\r\n      return this.tryToFocusFullWidthRow(nextCell, backwards);\r\n    }\r\n    return _exists(nextCell);\r\n  }\r\n  /**\r\n   * called by the cell, when tab is pressed while editing.\r\n   * @returns RenderedCell when navigation successful, false if navigation should not be performed, otherwise null\r\n   */\r\n  findNextCellToFocusOn(previousPosition, { backwards, startEditing, skipToNextEditableCell }) {\r\n    let nextPosition = previousPosition;\r\n    const beans = this.beans;\r\n    const { cellNavigation, gos, focusSvc, rowRenderer, rangeSvc } = beans;\r\n    while (true) {\r\n      if (previousPosition !== nextPosition) {\r\n        previousPosition = nextPosition;\r\n      }\r\n      if (!backwards) {\r\n        nextPosition = this.getLastCellOfColSpan(nextPosition);\r\n      }\r\n      nextPosition = cellNavigation.getNextTabbedCell(nextPosition, backwards);\r\n      const userFunc = gos.getCallback(\"tabToNextCell\");\r\n      if (_exists(userFunc)) {\r\n        const params = {\r\n          backwards,\r\n          editing: startEditing,\r\n          previousCellPosition: previousPosition,\r\n          nextCellPosition: nextPosition ? nextPosition : null\r\n        };\r\n        const userResult = userFunc(params);\r\n        if (userResult === true) {\r\n          nextPosition = previousPosition;\r\n        } else if (userResult === false) {\r\n          return false;\r\n        } else {\r\n          nextPosition = {\r\n            rowIndex: userResult.rowIndex,\r\n            column: userResult.column,\r\n            rowPinned: userResult.rowPinned\r\n          };\r\n        }\r\n      }\r\n      if (!nextPosition) {\r\n        return null;\r\n      }\r\n      if (nextPosition.rowIndex < 0) {\r\n        const headerLen = getFocusHeaderRowCount(beans);\r\n        focusSvc.focusHeaderPosition({\r\n          headerPosition: {\r\n            headerRowIndex: headerLen + nextPosition.rowIndex,\r\n            column: nextPosition.column\r\n          },\r\n          fromCell: true\r\n        });\r\n        return null;\r\n      }\r\n      const fullRowEdit = gos.get(\"editType\") === \"fullRow\";\r\n      if (startEditing && (!fullRowEdit || skipToNextEditableCell)) {\r\n        const cellIsEditable = this.isCellEditable(nextPosition);\r\n        if (!cellIsEditable) {\r\n          continue;\r\n        }\r\n      }\r\n      this.ensureCellVisible(nextPosition);\r\n      const nextCell = _getCellByPosition(beans, nextPosition);\r\n      if (!nextCell) {\r\n        const row = rowRenderer.getRowByPosition(nextPosition);\r\n        if (!row || !row.isFullWidth() || startEditing) {\r\n          continue;\r\n        }\r\n        return { ...row.getRowPosition(), column: nextPosition?.column };\r\n      }\r\n      if (cellNavigation.isSuppressNavigable(nextCell.column, nextCell.rowNode)) {\r\n        continue;\r\n      }\r\n      nextCell.setFocusedCellPosition(nextPosition);\r\n      rangeSvc?.setRangeToCell(nextPosition);\r\n      return nextCell;\r\n    }\r\n  }\r\n  isCellEditable(cell) {\r\n    const rowNode = this.lookupRowNodeForCell(cell);\r\n    if (rowNode) {\r\n      return cell.column.isCellEditable(rowNode);\r\n    }\r\n    return false;\r\n  }\r\n  lookupRowNodeForCell({ rowIndex, rowPinned }) {\r\n    const { pinnedRowModel, rowModel } = this.beans;\r\n    if (rowPinned === \"top\") {\r\n      return pinnedRowModel?.getPinnedTopRow(rowIndex);\r\n    }\r\n    if (rowPinned === \"bottom\") {\r\n      return pinnedRowModel?.getPinnedBottomRow(rowIndex);\r\n    }\r\n    return rowModel.getRow(rowIndex);\r\n  }\r\n  // we use index for rows, but column object for columns, as the next column (by index) might not\r\n  // be visible (header grouping) so it's not reliable, so using the column object instead.\r\n  navigateToNextCell(event, key, currentCell, allowUserOverride) {\r\n    let nextCell = currentCell;\r\n    let hitEdgeOfGrid = false;\r\n    const beans = this.beans;\r\n    const { cellNavigation, focusSvc, gos } = beans;\r\n    while (nextCell && (nextCell === currentCell || !this.isValidNavigateCell(nextCell))) {\r\n      if (gos.get(\"enableRtl\")) {\r\n        if (key === KeyCode.LEFT) {\r\n          nextCell = this.getLastCellOfColSpan(nextCell);\r\n        }\r\n      } else if (key === KeyCode.RIGHT) {\r\n        nextCell = this.getLastCellOfColSpan(nextCell);\r\n      }\r\n      nextCell = cellNavigation.getNextCellToFocus(key, nextCell);\r\n      hitEdgeOfGrid = _missing(nextCell);\r\n    }\r\n    if (hitEdgeOfGrid && event && event.key === KeyCode.UP) {\r\n      nextCell = {\r\n        rowIndex: -1,\r\n        rowPinned: null,\r\n        column: currentCell.column\r\n      };\r\n    }\r\n    if (allowUserOverride) {\r\n      const userFunc = gos.getCallback(\"navigateToNextCell\");\r\n      if (_exists(userFunc)) {\r\n        const params = {\r\n          key,\r\n          previousCellPosition: currentCell,\r\n          nextCellPosition: nextCell ? nextCell : null,\r\n          event\r\n        };\r\n        const userCell = userFunc(params);\r\n        if (_exists(userCell)) {\r\n          nextCell = {\r\n            rowPinned: userCell.rowPinned,\r\n            rowIndex: userCell.rowIndex,\r\n            column: userCell.column\r\n          };\r\n        } else {\r\n          nextCell = null;\r\n        }\r\n      }\r\n    }\r\n    if (!nextCell) {\r\n      return;\r\n    }\r\n    if (nextCell.rowIndex < 0) {\r\n      const headerLen = getFocusHeaderRowCount(beans);\r\n      focusSvc.focusHeaderPosition({\r\n        headerPosition: { headerRowIndex: headerLen + nextCell.rowIndex, column: currentCell.column },\r\n        event: event || void 0,\r\n        fromCell: true\r\n      });\r\n      return;\r\n    }\r\n    const normalisedPosition = this.getNormalisedPosition(nextCell);\r\n    if (normalisedPosition) {\r\n      this.focusPosition(normalisedPosition);\r\n    } else {\r\n      this.tryToFocusFullWidthRow(nextCell);\r\n    }\r\n  }\r\n  getNormalisedPosition(cellPosition) {\r\n    const isSpannedCell = !!this.beans.spannedRowRenderer?.getCellByPosition(cellPosition);\r\n    if (isSpannedCell) {\r\n      return cellPosition;\r\n    }\r\n    this.ensureCellVisible(cellPosition);\r\n    const cellCtrl = _getCellByPosition(this.beans, cellPosition);\r\n    if (!cellCtrl) {\r\n      return null;\r\n    }\r\n    cellPosition = cellCtrl.getFocusedCellPosition();\r\n    this.ensureCellVisible(cellPosition);\r\n    return cellPosition;\r\n  }\r\n  tryToFocusFullWidthRow(position, backwards) {\r\n    const { visibleCols, rowRenderer, focusSvc, eventSvc } = this.beans;\r\n    const displayedColumns = visibleCols.allCols;\r\n    const rowComp = rowRenderer.getRowByPosition(position);\r\n    if (!rowComp || !rowComp.isFullWidth()) {\r\n      return false;\r\n    }\r\n    const currentCellFocused = focusSvc.getFocusedCell();\r\n    const cellPosition = {\r\n      rowIndex: position.rowIndex,\r\n      rowPinned: position.rowPinned,\r\n      column: position.column || (backwards ? _last(displayedColumns) : displayedColumns[0])\r\n    };\r\n    this.focusPosition(cellPosition);\r\n    const fromBelow = backwards == null ? currentCellFocused != null && _isRowBefore(cellPosition, currentCellFocused) : backwards;\r\n    eventSvc.dispatchEvent({\r\n      type: \"fullWidthRowFocused\",\r\n      rowIndex: cellPosition.rowIndex,\r\n      rowPinned: cellPosition.rowPinned,\r\n      column: cellPosition.column,\r\n      isFullWidthCell: true,\r\n      fromBelow\r\n    });\r\n    return true;\r\n  }\r\n  focusPosition(cellPosition) {\r\n    const { focusSvc, rangeSvc } = this.beans;\r\n    focusSvc.setFocusedCell({\r\n      rowIndex: cellPosition.rowIndex,\r\n      column: cellPosition.column,\r\n      rowPinned: cellPosition.rowPinned,\r\n      forceBrowserFocus: true\r\n    });\r\n    rangeSvc?.setRangeToCell(cellPosition);\r\n  }\r\n  isValidNavigateCell(cell) {\r\n    const rowNode = _getRowNode(this.beans, cell);\r\n    return !!rowNode;\r\n  }\r\n  getLastCellOfColSpan(cell) {\r\n    const cellCtrl = _getCellByPosition(this.beans, cell);\r\n    if (!cellCtrl) {\r\n      return cell;\r\n    }\r\n    const colSpanningList = cellCtrl.getColSpanningList();\r\n    if (colSpanningList.length === 1) {\r\n      return cell;\r\n    }\r\n    return {\r\n      rowIndex: cell.rowIndex,\r\n      column: _last(colSpanningList),\r\n      rowPinned: cell.rowPinned\r\n    };\r\n  }\r\n  ensureCellVisible(gridCell) {\r\n    const isGroupStickyEnabled = _isGroupRowsSticky(this.gos);\r\n    const rowNode = this.beans.rowModel.getRow(gridCell.rowIndex);\r\n    const skipScrollToRow = isGroupStickyEnabled && rowNode?.sticky;\r\n    const { scrollFeature } = this.gridBodyCon;\r\n    if (!skipScrollToRow && _missing(gridCell.rowPinned)) {\r\n      scrollFeature.ensureIndexVisible(gridCell.rowIndex);\r\n    }\r\n    if (!gridCell.column.isPinned()) {\r\n      scrollFeature.ensureColumnVisible(gridCell.column);\r\n    }\r\n  }\r\n  ensureColumnVisible(column) {\r\n    const scrollFeature = this.gridBodyCon.scrollFeature;\r\n    if (!column.isPinned()) {\r\n      scrollFeature.ensureColumnVisible(column);\r\n    }\r\n  }\r\n  ensureRowVisible(rowIndex) {\r\n    const scrollFeature = this.gridBodyCon.scrollFeature;\r\n    scrollFeature.ensureIndexVisible(rowIndex);\r\n  }\r\n};\r\nfunction getVScroll(beans) {\r\n  return beans.ctrlsSvc.getScrollFeature().getVScrollPosition();\r\n}\r\n\r\n// packages/ag-grid-community/src/navigation/navigationModule.ts\r\nvar KeyboardNavigationModule = {\r\n  moduleName: \"KeyboardNavigation\",\r\n  version: VERSION,\r\n  beans: [NavigationService, CellNavigationService, HeaderNavigationService],\r\n  apiFunctions: {\r\n    getFocusedCell,\r\n    clearFocusedCell,\r\n    setFocusedCell,\r\n    setFocusedHeader,\r\n    tabToNextCell,\r\n    tabToPreviousCell\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/pagination/pageBoundsListener.ts\r\nvar PageBoundsListener = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"pageBoundsListener\";\r\n  }\r\n  postConstruct() {\r\n    this.addManagedEventListeners({\r\n      modelUpdated: this.onModelUpdated.bind(this),\r\n      recalculateRowBounds: this.calculatePages.bind(this)\r\n    });\r\n    this.onModelUpdated();\r\n  }\r\n  onModelUpdated(modelUpdatedEvent) {\r\n    this.calculatePages();\r\n    this.eventSvc.dispatchEvent({\r\n      type: \"paginationChanged\",\r\n      animate: modelUpdatedEvent?.animate ?? false,\r\n      newData: modelUpdatedEvent?.newData ?? false,\r\n      newPage: modelUpdatedEvent?.newPage ?? false,\r\n      newPageSize: modelUpdatedEvent?.newPageSize ?? false,\r\n      keepRenderedRows: modelUpdatedEvent?.keepRenderedRows ?? false\r\n    });\r\n  }\r\n  calculatePages() {\r\n    const { pageBounds, pagination, rowModel } = this.beans;\r\n    if (pagination) {\r\n      pagination.calculatePages();\r\n    } else {\r\n      pageBounds.calculateBounds(0, rowModel.getRowCount() - 1);\r\n    }\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/pagination/pageBoundsService.ts\r\nvar PageBoundsService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"pageBounds\";\r\n    this.pixelOffset = 0;\r\n  }\r\n  getFirstRow() {\r\n    return this.topRowBounds?.rowIndex ?? -1;\r\n  }\r\n  getLastRow() {\r\n    return this.bottomRowBounds?.rowIndex ?? -1;\r\n  }\r\n  getCurrentPageHeight() {\r\n    const { topRowBounds, bottomRowBounds } = this;\r\n    if (!topRowBounds || !bottomRowBounds) {\r\n      return 0;\r\n    }\r\n    return Math.max(bottomRowBounds.rowTop + bottomRowBounds.rowHeight - topRowBounds.rowTop, 0);\r\n  }\r\n  getCurrentPagePixelRange() {\r\n    const { topRowBounds, bottomRowBounds } = this;\r\n    const pageFirstPixel = topRowBounds?.rowTop ?? 0;\r\n    const pageLastPixel = bottomRowBounds ? bottomRowBounds.rowTop + bottomRowBounds.rowHeight : 0;\r\n    return { pageFirstPixel, pageLastPixel };\r\n  }\r\n  calculateBounds(topDisplayedRowIndex, bottomDisplayedRowIndex) {\r\n    const { rowModel } = this.beans;\r\n    const topRowBounds = rowModel.getRowBounds(topDisplayedRowIndex);\r\n    if (topRowBounds) {\r\n      topRowBounds.rowIndex = topDisplayedRowIndex;\r\n    }\r\n    this.topRowBounds = topRowBounds;\r\n    const bottomRowBounds = rowModel.getRowBounds(bottomDisplayedRowIndex);\r\n    if (bottomRowBounds) {\r\n      bottomRowBounds.rowIndex = bottomDisplayedRowIndex;\r\n    }\r\n    this.bottomRowBounds = bottomRowBounds;\r\n    this.calculatePixelOffset();\r\n  }\r\n  getPixelOffset() {\r\n    return this.pixelOffset;\r\n  }\r\n  calculatePixelOffset() {\r\n    const value = this.topRowBounds?.rowTop ?? 0;\r\n    if (this.pixelOffset === value) {\r\n      return;\r\n    }\r\n    this.pixelOffset = value;\r\n    this.eventSvc.dispatchEvent({ type: \"paginationPixelOffsetChanged\" });\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/pinnedColumns/pinnedColumnModule.css-GENERATED.ts\r\nvar pinnedColumnModuleCSS = (\r\n  /*css*/\r\n  `.ag-pinned-left-floating-bottom,.ag-pinned-left-floating-top,.ag-pinned-right-floating-bottom,.ag-pinned-right-floating-top{min-width:0;overflow:hidden;position:relative}.ag-pinned-left-sticky-top,.ag-pinned-right-sticky-top{height:100%;overflow:hidden;position:relative}.ag-sticky-bottom-full-width-container,.ag-sticky-top-full-width-container{height:100%;overflow:hidden;width:100%}.ag-pinned-left-header,.ag-pinned-right-header{display:inline-block;height:100%;overflow:hidden;position:relative}.ag-body-horizontal-scroll:not(.ag-scrollbar-invisible){.ag-horizontal-left-spacer:not(.ag-scroller-corner){border-right:var(--ag-pinned-column-border)}.ag-horizontal-right-spacer:not(.ag-scroller-corner){border-left:var(--ag-pinned-column-border)}}.ag-pinned-right-header{border-left:var(--ag-pinned-column-border)}.ag-pinned-left-header{border-right:var(--ag-pinned-column-border)}.ag-cell.ag-cell-first-right-pinned:not(.ag-cell-range-left,.ag-cell-range-single-cell,.ag-cell-focus:not(.ag-cell-range-selected):focus-within){border-left:var(--ag-pinned-column-border)}.ag-cell.ag-cell-last-left-pinned:not(.ag-cell-range-right,.ag-cell-range-single-cell,.ag-cell-focus:not(.ag-cell-range-selected):focus-within){border-right:var(--ag-pinned-column-border)}.ag-pinned-left-header .ag-header-cell-resize:after{left:calc(50% - var(--ag-header-column-resize-handle-width))}.ag-pinned-right-header .ag-header-cell-resize:after{left:50%}.ag-pinned-left-header .ag-header-cell-resize{right:-3px}.ag-pinned-right-header .ag-header-cell-resize{left:-3px}`\r\n);\r\n\r\n// packages/ag-grid-community/src/gridBodyComp/rowContainer/setPinnedWidthFeature.ts\r\nvar SetPinnedWidthFeature = class extends BeanStub {\r\n  constructor(isLeft, elements) {\r\n    super();\r\n    this.isLeft = isLeft;\r\n    this.elements = elements;\r\n    this.getWidth = isLeft ? () => this.beans.pinnedCols.leftWidth : () => this.beans.pinnedCols.rightWidth;\r\n  }\r\n  postConstruct() {\r\n    this.addManagedEventListeners({\r\n      [`${this.isLeft ? \"left\" : \"right\"}PinnedWidthChanged`]: this.onPinnedWidthChanged.bind(this)\r\n    });\r\n  }\r\n  onPinnedWidthChanged() {\r\n    const width = this.getWidth();\r\n    const displayed = width > 0;\r\n    for (const element of this.elements) {\r\n      if (element) {\r\n        _setDisplayed(element, displayed);\r\n        _setFixedWidth(element, width);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/pinnedColumns/pinnedColumnService.ts\r\nvar PinnedColumnService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"pinnedCols\";\r\n  }\r\n  postConstruct() {\r\n    this.beans.ctrlsSvc.whenReady(this, (p) => {\r\n      this.gridBodyCtrl = p.gridBodyCtrl;\r\n    });\r\n    const listener = this.checkContainerWidths.bind(this);\r\n    this.addManagedEventListeners({\r\n      displayedColumnsChanged: listener,\r\n      displayedColumnsWidthChanged: listener\r\n    });\r\n    this.addManagedPropertyListener(\"domLayout\", listener);\r\n  }\r\n  checkContainerWidths() {\r\n    const { gos, visibleCols, eventSvc } = this.beans;\r\n    const printLayout = _isDomLayout(gos, \"print\");\r\n    const newLeftWidth = printLayout ? 0 : visibleCols.getColsLeftWidth();\r\n    const newRightWidth = printLayout ? 0 : visibleCols.getDisplayedColumnsRightWidth();\r\n    if (newLeftWidth != this.leftWidth) {\r\n      this.leftWidth = newLeftWidth;\r\n      eventSvc.dispatchEvent({ type: \"leftPinnedWidthChanged\" });\r\n    }\r\n    if (newRightWidth != this.rightWidth) {\r\n      this.rightWidth = newRightWidth;\r\n      eventSvc.dispatchEvent({ type: \"rightPinnedWidthChanged\" });\r\n    }\r\n  }\r\n  keepPinnedColumnsNarrowerThanViewport() {\r\n    const eBodyViewport = this.gridBodyCtrl.eBodyViewport;\r\n    const bodyWidth = _getInnerWidth(eBodyViewport);\r\n    if (bodyWidth <= 50) {\r\n      return;\r\n    }\r\n    const processedColumnsToRemove = this.getPinnedColumnsOverflowingViewport(bodyWidth - 50);\r\n    const processUnpinnedColumns = this.gos.getCallback(\"processUnpinnedColumns\");\r\n    const { columns, hasLockedPinned } = processedColumnsToRemove;\r\n    let columnsToRemove = columns;\r\n    if (!columnsToRemove.length && !hasLockedPinned) {\r\n      return;\r\n    }\r\n    if (processUnpinnedColumns) {\r\n      const params = {\r\n        columns: columnsToRemove,\r\n        viewportWidth: bodyWidth\r\n      };\r\n      columnsToRemove = processUnpinnedColumns(params);\r\n    }\r\n    if (!columnsToRemove || !columnsToRemove.length) {\r\n      return;\r\n    }\r\n    columnsToRemove = columnsToRemove.filter((col) => !isRowNumberCol(col));\r\n    this.setColsPinned(columnsToRemove, null, \"viewportSizeFeature\");\r\n  }\r\n  createPinnedWidthFeature(isLeft, ...elements) {\r\n    return new SetPinnedWidthFeature(isLeft, elements);\r\n  }\r\n  setColsPinned(keys, pinned, source) {\r\n    const { colModel, colAnimation, visibleCols, gos } = this.beans;\r\n    if (!colModel.cols) {\r\n      return;\r\n    }\r\n    if (!keys?.length) {\r\n      return;\r\n    }\r\n    if (_isDomLayout(gos, \"print\")) {\r\n      _warn(37);\r\n      return;\r\n    }\r\n    colAnimation?.start();\r\n    let actualPinned;\r\n    if (pinned === true || pinned === \"left\") {\r\n      actualPinned = \"left\";\r\n    } else if (pinned === \"right\") {\r\n      actualPinned = \"right\";\r\n    } else {\r\n      actualPinned = null;\r\n    }\r\n    const updatedCols = [];\r\n    keys.forEach((key) => {\r\n      if (!key) {\r\n        return;\r\n      }\r\n      const column = colModel.getCol(key);\r\n      if (!column) {\r\n        return;\r\n      }\r\n      if (column.getPinned() !== actualPinned) {\r\n        this.setColPinned(column, actualPinned);\r\n        updatedCols.push(column);\r\n      }\r\n    });\r\n    if (updatedCols.length) {\r\n      visibleCols.refresh(source);\r\n      dispatchColumnPinnedEvent(this.eventSvc, updatedCols, source);\r\n    }\r\n    colAnimation?.finish();\r\n  }\r\n  initCol(column) {\r\n    const { pinned, initialPinned } = column.colDef;\r\n    if (pinned !== void 0) {\r\n      this.setColPinned(column, pinned);\r\n    } else {\r\n      this.setColPinned(column, initialPinned);\r\n    }\r\n  }\r\n  setColPinned(column, pinned) {\r\n    if (pinned === true || pinned === \"left\") {\r\n      column.pinned = \"left\";\r\n    } else if (pinned === \"right\") {\r\n      column.pinned = \"right\";\r\n    } else {\r\n      column.pinned = null;\r\n    }\r\n    column.dispatchStateUpdatedEvent(\"pinned\");\r\n  }\r\n  setupHeaderPinnedWidth(ctrl) {\r\n    const { scrollVisibleSvc } = this.beans;\r\n    if (ctrl.pinned == null) {\r\n      return;\r\n    }\r\n    const pinningLeft = ctrl.pinned === \"left\";\r\n    const pinningRight = ctrl.pinned === \"right\";\r\n    ctrl.hidden = true;\r\n    const listener = () => {\r\n      const width = pinningLeft ? this.leftWidth : this.rightWidth;\r\n      if (width == null) {\r\n        return;\r\n      }\r\n      const hidden = width == 0;\r\n      const hiddenChanged = ctrl.hidden !== hidden;\r\n      const isRtl = this.gos.get(\"enableRtl\");\r\n      const scrollbarWidth = scrollVisibleSvc.getScrollbarWidth();\r\n      const addPaddingForScrollbar = scrollVisibleSvc.verticalScrollShowing && (isRtl && pinningLeft || !isRtl && pinningRight);\r\n      const widthWithPadding = addPaddingForScrollbar ? width + scrollbarWidth : width;\r\n      ctrl.comp.setPinnedContainerWidth(`${widthWithPadding}px`);\r\n      ctrl.comp.setDisplayed(!hidden);\r\n      if (hiddenChanged) {\r\n        ctrl.hidden = hidden;\r\n        ctrl.refresh();\r\n      }\r\n    };\r\n    ctrl.addManagedEventListeners({\r\n      leftPinnedWidthChanged: listener,\r\n      rightPinnedWidthChanged: listener,\r\n      scrollVisibilityChanged: listener,\r\n      scrollbarWidthChanged: listener\r\n    });\r\n  }\r\n  getHeaderResizeDiff(diff, column) {\r\n    const pinned = column.getPinned();\r\n    if (pinned) {\r\n      const { leftWidth, rightWidth } = this;\r\n      const bodyWidth = _getInnerWidth(this.beans.ctrlsSvc.getGridBodyCtrl().eBodyViewport) - 50;\r\n      if (leftWidth + rightWidth + diff > bodyWidth) {\r\n        if (bodyWidth > leftWidth + rightWidth) {\r\n          diff = bodyWidth - leftWidth - rightWidth;\r\n        } else {\r\n          return 0;\r\n        }\r\n      }\r\n    }\r\n    return diff;\r\n  }\r\n  getPinnedColumnsOverflowingViewport(viewportWidth) {\r\n    const pinnedRightWidth = this.rightWidth ?? 0;\r\n    const pinnedLeftWidth = this.leftWidth ?? 0;\r\n    const totalPinnedWidth = pinnedRightWidth + pinnedLeftWidth;\r\n    let hasLockedPinned = false;\r\n    if (totalPinnedWidth < viewportWidth) {\r\n      return { columns: [], hasLockedPinned };\r\n    }\r\n    const { visibleCols } = this.beans;\r\n    const pinnedLeftColumns = [...visibleCols.leftCols];\r\n    const pinnedRightColumns = [...visibleCols.rightCols];\r\n    let indexRight = 0;\r\n    let indexLeft = 0;\r\n    const totalWidthRemoved = 0;\r\n    const columnsToRemove = [];\r\n    let spaceNecessary = totalPinnedWidth - totalWidthRemoved - viewportWidth;\r\n    while ((indexLeft < pinnedLeftColumns.length || indexRight < pinnedRightColumns.length) && spaceNecessary > 0) {\r\n      if (indexRight < pinnedRightColumns.length) {\r\n        const currentColumn = pinnedRightColumns[indexRight++];\r\n        if (currentColumn.colDef.lockPinned) {\r\n          hasLockedPinned = true;\r\n          continue;\r\n        }\r\n        spaceNecessary -= currentColumn.getActualWidth();\r\n        columnsToRemove.push(currentColumn);\r\n      }\r\n      if (indexLeft < pinnedLeftColumns.length && spaceNecessary > 0) {\r\n        const currentColumn = pinnedLeftColumns[indexLeft++];\r\n        if (currentColumn.colDef.lockPinned) {\r\n          hasLockedPinned = true;\r\n          continue;\r\n        }\r\n        spaceNecessary -= currentColumn.getActualWidth();\r\n        columnsToRemove.push(currentColumn);\r\n      }\r\n    }\r\n    return { columns: columnsToRemove, hasLockedPinned };\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/pinnedColumns/pinnedColumnModule.ts\r\nvar PinnedColumnModule = {\r\n  moduleName: \"PinnedColumn\",\r\n  version: VERSION,\r\n  beans: [PinnedColumnService],\r\n  css: [pinnedColumnModuleCSS]\r\n};\r\n\r\n// packages/ag-grid-community/src/rendering/ariaAnnouncementService.ts\r\nvar AriaAnnouncementService = class extends BeanStub {\r\n  constructor() {\r\n    super();\r\n    this.beanName = \"ariaAnnounce\";\r\n    this.descriptionContainer = null;\r\n    this.pendingAnnouncements = /* @__PURE__ */ new Map();\r\n    this.lastAnnouncement = \"\";\r\n    this.updateAnnouncement = _debounce(this, this.updateAnnouncement.bind(this), 200);\r\n  }\r\n  postConstruct() {\r\n    const beans = this.beans;\r\n    const eDocument = _getDocument(beans);\r\n    const div = this.descriptionContainer = eDocument.createElement(\"div\");\r\n    div.classList.add(\"ag-aria-description-container\");\r\n    _setAriaLive(div, \"polite\");\r\n    _setAriaRelevant(div, \"additions text\");\r\n    _setAriaAtomic(div, true);\r\n    beans.eGridDiv.appendChild(div);\r\n  }\r\n  /**\r\n   * @param key used for debouncing calls\r\n   */\r\n  announceValue(value, key) {\r\n    this.pendingAnnouncements.set(key, value);\r\n    this.updateAnnouncement();\r\n  }\r\n  updateAnnouncement() {\r\n    if (!this.descriptionContainer) {\r\n      return;\r\n    }\r\n    const value = Array.from(this.pendingAnnouncements.values()).join(\". \");\r\n    this.pendingAnnouncements.clear();\r\n    this.descriptionContainer.textContent = \"\";\r\n    setTimeout(() => {\r\n      this.handleAnnouncementUpdate(value);\r\n    }, 50);\r\n  }\r\n  handleAnnouncementUpdate(value) {\r\n    if (!this.isAlive() || !this.descriptionContainer) {\r\n      return;\r\n    }\r\n    let valueToAnnounce = value;\r\n    if (valueToAnnounce == null || valueToAnnounce.replace(/[ .]/g, \"\") == \"\") {\r\n      this.lastAnnouncement = \"\";\r\n      return;\r\n    }\r\n    if (this.lastAnnouncement === valueToAnnounce) {\r\n      valueToAnnounce = `${valueToAnnounce}\\u200B`;\r\n    }\r\n    this.lastAnnouncement = valueToAnnounce;\r\n    this.descriptionContainer.textContent = valueToAnnounce;\r\n  }\r\n  destroy() {\r\n    super.destroy();\r\n    const { descriptionContainer } = this;\r\n    if (descriptionContainer) {\r\n      _clearElement(descriptionContainer);\r\n      descriptionContainer.parentElement?.removeChild(descriptionContainer);\r\n    }\r\n    this.descriptionContainer = null;\r\n    this.pendingAnnouncements.clear();\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/rendering/ariaModule.ts\r\nvar AriaModule = {\r\n  moduleName: \"Aria\",\r\n  version: VERSION,\r\n  beans: [AriaAnnouncementService]\r\n};\r\n\r\n// packages/ag-grid-community/src/rendering/overlays/overlayApi.ts\r\nfunction showLoadingOverlay(beans) {\r\n  beans.overlays?.showLoadingOverlay();\r\n}\r\nfunction showNoRowsOverlay(beans) {\r\n  beans.overlays?.showNoRowsOverlay();\r\n}\r\nfunction hideOverlay(beans) {\r\n  beans.overlays?.hideOverlay();\r\n}\r\n\r\n// packages/ag-grid-community/src/rendering/overlays/overlayWrapperComponent.css-GENERATED.ts\r\nvar overlayWrapperComponentCSS = (\r\n  /*css*/\r\n  `.ag-overlay{inset:0;pointer-events:none;position:absolute;z-index:2}.ag-overlay-panel,.ag-overlay-wrapper{display:flex;height:100%;width:100%}.ag-overlay-wrapper{align-items:center;flex:none;justify-content:center;text-align:center}.ag-overlay-loading-wrapper{pointer-events:all}.ag-overlay-loading-center{background:var(--ag-background-color);border:solid var(--ag-border-width) var(--ag-border-color);border-radius:var(--ag-border-radius);box-shadow:var(--ag-popup-shadow);padding:var(--ag-spacing)}`\r\n);\r\n\r\n// packages/ag-grid-community/src/rendering/overlays/overlayWrapperComponent.ts\r\nvar OverlayWrapperElement = {\r\n  tag: \"div\",\r\n  cls: \"ag-overlay\",\r\n  role: \"presentation\",\r\n  children: [\r\n    {\r\n      tag: \"div\",\r\n      cls: \"ag-overlay-panel\",\r\n      role: \"presentation\",\r\n      children: [{ tag: \"div\", ref: \"eOverlayWrapper\", cls: \"ag-overlay-wrapper\", role: \"presentation\" }]\r\n    }\r\n  ]\r\n};\r\nvar OverlayWrapperComponent = class extends Component {\r\n  constructor() {\r\n    super(OverlayWrapperElement);\r\n    this.eOverlayWrapper = RefPlaceholder;\r\n    this.activePromise = null;\r\n    this.activeOverlay = null;\r\n    this.updateListenerDestroyFunc = null;\r\n    this.activeCssClass = null;\r\n    this.elToFocusAfter = null;\r\n    this.registerCSS(overlayWrapperComponentCSS);\r\n  }\r\n  handleKeyDown(e) {\r\n    if (e.key !== KeyCode.TAB || e.defaultPrevented || _isStopPropagationForAgGrid(e)) {\r\n      return;\r\n    }\r\n    const beans = this.beans;\r\n    const nextEl = _findNextFocusableElement(beans, this.eOverlayWrapper, false, e.shiftKey);\r\n    if (nextEl) {\r\n      return;\r\n    }\r\n    let isFocused = false;\r\n    if (e.shiftKey) {\r\n      isFocused = beans.focusSvc.focusGridView({\r\n        column: _last(beans.visibleCols.allCols),\r\n        backwards: true,\r\n        canFocusOverlay: false\r\n      });\r\n    } else {\r\n      isFocused = _focusNextGridCoreContainer(beans, false);\r\n    }\r\n    if (isFocused) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n  updateLayoutClasses(cssClass, params) {\r\n    const overlayWrapperClassList = this.eOverlayWrapper.classList;\r\n    const { AUTO_HEIGHT, NORMAL, PRINT } = LayoutCssClasses;\r\n    overlayWrapperClassList.toggle(AUTO_HEIGHT, params.autoHeight);\r\n    overlayWrapperClassList.toggle(NORMAL, params.normal);\r\n    overlayWrapperClassList.toggle(PRINT, params.print);\r\n  }\r\n  postConstruct() {\r\n    this.createManagedBean(new LayoutFeature(this));\r\n    this.setDisplayed(false, { skipAriaHidden: true });\r\n    this.beans.overlays.setOverlayWrapperComp(this);\r\n    this.addManagedElementListeners(this.getFocusableElement(), { keydown: this.handleKeyDown.bind(this) });\r\n  }\r\n  setWrapperTypeClass(overlayWrapperCssClass) {\r\n    const overlayWrapperClassList = this.eOverlayWrapper.classList;\r\n    if (this.activeCssClass) {\r\n      overlayWrapperClassList.toggle(this.activeCssClass, false);\r\n    }\r\n    this.activeCssClass = overlayWrapperCssClass;\r\n    overlayWrapperClassList.toggle(overlayWrapperCssClass, true);\r\n  }\r\n  showOverlay(overlayComponentPromise, overlayWrapperCssClass, exclusive, gridOption) {\r\n    this.setWrapperTypeClass(overlayWrapperCssClass);\r\n    this.destroyActiveOverlay();\r\n    this.elToFocusAfter = null;\r\n    this.activePromise = overlayComponentPromise;\r\n    if (!overlayComponentPromise) {\r\n      return;\r\n    }\r\n    this.setDisplayed(true, { skipAriaHidden: true });\r\n    if (exclusive && this.isGridFocused()) {\r\n      const activeElement = _getActiveDomElement(this.beans);\r\n      if (activeElement && !_isNothingFocused(this.beans)) {\r\n        this.elToFocusAfter = activeElement;\r\n      }\r\n    }\r\n    overlayComponentPromise.then((comp) => {\r\n      if (this.activePromise !== overlayComponentPromise) {\r\n        if (this.activeOverlay !== comp) {\r\n          this.destroyBean(comp);\r\n          comp = null;\r\n        }\r\n        return;\r\n      }\r\n      this.activePromise = null;\r\n      if (!comp) {\r\n        return;\r\n      }\r\n      if (this.activeOverlay !== comp) {\r\n        this.eOverlayWrapper.appendChild(comp.getGui());\r\n        this.activeOverlay = comp;\r\n        if (gridOption) {\r\n          const component = comp;\r\n          this.updateListenerDestroyFunc = this.addManagedPropertyListener(gridOption, ({ currentValue }) => {\r\n            component.refresh?.(_addGridCommonParams(this.gos, { ...currentValue ?? {} }));\r\n          });\r\n        }\r\n      }\r\n      if (exclusive && this.isGridFocused()) {\r\n        _focusInto(this.eOverlayWrapper);\r\n      }\r\n    });\r\n  }\r\n  updateOverlayWrapperPaddingTop(padding) {\r\n    this.eOverlayWrapper.style.setProperty(\"padding-top\", `${padding}px`);\r\n  }\r\n  destroyActiveOverlay() {\r\n    this.activePromise = null;\r\n    const activeOverlay = this.activeOverlay;\r\n    if (!activeOverlay) {\r\n      return;\r\n    }\r\n    let elementToFocus = this.elToFocusAfter;\r\n    this.activeOverlay = null;\r\n    this.elToFocusAfter = null;\r\n    if (elementToFocus && !this.isGridFocused()) {\r\n      elementToFocus = null;\r\n    }\r\n    const updateListenerDestroyFunc = this.updateListenerDestroyFunc;\r\n    if (updateListenerDestroyFunc) {\r\n      updateListenerDestroyFunc();\r\n      this.updateListenerDestroyFunc = null;\r\n    }\r\n    this.destroyBean(activeOverlay);\r\n    _clearElement(this.eOverlayWrapper);\r\n    elementToFocus?.focus?.({ preventScroll: true });\r\n  }\r\n  hideOverlay() {\r\n    this.destroyActiveOverlay();\r\n    this.setDisplayed(false, { skipAriaHidden: true });\r\n  }\r\n  isGridFocused() {\r\n    const activeEl = _getActiveDomElement(this.beans);\r\n    return !!activeEl && this.beans.eGridDiv.contains(activeEl);\r\n  }\r\n  destroy() {\r\n    this.elToFocusAfter = null;\r\n    this.destroyActiveOverlay();\r\n    this.beans.overlays.setOverlayWrapperComp(void 0);\r\n    super.destroy();\r\n  }\r\n};\r\nvar OverlayWrapperSelector = {\r\n  selector: \"AG-OVERLAY-WRAPPER\",\r\n  component: OverlayWrapperComponent\r\n};\r\n\r\n// packages/ag-grid-community/src/rendering/overlays/overlayService.ts\r\nvar OverlayService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"overlays\";\r\n    this.state = 0 /* Hidden */;\r\n    this.showInitialOverlay = true;\r\n    this.wrapperPadding = 0;\r\n  }\r\n  postConstruct() {\r\n    this.isClientSide = _isClientSideRowModel(this.gos);\r\n    this.isServerSide = !this.isClientSide && _isServerSideRowModel(this.gos);\r\n    const updateOverlayVisibility = () => this.updateOverlayVisibility();\r\n    this.addManagedEventListeners({\r\n      newColumnsLoaded: updateOverlayVisibility,\r\n      rowDataUpdated: updateOverlayVisibility,\r\n      gridSizeChanged: this.refreshWrapperPadding.bind(this),\r\n      rowCountReady: () => {\r\n        this.showInitialOverlay = false;\r\n        this.updateOverlayVisibility();\r\n      }\r\n    });\r\n    this.addManagedPropertyListener(\"loading\", updateOverlayVisibility);\r\n  }\r\n  setOverlayWrapperComp(overlayWrapperComp) {\r\n    this.eWrapper = overlayWrapperComp;\r\n    this.updateOverlayVisibility();\r\n  }\r\n  /** Returns true if the overlay is visible. */\r\n  isVisible() {\r\n    return this.state !== 0 /* Hidden */ && !!this.eWrapper;\r\n  }\r\n  /** Returns true if the overlay is visible and is exclusive (popup over the grid) */\r\n  isExclusive() {\r\n    return this.state === 1 /* Loading */ && !!this.eWrapper;\r\n  }\r\n  showLoadingOverlay() {\r\n    this.showInitialOverlay = false;\r\n    const gos = this.gos;\r\n    const loading = gos.get(\"loading\");\r\n    if (!loading && (loading !== void 0 || gos.get(\"suppressLoadingOverlay\"))) {\r\n      return;\r\n    }\r\n    this.doShowLoadingOverlay();\r\n  }\r\n  showNoRowsOverlay() {\r\n    this.showInitialOverlay = false;\r\n    const gos = this.gos;\r\n    if (gos.get(\"loading\") || gos.get(\"suppressNoRowsOverlay\")) {\r\n      return;\r\n    }\r\n    this.doShowNoRowsOverlay();\r\n  }\r\n  hideOverlay() {\r\n    this.showInitialOverlay = false;\r\n    if (this.gos.get(\"loading\")) {\r\n      _warn(99);\r\n      return;\r\n    }\r\n    this.doHideOverlay();\r\n  }\r\n  getOverlayWrapperSelector() {\r\n    return OverlayWrapperSelector;\r\n  }\r\n  getOverlayWrapperCompClass() {\r\n    return OverlayWrapperComponent;\r\n  }\r\n  updateOverlayVisibility() {\r\n    if (!this.eWrapper) {\r\n      this.state = 0 /* Hidden */;\r\n      return;\r\n    }\r\n    const {\r\n      state,\r\n      isClientSide,\r\n      isServerSide,\r\n      beans: { gos, colModel, rowModel }\r\n    } = this;\r\n    let loading = this.gos.get(\"loading\");\r\n    if (loading !== void 0) {\r\n      this.showInitialOverlay = false;\r\n    }\r\n    if (this.showInitialOverlay && loading === void 0 && !gos.get(\"suppressLoadingOverlay\")) {\r\n      loading = !gos.get(\"columnDefs\") || !colModel.ready || !gos.get(\"rowData\") && isClientSide;\r\n    }\r\n    if (loading) {\r\n      if (state !== 1 /* Loading */) {\r\n        this.doShowLoadingOverlay();\r\n      }\r\n    } else {\r\n      this.showInitialOverlay = false;\r\n      if (isClientSide && rowModel.isEmpty() && !gos.get(\"suppressNoRowsOverlay\")) {\r\n        if (state !== 2 /* NoRows */) {\r\n          this.doShowNoRowsOverlay();\r\n        }\r\n      } else if (state === 1 /* Loading */ || !isServerSide && state !== 0 /* Hidden */) {\r\n        this.doHideOverlay();\r\n      }\r\n    }\r\n  }\r\n  doShowLoadingOverlay() {\r\n    if (!this.eWrapper) {\r\n      return;\r\n    }\r\n    this.state = 1 /* Loading */;\r\n    this.showOverlay(\r\n      _getLoadingOverlayCompDetails(this.beans.userCompFactory, _addGridCommonParams(this.gos, {})),\r\n      \"ag-overlay-loading-wrapper\",\r\n      \"loadingOverlayComponentParams\"\r\n    );\r\n    this.updateExclusive();\r\n  }\r\n  doShowNoRowsOverlay() {\r\n    if (!this.eWrapper) {\r\n      return;\r\n    }\r\n    this.state = 2 /* NoRows */;\r\n    this.showOverlay(\r\n      _getNoRowsOverlayCompDetails(this.beans.userCompFactory, _addGridCommonParams(this.gos, {})),\r\n      \"ag-overlay-no-rows-wrapper\",\r\n      \"noRowsOverlayComponentParams\"\r\n    );\r\n    this.updateExclusive();\r\n  }\r\n  doHideOverlay() {\r\n    if (!this.eWrapper) {\r\n      return;\r\n    }\r\n    this.state = 0 /* Hidden */;\r\n    this.eWrapper.hideOverlay();\r\n    this.updateExclusive();\r\n  }\r\n  showOverlay(compDetails, wrapperCssClass, gridOption) {\r\n    const promise = compDetails?.newAgStackInstance() ?? null;\r\n    this.eWrapper?.showOverlay(promise, wrapperCssClass, this.isExclusive(), gridOption);\r\n    this.refreshWrapperPadding();\r\n  }\r\n  updateExclusive() {\r\n    const wasExclusive = this.exclusive;\r\n    this.exclusive = this.isExclusive();\r\n    if (this.exclusive !== wasExclusive) {\r\n      this.eventSvc.dispatchEvent({\r\n        type: \"overlayExclusiveChanged\"\r\n      });\r\n    }\r\n  }\r\n  refreshWrapperPadding() {\r\n    const eWrapper = this.eWrapper;\r\n    if (!eWrapper) {\r\n      return;\r\n    }\r\n    let newPadding = 0;\r\n    if (this.state === 2 /* NoRows */) {\r\n      const headerCtrl = this.beans.ctrlsSvc.get(\"gridHeaderCtrl\");\r\n      const headerHeight = headerCtrl?.headerHeight || 0;\r\n      newPadding = headerHeight;\r\n    } else if (this.wrapperPadding !== 0) {\r\n      newPadding = 0;\r\n    }\r\n    if (this.wrapperPadding === newPadding) {\r\n      return;\r\n    }\r\n    this.wrapperPadding = newPadding;\r\n    eWrapper.updateOverlayWrapperPaddingTop(newPadding);\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/rendering/overlays/overlayModule.ts\r\nvar OverlayModule = {\r\n  moduleName: \"Overlay\",\r\n  version: VERSION,\r\n  userComponents: {\r\n    agLoadingOverlay: LoadingOverlayComponent2,\r\n    agNoRowsOverlay: NoRowsOverlayComponent2\r\n  },\r\n  apiFunctions: {\r\n    showLoadingOverlay,\r\n    showNoRowsOverlay,\r\n    hideOverlay\r\n  },\r\n  beans: [OverlayService]\r\n};\r\n\r\n// packages/ag-grid-community/src/rendering/rowContainerHeightService.ts\r\nvar RowContainerHeightService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"rowContainerHeight\";\r\n    // the scrollY position\r\n    this.scrollY = 0;\r\n    // how tall the body is\r\n    this.uiBodyHeight = 0;\r\n  }\r\n  postConstruct() {\r\n    this.addManagedEventListeners({ bodyHeightChanged: this.updateOffset.bind(this) });\r\n    this.maxDivHeight = _getMaxDivHeight();\r\n    _logIfDebug(this.gos, \"RowContainerHeightService - maxDivHeight = \" + this.maxDivHeight);\r\n  }\r\n  updateOffset() {\r\n    if (!this.stretching) {\r\n      return;\r\n    }\r\n    const newScrollY = this.beans.ctrlsSvc.getScrollFeature().getVScrollPosition().top;\r\n    const newBodyHeight = this.getUiBodyHeight();\r\n    const atLeastOneChanged = newScrollY !== this.scrollY || newBodyHeight !== this.uiBodyHeight;\r\n    if (atLeastOneChanged) {\r\n      this.scrollY = newScrollY;\r\n      this.uiBodyHeight = newBodyHeight;\r\n      this.calculateOffset();\r\n    }\r\n  }\r\n  calculateOffset() {\r\n    this.setUiContainerHeight(this.maxDivHeight);\r\n    this.pixelsToShave = this.modelHeight - this.uiContainerHeight;\r\n    this.maxScrollY = this.uiContainerHeight - this.uiBodyHeight;\r\n    const scrollPercent = this.scrollY / this.maxScrollY;\r\n    const divStretchOffset = scrollPercent * this.pixelsToShave;\r\n    _logIfDebug(\r\n      this.gos,\r\n      `RowContainerHeightService - Div Stretch Offset = ${divStretchOffset} (${this.pixelsToShave} * ${scrollPercent})`\r\n    );\r\n    this.setDivStretchOffset(divStretchOffset);\r\n  }\r\n  setUiContainerHeight(height) {\r\n    if (height !== this.uiContainerHeight) {\r\n      this.uiContainerHeight = height;\r\n      this.eventSvc.dispatchEvent({ type: \"rowContainerHeightChanged\" });\r\n    }\r\n  }\r\n  clearOffset() {\r\n    this.setUiContainerHeight(this.modelHeight);\r\n    this.pixelsToShave = 0;\r\n    this.setDivStretchOffset(0);\r\n  }\r\n  setDivStretchOffset(newOffset) {\r\n    const newOffsetFloor = typeof newOffset === \"number\" ? Math.floor(newOffset) : null;\r\n    if (this.divStretchOffset === newOffsetFloor) {\r\n      return;\r\n    }\r\n    this.divStretchOffset = newOffsetFloor;\r\n    this.eventSvc.dispatchEvent({ type: \"heightScaleChanged\" });\r\n  }\r\n  setModelHeight(modelHeight) {\r\n    this.modelHeight = modelHeight;\r\n    this.stretching = modelHeight != null && // null happens when in print layout\r\n    this.maxDivHeight > 0 && modelHeight > this.maxDivHeight;\r\n    if (this.stretching) {\r\n      this.calculateOffset();\r\n    } else {\r\n      this.clearOffset();\r\n    }\r\n  }\r\n  getRealPixelPosition(modelPixel) {\r\n    return modelPixel - this.divStretchOffset;\r\n  }\r\n  getUiBodyHeight() {\r\n    const pos = this.beans.ctrlsSvc.getScrollFeature().getVScrollPosition();\r\n    return pos.bottom - pos.top;\r\n  }\r\n  getScrollPositionForPixel(rowTop) {\r\n    if (this.pixelsToShave <= 0) {\r\n      return rowTop;\r\n    }\r\n    const modelMaxScroll = this.modelHeight - this.getUiBodyHeight();\r\n    const scrollPercent = rowTop / modelMaxScroll;\r\n    const scrollPixel = this.maxScrollY * scrollPercent;\r\n    return scrollPixel;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/rendering/rowRenderer.ts\r\nvar ROW_ANIMATION_TIMEOUT = 400;\r\nvar RowRenderer = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"rowRenderer\";\r\n    this.destroyFuncsForColumnListeners = [];\r\n    // map of row ids to row objects. keeps track of which elements\r\n    // are rendered for which rows in the dom.\r\n    this.rowCtrlsByRowIndex = {};\r\n    this.zombieRowCtrls = {};\r\n    this.allRowCtrls = [];\r\n    this.topRowCtrls = [];\r\n    this.bottomRowCtrls = [];\r\n    // we only allow one refresh at a time, otherwise the internal memory structure here\r\n    // will get messed up. this can happen if the user has a cellRenderer, and inside the\r\n    // renderer they call an API method that results in another pass of the refresh,\r\n    // then it will be trying to draw rows in the middle of a refresh.\r\n    this.refreshInProgress = false;\r\n    this.dataFirstRenderedFired = false;\r\n    this.setupRangeSelectionListeners = () => {\r\n      const onCellSelectionChanged = () => {\r\n        this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.onCellSelectionChanged());\r\n      };\r\n      const onColumnMovedPinnedVisible = () => {\r\n        this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.updateRangeBordersIfRangeCount());\r\n      };\r\n      const addCellSelectionListeners = () => {\r\n        this.eventSvc.addEventListener(\"cellSelectionChanged\", onCellSelectionChanged);\r\n        this.eventSvc.addEventListener(\"columnMoved\", onColumnMovedPinnedVisible);\r\n        this.eventSvc.addEventListener(\"columnPinned\", onColumnMovedPinnedVisible);\r\n        this.eventSvc.addEventListener(\"columnVisible\", onColumnMovedPinnedVisible);\r\n      };\r\n      const removeCellSelectionListeners = () => {\r\n        this.eventSvc.removeEventListener(\"cellSelectionChanged\", onCellSelectionChanged);\r\n        this.eventSvc.removeEventListener(\"columnMoved\", onColumnMovedPinnedVisible);\r\n        this.eventSvc.removeEventListener(\"columnPinned\", onColumnMovedPinnedVisible);\r\n        this.eventSvc.removeEventListener(\"columnVisible\", onColumnMovedPinnedVisible);\r\n      };\r\n      this.addDestroyFunc(() => removeCellSelectionListeners());\r\n      this.addManagedPropertyListeners([\"enableRangeSelection\", \"cellSelection\"], () => {\r\n        const isEnabled = _isCellSelectionEnabled(this.gos);\r\n        if (isEnabled) {\r\n          addCellSelectionListeners();\r\n        } else {\r\n          removeCellSelectionListeners();\r\n        }\r\n      });\r\n      const cellSelectionEnabled = _isCellSelectionEnabled(this.gos);\r\n      if (cellSelectionEnabled) {\r\n        addCellSelectionListeners();\r\n      }\r\n    };\r\n  }\r\n  wireBeans(beans) {\r\n    this.pageBounds = beans.pageBounds;\r\n    this.colModel = beans.colModel;\r\n    this.pinnedRowModel = beans.pinnedRowModel;\r\n    this.rowModel = beans.rowModel;\r\n    this.focusSvc = beans.focusSvc;\r\n    this.rowContainerHeight = beans.rowContainerHeight;\r\n    this.ctrlsSvc = beans.ctrlsSvc;\r\n    this.editSvc = beans.editSvc;\r\n  }\r\n  postConstruct() {\r\n    this.ctrlsSvc.whenReady(this, (p) => {\r\n      this.gridBodyCtrl = p.gridBodyCtrl;\r\n      this.initialise();\r\n    });\r\n  }\r\n  initialise() {\r\n    this.addManagedEventListeners({\r\n      paginationChanged: this.onPageLoaded.bind(this),\r\n      pinnedRowDataChanged: this.onPinnedRowDataChanged.bind(this),\r\n      pinnedRowsChanged: this.onPinnedRowsChanged.bind(this),\r\n      displayedColumnsChanged: this.onDisplayedColumnsChanged.bind(this),\r\n      bodyScroll: this.onBodyScroll.bind(this),\r\n      bodyHeightChanged: this.redraw.bind(this, {})\r\n    });\r\n    this.addManagedPropertyListeners([\"domLayout\", \"embedFullWidthRows\"], () => this.onDomLayoutChanged());\r\n    this.addManagedPropertyListeners([\"suppressMaxRenderedRowRestriction\", \"rowBuffer\"], () => this.redraw());\r\n    this.addManagedPropertyListener(\"suppressCellFocus\", (e) => this.onSuppressCellFocusChanged(e.currentValue));\r\n    this.addManagedPropertyListeners(\r\n      [\r\n        \"groupSuppressBlankHeader\",\r\n        \"getBusinessKeyForNode\",\r\n        \"fullWidthCellRenderer\",\r\n        \"fullWidthCellRendererParams\",\r\n        \"suppressStickyTotalRow\",\r\n        \"groupRowRenderer\",\r\n        \"groupRowRendererParams\",\r\n        // maybe only needs to refresh FW rows...\r\n        \"loadingCellRenderer\",\r\n        \"loadingCellRendererParams\",\r\n        \"detailCellRenderer\",\r\n        \"detailCellRendererParams\",\r\n        \"enableRangeSelection\",\r\n        \"enableCellTextSelection\"\r\n      ],\r\n      () => this.redrawRows()\r\n    );\r\n    this.addManagedPropertyListener(\"cellSelection\", ({ currentValue, previousValue }) => {\r\n      if (!previousValue && currentValue || previousValue && !currentValue) {\r\n        this.redrawRows();\r\n      }\r\n    });\r\n    const { stickyRowSvc, gos, showRowGroupCols } = this.beans;\r\n    if (showRowGroupCols) {\r\n      this.addManagedPropertyListener(\"showOpenedGroup\", () => {\r\n        const columns = showRowGroupCols.getShowRowGroupCols();\r\n        if (columns.length) {\r\n          this.refreshCells({ columns, force: true });\r\n        }\r\n      });\r\n    }\r\n    if (stickyRowSvc) {\r\n      this.stickyRowFeature = stickyRowSvc.createStickyRowFeature(\r\n        this,\r\n        this.createRowCon.bind(this),\r\n        this.destroyRowCtrls.bind(this)\r\n      );\r\n    } else {\r\n      const gridBodyCtrl = this.gridBodyCtrl;\r\n      gridBodyCtrl.setStickyTopHeight(0);\r\n      gridBodyCtrl.setStickyBottomHeight(0);\r\n    }\r\n    this.registerCellEventListeners();\r\n    this.initialiseCache();\r\n    this.printLayout = _isDomLayout(gos, \"print\");\r\n    this.embedFullWidthRows = this.printLayout || gos.get(\"embedFullWidthRows\");\r\n    this.redrawAfterModelUpdate();\r\n  }\r\n  initialiseCache() {\r\n    if (this.gos.get(\"keepDetailRows\")) {\r\n      const countProp = this.getKeepDetailRowsCount();\r\n      const count = countProp != null ? countProp : 3;\r\n      this.cachedRowCtrls = new RowCtrlCache(count);\r\n    }\r\n  }\r\n  getKeepDetailRowsCount() {\r\n    return this.gos.get(\"keepDetailRowsCount\");\r\n  }\r\n  getStickyTopRowCtrls() {\r\n    return this.stickyRowFeature?.stickyTopRowCtrls ?? [];\r\n  }\r\n  getStickyBottomRowCtrls() {\r\n    return this.stickyRowFeature?.stickyBottomRowCtrls ?? [];\r\n  }\r\n  updateAllRowCtrls() {\r\n    const liveList = Object.values(this.rowCtrlsByRowIndex);\r\n    const zombieList = Object.values(this.zombieRowCtrls);\r\n    const cachedList = this.cachedRowCtrls?.getEntries() ?? [];\r\n    if (zombieList.length > 0 || cachedList.length > 0) {\r\n      this.allRowCtrls = [...liveList, ...zombieList, ...cachedList];\r\n    } else {\r\n      this.allRowCtrls = liveList;\r\n    }\r\n  }\r\n  /**\r\n   * Checks if the cell is rendered or not. Also returns true if row ctrl is present but has not rendered\r\n   * cells yet.\r\n   * @returns true if cellCtrl is present, or if the row is present but has not rendered rows yet\r\n   */\r\n  isCellBeingRendered(rowIndex, column) {\r\n    const rowCtrl = this.rowCtrlsByRowIndex[rowIndex];\r\n    if (!column || !rowCtrl) {\r\n      return !!rowCtrl;\r\n    }\r\n    if (rowCtrl.isFullWidth()) {\r\n      return true;\r\n    }\r\n    const spannedCell = this.beans.spannedRowRenderer?.getCellByPosition({ rowIndex, column, rowPinned: null });\r\n    return !!spannedCell || !!rowCtrl.getCellCtrl(column) || !rowCtrl.isRowRendered();\r\n  }\r\n  /**\r\n   * Notifies all row and cell controls of any change in focused cell.\r\n   * @param event cell focused event\r\n   */\r\n  updateCellFocus(event) {\r\n    this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.onCellFocused(event));\r\n    this.getFullWidthRowCtrls().forEach((rowCtrl) => rowCtrl.onFullWidthRowFocused(event));\r\n  }\r\n  /**\r\n   * Called when a new cell is focused in the grid\r\n   * - if the focused cell isn't rendered; re-draw rows to dry to render it\r\n   * - subsequently updates all cell and row controls with the new focused cell\r\n   * @param event cell focused event\r\n   */\r\n  onCellFocusChanged(event) {\r\n    if (event && event.rowIndex != null && !event.rowPinned) {\r\n      const col = this.beans.colModel.getCol(event.column) ?? void 0;\r\n      if (!this.isCellBeingRendered(event.rowIndex, col)) {\r\n        this.redraw();\r\n      }\r\n    }\r\n    this.updateCellFocus(event);\r\n  }\r\n  onSuppressCellFocusChanged(suppressCellFocus) {\r\n    this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.onSuppressCellFocusChanged(suppressCellFocus));\r\n    this.getFullWidthRowCtrls().forEach((rowCtrl) => rowCtrl.onSuppressCellFocusChanged(suppressCellFocus));\r\n  }\r\n  // in a clean design, each cell would register for each of these events. however when scrolling, all the cells\r\n  // registering and de-registering for events is a performance bottleneck. so we register here once and inform\r\n  // all active cells.\r\n  registerCellEventListeners() {\r\n    this.addManagedEventListeners({\r\n      cellFocused: (event) => this.onCellFocusChanged(event),\r\n      cellFocusCleared: () => this.updateCellFocus(),\r\n      flashCells: (event) => {\r\n        const { cellFlashSvc } = this.beans;\r\n        if (cellFlashSvc) {\r\n          this.getAllCellCtrls().forEach((cellCtrl) => cellFlashSvc.onFlashCells(cellCtrl, event));\r\n        }\r\n      },\r\n      columnHoverChanged: () => {\r\n        this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.onColumnHover());\r\n      },\r\n      displayedColumnsChanged: () => {\r\n        this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.onDisplayedColumnsChanged());\r\n      },\r\n      displayedColumnsWidthChanged: () => {\r\n        if (this.printLayout) {\r\n          this.getAllCellCtrls().forEach((cellCtrl) => cellCtrl.onLeftChanged());\r\n        }\r\n      }\r\n    });\r\n    this.setupRangeSelectionListeners();\r\n    this.refreshListenersToColumnsForCellComps();\r\n    this.addManagedEventListeners({\r\n      gridColumnsChanged: this.refreshListenersToColumnsForCellComps.bind(this)\r\n    });\r\n    this.addDestroyFunc(this.removeGridColumnListeners.bind(this));\r\n  }\r\n  // executes all functions in destroyFuncsForColumnListeners and then clears the list\r\n  removeGridColumnListeners() {\r\n    this.destroyFuncsForColumnListeners.forEach((func) => func());\r\n    this.destroyFuncsForColumnListeners.length = 0;\r\n  }\r\n  // this function adds listeners onto all the grid columns, which are the column that we could have cellComps for.\r\n  // when the grid columns change, we add listeners again. in an ideal design, each CellComp would just register to\r\n  // the column it belongs to on creation, however this was a bottleneck with the number of cells, so do it here\r\n  // once instead.\r\n  refreshListenersToColumnsForCellComps() {\r\n    this.removeGridColumnListeners();\r\n    const cols = this.colModel.getCols();\r\n    cols.forEach((col) => {\r\n      const forEachCellWithThisCol = (callback) => {\r\n        this.getAllCellCtrls().forEach((cellCtrl) => {\r\n          if (cellCtrl.column === col) {\r\n            callback(cellCtrl);\r\n          }\r\n        });\r\n      };\r\n      const leftChangedListener = () => {\r\n        forEachCellWithThisCol((cellCtrl) => cellCtrl.onLeftChanged());\r\n      };\r\n      const widthChangedListener = () => {\r\n        forEachCellWithThisCol((cellCtrl) => cellCtrl.onWidthChanged());\r\n      };\r\n      const firstRightPinnedChangedListener = () => {\r\n        forEachCellWithThisCol((cellCtrl) => cellCtrl.onFirstRightPinnedChanged());\r\n      };\r\n      const lastLeftPinnedChangedListener = () => {\r\n        forEachCellWithThisCol((cellCtrl) => cellCtrl.onLastLeftPinnedChanged());\r\n      };\r\n      const colDefChangedListener = () => {\r\n        forEachCellWithThisCol((cellCtrl) => cellCtrl.onColDefChanged());\r\n      };\r\n      col.__addEventListener(\"leftChanged\", leftChangedListener);\r\n      col.__addEventListener(\"widthChanged\", widthChangedListener);\r\n      col.__addEventListener(\"firstRightPinnedChanged\", firstRightPinnedChangedListener);\r\n      col.__addEventListener(\"lastLeftPinnedChanged\", lastLeftPinnedChangedListener);\r\n      col.__addEventListener(\"colDefChanged\", colDefChangedListener);\r\n      this.destroyFuncsForColumnListeners.push(() => {\r\n        col.__removeEventListener(\"leftChanged\", leftChangedListener);\r\n        col.__removeEventListener(\"widthChanged\", widthChangedListener);\r\n        col.__removeEventListener(\"firstRightPinnedChanged\", firstRightPinnedChangedListener);\r\n        col.__removeEventListener(\"lastLeftPinnedChanged\", lastLeftPinnedChangedListener);\r\n        col.__removeEventListener(\"colDefChanged\", colDefChangedListener);\r\n      });\r\n    });\r\n  }\r\n  onDomLayoutChanged() {\r\n    const printLayout = _isDomLayout(this.gos, \"print\");\r\n    const embedFullWidthRows = printLayout || this.gos.get(\"embedFullWidthRows\");\r\n    const destroyRows = embedFullWidthRows !== this.embedFullWidthRows || this.printLayout !== printLayout;\r\n    this.printLayout = printLayout;\r\n    this.embedFullWidthRows = embedFullWidthRows;\r\n    if (destroyRows) {\r\n      this.redrawAfterModelUpdate({ domLayoutChanged: true });\r\n    }\r\n  }\r\n  // for row models that have datasources, when we update the datasource, we need to force the rowRenderer\r\n  // to redraw all rows. otherwise the old rows from the old datasource will stay displayed.\r\n  datasourceChanged() {\r\n    this.firstRenderedRow = 0;\r\n    this.lastRenderedRow = -1;\r\n    const rowIndexesToRemove = Object.keys(this.rowCtrlsByRowIndex);\r\n    this.removeRowCtrls(rowIndexesToRemove);\r\n  }\r\n  onPageLoaded(event) {\r\n    const params = {\r\n      recycleRows: event.keepRenderedRows,\r\n      animate: event.animate,\r\n      newData: event.newData,\r\n      newPage: event.newPage,\r\n      // because this is a model updated event (not pinned rows), we\r\n      // can skip updating the pinned rows. this is needed so that if user\r\n      // is doing transaction updates, the pinned rows are not getting constantly\r\n      // trashed - or editing cells in pinned rows are not refreshed and put into read mode\r\n      onlyBody: true\r\n    };\r\n    this.redrawAfterModelUpdate(params);\r\n  }\r\n  /**\r\n   * @param column AgColumn\r\n   * @returns An array with HTMLElement for every cell of the column passed as param.\r\n   * If the cell is spanning across multiple columns, it only returns the html element\r\n   * if the column passed is the first column of the span (used for auto width calculation).\r\n   */\r\n  getAllCellsNotSpanningForColumn(column) {\r\n    const res = [];\r\n    this.getAllRowCtrls().forEach((rowCtrl) => {\r\n      const eCell = rowCtrl.getCellCtrl(column, true)?.eGui;\r\n      if (eCell) {\r\n        res.push(eCell);\r\n      }\r\n    });\r\n    return res;\r\n  }\r\n  refreshFloatingRowComps(recycleRows = true) {\r\n    this.refreshFloatingRows(this.topRowCtrls, \"top\", recycleRows);\r\n    this.refreshFloatingRows(this.bottomRowCtrls, \"bottom\", recycleRows);\r\n  }\r\n  /**\r\n   * Determines which row controllers need to be destroyed and re-created vs which ones can\r\n   * be re-used.\r\n   *\r\n   * This is operation is to pinned/floating rows as `this.recycleRows` is to normal/body rows.\r\n   *\r\n   * All `RowCtrl` instances in `rowCtrls` that don't correspond to `RowNode` instances in `rowNodes` are destroyed.\r\n   * All `RowNode` instances in `rowNodes` that don't correspond to `RowCtrl` instances in `rowCtrls` are created.\r\n   * All instances in `rowCtrls` must be in the same order as their corresponding nodes in `rowNodes`.\r\n   *\r\n   * @param rowCtrls The list of existing row controllers\r\n   * @param rowNodes The canonical list of row nodes that should have associated controllers\r\n   */\r\n  refreshFloatingRows(rowCtrls, floating, recycleRows) {\r\n    const { pinnedRowModel, beans, printLayout } = this;\r\n    const rowCtrlMap = Object.fromEntries(rowCtrls.map((ctrl) => [ctrl.rowNode.id, ctrl]));\r\n    pinnedRowModel?.forEachPinnedRow(floating, (node, i) => {\r\n      const rowCtrl = rowCtrls[i];\r\n      const rowCtrlDoesNotExist = rowCtrl && pinnedRowModel.getPinnedRowById(rowCtrl.rowNode.id, floating) === void 0;\r\n      if (rowCtrlDoesNotExist) {\r\n        rowCtrl.destroyFirstPass();\r\n        rowCtrl.destroySecondPass();\r\n      }\r\n      if (node.id in rowCtrlMap && recycleRows) {\r\n        rowCtrls[i] = rowCtrlMap[node.id];\r\n        delete rowCtrlMap[node.id];\r\n      } else {\r\n        rowCtrls[i] = new RowCtrl(node, beans, false, false, printLayout);\r\n      }\r\n    });\r\n    const rowNodeCount = (floating === \"top\" ? pinnedRowModel?.getPinnedTopRowCount() : pinnedRowModel?.getPinnedBottomRowCount()) ?? 0;\r\n    rowCtrls.length = rowNodeCount;\r\n  }\r\n  onPinnedRowDataChanged() {\r\n    const params = {\r\n      recycleRows: true\r\n    };\r\n    this.redrawAfterModelUpdate(params);\r\n  }\r\n  onPinnedRowsChanged() {\r\n    this.redrawAfterModelUpdate({ recycleRows: true });\r\n  }\r\n  redrawRow(rowNode, suppressEvent = false) {\r\n    if (rowNode.sticky) {\r\n      this.stickyRowFeature?.refreshStickyNode(rowNode);\r\n    } else if (this.cachedRowCtrls?.has(rowNode)) {\r\n      this.cachedRowCtrls.removeRow(rowNode);\r\n      return;\r\n    } else {\r\n      const destroyAndRecreateCtrl = (dataStruct) => {\r\n        const ctrl = dataStruct[rowNode.rowIndex];\r\n        if (!ctrl) {\r\n          return;\r\n        }\r\n        if (ctrl.rowNode !== rowNode) {\r\n          return;\r\n        }\r\n        ctrl.destroyFirstPass();\r\n        ctrl.destroySecondPass();\r\n        dataStruct[rowNode.rowIndex] = this.createRowCon(rowNode, false, false);\r\n      };\r\n      switch (rowNode.rowPinned) {\r\n        case \"top\":\r\n          destroyAndRecreateCtrl(this.topRowCtrls);\r\n          break;\r\n        case \"bottom\":\r\n          destroyAndRecreateCtrl(this.bottomRowCtrls);\r\n          break;\r\n        default:\r\n          destroyAndRecreateCtrl(this.rowCtrlsByRowIndex);\r\n          this.updateAllRowCtrls();\r\n      }\r\n    }\r\n    if (!suppressEvent) {\r\n      this.dispatchDisplayedRowsChanged(false);\r\n    }\r\n  }\r\n  redrawRows(rowNodes) {\r\n    const { editSvc } = this.beans;\r\n    if (editSvc?.isEditing()) {\r\n      if (editSvc.isBatchEditing()) {\r\n        editSvc.cleanupEditors();\r\n      } else {\r\n        editSvc.stopEditing(void 0, { source: \"api\" });\r\n      }\r\n    }\r\n    const partialRefresh = rowNodes != null;\r\n    if (partialRefresh) {\r\n      rowNodes?.forEach((node) => this.redrawRow(node, true));\r\n      this.dispatchDisplayedRowsChanged(false);\r\n      return;\r\n    }\r\n    this.redrawAfterModelUpdate();\r\n  }\r\n  // gets called from:\r\n  // +) initialisation (in registerGridComp) params = null\r\n  // +) onDomLayoutChanged, params = null\r\n  // +) onPageLoaded, recycleRows, animate, newData, newPage from event, onlyBody=true\r\n  // +) onPinnedRowDataChanged, recycleRows = true\r\n  // +) redrawRows (from Grid API), recycleRows = true/false\r\n  redrawAfterModelUpdate(params = {}) {\r\n    this.getLockOnRefresh();\r\n    const focusedCell = this.beans.focusSvc?.getFocusCellToUseAfterRefresh();\r\n    this.updateContainerHeights();\r\n    this.scrollToTopIfNewData(params);\r\n    const recycleRows = !params.domLayoutChanged && !!params.recycleRows;\r\n    const animate = params.animate && _isAnimateRows(this.gos);\r\n    const rowsToRecycle = recycleRows ? this.getRowsToRecycle() : null;\r\n    if (!recycleRows) {\r\n      this.removeAllRowComps();\r\n    }\r\n    this.workOutFirstAndLastRowsToRender();\r\n    const { stickyRowFeature, gos } = this;\r\n    if (stickyRowFeature) {\r\n      stickyRowFeature.checkStickyRows();\r\n      const extraHeight = stickyRowFeature.extraTopHeight + stickyRowFeature.extraBottomHeight;\r\n      if (extraHeight) {\r\n        this.updateContainerHeights(extraHeight);\r\n      }\r\n    }\r\n    this.recycleRows(rowsToRecycle, animate);\r\n    this.gridBodyCtrl.updateRowCount();\r\n    if (!params.onlyBody) {\r\n      this.refreshFloatingRowComps(gos.get(\"enableRowPinning\") ? recycleRows : void 0);\r\n    }\r\n    this.dispatchDisplayedRowsChanged();\r\n    if (focusedCell != null) {\r\n      this.restoreFocusedCell(focusedCell);\r\n    }\r\n    this.releaseLockOnRefresh();\r\n  }\r\n  scrollToTopIfNewData(params) {\r\n    const scrollToTop = params.newData || params.newPage;\r\n    const suppressScrollToTop = this.gos.get(\"suppressScrollOnNewData\");\r\n    if (scrollToTop && !suppressScrollToTop) {\r\n      this.gridBodyCtrl.scrollFeature.scrollToTop();\r\n      this.stickyRowFeature?.resetOffsets();\r\n    }\r\n  }\r\n  updateContainerHeights(additionalHeight = 0) {\r\n    const { rowContainerHeight } = this;\r\n    if (this.printLayout) {\r\n      rowContainerHeight.setModelHeight(null);\r\n      return;\r\n    }\r\n    let containerHeight = this.pageBounds.getCurrentPageHeight();\r\n    if (containerHeight === 0) {\r\n      containerHeight = 1;\r\n    }\r\n    rowContainerHeight.setModelHeight(containerHeight + additionalHeight);\r\n  }\r\n  getLockOnRefresh() {\r\n    if (this.refreshInProgress) {\r\n      throw new Error(_errMsg(252));\r\n    }\r\n    this.refreshInProgress = true;\r\n    this.beans.frameworkOverrides.getLockOnRefresh?.();\r\n  }\r\n  releaseLockOnRefresh() {\r\n    this.refreshInProgress = false;\r\n    this.beans.frameworkOverrides.releaseLockOnRefresh?.();\r\n  }\r\n  isRefreshInProgress() {\r\n    return this.refreshInProgress;\r\n  }\r\n  // sets the focus to the provided cell, if the cell is provided. this way, the user can call refresh without\r\n  // worry about the focus been lost. this is important when the user is using keyboard navigation to do edits\r\n  // and the cellEditor is calling 'refresh' to get other cells to update (as other cells might depend on the\r\n  // edited cell).\r\n  restoreFocusedCell(cellPosition) {\r\n    if (!cellPosition) {\r\n      return;\r\n    }\r\n    const focusSvc = this.beans.focusSvc;\r\n    const cellToFocus = this.findPositionToFocus(cellPosition);\r\n    if (!cellToFocus) {\r\n      focusSvc.focusHeaderPosition({\r\n        headerPosition: {\r\n          headerRowIndex: getFocusHeaderRowCount(this.beans) - 1,\r\n          column: cellPosition.column\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    if (cellPosition.rowIndex !== cellToFocus.rowIndex || cellPosition.rowPinned != cellToFocus.rowPinned) {\r\n      focusSvc.setFocusedCell({\r\n        ...cellToFocus,\r\n        preventScrollOnBrowserFocus: true,\r\n        forceBrowserFocus: true\r\n      });\r\n      return;\r\n    }\r\n    if (!focusSvc.doesRowOrCellHaveBrowserFocus()) {\r\n      this.updateCellFocus(\r\n        _addGridCommonParams(this.gos, {\r\n          ...cellToFocus,\r\n          forceBrowserFocus: true,\r\n          preventScrollOnBrowserFocus: true,\r\n          type: \"cellFocused\"\r\n        })\r\n      );\r\n    }\r\n  }\r\n  findPositionToFocus(cellPosition) {\r\n    const { pagination, pageBounds } = this.beans;\r\n    let rowPosition = cellPosition;\r\n    if (rowPosition.rowPinned == null && pagination && pageBounds && !pagination.isRowInPage(rowPosition.rowIndex)) {\r\n      rowPosition = { rowPinned: null, rowIndex: pageBounds.getFirstRow() };\r\n    }\r\n    while (rowPosition) {\r\n      if (rowPosition.rowPinned == null && pageBounds) {\r\n        if (rowPosition.rowIndex < pageBounds.getFirstRow()) {\r\n          rowPosition = _getRowAbove(this.beans, { rowPinned: null, rowIndex: 0 });\r\n          if (!rowPosition) {\r\n            return null;\r\n          }\r\n        } else if (rowPosition.rowIndex > pageBounds.getLastRow()) {\r\n          rowPosition = { rowPinned: null, rowIndex: pageBounds.getLastRow() };\r\n        }\r\n      }\r\n      const row = this.getRowByPosition(rowPosition);\r\n      if (row?.isAlive()) {\r\n        return { ...row.getRowPosition(), column: cellPosition.column };\r\n      }\r\n      rowPosition = _getRowAbove(this.beans, rowPosition);\r\n    }\r\n    return null;\r\n  }\r\n  getAllCellCtrls() {\r\n    const res = [];\r\n    const rowCtrls = this.getAllRowCtrls();\r\n    const rowCtrlsLength = rowCtrls.length;\r\n    for (let i = 0; i < rowCtrlsLength; i++) {\r\n      const cellCtrls = rowCtrls[i].getAllCellCtrls();\r\n      const cellCtrlsLength = cellCtrls.length;\r\n      for (let j = 0; j < cellCtrlsLength; j++) {\r\n        res.push(cellCtrls[j]);\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n  getAllRowCtrls() {\r\n    const { spannedRowRenderer } = this.beans;\r\n    const stickyTopRowCtrls = this.getStickyTopRowCtrls();\r\n    const stickyBottomRowCtrls = this.getStickyBottomRowCtrls();\r\n    const res = [\r\n      ...this.topRowCtrls,\r\n      ...this.bottomRowCtrls,\r\n      ...stickyTopRowCtrls,\r\n      ...stickyBottomRowCtrls,\r\n      ...spannedRowRenderer?.getCtrls(\"top\") ?? [],\r\n      ...spannedRowRenderer?.getCtrls(\"bottom\") ?? [],\r\n      ...spannedRowRenderer?.getCtrls(\"center\") ?? [],\r\n      ...Object.values(this.rowCtrlsByRowIndex)\r\n    ];\r\n    return res;\r\n  }\r\n  addRenderedRowListener(eventName, rowIndex, callback) {\r\n    const rowComp = this.rowCtrlsByRowIndex[rowIndex];\r\n    if (rowComp) {\r\n      rowComp.addEventListener(eventName, callback);\r\n    }\r\n  }\r\n  refreshCells({ rowNodes, columns, force, suppressFlash } = {}) {\r\n    const refreshCellParams = {\r\n      force,\r\n      newData: false,\r\n      suppressFlash\r\n    };\r\n    for (const cellCtrl of this.getCellCtrls(rowNodes, columns)) {\r\n      cellCtrl.refreshOrDestroyCell(refreshCellParams);\r\n    }\r\n    this.refreshFullWidth(rowNodes);\r\n  }\r\n  refreshRows(params = {}) {\r\n    this.getRowCtrls(params.rowNodes).forEach((rowCtrl) => rowCtrl.refreshRow(params));\r\n    this.refreshFullWidth(params.rowNodes);\r\n  }\r\n  refreshFullWidth(rowNodes) {\r\n    if (!rowNodes) {\r\n      return;\r\n    }\r\n    let rowRedrawn = false;\r\n    for (const rowCtrl of this.getRowCtrls(rowNodes)) {\r\n      if (!rowCtrl.isFullWidth()) {\r\n        continue;\r\n      }\r\n      const refreshed = rowCtrl.refreshFullWidth();\r\n      if (!refreshed) {\r\n        rowRedrawn = true;\r\n        this.redrawRow(rowCtrl.rowNode, true);\r\n      }\r\n    }\r\n    if (rowRedrawn) {\r\n      this.dispatchDisplayedRowsChanged(false);\r\n    }\r\n  }\r\n  /**\r\n   * @param rowNodes if provided, returns the RowCtrls for the provided rowNodes. otherwise returns all RowCtrls.\r\n   */\r\n  getRowCtrls(rowNodes) {\r\n    const rowIdsMap = mapRowNodes(rowNodes);\r\n    const allRowCtrls = this.getAllRowCtrls();\r\n    if (!rowNodes || !rowIdsMap) {\r\n      return allRowCtrls;\r\n    }\r\n    return allRowCtrls.filter((rowCtrl) => {\r\n      const rowNode = rowCtrl.rowNode;\r\n      return isRowInMap(rowNode, rowIdsMap);\r\n    });\r\n  }\r\n  // returns CellCtrl's that match the provided rowNodes and columns. eg if one row node\r\n  // and two columns provided, that identifies 4 cells, so 4 CellCtrl's returned.\r\n  getCellCtrls(rowNodes, columns) {\r\n    let colIdsMap;\r\n    if (_exists(columns)) {\r\n      colIdsMap = {};\r\n      columns.forEach((colKey) => {\r\n        const column = this.colModel.getCol(colKey);\r\n        if (_exists(column)) {\r\n          colIdsMap[column.getId()] = true;\r\n        }\r\n      });\r\n    }\r\n    const res = [];\r\n    this.getRowCtrls(rowNodes).forEach((rowCtrl) => {\r\n      rowCtrl.getAllCellCtrls().forEach((cellCtrl) => {\r\n        const colId = cellCtrl.column.getId();\r\n        const excludeColFromRefresh = colIdsMap && !colIdsMap[colId];\r\n        if (excludeColFromRefresh) {\r\n          return;\r\n        }\r\n        res.push(cellCtrl);\r\n      });\r\n    });\r\n    return res;\r\n  }\r\n  destroy() {\r\n    this.removeAllRowComps(true);\r\n    super.destroy();\r\n  }\r\n  removeAllRowComps(suppressAnimation = false) {\r\n    const rowIndexesToRemove = Object.keys(this.rowCtrlsByRowIndex);\r\n    this.removeRowCtrls(rowIndexesToRemove, suppressAnimation);\r\n    this.stickyRowFeature?.destroyStickyCtrls();\r\n  }\r\n  getRowsToRecycle() {\r\n    const stubNodeIndexes = [];\r\n    for (const index of Object.keys(this.rowCtrlsByRowIndex)) {\r\n      const rowCtrl = this.rowCtrlsByRowIndex[index];\r\n      const stubNode = rowCtrl.rowNode.id == null;\r\n      if (stubNode) {\r\n        stubNodeIndexes.push(index);\r\n      }\r\n    }\r\n    this.removeRowCtrls(stubNodeIndexes);\r\n    const ctrlsByIdMap = {};\r\n    for (const rowCtrl of Object.values(this.rowCtrlsByRowIndex)) {\r\n      const rowNode = rowCtrl.rowNode;\r\n      ctrlsByIdMap[rowNode.id] = rowCtrl;\r\n    }\r\n    this.rowCtrlsByRowIndex = {};\r\n    return ctrlsByIdMap;\r\n  }\r\n  // takes array of row indexes\r\n  removeRowCtrls(rowsToRemove, suppressAnimation = false) {\r\n    rowsToRemove.forEach((indexToRemove) => {\r\n      const rowCtrl = this.rowCtrlsByRowIndex[indexToRemove];\r\n      if (rowCtrl) {\r\n        rowCtrl.destroyFirstPass(suppressAnimation);\r\n        rowCtrl.destroySecondPass();\r\n      }\r\n      delete this.rowCtrlsByRowIndex[indexToRemove];\r\n    });\r\n  }\r\n  onBodyScroll(e) {\r\n    if (e.direction !== \"vertical\") {\r\n      return;\r\n    }\r\n    this.redraw({ afterScroll: true });\r\n  }\r\n  // gets called when rows don't change, but viewport does, so after:\r\n  // 1) height of grid body changes, ie number of displayed rows has changed\r\n  // 2) grid scrolled to new position\r\n  // 3) ensure index visible (which is a scroll)\r\n  redraw(params = {}) {\r\n    const { focusSvc, animationFrameSvc } = this.beans;\r\n    const { afterScroll } = params;\r\n    let cellFocused;\r\n    const stickyRowFeature = this.stickyRowFeature;\r\n    if (stickyRowFeature) {\r\n      cellFocused = focusSvc?.getFocusCellToUseAfterRefresh() || void 0;\r\n    }\r\n    const oldFirstRow = this.firstRenderedRow;\r\n    const oldLastRow = this.lastRenderedRow;\r\n    this.workOutFirstAndLastRowsToRender();\r\n    let hasStickyRowChanges = false;\r\n    if (stickyRowFeature) {\r\n      hasStickyRowChanges = stickyRowFeature.checkStickyRows();\r\n      const extraHeight = stickyRowFeature.extraTopHeight + stickyRowFeature.extraBottomHeight;\r\n      if (extraHeight) {\r\n        this.updateContainerHeights(extraHeight);\r\n      }\r\n    }\r\n    const rangeChanged = this.firstRenderedRow !== oldFirstRow || this.lastRenderedRow !== oldLastRow;\r\n    if (afterScroll && !hasStickyRowChanges && !rangeChanged) {\r\n      return;\r\n    }\r\n    this.getLockOnRefresh();\r\n    this.recycleRows(null, false, afterScroll);\r\n    this.releaseLockOnRefresh();\r\n    this.dispatchDisplayedRowsChanged(afterScroll && !hasStickyRowChanges);\r\n    if (cellFocused != null) {\r\n      const newFocusedCell = focusSvc?.getFocusCellToUseAfterRefresh();\r\n      if (cellFocused != null && newFocusedCell == null) {\r\n        animationFrameSvc?.flushAllFrames();\r\n        this.restoreFocusedCell(cellFocused);\r\n      }\r\n    }\r\n  }\r\n  removeRowCompsNotToDraw(indexesToDraw, suppressAnimation) {\r\n    const indexesToDrawMap = {};\r\n    indexesToDraw.forEach((index) => indexesToDrawMap[index] = true);\r\n    const existingIndexes = Object.keys(this.rowCtrlsByRowIndex);\r\n    const indexesNotToDraw = existingIndexes.filter((index) => !indexesToDrawMap[index]);\r\n    this.removeRowCtrls(indexesNotToDraw, suppressAnimation);\r\n  }\r\n  calculateIndexesToDraw(rowsToRecycle) {\r\n    const indexesToDraw = [];\r\n    for (let i = this.firstRenderedRow; i <= this.lastRenderedRow; i++) {\r\n      indexesToDraw.push(i);\r\n    }\r\n    const pagination = this.beans.pagination;\r\n    const focusedRowIndex = this.beans.focusSvc?.getFocusedCell()?.rowIndex;\r\n    if (focusedRowIndex != null && (focusedRowIndex < this.firstRenderedRow || focusedRowIndex > this.lastRenderedRow) && (!pagination || pagination.isRowInPage(focusedRowIndex)) && focusedRowIndex < this.rowModel.getRowCount()) {\r\n      indexesToDraw.push(focusedRowIndex);\r\n    }\r\n    const checkRowToDraw = (rowComp) => {\r\n      const index = rowComp.rowNode.rowIndex;\r\n      if (index == null || index === focusedRowIndex) {\r\n        return;\r\n      }\r\n      if (index < this.firstRenderedRow || index > this.lastRenderedRow) {\r\n        if (this.doNotUnVirtualiseRow(rowComp)) {\r\n          indexesToDraw.push(index);\r\n        }\r\n      }\r\n    };\r\n    for (const rowCtrl of Object.values(this.rowCtrlsByRowIndex)) {\r\n      checkRowToDraw(rowCtrl);\r\n    }\r\n    if (rowsToRecycle) {\r\n      for (const rowCtrl of Object.values(rowsToRecycle)) {\r\n        checkRowToDraw(rowCtrl);\r\n      }\r\n    }\r\n    indexesToDraw.sort((a, b) => a - b);\r\n    const ret = [];\r\n    for (let i = 0; i < indexesToDraw.length; i++) {\r\n      const currRow = indexesToDraw[i];\r\n      const rowNode = this.rowModel.getRow(currRow);\r\n      if (rowNode && !rowNode.sticky) {\r\n        ret.push(currRow);\r\n      }\r\n    }\r\n    return ret;\r\n  }\r\n  recycleRows(rowsToRecycle, animate = false, afterScroll = false) {\r\n    const indexesToDraw = this.calculateIndexesToDraw(rowsToRecycle);\r\n    if (this.printLayout || afterScroll) {\r\n      animate = false;\r\n    }\r\n    this.removeRowCompsNotToDraw(indexesToDraw, !animate);\r\n    const rowCtrls = [];\r\n    indexesToDraw.forEach((rowIndex) => {\r\n      const rowCtrl = this.createOrUpdateRowCtrl(rowIndex, rowsToRecycle, animate, afterScroll);\r\n      if (_exists(rowCtrl)) {\r\n        rowCtrls.push(rowCtrl);\r\n      }\r\n    });\r\n    if (rowsToRecycle) {\r\n      const { animationFrameSvc } = this.beans;\r\n      const useAnimationFrame = animationFrameSvc?.active && afterScroll && !this.printLayout;\r\n      if (useAnimationFrame) {\r\n        animationFrameSvc.addDestroyTask(() => {\r\n          this.destroyRowCtrls(rowsToRecycle, animate);\r\n          this.updateAllRowCtrls();\r\n          this.dispatchDisplayedRowsChanged();\r\n        });\r\n      } else {\r\n        this.destroyRowCtrls(rowsToRecycle, animate);\r\n      }\r\n    }\r\n    this.updateAllRowCtrls();\r\n  }\r\n  dispatchDisplayedRowsChanged(afterScroll = false) {\r\n    this.eventSvc.dispatchEvent({\r\n      type: \"displayedRowsChanged\",\r\n      afterScroll\r\n    });\r\n  }\r\n  onDisplayedColumnsChanged() {\r\n    const { visibleCols } = this.beans;\r\n    const pinningLeft = visibleCols.isPinningLeft();\r\n    const pinningRight = visibleCols.isPinningRight();\r\n    const atLeastOneChanged = this.pinningLeft !== pinningLeft || pinningRight !== this.pinningRight;\r\n    if (atLeastOneChanged) {\r\n      this.pinningLeft = pinningLeft;\r\n      this.pinningRight = pinningRight;\r\n      if (this.embedFullWidthRows) {\r\n        this.redrawFullWidthEmbeddedRows();\r\n      }\r\n    }\r\n  }\r\n  // when embedding, what gets showed in each section depends on what is pinned. eg if embedding group expand / collapse,\r\n  // then it should go into the pinned left area if pinning left, or the center area if not pinning.\r\n  redrawFullWidthEmbeddedRows() {\r\n    const rowsToRemove = [];\r\n    this.getFullWidthRowCtrls().forEach((fullWidthCtrl) => {\r\n      const rowIndex = fullWidthCtrl.rowNode.rowIndex;\r\n      rowsToRemove.push(rowIndex.toString());\r\n    });\r\n    this.refreshFloatingRowComps();\r\n    this.removeRowCtrls(rowsToRemove);\r\n    this.redraw({ afterScroll: true });\r\n  }\r\n  getFullWidthRowCtrls(rowNodes) {\r\n    const rowNodesMap = mapRowNodes(rowNodes);\r\n    return this.getAllRowCtrls().filter((rowCtrl) => {\r\n      if (!rowCtrl.isFullWidth()) {\r\n        return false;\r\n      }\r\n      const rowNode = rowCtrl.rowNode;\r\n      if (rowNodesMap != null && !isRowInMap(rowNode, rowNodesMap)) {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n  }\r\n  createOrUpdateRowCtrl(rowIndex, rowsToRecycle, animate, afterScroll) {\r\n    let rowNode;\r\n    let rowCtrl = this.rowCtrlsByRowIndex[rowIndex];\r\n    if (!rowCtrl) {\r\n      rowNode = this.rowModel.getRow(rowIndex);\r\n      if (_exists(rowNode) && _exists(rowsToRecycle) && rowsToRecycle[rowNode.id] && rowNode.alreadyRendered) {\r\n        rowCtrl = rowsToRecycle[rowNode.id];\r\n        rowsToRecycle[rowNode.id] = null;\r\n      }\r\n    }\r\n    const creatingNewRowCtrl = !rowCtrl;\r\n    if (creatingNewRowCtrl) {\r\n      if (!rowNode) {\r\n        rowNode = this.rowModel.getRow(rowIndex);\r\n      }\r\n      if (_exists(rowNode)) {\r\n        rowCtrl = this.createRowCon(rowNode, animate, afterScroll);\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n    if (rowNode) {\r\n      rowNode.alreadyRendered = true;\r\n    }\r\n    this.rowCtrlsByRowIndex[rowIndex] = rowCtrl;\r\n    return rowCtrl;\r\n  }\r\n  destroyRowCtrls(rowCtrlsMap, animate) {\r\n    const executeInAWhileFuncs = [];\r\n    if (rowCtrlsMap) {\r\n      for (const rowCtrl of Object.values(rowCtrlsMap)) {\r\n        if (!rowCtrl) {\r\n          continue;\r\n        }\r\n        if (this.cachedRowCtrls && rowCtrl.isCacheable()) {\r\n          this.cachedRowCtrls.addRow(rowCtrl);\r\n          continue;\r\n        }\r\n        rowCtrl.destroyFirstPass(!animate);\r\n        if (animate) {\r\n          const instanceId = rowCtrl.instanceId;\r\n          this.zombieRowCtrls[instanceId] = rowCtrl;\r\n          executeInAWhileFuncs.push(() => {\r\n            rowCtrl.destroySecondPass();\r\n            delete this.zombieRowCtrls[instanceId];\r\n          });\r\n        } else {\r\n          rowCtrl.destroySecondPass();\r\n        }\r\n      }\r\n    }\r\n    if (animate) {\r\n      executeInAWhileFuncs.push(() => {\r\n        this.updateAllRowCtrls();\r\n        this.dispatchDisplayedRowsChanged();\r\n      });\r\n      window.setTimeout(() => executeInAWhileFuncs.forEach((func) => func()), ROW_ANIMATION_TIMEOUT);\r\n    }\r\n  }\r\n  getRowBuffer() {\r\n    return this.gos.get(\"rowBuffer\");\r\n  }\r\n  getRowBufferInPixels() {\r\n    const rowsToBuffer = this.getRowBuffer();\r\n    const defaultRowHeight = _getRowHeightAsNumber(this.beans);\r\n    return rowsToBuffer * defaultRowHeight;\r\n  }\r\n  workOutFirstAndLastRowsToRender() {\r\n    const { rowContainerHeight, pageBounds, rowModel } = this;\r\n    rowContainerHeight.updateOffset();\r\n    let newFirst;\r\n    let newLast;\r\n    if (!rowModel.isRowsToRender()) {\r\n      newFirst = 0;\r\n      newLast = -1;\r\n    } else if (this.printLayout) {\r\n      this.beans.environment.refreshRowHeightVariable();\r\n      newFirst = pageBounds.getFirstRow();\r\n      newLast = pageBounds.getLastRow();\r\n    } else {\r\n      const bufferPixels = this.getRowBufferInPixels();\r\n      const scrollFeature = this.ctrlsSvc.getScrollFeature();\r\n      const suppressRowVirtualisation = this.gos.get(\"suppressRowVirtualisation\");\r\n      let rowHeightsChanged = false;\r\n      let firstPixel;\r\n      let lastPixel;\r\n      do {\r\n        const paginationOffset = pageBounds.getPixelOffset();\r\n        const { pageFirstPixel, pageLastPixel } = pageBounds.getCurrentPagePixelRange();\r\n        const divStretchOffset = rowContainerHeight.divStretchOffset;\r\n        const bodyVRange = scrollFeature.getVScrollPosition();\r\n        const bodyTopPixel = bodyVRange.top;\r\n        const bodyBottomPixel = bodyVRange.bottom;\r\n        if (suppressRowVirtualisation) {\r\n          firstPixel = pageFirstPixel + divStretchOffset;\r\n          lastPixel = pageLastPixel + divStretchOffset;\r\n        } else {\r\n          firstPixel = Math.max(bodyTopPixel + paginationOffset - bufferPixels, pageFirstPixel) + divStretchOffset;\r\n          lastPixel = Math.min(bodyBottomPixel + paginationOffset + bufferPixels, pageLastPixel) + divStretchOffset;\r\n        }\r\n        this.firstVisibleVPixel = Math.max(bodyTopPixel + paginationOffset, pageFirstPixel) + divStretchOffset;\r\n        this.lastVisibleVPixel = Math.min(bodyBottomPixel + paginationOffset, pageLastPixel) + divStretchOffset;\r\n        rowHeightsChanged = this.ensureAllRowsInRangeHaveHeightsCalculated(firstPixel, lastPixel);\r\n      } while (rowHeightsChanged);\r\n      let firstRowIndex = rowModel.getRowIndexAtPixel(firstPixel);\r\n      let lastRowIndex = rowModel.getRowIndexAtPixel(lastPixel);\r\n      const pageFirstRow = pageBounds.getFirstRow();\r\n      const pageLastRow = pageBounds.getLastRow();\r\n      if (firstRowIndex < pageFirstRow) {\r\n        firstRowIndex = pageFirstRow;\r\n      }\r\n      if (lastRowIndex > pageLastRow) {\r\n        lastRowIndex = pageLastRow;\r\n      }\r\n      newFirst = firstRowIndex;\r\n      newLast = lastRowIndex;\r\n    }\r\n    const rowLayoutNormal = _isDomLayout(this.gos, \"normal\");\r\n    const suppressRowCountRestriction = this.gos.get(\"suppressMaxRenderedRowRestriction\");\r\n    const rowBufferMaxSize = Math.max(this.getRowBuffer(), 500);\r\n    if (rowLayoutNormal && !suppressRowCountRestriction) {\r\n      if (newLast - newFirst > rowBufferMaxSize) {\r\n        newLast = newFirst + rowBufferMaxSize;\r\n      }\r\n    }\r\n    const firstDiffers = newFirst !== this.firstRenderedRow;\r\n    const lastDiffers = newLast !== this.lastRenderedRow;\r\n    if (firstDiffers || lastDiffers) {\r\n      this.firstRenderedRow = newFirst;\r\n      this.lastRenderedRow = newLast;\r\n      this.eventSvc.dispatchEvent({\r\n        type: \"viewportChanged\",\r\n        firstRow: newFirst,\r\n        lastRow: newLast\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   * This event will only be fired once, and is queued until after the browser next renders.\r\n   * This allows us to fire an event during the start of the render cycle, when we first see data being rendered\r\n   * but not execute the event until all of the data has finished being rendered to the dom.\r\n   */\r\n  dispatchFirstDataRenderedEvent() {\r\n    if (this.dataFirstRenderedFired) {\r\n      return;\r\n    }\r\n    this.dataFirstRenderedFired = true;\r\n    _requestAnimationFrame(this.beans, () => {\r\n      this.beans.eventSvc.dispatchEvent({\r\n        type: \"firstDataRendered\",\r\n        firstRow: this.firstRenderedRow,\r\n        lastRow: this.lastRenderedRow\r\n      });\r\n    });\r\n  }\r\n  ensureAllRowsInRangeHaveHeightsCalculated(topPixel, bottomPixel) {\r\n    const pinnedRowHeightsChanged = this.pinnedRowModel?.ensureRowHeightsValid();\r\n    const stickyHeightsChanged = this.stickyRowFeature?.ensureRowHeightsValid();\r\n    const { pageBounds, rowModel } = this;\r\n    const rowModelHeightsChanged = rowModel.ensureRowHeightsValid(\r\n      topPixel,\r\n      bottomPixel,\r\n      pageBounds.getFirstRow(),\r\n      pageBounds.getLastRow()\r\n    );\r\n    if (rowModelHeightsChanged || stickyHeightsChanged) {\r\n      this.eventSvc.dispatchEvent({\r\n        type: \"recalculateRowBounds\"\r\n      });\r\n    }\r\n    if (stickyHeightsChanged || rowModelHeightsChanged || pinnedRowHeightsChanged) {\r\n      this.updateContainerHeights();\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  // check that none of the rows to remove are editing or focused as:\r\n  // a) if editing, we want to keep them, otherwise the user will loose the context of the edit,\r\n  //    eg user starts editing, enters some text, then scrolls down and then up, next time row rendered\r\n  //    the edit is reset - so we want to keep it rendered.\r\n  // b) if focused, we want ot keep keyboard focus, so if user ctrl+c, it goes to clipboard,\r\n  //    otherwise the user can range select and drag (with focus cell going out of the viewport)\r\n  //    and then ctrl+c, nothing will happen if cell is removed from dom.\r\n  // c) if detail record of master detail, as users complained that the context of detail rows\r\n  //    was getting lost when detail row out of view. eg user expands to show detail row,\r\n  //    then manipulates the detail panel (eg sorts the detail grid), then context is lost\r\n  //    after detail panel is scrolled out of / into view.\r\n  doNotUnVirtualiseRow(rowCtrl) {\r\n    const REMOVE_ROW = false;\r\n    const KEEP_ROW = true;\r\n    const rowNode = rowCtrl.rowNode;\r\n    const rowHasFocus = this.focusSvc.isRowFocused(rowNode.rowIndex, rowNode.rowPinned);\r\n    const rowIsEditing = this.editSvc?.isEditing(rowCtrl);\r\n    const rowIsDetail = rowNode.detail;\r\n    const mightWantToKeepRow = rowHasFocus || rowIsEditing || rowIsDetail;\r\n    if (!mightWantToKeepRow) {\r\n      return REMOVE_ROW;\r\n    }\r\n    const rowNodePresent = this.isRowPresent(rowNode);\r\n    return rowNodePresent ? KEEP_ROW : REMOVE_ROW;\r\n  }\r\n  isRowPresent(rowNode) {\r\n    if (!this.rowModel.isRowPresent(rowNode)) {\r\n      return false;\r\n    }\r\n    return this.beans.pagination?.isRowInPage(rowNode.rowIndex) ?? true;\r\n  }\r\n  createRowCon(rowNode, animate, afterScroll) {\r\n    const rowCtrlFromCache = this.cachedRowCtrls?.getRow(rowNode) ?? null;\r\n    if (rowCtrlFromCache) {\r\n      return rowCtrlFromCache;\r\n    }\r\n    const useAnimationFrameForCreate = afterScroll && !this.printLayout && !!this.beans.animationFrameSvc?.active;\r\n    const res = new RowCtrl(rowNode, this.beans, animate, useAnimationFrameForCreate, this.printLayout);\r\n    return res;\r\n  }\r\n  getRenderedNodes() {\r\n    const viewportRows = Object.values(this.rowCtrlsByRowIndex).map((rowCtrl) => rowCtrl.rowNode);\r\n    const stickyTopRows = this.getStickyTopRowCtrls().map((rowCtrl) => rowCtrl.rowNode);\r\n    const stickyBottomRows = this.getStickyBottomRowCtrls().map((rowCtrl) => rowCtrl.rowNode);\r\n    return [...stickyTopRows, ...viewportRows, ...stickyBottomRows];\r\n  }\r\n  getRowByPosition(rowPosition) {\r\n    let rowCtrl;\r\n    const { rowIndex } = rowPosition;\r\n    switch (rowPosition.rowPinned) {\r\n      case \"top\":\r\n        rowCtrl = this.topRowCtrls[rowIndex];\r\n        break;\r\n      case \"bottom\":\r\n        rowCtrl = this.bottomRowCtrls[rowIndex];\r\n        break;\r\n      default:\r\n        rowCtrl = this.rowCtrlsByRowIndex[rowIndex];\r\n        if (!rowCtrl) {\r\n          rowCtrl = this.getStickyTopRowCtrls().find((ctrl) => ctrl.rowNode.rowIndex === rowIndex) || null;\r\n          if (!rowCtrl) {\r\n            rowCtrl = this.getStickyBottomRowCtrls().find((ctrl) => ctrl.rowNode.rowIndex === rowIndex) || null;\r\n          }\r\n        }\r\n        break;\r\n    }\r\n    return rowCtrl;\r\n  }\r\n  // returns true if any row between startIndex and endIndex is rendered. used by\r\n  // SSRM or IRM, as they don't want to purge visible blocks from cache.\r\n  isRangeInRenderedViewport(startIndex, endIndex) {\r\n    const parentClosed = startIndex == null || endIndex == null;\r\n    if (parentClosed) {\r\n      return false;\r\n    }\r\n    const blockAfterViewport = startIndex > this.lastRenderedRow;\r\n    const blockBeforeViewport = endIndex < this.firstRenderedRow;\r\n    const blockInsideViewport = !blockBeforeViewport && !blockAfterViewport;\r\n    return blockInsideViewport;\r\n  }\r\n};\r\nvar RowCtrlCache = class {\r\n  constructor(maxCount) {\r\n    // map for fast access\r\n    this.entriesMap = {};\r\n    // list for keeping order\r\n    this.entriesList = [];\r\n    this.maxCount = maxCount;\r\n  }\r\n  addRow(rowCtrl) {\r\n    this.entriesMap[rowCtrl.rowNode.id] = rowCtrl;\r\n    this.entriesList.push(rowCtrl);\r\n    rowCtrl.setCached(true);\r\n    if (this.entriesList.length > this.maxCount) {\r\n      const rowCtrlToDestroy = this.entriesList[0];\r\n      rowCtrlToDestroy.destroyFirstPass();\r\n      rowCtrlToDestroy.destroySecondPass();\r\n      this.removeFromCache(rowCtrlToDestroy);\r\n    }\r\n  }\r\n  getRow(rowNode) {\r\n    if (rowNode == null || rowNode.id == null) {\r\n      return null;\r\n    }\r\n    const res = this.entriesMap[rowNode.id];\r\n    if (!res) {\r\n      return null;\r\n    }\r\n    this.removeFromCache(res);\r\n    res.setCached(false);\r\n    const rowNodeMismatch = res.rowNode != rowNode;\r\n    return rowNodeMismatch ? null : res;\r\n  }\r\n  has(rowNode) {\r\n    return this.entriesMap[rowNode.id] != null;\r\n  }\r\n  removeRow(rowNode) {\r\n    const rowNodeId = rowNode.id;\r\n    const ctrl = this.entriesMap[rowNodeId];\r\n    delete this.entriesMap[rowNodeId];\r\n    _removeFromArray(this.entriesList, ctrl);\r\n  }\r\n  removeFromCache(rowCtrl) {\r\n    const rowNodeId = rowCtrl.rowNode.id;\r\n    delete this.entriesMap[rowNodeId];\r\n    _removeFromArray(this.entriesList, rowCtrl);\r\n  }\r\n  getEntries() {\r\n    return this.entriesList;\r\n  }\r\n};\r\nfunction mapRowNodes(rowNodes) {\r\n  if (!rowNodes) {\r\n    return;\r\n  }\r\n  const res = {\r\n    top: {},\r\n    bottom: {},\r\n    normal: {}\r\n  };\r\n  rowNodes.forEach((rowNode) => {\r\n    const id = rowNode.id;\r\n    switch (rowNode.rowPinned) {\r\n      case \"top\":\r\n        res.top[id] = rowNode;\r\n        break;\r\n      case \"bottom\":\r\n        res.bottom[id] = rowNode;\r\n        break;\r\n      default:\r\n        res.normal[id] = rowNode;\r\n        break;\r\n    }\r\n  });\r\n  return res;\r\n}\r\nfunction isRowInMap(rowNode, rowIdsMap) {\r\n  const id = rowNode.id;\r\n  const floating = rowNode.rowPinned;\r\n  switch (floating) {\r\n    case \"top\":\r\n      return rowIdsMap.top[id] != null;\r\n    case \"bottom\":\r\n      return rowIdsMap.bottom[id] != null;\r\n    default:\r\n      return rowIdsMap.normal[id] != null;\r\n  }\r\n}\r\n\r\n// packages/ag-grid-community/src/sort/rowNodeSorter.ts\r\nvar RowNodeSorter = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"rowNodeSorter\";\r\n  }\r\n  postConstruct() {\r\n    const { gos } = this;\r\n    this.isAccentedSort = gos.get(\"accentedSort\");\r\n    this.primaryColumnsSortGroups = _isColumnsSortingCoupledToGroup(gos);\r\n    this.addManagedPropertyListener(\r\n      \"accentedSort\",\r\n      (propChange) => this.isAccentedSort = propChange.currentValue\r\n    );\r\n    this.addManagedPropertyListener(\r\n      \"autoGroupColumnDef\",\r\n      () => this.primaryColumnsSortGroups = _isColumnsSortingCoupledToGroup(gos)\r\n    );\r\n  }\r\n  doFullSort(rowNodes, sortOptions) {\r\n    const sortedRowNodes = rowNodes.map((rowNode, currentPos) => ({\r\n      currentPos,\r\n      rowNode\r\n    }));\r\n    sortedRowNodes.sort(this.compareRowNodes.bind(this, sortOptions));\r\n    return sortedRowNodes.map((item) => item.rowNode);\r\n  }\r\n  compareRowNodes(sortOptions, sortedNodeA, sortedNodeB) {\r\n    const nodeA = sortedNodeA.rowNode;\r\n    const nodeB = sortedNodeB.rowNode;\r\n    for (let i = 0, len = sortOptions.length; i < len; i++) {\r\n      const sortOption = sortOptions[i];\r\n      const isDescending = sortOption.sort === \"desc\";\r\n      const valueA = this.getValue(nodeA, sortOption.column);\r\n      const valueB = this.getValue(nodeB, sortOption.column);\r\n      let comparatorResult;\r\n      const providedComparator = this.getComparator(sortOption, nodeA);\r\n      if (providedComparator) {\r\n        comparatorResult = providedComparator(valueA, valueB, nodeA, nodeB, isDescending);\r\n      } else {\r\n        comparatorResult = _defaultComparator(valueA, valueB, this.isAccentedSort);\r\n      }\r\n      const validResult = !isNaN(comparatorResult);\r\n      if (validResult && comparatorResult !== 0) {\r\n        return sortOption.sort === \"asc\" ? comparatorResult : comparatorResult * -1;\r\n      }\r\n    }\r\n    return sortedNodeA.currentPos - sortedNodeB.currentPos;\r\n  }\r\n  getComparator(sortOption, rowNode) {\r\n    const column = sortOption.column;\r\n    const comparatorOnCol = column.getColDef().comparator;\r\n    if (comparatorOnCol != null) {\r\n      return comparatorOnCol;\r\n    }\r\n    if (!column.getColDef().showRowGroup) {\r\n      return;\r\n    }\r\n    const groupLeafField = !rowNode.group && column.getColDef().field;\r\n    if (!groupLeafField) {\r\n      return;\r\n    }\r\n    const primaryColumn = this.beans.colModel.getColDefCol(groupLeafField);\r\n    if (!primaryColumn) {\r\n      return;\r\n    }\r\n    return primaryColumn.getColDef().comparator;\r\n  }\r\n  getValue(node, column) {\r\n    const { valueSvc, colModel, showRowGroupCols, gos } = this.beans;\r\n    if (!this.primaryColumnsSortGroups) {\r\n      return valueSvc.getValue(column, node, false);\r\n    }\r\n    const isNodeGroupedAtLevel = node.rowGroupColumn === column;\r\n    if (isNodeGroupedAtLevel) {\r\n      const isGroupRows = _isGroupUseEntireRow(gos, colModel.isPivotActive());\r\n      if (isGroupRows) {\r\n        const leafChild = node.allLeafChildren?.[0];\r\n        if (leafChild) {\r\n          return valueSvc.getValue(column, leafChild, false);\r\n        }\r\n        return void 0;\r\n      }\r\n      const displayCol = showRowGroupCols?.getShowRowGroupCol(column.getId());\r\n      if (!displayCol) {\r\n        return void 0;\r\n      }\r\n      return node.groupData?.[displayCol.getId()];\r\n    }\r\n    if (node.group && column.getColDef().showRowGroup) {\r\n      return void 0;\r\n    }\r\n    return valueSvc.getValue(column, node, false);\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/sort/sortApi.ts\r\nfunction onSortChanged(beans) {\r\n  beans.sortSvc?.onSortChanged(\"api\");\r\n}\r\n\r\n// packages/ag-grid-community/src/sort/sortModule.ts\r\nvar SortModule = {\r\n  moduleName: \"Sort\",\r\n  version: VERSION,\r\n  beans: [SortService, RowNodeSorter],\r\n  apiFunctions: {\r\n    onSortChanged\r\n  },\r\n  userComponents: {\r\n    agSortIndicator: SortIndicatorComp\r\n  },\r\n  icons: {\r\n    // show on column header when column is sorted ascending\r\n    sortAscending: \"asc\",\r\n    // show on column header when column is sorted descending\r\n    sortDescending: \"desc\",\r\n    // show on column header when column has no sort, only when enabled with gridOptions.unSortIcon=true\r\n    sortUnSort: \"none\"\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/syncService.ts\r\nvar SyncService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"syncSvc\";\r\n    this.waitingForColumns = false;\r\n  }\r\n  postConstruct() {\r\n    this.addManagedPropertyListener(\"columnDefs\", (event) => this.setColumnDefs(event));\r\n  }\r\n  start() {\r\n    this.beans.ctrlsSvc.whenReady(this, () => {\r\n      const columnDefs = this.gos.get(\"columnDefs\");\r\n      if (columnDefs) {\r\n        this.setColumnsAndData(columnDefs);\r\n      } else {\r\n        this.waitingForColumns = true;\r\n      }\r\n      this.gridReady();\r\n    });\r\n  }\r\n  setColumnsAndData(columnDefs) {\r\n    const { colModel, rowModel } = this.beans;\r\n    colModel.setColumnDefs(columnDefs ?? [], \"gridInitializing\");\r\n    rowModel.start();\r\n  }\r\n  gridReady() {\r\n    const { eventSvc, gos } = this;\r\n    eventSvc.dispatchEvent({\r\n      type: \"gridReady\"\r\n    });\r\n    _logIfDebug(gos, `initialised successfully, enterprise = ${gos.isModuleRegistered(\"EnterpriseCore\")}`);\r\n  }\r\n  setColumnDefs(event) {\r\n    const columnDefs = this.gos.get(\"columnDefs\");\r\n    if (!columnDefs) {\r\n      return;\r\n    }\r\n    if (this.waitingForColumns) {\r\n      this.waitingForColumns = false;\r\n      this.setColumnsAndData(columnDefs);\r\n      return;\r\n    }\r\n    this.beans.colModel.setColumnDefs(columnDefs, _convertColumnEventSourceType(event.source));\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/valueService/cellApi.ts\r\nfunction expireValueCache(beans) {\r\n  beans.valueCache?.expire();\r\n}\r\nfunction getCellValue(beans, params) {\r\n  const { colKey, rowNode, useFormatter } = params;\r\n  const column = beans.colModel.getColDefCol(colKey) ?? beans.colModel.getCol(colKey);\r\n  if (_missing(column)) {\r\n    return null;\r\n  }\r\n  const result = beans.valueSvc.getValueForDisplay(column, rowNode, useFormatter);\r\n  if (useFormatter) {\r\n    return result.valueFormatted ?? _toString(result.value);\r\n  }\r\n  return result.value;\r\n}\r\n\r\n// packages/ag-grid-community/src/valueService/changeDetectionService.ts\r\nvar SOURCE_PASTE = \"paste\";\r\nvar ChangeDetectionService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"changeDetectionSvc\";\r\n    this.clientSideRowModel = null;\r\n  }\r\n  postConstruct() {\r\n    const { gos, rowModel } = this.beans;\r\n    if (_isClientSideRowModel(gos, rowModel)) {\r\n      this.clientSideRowModel = rowModel;\r\n    }\r\n    this.addManagedEventListeners({ cellValueChanged: this.onCellValueChanged.bind(this) });\r\n  }\r\n  onCellValueChanged(event) {\r\n    const { gos, rowRenderer } = this.beans;\r\n    if (event.source === SOURCE_PASTE || gos.get(\"suppressChangeDetection\")) {\r\n      return;\r\n    }\r\n    const rowNode = event.node;\r\n    const nodesToRefresh = [rowNode];\r\n    const clientSideRowModel = this.clientSideRowModel;\r\n    const rootNode = clientSideRowModel?.rootNode;\r\n    if (rootNode && !rowNode.isRowPinned()) {\r\n      const onlyChangedColumns = gos.get(\"aggregateOnlyChangedColumns\");\r\n      const changedPath = new ChangedPath(onlyChangedColumns, rootNode);\r\n      changedPath.addParentNode(rowNode.parent, [event.column]);\r\n      clientSideRowModel.doAggregate(changedPath);\r\n      changedPath.forEachChangedNodeDepthFirst((rowNode2) => {\r\n        nodesToRefresh.push(rowNode2);\r\n        if (rowNode2.sibling) {\r\n          nodesToRefresh.push(rowNode2.sibling);\r\n        }\r\n      });\r\n    }\r\n    rowRenderer.refreshCells({ rowNodes: nodesToRefresh });\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/valueService/expressionService.ts\r\nvar ExpressionService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"expressionSvc\";\r\n    this.cache = {};\r\n  }\r\n  evaluate(expression, params) {\r\n    if (typeof expression === \"string\") {\r\n      return this.evaluateExpression(expression, params);\r\n    } else {\r\n      _error(15, { expression });\r\n    }\r\n  }\r\n  evaluateExpression(expression, params) {\r\n    try {\r\n      const javaScriptFunction = this.createExpressionFunction(expression);\r\n      const result = javaScriptFunction(\r\n        params.value,\r\n        params.context,\r\n        params.oldValue,\r\n        params.newValue,\r\n        params.value,\r\n        params.node,\r\n        params.data,\r\n        params.colDef,\r\n        params.rowIndex,\r\n        params.api,\r\n        params.getValue,\r\n        params.column,\r\n        params.columnGroup\r\n      );\r\n      return result;\r\n    } catch (e) {\r\n      _error(16, { expression, params, e });\r\n      return null;\r\n    }\r\n  }\r\n  createExpressionFunction(expression) {\r\n    const expressionToFunctionCache = this.cache;\r\n    if (expressionToFunctionCache[expression]) {\r\n      return expressionToFunctionCache[expression];\r\n    }\r\n    const functionBody = this.createFunctionBody(expression);\r\n    const theFunction = new Function(\r\n      \"x, ctx, oldValue, newValue, value, node, data, colDef, rowIndex, api, getValue, column, columnGroup\",\r\n      functionBody\r\n    );\r\n    expressionToFunctionCache[expression] = theFunction;\r\n    return theFunction;\r\n  }\r\n  createFunctionBody(expression) {\r\n    if (expression.indexOf(\"return\") >= 0) {\r\n      return expression;\r\n    } else {\r\n      return \"return \" + expression + \";\";\r\n    }\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/valueService/valueCache.ts\r\nvar ValueCache = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"valueCache\";\r\n    this.cacheVersion = 0;\r\n  }\r\n  postConstruct() {\r\n    const gos = this.gos;\r\n    this.active = gos.get(\"valueCache\");\r\n    this.neverExpires = gos.get(\"valueCacheNeverExpires\");\r\n  }\r\n  onDataChanged() {\r\n    if (this.neverExpires) {\r\n      return;\r\n    }\r\n    this.expire();\r\n  }\r\n  expire() {\r\n    this.cacheVersion++;\r\n  }\r\n  setValue(rowNode, colId, value) {\r\n    if (this.active) {\r\n      const cacheVersion = this.cacheVersion;\r\n      if (rowNode.__cacheVersion !== cacheVersion) {\r\n        rowNode.__cacheVersion = cacheVersion;\r\n        rowNode.__cacheData = {};\r\n      }\r\n      rowNode.__cacheData[colId] = value;\r\n    }\r\n  }\r\n  getValue(rowNode, colId) {\r\n    if (!this.active || rowNode.__cacheVersion !== this.cacheVersion) {\r\n      return void 0;\r\n    }\r\n    return rowNode.__cacheData[colId];\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/valueService/valueModule.ts\r\nvar ValueCacheModule = {\r\n  moduleName: \"ValueCache\",\r\n  version: VERSION,\r\n  beans: [ValueCache],\r\n  apiFunctions: {\r\n    expireValueCache\r\n  }\r\n};\r\nvar ExpressionModule = {\r\n  moduleName: \"Expression\",\r\n  version: VERSION,\r\n  beans: [ExpressionService]\r\n};\r\nvar ChangeDetectionModule = {\r\n  moduleName: \"ChangeDetection\",\r\n  version: VERSION,\r\n  beans: [ChangeDetectionService]\r\n};\r\nvar CellApiModule = {\r\n  moduleName: \"CellApi\",\r\n  version: VERSION,\r\n  apiFunctions: {\r\n    getCellValue\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/valueService/valueService.ts\r\nvar EDITING_CHECK_SIBLINGS = { checkSiblings: true };\r\nvar ValueService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"valueSvc\";\r\n    this.hasEdit = false;\r\n    this.initialised = false;\r\n    this.isSsrm = false;\r\n  }\r\n  wireBeans(beans) {\r\n    this.expressionSvc = beans.expressionSvc;\r\n    this.colModel = beans.colModel;\r\n    this.valueCache = beans.valueCache;\r\n    this.dataTypeSvc = beans.dataTypeSvc;\r\n    this.editSvc = beans.editSvc;\r\n    this.hasEdit = !!beans.editSvc;\r\n  }\r\n  postConstruct() {\r\n    if (!this.initialised) {\r\n      this.init();\r\n    }\r\n  }\r\n  init() {\r\n    this.executeValueGetter = this.valueCache ? this.executeValueGetterWithValueCache.bind(this) : this.executeValueGetterWithoutValueCache.bind(this);\r\n    this.isSsrm = _isServerSideRowModel(this.gos);\r\n    this.cellExpressions = this.gos.get(\"enableCellExpressions\");\r\n    this.isTreeData = this.gos.get(\"treeData\");\r\n    this.initialised = true;\r\n    const listener = (event) => this.callColumnCellValueChangedHandler(event);\r\n    this.eventSvc.addEventListener(\"cellValueChanged\", listener, true);\r\n    this.addDestroyFunc(() => this.eventSvc.removeEventListener(\"cellValueChanged\", listener, true));\r\n    this.addManagedPropertyListener(\"treeData\", (propChange) => this.isTreeData = propChange.currentValue);\r\n  }\r\n  /**\r\n   * Use this function to get a displayable cell value.\r\n   * The values from this function are not used for sorting, filtering, or aggregation purposes.\r\n   * Handles: groupHideOpenParents, showOpenedGroup and groupSuppressBlankHeader behaviours\r\n   */\r\n  getValueForDisplay(column, node, includeValueFormatted = false, exporting = false, source = \"ui\") {\r\n    const { showRowGroupColValueSvc } = this.beans;\r\n    const isFullWidthGroup = !column && node.group;\r\n    const isGroupCol = column?.colDef.showRowGroup;\r\n    const processTreeDataAsGroup = !this.isTreeData || node.footer;\r\n    if (showRowGroupColValueSvc && processTreeDataAsGroup && (isFullWidthGroup || isGroupCol)) {\r\n      const groupValue = showRowGroupColValueSvc.getGroupValue(node, column);\r\n      if (groupValue == null) {\r\n        return {\r\n          value: null,\r\n          valueFormatted: null\r\n        };\r\n      }\r\n      if (!includeValueFormatted) {\r\n        return {\r\n          value: groupValue.value,\r\n          valueFormatted: null\r\n        };\r\n      }\r\n      const valueFormatted = showRowGroupColValueSvc.formatAndPrefixGroupColValue(groupValue, column, exporting);\r\n      return {\r\n        value: groupValue.value,\r\n        valueFormatted\r\n      };\r\n    }\r\n    if (!column) {\r\n      return {\r\n        value: node.key,\r\n        valueFormatted: null\r\n      };\r\n    }\r\n    const isPivotLeaf = node.leafGroup && this.colModel.isPivotMode();\r\n    const isOpenedGroup = node.group && node.expanded && !node.footer && !isPivotLeaf;\r\n    const groupShowsAggData = this.gos.get(\"groupSuppressBlankHeader\") || !node.sibling;\r\n    const ignoreAggData = isOpenedGroup && !groupShowsAggData;\r\n    const value = this.getValue(column, node, ignoreAggData, source);\r\n    const format = includeValueFormatted && !(exporting && column.colDef.useValueFormatterForExport === false);\r\n    return {\r\n      value,\r\n      valueFormatted: format ? this.formatValue(column, node, value) : null\r\n    };\r\n  }\r\n  getValue(column, rowNode, ignoreAggData = false, source = \"ui\") {\r\n    if (!this.initialised) {\r\n      this.init();\r\n    }\r\n    if (!rowNode) {\r\n      return;\r\n    }\r\n    const colDef = column.getColDef();\r\n    const field = colDef.field;\r\n    const colId = column.getColId();\r\n    let data = rowNode.data;\r\n    if (this.hasEdit && source === \"ui\") {\r\n      const editSvc = this.editSvc;\r\n      if (editSvc.isRowEditing(rowNode, EDITING_CHECK_SIBLINGS)) {\r\n        data = editSvc.getRowDataValue(rowNode, EDITING_CHECK_SIBLINGS);\r\n      }\r\n      if (editSvc.isEditing()) {\r\n        const newValue = editSvc.getCellDataValue({ rowNode, column }, true);\r\n        if (newValue !== void 0) {\r\n          return newValue;\r\n        }\r\n      }\r\n    }\r\n    let result;\r\n    const rowGroupColId = colDef.showRowGroup;\r\n    if (typeof rowGroupColId === \"string\") {\r\n      const colRowGroupIndex = this.beans.rowGroupColsSvc?.getColumnIndex(rowGroupColId) ?? -1;\r\n      if (colRowGroupIndex > rowNode.level) {\r\n        return null;\r\n      }\r\n    }\r\n    const allowUserValuesForCell = typeof rowGroupColId !== \"string\" || !rowNode.group;\r\n    const groupDataExists = rowNode.groupData && colId in rowNode.groupData;\r\n    const aggDataExists = !ignoreAggData && rowNode.aggData && rowNode.aggData[colId] !== void 0;\r\n    const ignoreSsrmAggData = this.isSsrm && ignoreAggData && !!colDef.aggFunc;\r\n    const ssrmFooterGroupCol = this.isSsrm && rowNode.footer && rowNode.field && (colDef.showRowGroup === true || colDef.showRowGroup === rowNode.field);\r\n    if (this.isTreeData && aggDataExists) {\r\n      result = rowNode.aggData[colId];\r\n    } else if (this.isTreeData && colDef.valueGetter) {\r\n      result = this.executeValueGetter(colDef.valueGetter, data, column, rowNode);\r\n    } else if (this.isTreeData && field && data) {\r\n      result = _getValueUsingField(data, field, column.isFieldContainsDots());\r\n    } else if (groupDataExists) {\r\n      result = rowNode.groupData[colId];\r\n    } else if (aggDataExists) {\r\n      result = rowNode.aggData[colId];\r\n    } else if (colDef.valueGetter && !ignoreSsrmAggData) {\r\n      if (!allowUserValuesForCell) {\r\n        return result;\r\n      }\r\n      result = this.executeValueGetter(colDef.valueGetter, data, column, rowNode);\r\n    } else if (ssrmFooterGroupCol) {\r\n      result = _getValueUsingField(data, rowNode.field, column.isFieldContainsDots());\r\n    } else if (field && data && !ignoreSsrmAggData) {\r\n      if (!allowUserValuesForCell) {\r\n        return result;\r\n      }\r\n      result = _getValueUsingField(data, field, column.isFieldContainsDots());\r\n    }\r\n    if (this.cellExpressions && typeof result === \"string\" && result.indexOf(\"=\") === 0) {\r\n      const cellValueGetter = result.substring(1);\r\n      result = this.executeValueGetter(cellValueGetter, data, column, rowNode);\r\n    }\r\n    return result;\r\n  }\r\n  parseValue(column, rowNode, newValue, oldValue) {\r\n    const colDef = column.getColDef();\r\n    const valueParser = colDef.valueParser;\r\n    if (_exists(valueParser)) {\r\n      const params = _addGridCommonParams(this.gos, {\r\n        node: rowNode,\r\n        data: rowNode?.data,\r\n        oldValue,\r\n        newValue,\r\n        colDef,\r\n        column\r\n      });\r\n      if (typeof valueParser === \"function\") {\r\n        return valueParser(params);\r\n      }\r\n      return this.expressionSvc?.evaluate(valueParser, params);\r\n    }\r\n    return newValue;\r\n  }\r\n  getDeleteValue(column, rowNode) {\r\n    if (_exists(column.getColDef().valueParser)) {\r\n      return this.parseValue(column, rowNode, \"\", this.getValueForDisplay(column, rowNode).value) ?? null;\r\n    }\r\n    return null;\r\n  }\r\n  formatValue(column, node, value, suppliedFormatter, useFormatterFromColumn = true) {\r\n    const { expressionSvc } = this.beans;\r\n    let result = null;\r\n    let formatter;\r\n    const colDef = column.getColDef();\r\n    if (suppliedFormatter) {\r\n      formatter = suppliedFormatter;\r\n    } else if (useFormatterFromColumn) {\r\n      formatter = colDef.valueFormatter;\r\n    }\r\n    if (formatter) {\r\n      let data = node ? node.data : null;\r\n      if (node) {\r\n        const position = { rowNode: node };\r\n        if (this.hasEdit) {\r\n          const editSvc = this.editSvc;\r\n          if (editSvc.isEditing(position, EDITING_CHECK_SIBLINGS)) {\r\n            data = editSvc.getRowDataValue(node, EDITING_CHECK_SIBLINGS);\r\n          }\r\n        }\r\n      }\r\n      const params = _addGridCommonParams(this.gos, {\r\n        value,\r\n        node,\r\n        data,\r\n        colDef,\r\n        column\r\n      });\r\n      if (typeof formatter === \"function\") {\r\n        result = formatter(params);\r\n      } else {\r\n        result = expressionSvc ? expressionSvc.evaluate(formatter, params) : null;\r\n      }\r\n    } else if (colDef.refData) {\r\n      return colDef.refData[value] || \"\";\r\n    }\r\n    if (result == null && Array.isArray(value)) {\r\n      result = value.join(\", \");\r\n    }\r\n    return result;\r\n  }\r\n  /**\r\n   * Sets the value of a GridCell\r\n   * @param rowNode The `RowNode` to be updated\r\n   * @param colKey The `Column` to be updated\r\n   * @param newValue The new value to be set\r\n   * @param eventSource The event source\r\n   * @returns `True` if the value has been updated, otherwise`False`.\r\n   */\r\n  setValue(rowNode, colKey, newValue, eventSource) {\r\n    const column = this.colModel.getColDefCol(colKey);\r\n    if (!rowNode || !column) {\r\n      return false;\r\n    }\r\n    if (_missing(rowNode.data)) {\r\n      rowNode.data = {};\r\n    }\r\n    const { field, valueSetter } = column.getColDef();\r\n    if (_missing(field) && _missing(valueSetter)) {\r\n      _warn(17);\r\n      return false;\r\n    }\r\n    if (this.dataTypeSvc && !this.dataTypeSvc.checkType(column, newValue)) {\r\n      _warn(135);\r\n      return false;\r\n    }\r\n    const params = _addGridCommonParams(this.gos, {\r\n      node: rowNode,\r\n      data: rowNode.data,\r\n      oldValue: this.getValue(column, rowNode, void 0, eventSource),\r\n      newValue,\r\n      colDef: column.getColDef(),\r\n      column\r\n    });\r\n    params.newValue = newValue;\r\n    let valueWasDifferent;\r\n    if (_exists(valueSetter)) {\r\n      if (typeof valueSetter === \"function\") {\r\n        valueWasDifferent = valueSetter(params);\r\n      } else {\r\n        valueWasDifferent = this.expressionSvc?.evaluate(valueSetter, params);\r\n      }\r\n    } else {\r\n      valueWasDifferent = this.setValueUsingField(rowNode.data, field, newValue, column.isFieldContainsDots());\r\n    }\r\n    if (valueWasDifferent === void 0) {\r\n      valueWasDifferent = true;\r\n    }\r\n    if (!valueWasDifferent) {\r\n      return false;\r\n    }\r\n    rowNode.resetQuickFilterAggregateText();\r\n    this.valueCache?.onDataChanged();\r\n    const savedValue = this.getValue(column, rowNode);\r\n    this.dispatchCellValueChangedEvent(rowNode, params, savedValue, eventSource);\r\n    if (rowNode.pinnedSibling) {\r\n      this.dispatchCellValueChangedEvent(rowNode.pinnedSibling, params, savedValue, eventSource);\r\n    }\r\n    return true;\r\n  }\r\n  dispatchCellValueChangedEvent(rowNode, params, value, source) {\r\n    this.eventSvc.dispatchEvent({\r\n      type: \"cellValueChanged\",\r\n      event: null,\r\n      rowIndex: rowNode.rowIndex,\r\n      rowPinned: rowNode.rowPinned,\r\n      column: params.column,\r\n      colDef: params.colDef,\r\n      data: rowNode.data,\r\n      node: rowNode,\r\n      oldValue: params.oldValue,\r\n      newValue: value,\r\n      value,\r\n      source\r\n    });\r\n  }\r\n  callColumnCellValueChangedHandler(event) {\r\n    const onCellValueChanged = event.colDef.onCellValueChanged;\r\n    if (typeof onCellValueChanged === \"function\") {\r\n      this.beans.frameworkOverrides.wrapOutgoing(() => {\r\n        onCellValueChanged({\r\n          node: event.node,\r\n          data: event.data,\r\n          oldValue: event.oldValue,\r\n          newValue: event.newValue,\r\n          colDef: event.colDef,\r\n          column: event.column,\r\n          api: event.api,\r\n          context: event.context\r\n        });\r\n      });\r\n    }\r\n  }\r\n  setValueUsingField(data, field, newValue, isFieldContainsDots) {\r\n    if (!field) {\r\n      return false;\r\n    }\r\n    let valuesAreSame = false;\r\n    if (!isFieldContainsDots) {\r\n      valuesAreSame = data[field] === newValue;\r\n      if (!valuesAreSame) {\r\n        data[field] = newValue;\r\n      }\r\n    } else {\r\n      const fieldPieces = field.split(\".\");\r\n      let currentObject = data;\r\n      while (fieldPieces.length > 0 && currentObject) {\r\n        const fieldPiece = fieldPieces.shift();\r\n        if (fieldPieces.length === 0) {\r\n          valuesAreSame = currentObject[fieldPiece] === newValue;\r\n          if (!valuesAreSame) {\r\n            currentObject[fieldPiece] = newValue;\r\n          }\r\n        } else {\r\n          currentObject = currentObject[fieldPiece];\r\n        }\r\n      }\r\n    }\r\n    return !valuesAreSame;\r\n  }\r\n  executeValueGetterWithValueCache(valueGetter, data, column, rowNode) {\r\n    const colId = column.getColId();\r\n    const valueFromCache = this.valueCache.getValue(rowNode, colId);\r\n    if (valueFromCache !== void 0) {\r\n      return valueFromCache;\r\n    }\r\n    const result = this.executeValueGetterWithoutValueCache(valueGetter, data, column, rowNode);\r\n    this.valueCache.setValue(rowNode, colId, result);\r\n    return result;\r\n  }\r\n  executeValueGetterWithoutValueCache(valueGetter, data, column, rowNode) {\r\n    const params = _addGridCommonParams(this.gos, {\r\n      data,\r\n      node: rowNode,\r\n      column,\r\n      colDef: column.getColDef(),\r\n      getValue: this.getValueCallback.bind(this, rowNode)\r\n    });\r\n    let result;\r\n    if (typeof valueGetter === \"function\") {\r\n      result = valueGetter(params);\r\n    } else {\r\n      result = this.expressionSvc?.evaluate(valueGetter, params);\r\n    }\r\n    return result;\r\n  }\r\n  getValueCallback(node, field) {\r\n    const otherColumn = this.colModel.getColDefCol(field);\r\n    if (otherColumn) {\r\n      return this.getValue(otherColumn, node);\r\n    }\r\n    return null;\r\n  }\r\n  // used by row grouping and pivot, to get key for a row. col can be a pivot col or a row grouping col\r\n  getKeyForNode(col, rowNode) {\r\n    const value = this.getValue(col, rowNode);\r\n    const keyCreator = col.getColDef().keyCreator;\r\n    let result = value;\r\n    if (keyCreator) {\r\n      const keyParams = _addGridCommonParams(this.gos, {\r\n        value,\r\n        colDef: col.getColDef(),\r\n        column: col,\r\n        node: rowNode,\r\n        data: rowNode.data\r\n      });\r\n      result = keyCreator(keyParams);\r\n    }\r\n    if (typeof result === \"string\" || result == null) {\r\n      return result;\r\n    }\r\n    result = String(result);\r\n    if (result === \"[object Object]\") {\r\n      _warn(121);\r\n    }\r\n    return result;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/gridCoreModule.ts\r\nvar CommunityCoreModule = {\r\n  moduleName: \"CommunityCore\",\r\n  version: VERSION,\r\n  beans: [\r\n    GridDestroyService,\r\n    ApiFunctionService,\r\n    Registry,\r\n    UserComponentFactory,\r\n    RowContainerHeightService,\r\n    VisibleColsService,\r\n    EventService,\r\n    GridOptionsService,\r\n    ColumnModel,\r\n    PageBoundsService,\r\n    PageBoundsListener,\r\n    RowRenderer,\r\n    ValueService,\r\n    FocusService,\r\n    Environment,\r\n    ScrollVisibleService,\r\n    CtrlsService,\r\n    SyncService,\r\n    ColumnNameService,\r\n    ColumnViewportService\r\n  ],\r\n  icons: {\r\n    // icon on select dropdowns (select cell editor, charts tool panels)\r\n    selectOpen: \"small-down\",\r\n    /** @deprecated v33 */\r\n    smallDown: \"small-down\",\r\n    /** @deprecated v33 */\r\n    colorPicker: \"color-picker\",\r\n    /** @deprecated v33 */\r\n    smallUp: \"small-up\",\r\n    /** @deprecated v33 */\r\n    checkboxChecked: \"small-up\",\r\n    /** @deprecated v33 */\r\n    checkboxIndeterminate: \"checkbox-indeterminate\",\r\n    /** @deprecated v33 */\r\n    checkboxUnchecked: \"checkbox-unchecked\",\r\n    /** @deprecated v33 */\r\n    radioButtonOn: \"radio-button-on\",\r\n    /** @deprecated v33 */\r\n    radioButtonOff: \"radio-button-off\",\r\n    /** @deprecated v33 */\r\n    smallLeft: \"small-left\",\r\n    /** @deprecated v33 */\r\n    smallRight: \"small-right\"\r\n  },\r\n  apiFunctions: {\r\n    getGridId,\r\n    destroy,\r\n    isDestroyed,\r\n    getGridOption,\r\n    setGridOption,\r\n    updateGridOptions,\r\n    isModuleRegistered\r\n  },\r\n  dependsOn: [\r\n    DataTypeModule,\r\n    ColumnMoveModule,\r\n    ColumnResizeModule,\r\n    SortModule,\r\n    ColumnHeaderCompModule,\r\n    ColumnGroupModule,\r\n    ColumnGroupHeaderCompModule,\r\n    OverlayModule,\r\n    ChangeDetectionModule,\r\n    AnimationFrameModule,\r\n    KeyboardNavigationModule,\r\n    PinnedColumnModule,\r\n    AriaModule,\r\n    TouchModule,\r\n    CellRendererFunctionModule,\r\n    ColumnFlexModule,\r\n    ExpressionModule,\r\n    SkeletonCellRendererModule\r\n  ]\r\n};\r\n\r\n// packages/ag-grid-community/src/utils/fuzzyMatch.ts\r\nfunction _fuzzySuggestions(params) {\r\n  const { inputValue, allSuggestions, hideIrrelevant, filterByPercentageOfBestMatch } = params;\r\n  let thisSuggestions = (allSuggestions ?? []).map(\r\n    (text, idx) => ({\r\n      value: text,\r\n      relevance: _getLevenshteinSimilarityDistance(inputValue, text),\r\n      idx\r\n    })\r\n  );\r\n  thisSuggestions.sort((a, b) => a.relevance - b.relevance);\r\n  if (hideIrrelevant) {\r\n    thisSuggestions = thisSuggestions.filter(\r\n      (suggestion) => suggestion.relevance < Math.max(suggestion.value.length, inputValue.length)\r\n    );\r\n  }\r\n  if (thisSuggestions.length > 0 && filterByPercentageOfBestMatch && filterByPercentageOfBestMatch > 0) {\r\n    const bestMatch = thisSuggestions[0].relevance;\r\n    const limit = bestMatch * filterByPercentageOfBestMatch;\r\n    thisSuggestions = thisSuggestions.filter((suggestion) => limit - suggestion.relevance < 0);\r\n  }\r\n  const values = [];\r\n  const indices = [];\r\n  for (const suggestion of thisSuggestions) {\r\n    values.push(suggestion.value);\r\n    indices.push(suggestion.idx);\r\n  }\r\n  return { values, indices };\r\n}\r\nfunction _getLevenshteinSimilarityDistance(inputText, suggestion) {\r\n  if (inputText.length < suggestion.length) {\r\n    [inputText, suggestion] = [suggestion, inputText];\r\n  }\r\n  let previousRow = [];\r\n  let currentRow = [];\r\n  const sourceLength = inputText.length;\r\n  const targetLength = suggestion.length;\r\n  for (let j = 0; j <= targetLength; j++) {\r\n    previousRow[j] = j;\r\n  }\r\n  let secondaryScore = 0;\r\n  for (let i = 1; i <= sourceLength; i++) {\r\n    currentRow[0] = i;\r\n    for (let j = 1; j <= targetLength; j++) {\r\n      const sourceChar = inputText[i - 1];\r\n      const targetChar = suggestion[j - 1];\r\n      if (sourceChar.toLocaleLowerCase() === targetChar.toLocaleLowerCase()) {\r\n        ++secondaryScore;\r\n        if (sourceChar === targetChar) {\r\n          ++secondaryScore;\r\n        }\r\n        if (i > 1 && j > 1) {\r\n          if (inputText[i - 2].toLocaleLowerCase() === suggestion[j - 2].toLocaleLowerCase()) {\r\n            ++secondaryScore;\r\n            if (inputText[i - 2] === suggestion[j - 2]) {\r\n              ++secondaryScore;\r\n            }\r\n          }\r\n        }\r\n        if (i < sourceLength / 2 - 10)\r\n          ++secondaryScore;\r\n        currentRow[j] = previousRow[j - 1];\r\n      } else {\r\n        const insertCost = currentRow[j - 1];\r\n        const deleteCost = previousRow[j];\r\n        const replaceCost = previousRow[j - 1];\r\n        currentRow[j] = 1 + Math.min(insertCost, deleteCost, replaceCost);\r\n      }\r\n    }\r\n    [previousRow, currentRow] = [currentRow, previousRow];\r\n  }\r\n  return previousRow[targetLength] / (secondaryScore + 1);\r\n}\r\n\r\n// packages/ag-grid-community/src/validation/enterpriseModuleNames.ts\r\nvar ENTERPRISE_MODULE_NAMES = {\r\n  AdvancedFilter: 1,\r\n  AllEnterprise: 1,\r\n  BatchEdit: 1,\r\n  CellSelection: 1,\r\n  Clipboard: 1,\r\n  ColumnMenu: 1,\r\n  ColumnsToolPanel: 1,\r\n  ContextMenu: 1,\r\n  ExcelExport: 1,\r\n  FiltersToolPanel: 1,\r\n  Find: 1,\r\n  GridCharts: 1,\r\n  IntegratedCharts: 1,\r\n  GroupFilter: 1,\r\n  MasterDetail: 1,\r\n  Menu: 1,\r\n  MultiFilter: 1,\r\n  NewFiltersToolPanel: 1,\r\n  Pivot: 1,\r\n  RangeSelection: 1,\r\n  RichSelect: 1,\r\n  RowNumbers: 1,\r\n  RowGrouping: 1,\r\n  RowGroupingPanel: 1,\r\n  ServerSideRowModelApi: 1,\r\n  ServerSideRowModel: 1,\r\n  SetFilter: 1,\r\n  SideBar: 1,\r\n  Sparklines: 1,\r\n  StatusBar: 1,\r\n  TreeData: 1,\r\n  ViewportRowModel: 1\r\n};\r\n\r\n// packages/ag-grid-community/src/validation/resolvableModuleNames.ts\r\nvar ALL_COLUMN_FILTERS = [\r\n  \"TextFilter\",\r\n  \"NumberFilter\",\r\n  \"DateFilter\",\r\n  \"SetFilter\",\r\n  \"MultiFilter\",\r\n  \"GroupFilter\",\r\n  \"CustomFilter\"\r\n];\r\nvar RESOLVABLE_MODULE_NAMES = {\r\n  EditCore: [\r\n    \"TextEditor\",\r\n    \"NumberEditor\",\r\n    \"DateEditor\",\r\n    \"CheckboxEditor\",\r\n    \"LargeTextEditor\",\r\n    \"SelectEditor\",\r\n    \"RichSelect\",\r\n    \"CustomEditor\"\r\n  ],\r\n  CheckboxCellRenderer: [\"AllCommunity\"],\r\n  ClientSideRowModelHierarchy: [\"RowGrouping\", \"Pivot\", \"TreeData\"],\r\n  ColumnFilter: ALL_COLUMN_FILTERS,\r\n  ColumnGroupHeaderComp: [\"AllCommunity\"],\r\n  ColumnGroup: [\"AllCommunity\"],\r\n  ColumnHeaderComp: [\"AllCommunity\"],\r\n  ColumnMove: [\"AllCommunity\"],\r\n  ColumnResize: [\"AllCommunity\"],\r\n  CommunityCore: [\"AllCommunity\"],\r\n  CsrmSsrmSharedApi: [\"ClientSideRowModelApi\", \"ServerSideRowModelApi\"],\r\n  EnterpriseCore: [\"AllEnterprise\"],\r\n  FilterCore: [...ALL_COLUMN_FILTERS, \"QuickFilter\", \"ExternalFilter\", \"AdvancedFilter\"],\r\n  GroupCellRenderer: [\"RowGrouping\", \"Pivot\", \"TreeData\", \"MasterDetail\", \"ServerSideRowModel\"],\r\n  KeyboardNavigation: [\"AllCommunity\"],\r\n  LoadingCellRenderer: [\"ServerSideRowModel\"],\r\n  MenuCore: [\"ColumnMenu\", \"ContextMenu\"],\r\n  MenuItem: [\"ColumnMenu\", \"ContextMenu\", \"MultiFilter\", \"IntegratedCharts\", \"ColumnsToolPanel\"],\r\n  Overlay: [\"AllCommunity\"],\r\n  PinnedColumn: [\"AllCommunity\"],\r\n  SharedAggregation: [\"RowGrouping\", \"Pivot\", \"TreeData\", \"ServerSideRowModel\"],\r\n  SharedDragAndDrop: [\"AllCommunity\"],\r\n  SharedMasterDetail: [\"MasterDetail\", \"ServerSideRowModel\"],\r\n  SharedMenu: [...ALL_COLUMN_FILTERS, \"ColumnMenu\", \"ContextMenu\"],\r\n  SharedPivot: [\"Pivot\", \"ServerSideRowModel\"],\r\n  SharedRowGrouping: [\"RowGrouping\", \"ServerSideRowModel\"],\r\n  SharedRowSelection: [\"RowSelection\", \"ServerSideRowModel\"],\r\n  SkeletonCellRenderer: [\"ServerSideRowModel\"],\r\n  Sort: [\"AllCommunity\"],\r\n  SsrmInfiniteSharedApi: [\"InfiniteRowModel\", \"ServerSideRowModelApi\"],\r\n  SharedTreeData: [\"TreeData\", \"ServerSideRowModel\"]\r\n};\r\nvar MODULES_FOR_ROW_MODELS = {\r\n  InfiniteRowModel: \"infinite\",\r\n  ClientSideRowModelApi: \"clientSide\",\r\n  ClientSideRowModel: \"clientSide\",\r\n  ServerSideRowModelApi: \"serverSide\",\r\n  ServerSideRowModel: \"serverSide\",\r\n  ViewportRowModel: \"viewport\"\r\n};\r\nfunction resolveModuleNames(moduleName, rowModelType) {\r\n  const resolvedModuleNames = [];\r\n  (Array.isArray(moduleName) ? moduleName : [moduleName]).forEach((modName) => {\r\n    const resolved = RESOLVABLE_MODULE_NAMES[modName];\r\n    if (resolved) {\r\n      resolved.forEach((resolvedModName) => {\r\n        const rowModelForModule = MODULES_FOR_ROW_MODELS[resolvedModName];\r\n        if (!rowModelForModule || rowModelForModule === rowModelType) {\r\n          resolvedModuleNames.push(resolvedModName);\r\n        }\r\n      });\r\n    } else {\r\n      resolvedModuleNames.push(modName);\r\n    }\r\n  });\r\n  return resolvedModuleNames;\r\n}\r\n\r\n// packages/ag-grid-community/src/validation/errorMessages/errorText.ts\r\nvar NoModulesRegisteredError = () => `No AG Grid modules are registered! It is recommended to start with all Community features via the AllCommunityModule:\r\n                    \r\n    import { ModuleRegistry, AllCommunityModule } from 'ag-grid-community';\r\n    \r\n    ModuleRegistry.registerModules([ AllCommunityModule ]);\r\n    `;\r\nvar moduleImportMsg = (moduleNames) => {\r\n  const imports = moduleNames.map(\r\n    (moduleName) => `import { ${convertToUserModuleName(moduleName)} } from '${ENTERPRISE_MODULE_NAMES[moduleName] ? \"ag-grid-enterprise\" : \"ag-grid-community\"}';`\r\n  );\r\n  const includeCharts = moduleNames.some((m) => m === \"IntegratedCharts\" || m === \"Sparklines\");\r\n  if (includeCharts) {\r\n    const chartImport = `import { AgChartsEnterpriseModule } from 'ag-charts-enterprise';`;\r\n    imports.push(chartImport);\r\n  }\r\n  return `import { ModuleRegistry } from 'ag-grid-community'; \r\n${imports.join(\" \\n\")} \r\n\r\nModuleRegistry.registerModules([ ${moduleNames.map((m) => convertToUserModuleName(m, true)).join(\", \")} ]); \r\n\r\nFor more info see: ${baseDocLink}/modules/`;\r\n};\r\nfunction convertToUserModuleName(moduleName, inModuleRegistration = false) {\r\n  if (inModuleRegistration && (moduleName === \"IntegratedCharts\" || moduleName === \"Sparklines\")) {\r\n    return `${moduleName}Module.with(AgChartsEnterpriseModule)`;\r\n  }\r\n  return `${moduleName}Module`;\r\n}\r\nfunction umdMissingModule(reasonOrId, moduleNames) {\r\n  const chartModules = moduleNames.filter((m) => m === \"IntegratedCharts\" || m === \"Sparklines\");\r\n  let message = \"\";\r\n  const agChartsDynamic = globalThis?.agCharts;\r\n  if (!agChartsDynamic && chartModules.length > 0) {\r\n    message = `Unable to use ${reasonOrId} as either the ag-charts-community or ag-charts-enterprise script needs to be included alongside ag-grid-enterprise.\r\n`;\r\n  } else if (moduleNames.some((m) => ENTERPRISE_MODULE_NAMES[m])) {\r\n    message = message + `Unable to use ${reasonOrId} as that requires the ag-grid-enterprise script to be included.\r\n`;\r\n  }\r\n  return message;\r\n}\r\nfunction missingRowModelTypeError({\r\n  moduleName,\r\n  rowModelType\r\n}) {\r\n  return `To use the ${moduleName}Module you must set the gridOption \"rowModelType='${rowModelType}'\"`;\r\n}\r\nvar missingModule = ({\r\n  reasonOrId,\r\n  moduleName,\r\n  gridScoped,\r\n  gridId,\r\n  rowModelType,\r\n  additionalText,\r\n  isUmd: isUmd2\r\n}) => {\r\n  const resolvedModuleNames = resolveModuleNames(moduleName, rowModelType);\r\n  const reason = typeof reasonOrId === \"string\" ? reasonOrId : MISSING_MODULE_REASONS[reasonOrId];\r\n  if (isUmd2) {\r\n    return umdMissingModule(reason, resolvedModuleNames);\r\n  }\r\n  const chartModules = resolvedModuleNames.filter((m) => m === \"IntegratedCharts\" || m === \"Sparklines\");\r\n  const chartImportRequired = chartModules.length > 0 ? `${chartModules.map((m) => convertToUserModuleName(m)).join()} must be initialised with an AG Charts module. One of 'AgChartsCommunityModule' / 'AgChartsEnterpriseModule'.` : \"\";\r\n  const explanation = `Unable to use ${reason} as ${resolvedModuleNames.length > 1 ? \"one of \" + resolvedModuleNames.map((m) => convertToUserModuleName(m)).join(\", \") : convertToUserModuleName(resolvedModuleNames[0])} is not registered${gridScoped ? \" for gridId: \" + gridId : \"\"}. ${chartImportRequired} Check if you have registered the module:\r\n`;\r\n  return `${explanation}\r\n${moduleImportMsg(resolvedModuleNames)}` + (additionalText ? ` \r\n\r\n${additionalText}` : \"\");\r\n};\r\nvar missingChartsWithModule = (gridModule) => {\r\n  return `${gridModule} must be initialised with an AG Charts module. One of 'AgChartsCommunityModule' / 'AgChartsEnterpriseModule'.\r\n\r\nimport { AgChartsEnterpriseModule } from 'ag-charts-enterprise';\r\nimport { ModuleRegistry } from 'ag-grid-community';\r\nimport { ${gridModule} } from 'ag-grid-enterprise';\r\n    \r\nModuleRegistry.registerModules([${gridModule}.with(AgChartsEnterpriseModule)]);\r\n    `;\r\n};\r\nvar clipboardApiError = (method) => `AG Grid: Unable to use the Clipboard API (navigator.clipboard.${method}()). The reason why it could not be used has been logged in the previous line. For this reason the grid has defaulted to using a workaround which doesn't perform as well. Either fix why Clipboard API is blocked, OR stop this message from appearing by setting grid property suppressClipboardApi=true (which will default the grid to using the workaround rather than the API.`;\r\nvar AG_GRID_ERRORS = {\r\n  1: () => \"`rowData` must be an array\",\r\n  2: ({ nodeId }) => `Duplicate node id '${nodeId}' detected from getRowId callback, this could cause issues in your grid.`,\r\n  3: () => \"Calling gridApi.resetRowHeights() makes no sense when using Auto Row Height.\",\r\n  4: ({ id }) => `Could not find row id=${id}, data item was not found for this id`,\r\n  5: ({ data }) => [\r\n    `Could not find data item as object was not found.`,\r\n    data,\r\n    \" Consider using getRowId to help the Grid find matching row data\"\r\n  ],\r\n  6: () => `'groupHideOpenParents' only works when specifying specific columns for 'colDef.showRowGroup'`,\r\n  7: () => \"Pivoting is not supported with aligned grids as it may produce different columns in each grid.\",\r\n  8: ({ key }) => `Unknown key for navigation ${key}`,\r\n  9: ({ variable }) => `No value for ${variable?.cssName}. This usually means that the grid has been initialised before styles have been loaded. The default value of ${variable?.defaultValue} will be used and updated when styles load.`,\r\n  10: ({ eventType }) => `As of v33, the '${eventType}' event is deprecated. Use the global 'modelUpdated' event to determine when row children have changed.`,\r\n  11: () => \"No gridOptions provided to createGrid\",\r\n  12: ({ colKey }) => [\"column \", colKey, \" not found\"],\r\n  13: () => \"Could not find rowIndex, this means tasks are being executed on a rowNode that has been removed from the grid.\",\r\n  14: ({ groupPrefix }) => `Row IDs cannot start with ${groupPrefix}, this is a reserved prefix for AG Grid's row grouping feature.`,\r\n  15: ({ expression }) => [\"value should be either a string or a function\", expression],\r\n  16: ({ expression, params, e }) => [\r\n    \"Processing of the expression failed\",\r\n    \"Expression = \",\r\n    expression,\r\n    \"Params = \",\r\n    params,\r\n    \"Exception = \",\r\n    e\r\n  ],\r\n  17: () => \"you need either field or valueSetter set on colDef for editing to work\",\r\n  18: () => `alignedGrids contains an undefined option.`,\r\n  19: () => `alignedGrids - No api found on the linked grid.`,\r\n  20: () => `You may want to configure via a callback to avoid setup race conditions:\r\n                     \"alignedGrids: () => [linkedGrid]\"`,\r\n  21: () => \"pivoting is not supported with aligned grids. You can only use one of these features at a time in a grid.\",\r\n  22: ({ key }) => `${key} is an initial property and cannot be updated.`,\r\n  23: () => \"The return of `getRowHeight` cannot be zero. If the intention is to hide rows, use a filter instead.\",\r\n  24: () => \"row height must be a number if not using standard row model\",\r\n  25: ({ id }) => [`The getRowId callback must return a string. The ID `, id, ` is being cast to a string.`],\r\n  26: ({ fnName, preDestroyLink }) => {\r\n    return `Grid API function ${fnName}() cannot be called as the grid has been destroyed.\r\n Either clear local references to the grid api, when it is destroyed, or check gridApi.isDestroyed() to avoid calling methods against a destroyed grid.\r\n To run logic when the grid is about to be destroyed use the gridPreDestroy event. See: ${preDestroyLink}`;\r\n  },\r\n  27: ({ fnName, module }) => `API function '${fnName}' not registered to module '${module}'`,\r\n  28: () => \"setRowCount cannot be used while using row grouping.\",\r\n  29: () => \"tried to call sizeColumnsToFit() but the grid is coming back with zero width, maybe the grid is not visible yet on the screen?\",\r\n  30: ({ toIndex }) => [\r\n    \"tried to insert columns in invalid location, toIndex = \",\r\n    toIndex,\r\n    \"remember that you should not count the moving columns when calculating the new index\"\r\n  ],\r\n  31: () => \"infinite loop in resizeColumnSets\",\r\n  32: () => \"applyColumnState() - the state attribute should be an array, however an array was not found. Please provide an array of items (one for each col you want to change) for state.\",\r\n  33: () => \"stateItem.aggFunc must be a string. if using your own aggregation functions, register the functions first before using them in get/set state. This is because it is intended for the column state to be stored and retrieved as simple JSON.\",\r\n  34: ({ key }) => `the column type '${key}' is a default column type and cannot be overridden.`,\r\n  35: () => `Column type definitions 'columnTypes' with a 'type' attribute are not supported because a column type cannot refer to another column type. Only column definitions 'columnDefs' can use the 'type' attribute to refer to a column type.`,\r\n  36: ({ t }) => \"colDef.type '\" + t + \"' does not correspond to defined gridOptions.columnTypes\",\r\n  37: () => `Changing the column pinning status is not allowed with domLayout='print'`,\r\n  38: ({ iconName }) => `provided icon '${iconName}' needs to be a string or a function`,\r\n  39: () => \"Applying column order broke a group where columns should be married together. Applying new order has been discarded.\",\r\n  40: ({ e, method }) => `${e}\r\n${clipboardApiError(method)}`,\r\n  41: () => \"Browser did not allow document.execCommand('copy'). Ensure 'api.copySelectedRowsToClipboard() is invoked via a user event, i.e. button click, otherwise the browser will prevent it for security reasons.\",\r\n  42: () => \"Browser does not support document.execCommand('copy') for clipboard operations\",\r\n  43: ({ iconName }) => `As of v33, icon '${iconName}' is deprecated. Use the icon CSS name instead.`,\r\n  44: () => 'Data type definition hierarchies (via the \"extendsDataType\" property) cannot contain circular references.',\r\n  45: ({ parentCellDataType }) => `The data type definition ${parentCellDataType} does not exist.`,\r\n  46: () => 'The \"baseDataType\" property of a data type definition must match that of its parent.',\r\n  47: ({ cellDataType }) => `Missing data type definition - \"${cellDataType}\"`,\r\n  48: ({ property }) => `Cell data type is \"object\" but no Value ${property} has been provided. Please either provide an object data type definition with a Value ${property}, or set \"colDef.value${property}\"`,\r\n  49: ({ methodName }) => `Framework component is missing the method ${methodName}()`,\r\n  50: ({ compName }) => `Could not find component ${compName}, did you forget to configure this component?`,\r\n  51: () => `Export cancelled. Export is not allowed as per your configuration.`,\r\n  52: () => \"There is no `window` associated with the current `document`\",\r\n  53: () => `unknown value type during csv conversion`,\r\n  54: () => \"Could not find document body, it is needed for drag and drop and context menu.\",\r\n  55: () => \"addRowDropZone - A container target needs to be provided\",\r\n  56: () => \"addRowDropZone - target already exists in the list of DropZones. Use `removeRowDropZone` before adding it again.\",\r\n  57: () => \"unable to show popup filter, filter instantiation failed\",\r\n  58: () => \"no values found for select cellEditor\",\r\n  59: () => \"cannot select pinned rows\",\r\n  60: () => \"cannot select node until it has finished loading\",\r\n  61: () => \"since version v32.2.0, rowNode.isFullWidthCell() has been deprecated. Instead check `rowNode.detail` followed by the user provided `isFullWidthRow` grid option.\",\r\n  62: ({ colId }) => `setFilterModel() - no column found for colId: ${colId}`,\r\n  63: ({ colId }) => `setFilterModel() - unable to fully apply model, filtering disabled for colId: ${colId}`,\r\n  64: ({ colId }) => `setFilterModel() - unable to fully apply model, unable to create filter for colId: ${colId}`,\r\n  65: () => \"filter missing setModel method, which is needed for setFilterModel\",\r\n  66: () => \"filter API missing getModel method, which is needed for getFilterModel\",\r\n  67: () => \"Filter is missing isFilterActive() method\",\r\n  68: () => \"Column Filter API methods have been disabled as Advanced Filters are enabled.\",\r\n  69: ({ guiFromFilter }) => `getGui method from filter returned ${guiFromFilter}; it should be a DOM element.`,\r\n  70: ({ newFilter }) => `Grid option quickFilterText only supports string inputs, received: ${typeof newFilter}`,\r\n  71: () => \"debounceMs is ignored when apply button is present\",\r\n  72: ({ keys }) => [`ignoring FilterOptionDef as it doesn't contain one of `, keys],\r\n  73: () => `invalid FilterOptionDef supplied as it doesn't contain a 'displayKey'`,\r\n  74: () => \"no filter options for filter\",\r\n  75: () => \"Unknown button type specified\",\r\n  76: ({ filterModelType }) => [\r\n    'Unexpected type of filter \"',\r\n    filterModelType,\r\n    '\", it looks like the filter was configured with incorrect Filter Options'\r\n  ],\r\n  77: () => `Filter model is missing 'conditions'`,\r\n  78: () => 'Filter Model contains more conditions than \"filterParams.maxNumConditions\". Additional conditions have been ignored.',\r\n  79: () => '\"filterParams.maxNumConditions\" must be greater than or equal to zero.',\r\n  80: () => '\"filterParams.numAlwaysVisibleConditions\" must be greater than or equal to zero.',\r\n  81: () => '\"filterParams.numAlwaysVisibleConditions\" cannot be greater than \"filterParams.maxNumConditions\".',\r\n  82: ({ param }) => `DateFilter ${param} is not a number`,\r\n  83: () => `DateFilter minValidYear should be <= maxValidYear`,\r\n  84: () => `DateFilter minValidDate should be <= maxValidDate`,\r\n  85: () => \"DateFilter should not have both minValidDate and minValidYear parameters set at the same time! minValidYear will be ignored.\",\r\n  86: () => \"DateFilter should not have both maxValidDate and maxValidYear parameters set at the same time! maxValidYear will be ignored.\",\r\n  87: () => \"DateFilter parameter minValidDate should always be lower than or equal to parameter maxValidDate.\",\r\n  88: ({ index }) => `Invalid row index for ensureIndexVisible: ${index}`,\r\n  89: () => `A template was provided for Header Group Comp - templates are only supported for Header Comps (not groups)`,\r\n  90: () => `datasource is missing getRows method`,\r\n  91: () => \"Filter is missing method doesFilterPass\",\r\n  92: () => `AnimationFrameService called but animation frames are off`,\r\n  93: () => \"cannot add multiple ranges when `cellSelection.suppressMultiRanges = true`\",\r\n  94: ({\r\n    paginationPageSizeOption,\r\n    pageSizeSet,\r\n    pageSizesSet,\r\n    pageSizeOptions\r\n  }) => `'paginationPageSize=${paginationPageSizeOption}'${pageSizeSet ? \"\" : \" (default value)\"}, but ${paginationPageSizeOption} is not included in${pageSizesSet ? \"\" : \" the default\"} paginationPageSizeSelector=[${pageSizeOptions?.join(\", \")}].`,\r\n  95: ({\r\n    paginationPageSizeOption,\r\n    paginationPageSizeSelector: paginationPageSizeSelector2\r\n  }) => `Either set '${paginationPageSizeSelector2}' to an array that includes ${paginationPageSizeOption} or to 'false' to disable the page size selector.`,\r\n  96: ({ id, data }) => [\r\n    \"Duplicate ID\",\r\n    id,\r\n    \"found for pinned row with data\",\r\n    data,\r\n    \"When `getRowId` is defined, it must return unique IDs for all pinned rows. Use the `rowPinned` parameter.\"\r\n  ],\r\n  97: ({ colId }) => `cellEditor for column ${colId} is missing getGui() method`,\r\n  98: () => \"popup cellEditor does not work with fullRowEdit - you cannot use them both - either turn off fullRowEdit, or stop using popup editors.\",\r\n  99: () => \"Since v32, `api.hideOverlay()` does not hide the loading overlay when `loading=true`. Set `loading=false` instead.\",\r\n  // 100: ({ rowModelType }: { rowModelType: RowModelType }) =>\r\n  //     `selectAll only available when rowModelType='clientSide', ie not ${rowModelType}` as const,\r\n  101: ({\r\n    propertyName,\r\n    componentName,\r\n    agGridDefaults,\r\n    jsComps\r\n  }) => {\r\n    const textOutput = [];\r\n    const validComponents = [\r\n      // Don't include the old names / internals in potential suggestions\r\n      ...Object.keys(agGridDefaults ?? []).filter(\r\n        (k) => ![\"agCellEditor\", \"agGroupRowRenderer\", \"agSortIndicator\"].includes(k)\r\n      ),\r\n      ...Object.keys(jsComps ?? []).filter((k) => !!jsComps[k])\r\n    ];\r\n    const suggestions = _fuzzySuggestions({\r\n      inputValue: componentName,\r\n      allSuggestions: validComponents,\r\n      hideIrrelevant: true,\r\n      filterByPercentageOfBestMatch: 0.8\r\n    }).values;\r\n    textOutput.push(\r\n      `Could not find '${componentName}' component. It was configured as \"${propertyName}: '${componentName}'\" but it wasn't found in the list of registered components.\r\n`\r\n    );\r\n    if (suggestions.length > 0) {\r\n      textOutput.push(`         Did you mean: [${suggestions.slice(0, 3)}]?\r\n`);\r\n    }\r\n    textOutput.push(`If using a custom component check it has been registered correctly.`);\r\n    return textOutput;\r\n  },\r\n  102: () => \"selectAll: 'filtered' only works when gridOptions.rowModelType='clientSide'\",\r\n  103: () => \"Invalid selection state. When using client-side row model, the state must conform to `string[]`.\",\r\n  104: ({ value, param }) => `Numeric value ${value} passed to ${param} param will be interpreted as ${value} seconds. If this is intentional use \"${value}s\" to silence this warning.`,\r\n  105: ({ e }) => [`chart rendering failed`, e],\r\n  106: () => `Theming API and Legacy Themes are both used in the same page. A Theming API theme has been provided to the 'theme' grid option, but the file (ag-grid.css) is also included and will cause styling issues. Remove ag-grid.css from the page. See the migration guide: ${baseDocLink}/theming-migration/`,\r\n  107: ({ key, value }) => `Invalid value for theme param ${key} - ${value}`,\r\n  108: ({ e }) => [\"chart update failed\", e],\r\n  109: ({ inputValue, allSuggestions }) => {\r\n    const suggestions = _fuzzySuggestions({\r\n      inputValue,\r\n      allSuggestions,\r\n      hideIrrelevant: true,\r\n      filterByPercentageOfBestMatch: 0.8\r\n    }).values;\r\n    return [\r\n      `Could not find '${inputValue}' aggregate function. It was configured as \"aggFunc: '${inputValue}'\" but it wasn't found in the list of registered aggregations.`,\r\n      suggestions.length > 0 ? `         Did you mean: [${suggestions.slice(0, 3)}]?` : \"\",\r\n      `If using a custom aggregation function check it has been registered correctly.`\r\n    ].join(\"\\n\");\r\n  },\r\n  110: () => \"groupHideOpenParents only works when specifying specific columns for colDef.showRowGroup\",\r\n  111: () => \"Invalid selection state. When `groupSelects` is enabled, the state must conform to `IServerSideGroupSelectionState`.\",\r\n  113: () => \"Set Filter cannot initialise because you are using a row model that does not contain all rows in the browser. Either use a different filter type, or configure Set Filter such that you provide it with values\",\r\n  114: ({ component }) => `Could not find component with name of ${component}. Is it in Vue.components?`,\r\n  // 115: () => 'The provided selection state should be an object.' as const,\r\n  116: () => \"Invalid selection state. The state must conform to `IServerSideSelectionState`.\",\r\n  117: () => \"selectAll must be of boolean type.\",\r\n  118: () => \"Infinite scrolling must be enabled in order to set the row count.\",\r\n  119: () => \"Unable to instantiate filter\",\r\n  120: () => \"MultiFloatingFilterComp expects MultiFilter as its parent\",\r\n  121: () => \"a column you are grouping or pivoting by has objects as values. If you want to group by complex objects then either a) use a colDef.keyCreator (see AG Grid docs) or b) to toString() on the object to return a key\",\r\n  122: () => \"could not find the document, document is empty\",\r\n  123: () => \"Advanced Filter is only supported with the Client-Side Row Model or Server-Side Row Model.\",\r\n  124: () => \"No active charts to update.\",\r\n  125: ({ chartId }) => `Unable to update chart. No active chart found with ID: ${chartId}.`,\r\n  126: () => \"unable to restore chart as no chart model is provided\",\r\n  127: ({ allRange }) => `unable to create chart as ${allRange ? \"there are no columns in the grid\" : \"no range is selected\"}.`,\r\n  128: ({ feature }) => `${feature} is only available if using 'multiRow' selection mode.`,\r\n  129: ({ feature, rowModel }) => `${feature} is only available if using 'clientSide' or 'serverSide' rowModelType, you are using ${rowModel}.`,\r\n  130: () => 'cannot multi select unless selection mode is \"multiRow\"',\r\n  // 131: () => 'cannot range select while selecting multiple rows' as const,\r\n  132: () => \"Row selection features are not available unless `rowSelection` is enabled.\",\r\n  133: ({ iconName }) => `icon '${iconName}' function should return back a string or a dom object`,\r\n  134: ({ iconName }) => `Did not find icon '${iconName}'`,\r\n  135: () => `Data type of the new value does not match the cell data type of the column`,\r\n  136: () => `Unable to update chart as the 'type' is missing. It must be either 'rangeChartUpdate', 'pivotChartUpdate', or 'crossFilterChartUpdate'.`,\r\n  137: ({ type, currentChartType }) => `Unable to update chart as a '${type}' update type is not permitted on a ${currentChartType}.`,\r\n  138: ({ chartType }) => `invalid chart type supplied: ${chartType}`,\r\n  139: ({ customThemeName }) => `a custom chart theme with the name ${customThemeName} has been supplied but not added to the 'chartThemes' list`,\r\n  140: ({ name }) => `no stock theme exists with the name '${name}' and no custom chart theme with that name was supplied to 'customChartThemes'`,\r\n  141: () => \"cross filtering with row grouping is not supported.\",\r\n  142: () => \"cross filtering is only supported in the client side row model.\",\r\n  143: ({ panel }) => `'${panel}' is not a valid Chart Tool Panel name`,\r\n  144: ({ type }) => `Invalid charts data panel group name supplied: '${type}'`,\r\n  145: ({ group }) => `As of v32, only one charts customize panel group can be expanded at a time. '${group}' will not be expanded.`,\r\n  146: ({ comp }) => `Unable to instantiate component '${comp}' as its module hasn't been loaded. Add 'ValidationModule' to see which module is required.`,\r\n  147: ({ group }) => `Invalid charts customize panel group name supplied: '${group}'`,\r\n  148: ({ group }) => `invalid chartGroupsDef config '${group}'`,\r\n  149: ({ group, chartType }) => `invalid chartGroupsDef config '${group}.${chartType}'`,\r\n  150: () => `'seriesChartTypes' are required when the 'customCombo' chart type is specified.`,\r\n  151: ({ chartType }) => `invalid chartType '${chartType}' supplied in 'seriesChartTypes', converting to 'line' instead.`,\r\n  152: ({ colId }) => `no 'seriesChartType' found for colId = '${colId}', defaulting to 'line'.`,\r\n  153: ({ chartDataType }) => `unexpected chartDataType value '${chartDataType}' supplied, instead use 'category', 'series' or 'excluded'`,\r\n  154: ({ colId }) => `cross filtering requires a 'agSetColumnFilter' or 'agMultiColumnFilter' to be defined on the column with id: ${colId}`,\r\n  155: ({ option }) => `'${option}' is not a valid Chart Toolbar Option`,\r\n  156: ({ panel }) => `Invalid panel in chartToolPanelsDef.panels: '${panel}'`,\r\n  157: ({ unrecognisedGroupIds }) => [\"unable to find group(s) for supplied groupIds:\", unrecognisedGroupIds],\r\n  158: () => \"can not expand a column item that does not represent a column group header\",\r\n  159: () => \"Invalid params supplied to createExcelFileForExcel() - `ExcelExportParams.data` is empty.\",\r\n  160: () => `Export cancelled. Export is not allowed as per your configuration.`,\r\n  161: () => \"The Excel Exporter is currently on Multi Sheet mode. End that operation by calling 'api.getMultipleSheetAsExcel()' or 'api.exportMultipleSheetsAsExcel()'\",\r\n  162: ({ id, dataType }) => `Unrecognized data type for excel export [${id}.dataType=${dataType}]`,\r\n  163: ({ featureName }) => `Excel table export does not work with ${featureName}. The exported Excel file will not contain any Excel tables.\r\n Please turn off ${featureName} to enable Excel table exports.`,\r\n  164: () => \"Unable to add data table to Excel sheet: A table already exists.\",\r\n  165: () => \"Unable to add data table to Excel sheet: Missing required parameters.\",\r\n  166: ({ unrecognisedGroupIds }) => [\"unable to find groups for these supplied groupIds:\", unrecognisedGroupIds],\r\n  167: ({ unrecognisedColIds }) => [\"unable to find columns for these supplied colIds:\", unrecognisedColIds],\r\n  168: () => \"detailCellRendererParams.template should be function or string\",\r\n  169: () => 'Reference to eDetailGrid was missing from the details template. Please add data-ref=\"eDetailGrid\" to the template.',\r\n  170: ({ providedStrategy }) => `invalid cellRendererParams.refreshStrategy = ${providedStrategy} supplied, defaulting to refreshStrategy = 'rows'.`,\r\n  171: () => \"could not find detail grid options for master detail, please set gridOptions.detailCellRendererParams.detailGridOptions\",\r\n  172: () => \"could not find getDetailRowData for master / detail, please set gridOptions.detailCellRendererParams.getDetailRowData\",\r\n  173: ({ group }) => `invalid chartGroupsDef config '${group}'`,\r\n  174: ({ group, chartType }) => `invalid chartGroupsDef config '${group}.${chartType}'`,\r\n  175: ({ menuTabName, itemsToConsider }) => [\r\n    `Trying to render an invalid menu item '${menuTabName}'. Check that your 'menuTabs' contains one of `,\r\n    itemsToConsider\r\n  ],\r\n  176: ({ key }) => `unknown menu item type ${key}`,\r\n  177: () => `valid values for cellSelection.handle.direction are 'x', 'y' and 'xy'. Default to 'xy'.`,\r\n  178: ({ colId }) => `column ${colId} is not visible`,\r\n  179: () => \"totalValueGetter should be either a function or a string (expression)\",\r\n  180: () => \"agRichSelectCellEditor requires cellEditorParams.values to be set\",\r\n  181: () => \"agRichSelectCellEditor cannot have `multiSelect` and `allowTyping` set to `true`. AllowTyping has been turned off.\",\r\n  182: () => 'you cannot mix groupDisplayType = \"multipleColumns\" with treeData, only one column can be used to display groups when doing tree data',\r\n  183: () => \"Group Column Filter only works on group columns. Please use a different filter.\",\r\n  184: ({ parentGroupData, childNodeData }) => [`duplicate group keys for row data, keys should be unique`, [parentGroupData, childNodeData]],\r\n  185: ({ data }) => [`getDataPath() should not return an empty path`, [data]],\r\n  186: ({\r\n    rowId,\r\n    rowData,\r\n    duplicateRowsData\r\n  }) => [\r\n    `duplicate group keys for row data, keys should be unique`,\r\n    rowId,\r\n    rowData,\r\n    ...duplicateRowsData ?? []\r\n  ],\r\n  187: ({ rowId, firstData, secondData }) => [\r\n    `Duplicate node id ${rowId}. Row IDs are provided via the getRowId() callback. Please modify the getRowId() callback code to provide unique row id values.`,\r\n    \"first instance\",\r\n    firstData,\r\n    \"second instance\",\r\n    secondData\r\n  ],\r\n  188: () => `getRowId callback must be provided for Server Side Row Model selection to work correctly.`,\r\n  189: ({ startRow }) => `invalid value ${startRow} for startRow, the value should be >= 0`,\r\n  190: ({ rowGroupId, data }) => [\r\n    `null and undefined values are not allowed for server side row model keys`,\r\n    rowGroupId ? `column = ${rowGroupId}` : ``,\r\n    `data is `,\r\n    data\r\n  ],\r\n  // 191: () => `cannot multi select unless selection mode is 'multiRow'` as const,\r\n  // 192: () => `cannot use range selection when multi selecting rows` as const,\r\n  // 193: () => \"cannot multi select unless selection mode is 'multiRow'\" as const,\r\n  194: ({ method }) => `calling gridApi.${method}() is only possible when using rowModelType=\\`clientSide\\`.`,\r\n  195: ({ justCurrentPage }) => `selecting just ${justCurrentPage ? \"current page\" : \"filtered\"} only works when gridOptions.rowModelType='clientSide'`,\r\n  196: ({ key }) => `Provided ids must be of string type. Invalid id provided: ${key}`,\r\n  197: () => \"`toggledNodes` must be an array of string ids.\",\r\n  // 198: () => `cannot multi select unless selection mode is 'multiRow'` as const,\r\n  199: () => `getSelectedNodes and getSelectedRows functions cannot be used with select all functionality with the server-side row model. Use \\`api.getServerSideSelectionState()\\` instead.`,\r\n  200: missingModule,\r\n  201: ({ rowModelType }) => `Could not find row model for rowModelType = ${rowModelType}`,\r\n  202: () => `\\`getSelectedNodes\\` and \\`getSelectedRows\\` functions cannot be used with \\`groupSelectsChildren\\` and the server-side row model. Use \\`api.getServerSideSelectionState()\\` instead.`,\r\n  203: () => \"Server Side Row Model does not support Dynamic Row Height and Cache Purging. Either a) remove getRowHeight() callback or b) remove maxBlocksInCache property. Purging has been disabled.\",\r\n  204: () => \"Server Side Row Model does not support Auto Row Height and Cache Purging. Either a) remove colDef.autoHeight or b) remove maxBlocksInCache property. Purging has been disabled.\",\r\n  205: ({ duplicateIdText }) => `Unable to display rows as duplicate row ids (${duplicateIdText}) were returned by the getRowId callback. Please modify the getRowId callback to provide unique ids.`,\r\n  206: () => \"getRowId callback must be implemented for transactions to work. Transaction was ignored.\",\r\n  207: () => 'The Set Filter Parameter \"defaultToNothingSelected\" value was ignored because it does not work when \"excelMode\" is used.',\r\n  208: () => `Set Filter Value Formatter must return string values. Please ensure the Set Filter Value Formatter returns string values for complex objects.`,\r\n  209: () => `Set Filter Key Creator is returning null for provided values and provided values are primitives. Please provide complex objects. See ${baseDocLink}/filter-set-filter-list/#filter-value-types`,\r\n  210: () => \"Set Filter has a Key Creator, but provided values are primitives. Did you mean to provide complex objects?\",\r\n  211: () => \"property treeList=true for Set Filter params, but you did not provide a treeListPathGetter or values of type Date.\",\r\n  212: () => `please review all your toolPanel components, it seems like at least one of them doesn't have an id`,\r\n  213: () => \"Advanced Filter does not work with Filters Tool Panel. Filters Tool Panel has been disabled.\",\r\n  214: ({ key }) => `unable to lookup Tool Panel as invalid key supplied: ${key}`,\r\n  215: ({ key, defaultByKey }) => `the key ${key} is not a valid key for specifying a tool panel, valid keys are: ${Object.keys(defaultByKey ?? {}).join(\",\")}`,\r\n  216: ({ name }) => `Missing component for '${name}'`,\r\n  217: ({ invalidColIds }) => [\"unable to find grid columns for the supplied colDef(s):\", invalidColIds],\r\n  218: ({ property, defaultOffset }) => `${property} must be a number, the value you provided is not a valid number. Using the default of ${defaultOffset}px.`,\r\n  219: ({ property }) => `Property ${property} does not exist on the target object.`,\r\n  220: ({ lineDash }) => `'${lineDash}' is not a valid 'lineDash' option.`,\r\n  221: () => `agAggregationComponent should only be used with the client and server side row model.`,\r\n  222: () => `agFilteredRowCountComponent should only be used with the client side row model.`,\r\n  223: () => `agSelectedRowCountComponent should only be used with the client and server side row model.`,\r\n  224: () => `agTotalAndFilteredRowCountComponent should only be used with the client side row model.`,\r\n  225: () => \"agTotalRowCountComponent should only be used with the client side row model.\",\r\n  226: () => \"viewport is missing init method.\",\r\n  227: () => \"menu item icon must be DOM node or string\",\r\n  228: ({ menuItemOrString }) => `unrecognised menu item ${menuItemOrString}`,\r\n  229: ({ index }) => [\"invalid row index for ensureIndexVisible: \", index],\r\n  230: () => \"detailCellRendererParams.template is not supported by AG Grid React. To change the template, provide a Custom Detail Cell Renderer. See https://www.ag-grid.com/react-data-grid/master-detail-custom-detail/\",\r\n  // @deprecated v32 mark for removal as part of v32 deprecated features\r\n  231: () => \"As of v32, using custom components with `reactiveCustomComponents = false` is deprecated.\",\r\n  232: () => \"Using both rowData and v-model. rowData will be ignored.\",\r\n  233: ({ methodName }) => `Framework component is missing the method ${methodName}()`,\r\n  234: () => 'Group Column Filter does not work with the colDef property \"field\". This property will be ignored.',\r\n  235: () => 'Group Column Filter does not work with the colDef property \"filterValueGetter\". This property will be ignored.',\r\n  236: () => 'Group Column Filter does not work with the colDef property \"filterParams\". This property will be ignored.',\r\n  237: () => \"Group Column Filter does not work with Tree Data enabled. Please disable Tree Data, or use a different filter.\",\r\n  238: () => \"setRowCount can only accept a positive row count.\",\r\n  239: () => 'Theming API and CSS File Themes are both used in the same page. In v33 we released the Theming API as the new default method of styling the grid. See the migration docs https://www.ag-grid.com/react-data-grid/theming-migration/. Because no value was provided to the `theme` grid option it defaulted to themeQuartz. But the file (ag-grid.css) is also included and will cause styling issues. Either pass the string \"legacy\" to the theme grid option to use v32 style themes, or remove ag-grid.css from the page to use Theming API.',\r\n  240: ({ theme }) => `theme grid option must be a Theming API theme object or the string \"legacy\", received: ${theme}`,\r\n  // 241: () => `cannot select multiple rows when rowSelection.mode is set to 'singleRow'` as const,\r\n  // 242: () => 'cannot select multiple rows when using rangeSelect' as const,\r\n  243: () => \"Failed to deserialize state - each provided state object must be an object.\",\r\n  244: () => \"Failed to deserialize state - `selectAllChildren` must be a boolean value or undefined.\",\r\n  245: () => \"Failed to deserialize state - `toggledNodes` must be an array.\",\r\n  246: () => \"Failed to deserialize state - Every `toggledNode` requires an associated string id.\",\r\n  247: () => `Row selection state could not be parsed due to invalid data. Ensure all child state has toggledNodes or does not conform with the parent rule. \r\nPlease rebuild the selection state and reapply it.`,\r\n  248: () => \"SetFloatingFilter expects SetFilter as its parent\",\r\n  249: () => \"Must supply a Value Formatter in Set Filter params when using a Key Creator\",\r\n  250: () => \"Must supply a Key Creator in Set Filter params when `treeList = true` on a group column, and Tree Data or Row Grouping is enabled.\",\r\n  251: ({ chartType }) => `AG Grid: Unable to create chart as an invalid chartType = '${chartType}' was supplied.`,\r\n  252: () => \"cannot get grid to draw rows when it is in the middle of drawing rows. \\nYour code probably called a grid API method while the grid was in the render stage. \\nTo overcome this, put the API call into a timeout, e.g. instead of api.redrawRows(), call setTimeout(function() { api.redrawRows(); }, 0). \\nTo see what part of your code that caused the refresh check this stacktrace.\",\r\n  253: ({ version }) => [\"Illegal version string: \", version],\r\n  254: () => \"Cannot create chart: no chart themes available.\",\r\n  255: ({ point }) => `Lone surrogate U+${point?.toString(16).toUpperCase()} is not a scalar value`,\r\n  256: () => \"Unable to initialise. See validation error, or load ValidationModule if missing.\",\r\n  257: () => missingChartsWithModule(\"IntegratedChartsModule\"),\r\n  258: () => missingChartsWithModule(\"SparklinesModule\"),\r\n  259: ({ part }) => `the argument to theme.withPart must be a Theming API part object, received: ${part}`,\r\n  260: ({\r\n    propName,\r\n    compName,\r\n    gridScoped,\r\n    gridId,\r\n    rowModelType\r\n  }) => missingModule({\r\n    reasonOrId: `AG Grid '${propName}' component: ${compName}`,\r\n    moduleName: USER_COMP_MODULES[compName],\r\n    gridId,\r\n    gridScoped,\r\n    rowModelType\r\n  }),\r\n  261: () => \"As of v33, `column.isHovered()` is deprecated. Use `api.isColumnHovered(column)` instead.\",\r\n  262: () => 'As of v33, icon key \"smallDown\" is deprecated. Use \"advancedFilterBuilderSelect\" for Advanced Filter Builder dropdown, \"selectOpen\" for Select cell editor and dropdowns (e.g. Integrated Charts menu), \"richSelectOpen\" for Rich Select cell editor.',\r\n  263: () => 'As of v33, icon key \"smallLeft\" is deprecated. Use \"panelDelimiterRtl\" for Row Group Panel / Pivot Panel, \"subMenuOpenRtl\" for sub-menus.',\r\n  264: () => 'As of v33, icon key \"smallRight\" is deprecated. Use \"panelDelimiter\" for Row Group Panel / Pivot Panel, \"subMenuOpen\" for sub-menus.',\r\n  265: ({ colId }) => `Unable to infer chart data type for column '${colId}' if first data entry is null. Please specify \"chartDataType\", or a \"cellDataType\" in the column definition. For more information, see ${baseDocLink}/integrated-charts-range-chart#coldefchartdatatype .`,\r\n  266: () => 'As of v33.1, using \"keyCreator\" with the Rich Select Editor has been deprecated. It now requires the \"formatValue\" callback to convert complex data to strings.',\r\n  267: () => \"Detail grids can not use a different theme to the master grid, the `theme` detail grid option will be ignored.\",\r\n  268: () => \"Transactions aren't supported with tree data when using treeDataChildrenField\",\r\n  269: () => \"When `masterSelects: 'detail'`, detail grids must be configured with multi-row selection\",\r\n  270: ({ id, parentId }) => `Cycle detected for row with id='${id}' and parent id='${parentId}'. Resetting the parent for row with id='${id}' and showing it as a root-level node.`,\r\n  271: ({ id, parentId }) => `Parent row not found for row with id='${id}' and parent id='${parentId}'. Showing row with id='${id}' as a root-level node.`,\r\n  272: () => NoModulesRegisteredError(),\r\n  273: ({ providedId, usedId }) => `Provided column id '${providedId}' was already in use, ensure all column and group ids are unique. Using '${usedId}' instead.`,\r\n  274: ({ prop }) => {\r\n    let msg = `Since v33, ${prop} has been deprecated.`;\r\n    switch (prop) {\r\n      case \"maxComponentCreationTimeMs\":\r\n        msg += \" This property is no longer required and so will be removed in a future version.\";\r\n        break;\r\n      case \"setGridApi\":\r\n        msg += ` This method is not called by AG Grid. To access the GridApi see: https://ag-grid.com/react-data-grid/grid-interface/#grid-api `;\r\n        break;\r\n      case \"children\":\r\n        msg += ` For multiple versions AgGridReact does not support children.`;\r\n        break;\r\n    }\r\n    return msg;\r\n  },\r\n  275: missingRowModelTypeError,\r\n  276: () => \"Row Numbers Row Resizer cannot be used when Grid Columns have `autoHeight` enabled.\",\r\n  277: ({ colId }) => `'enableFilterHandlers' is set to true, but column '${colId}' does not have 'filter.doesFilterPass' or 'filter.handler' set.`,\r\n  278: ({ colId }) => `Unable to create filter handler for column '${colId}'`,\r\n  279: (_) => {\r\n  },\r\n  // `Unable to create dynamic bean '${name}' during module init lifecycle, dynamic beans must be initialised on first use.` as const,\r\n  280: ({ colId }) => `'name' must be provided for custom filter components for column '${colId}`,\r\n  281: ({ colId }) => `Filter for column '${colId}' does not have 'filterParams.buttons', but the new Filters Tool Panel has buttons configured. Either configure buttons for the filter, or disable buttons on the Filters Tool Panel.`,\r\n  282: () => \"New filter tool panel requires `enableFilterHandlers: true`.\",\r\n  283: () => \"As of v34, use the same method on the filter handler (`api.getColumnFilterHandler()`) instead.\",\r\n  284: () => \"As of v34, filters are active when they have a model. Use `api.getColumnFilterModel()` instead.\",\r\n  285: () => \"As of v34, use (`api.getColumnFilterModel()`) instead.\",\r\n  286: () => \"As of v34, use (`api.setColumnFilterModel()`) instead.\",\r\n  287: () => \"`api.doFilterAction()` requires `enableFilterHandlers = true\",\r\n  288: () => \"`api.getColumnFilterModel(key, true)` requires `enableFilterHandlers = true\",\r\n  289: ({ rowModelType }) => `Row Model '${rowModelType}' is not supported with Batch Editing`,\r\n  290: ({ rowIndex, rowPinned }) => `Row with index '${rowIndex}' and pinned state '${rowPinned}' not found`\r\n};\r\nfunction getError(errorId, args) {\r\n  const msgOrFunc = AG_GRID_ERRORS[errorId];\r\n  if (!msgOrFunc) {\r\n    return [`Missing error text for error id ${errorId}!`];\r\n  }\r\n  const errorBody = msgOrFunc(args);\r\n  const errorLink = getErrorLink(errorId, args);\r\n  const errorSuffix = `\r\nSee ${errorLink}`;\r\n  return Array.isArray(errorBody) ? errorBody.concat(errorSuffix) : [errorBody, errorSuffix];\r\n}\r\nvar MISSING_MODULE_REASONS = {\r\n  1: \"Charting Aggregation\",\r\n  2: \"pivotResultFields\",\r\n  3: \"setTooltip\"\r\n};\r\n\r\n// packages/ag-grid-community/src/grid.ts\r\nvar _gridApiCache = /* @__PURE__ */ new WeakMap();\r\nvar _gridElementCache = /* @__PURE__ */ new WeakMap();\r\nfunction createGrid(eGridDiv, gridOptions, params) {\r\n  if (!gridOptions) {\r\n    _error(11);\r\n    return {};\r\n  }\r\n  const gridParams = params;\r\n  let destroyCallback;\r\n  if (!gridParams?.setThemeOnGridDiv) {\r\n    const newGridDiv = _createElement({ tag: \"div\" });\r\n    newGridDiv.style.height = \"100%\";\r\n    eGridDiv.appendChild(newGridDiv);\r\n    eGridDiv = newGridDiv;\r\n    destroyCallback = () => eGridDiv.remove();\r\n  }\r\n  const api = new GridCoreCreator().create(\r\n    eGridDiv,\r\n    gridOptions,\r\n    (context) => {\r\n      const gridComp = new GridComp(eGridDiv);\r\n      context.createBean(gridComp);\r\n    },\r\n    void 0,\r\n    params,\r\n    destroyCallback\r\n  );\r\n  return api;\r\n}\r\nvar nextGridId = 1;\r\nvar GridCoreCreator = class {\r\n  create(eGridDiv, providedOptions, createUi, acceptChanges, params, _destroyCallback) {\r\n    const gridOptions = GlobalGridOptions.applyGlobalGridOptions(providedOptions);\r\n    const gridId = gridOptions.gridId ?? String(nextGridId++);\r\n    const registeredModules = this.getRegisteredModules(params, gridId, gridOptions.rowModelType);\r\n    const beanClasses = this.createBeansList(gridOptions.rowModelType, registeredModules, gridId);\r\n    const providedBeanInstances = this.createProvidedBeans(eGridDiv, gridOptions, params);\r\n    if (!beanClasses) {\r\n      return void 0;\r\n    }\r\n    const destroyCallback = () => {\r\n      _gridElementCache.delete(api);\r\n      _gridApiCache.delete(eGridDiv);\r\n      _destroyCallback?.();\r\n    };\r\n    const contextParams = {\r\n      providedBeanInstances,\r\n      beanClasses,\r\n      gridId,\r\n      beanInitComparator: gridBeanInitComparator,\r\n      beanDestroyComparator: gridBeanDestroyComparator,\r\n      derivedBeans: [createGridApi],\r\n      destroyCallback\r\n    };\r\n    const context = new Context(contextParams);\r\n    this.registerModuleFeatures(context, registeredModules);\r\n    createUi(context);\r\n    context.getBean(\"syncSvc\").start();\r\n    acceptChanges?.(context);\r\n    const api = context.getBean(\"gridApi\");\r\n    _gridApiCache.set(eGridDiv, api);\r\n    _gridElementCache.set(api, eGridDiv);\r\n    return api;\r\n  }\r\n  getRegisteredModules(params, gridId, rowModelType) {\r\n    _registerModule(CommunityCoreModule, void 0, true);\r\n    params?.modules?.forEach((m) => _registerModule(m, gridId));\r\n    return _getRegisteredModules(gridId, getDefaultRowModelType(rowModelType));\r\n  }\r\n  registerModuleFeatures(context, registeredModules) {\r\n    const registry = context.getBean(\"registry\");\r\n    const apiFunctionSvc = context.getBean(\"apiFunctionSvc\");\r\n    registeredModules.forEach((module) => {\r\n      registry.registerModule(module);\r\n      const apiFunctions = module.apiFunctions;\r\n      if (apiFunctions) {\r\n        const names = Object.keys(apiFunctions);\r\n        names.forEach((name) => {\r\n          apiFunctionSvc?.addFunction(name, apiFunctions[name]);\r\n        });\r\n      }\r\n    });\r\n  }\r\n  createProvidedBeans(eGridDiv, gridOptions, params) {\r\n    let frameworkOverrides = params ? params.frameworkOverrides : null;\r\n    if (_missing(frameworkOverrides)) {\r\n      frameworkOverrides = new VanillaFrameworkOverrides();\r\n    }\r\n    const seed = {\r\n      gridOptions,\r\n      eGridDiv,\r\n      globalListener: params ? params.globalListener : null,\r\n      globalSyncListener: params ? params.globalSyncListener : null,\r\n      frameworkOverrides\r\n    };\r\n    if (params && params.providedBeanInstances) {\r\n      Object.assign(seed, params.providedBeanInstances);\r\n    }\r\n    return seed;\r\n  }\r\n  createBeansList(userProvidedRowModelType, registeredModules, gridId) {\r\n    const rowModelModuleNames = {\r\n      clientSide: \"ClientSideRowModel\",\r\n      infinite: \"InfiniteRowModel\",\r\n      serverSide: \"ServerSideRowModel\",\r\n      viewport: \"ViewportRowModel\"\r\n    };\r\n    const rowModelType = getDefaultRowModelType(userProvidedRowModelType);\r\n    const rowModuleModelName = rowModelModuleNames[rowModelType];\r\n    if (!rowModuleModelName) {\r\n      _logPreInitErr(201, { rowModelType }, `Unknown rowModelType ${rowModelType}.`);\r\n      return;\r\n    }\r\n    if (!_hasUserRegistered()) {\r\n      _logPreInitErr(272, void 0, NoModulesRegisteredError());\r\n      return;\r\n    }\r\n    if (!userProvidedRowModelType) {\r\n      const registeredRowModelModules = Object.entries(rowModelModuleNames).filter(\r\n        ([rowModelType2, module]) => _isModuleRegistered(module, gridId, rowModelType2)\r\n      );\r\n      if (registeredRowModelModules.length == 1) {\r\n        const [userRowModelType, moduleName] = registeredRowModelModules[0];\r\n        if (userRowModelType !== rowModelType) {\r\n          const params = {\r\n            moduleName,\r\n            rowModelType: userRowModelType\r\n          };\r\n          _logPreInitErr(275, params, missingRowModelTypeError(params));\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    if (!_isModuleRegistered(rowModuleModelName, gridId, rowModelType)) {\r\n      _logPreInitErr(\r\n        200,\r\n        {\r\n          reasonOrId: `rowModelType = '${rowModelType}'`,\r\n          moduleName: rowModuleModelName,\r\n          gridScoped: _areModulesGridScoped(),\r\n          gridId,\r\n          rowModelType\r\n        },\r\n        `Missing module ${rowModuleModelName}Module for rowModelType ${rowModelType}.`\r\n      );\r\n      return;\r\n    }\r\n    const beans = /* @__PURE__ */ new Set();\r\n    registeredModules.forEach((module) => module.beans?.forEach((bean) => beans.add(bean)));\r\n    return Array.from(beans);\r\n  }\r\n};\r\nfunction getDefaultRowModelType(passedRowModelType) {\r\n  return passedRowModelType ?? \"clientSide\";\r\n}\r\nfunction getGridApi(gridElement) {\r\n  if (typeof gridElement === \"string\") {\r\n    try {\r\n      gridElement = document.querySelector(`[grid-id=\"${gridElement}\"]`)?.parentElement ?? document.querySelector(gridElement)?.firstElementChild ?? document.getElementById(gridElement)?.firstElementChild;\r\n    } catch {\r\n      gridElement = null;\r\n    }\r\n  }\r\n  return gridElement ? _gridApiCache.get(gridElement) : void 0;\r\n}\r\nfunction getGridElement(api) {\r\n  return _gridElementCache.get(api);\r\n}\r\n\r\n// packages/ag-grid-community/src/api/rowModelApiUtils.ts\r\nfunction _getClientSideRowModel(beans) {\r\n  const rowModel = beans.rowModel;\r\n  return rowModel.getType() === \"clientSide\" ? rowModel : void 0;\r\n}\r\nfunction _getInfiniteRowModel(beans) {\r\n  const rowModel = beans.rowModel;\r\n  return rowModel.getType() === \"infinite\" ? rowModel : void 0;\r\n}\r\nfunction _getServerSideRowModel(beans) {\r\n  const rowModel = beans.rowModel;\r\n  return rowModel.getType() === \"serverSide\" ? rowModel : void 0;\r\n}\r\n\r\n// packages/ag-grid-community/src/misc/locale/localeService.ts\r\nvar LocaleService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"localeSvc\";\r\n  }\r\n  getLocaleTextFunc() {\r\n    const gos = this.gos;\r\n    const getLocaleText = gos.getCallback(\"getLocaleText\");\r\n    if (getLocaleText) {\r\n      return (key, defaultValue, variableValues) => {\r\n        const params = {\r\n          key,\r\n          defaultValue,\r\n          variableValues\r\n        };\r\n        return getLocaleText(params);\r\n      };\r\n    }\r\n    const localeText = gos.get(\"localeText\");\r\n    return (key, defaultValue, variableValues) => {\r\n      let localisedText = localeText && localeText[key];\r\n      if (localisedText && variableValues && variableValues.length) {\r\n        let found = 0;\r\n        while (true) {\r\n          if (found >= variableValues.length) {\r\n            break;\r\n          }\r\n          const idx = localisedText.indexOf(\"${variable}\");\r\n          if (idx === -1) {\r\n            break;\r\n          }\r\n          localisedText = localisedText.replace(\"${variable}\", variableValues[found++]);\r\n        }\r\n      }\r\n      return localisedText ?? defaultValue;\r\n    };\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/misc/state/stateUtils.ts\r\nfunction convertColumnState(columnState, enablePivotMode = false) {\r\n  const sortColumns = [];\r\n  const groupColIds = [];\r\n  const aggregationColumns = [];\r\n  const pivotColIds = [];\r\n  const leftColIds = [];\r\n  const rightColIds = [];\r\n  const hiddenColIds = [];\r\n  const columnSizes = [];\r\n  const columns = [];\r\n  let defaultSortIndex = 0;\r\n  for (let i = 0; i < columnState.length; i++) {\r\n    const {\r\n      colId,\r\n      sort,\r\n      sortIndex,\r\n      rowGroup,\r\n      rowGroupIndex,\r\n      aggFunc,\r\n      pivot,\r\n      pivotIndex,\r\n      pinned,\r\n      hide,\r\n      width,\r\n      flex\r\n    } = columnState[i];\r\n    columns.push(colId);\r\n    if (sort) {\r\n      sortColumns[sortIndex ?? defaultSortIndex++] = { colId, sort };\r\n    }\r\n    if (rowGroup) {\r\n      groupColIds[rowGroupIndex ?? 0] = colId;\r\n    }\r\n    if (typeof aggFunc === \"string\") {\r\n      aggregationColumns.push({ colId, aggFunc });\r\n    }\r\n    if (pivot) {\r\n      pivotColIds[pivotIndex ?? 0] = colId;\r\n    }\r\n    if (pinned) {\r\n      (pinned === \"right\" ? rightColIds : leftColIds).push(colId);\r\n    }\r\n    if (hide) {\r\n      hiddenColIds.push(colId);\r\n    }\r\n    if (flex != null || width) {\r\n      columnSizes.push({ colId, flex: flex ?? void 0, width });\r\n    }\r\n  }\r\n  return {\r\n    sort: sortColumns.length ? { sortModel: sortColumns } : void 0,\r\n    rowGroup: groupColIds.length ? { groupColIds } : void 0,\r\n    aggregation: aggregationColumns.length ? { aggregationModel: aggregationColumns } : void 0,\r\n    pivot: pivotColIds.length || enablePivotMode ? { pivotMode: enablePivotMode, pivotColIds } : void 0,\r\n    columnPinning: leftColIds.length || rightColIds.length ? { leftColIds, rightColIds } : void 0,\r\n    columnVisibility: hiddenColIds.length ? { hiddenColIds } : void 0,\r\n    columnSizing: columnSizes.length ? { columnSizingModel: columnSizes } : void 0,\r\n    columnOrder: columns.length ? { orderedColIds: columns } : void 0\r\n  };\r\n}\r\nfunction _convertColumnGroupState(columnGroupState) {\r\n  const openColumnGroups = [];\r\n  columnGroupState.forEach(({ groupId, open }) => {\r\n    if (open) {\r\n      openColumnGroups.push(groupId);\r\n    }\r\n  });\r\n  return openColumnGroups.length ? { openColumnGroupIds: openColumnGroups } : void 0;\r\n}\r\nfunction convertColumnGroupState(columnGroupState) {\r\n  return { columnGroup: _convertColumnGroupState(columnGroupState) };\r\n}\r\n\r\n// packages/ag-grid-community/src/components/framework/frameworkComponentWrapper.ts\r\nvar BaseComponentWrapper = class {\r\n  wrap(OriginalConstructor, mandatoryMethods, optionalMethods, componentType) {\r\n    const wrapper = this.createWrapper(OriginalConstructor, componentType);\r\n    mandatoryMethods?.forEach((methodName) => {\r\n      this.createMethod(wrapper, methodName, true);\r\n    });\r\n    optionalMethods?.forEach((methodName) => {\r\n      this.createMethod(wrapper, methodName, false);\r\n    });\r\n    return wrapper;\r\n  }\r\n  createMethod(wrapper, methodName, mandatory) {\r\n    wrapper.addMethod(methodName, this.createMethodProxy(wrapper, methodName, mandatory));\r\n  }\r\n  createMethodProxy(wrapper, methodName, mandatory) {\r\n    return function() {\r\n      if (wrapper.hasMethod(methodName)) {\r\n        return wrapper.callMethod(methodName, arguments);\r\n      }\r\n      if (mandatory) {\r\n        _warn(49, { methodName });\r\n      }\r\n      return null;\r\n    };\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/tooltip/tooltipComponent.ts\r\nvar TooltipComponentElement = { tag: \"div\", cls: \"ag-tooltip\" };\r\nvar TooltipComponent2 = class extends PopupComponent {\r\n  constructor() {\r\n    super(TooltipComponentElement);\r\n  }\r\n  // will need to type params\r\n  init(params) {\r\n    const { value } = params;\r\n    const eGui = this.getGui();\r\n    eGui.textContent = _toString(value);\r\n    const locationKebabCase = params.location.replace(/([a-z])([A-Z0-9])/g, \"$1-$2\").toLowerCase();\r\n    eGui.classList.add(`ag-${locationKebabCase}-tooltip`);\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/tooltip/tooltipStateManager.ts\r\nvar SHOW_QUICK_TOOLTIP_DIFF = 1e3;\r\nvar FADE_OUT_TOOLTIP_TIMEOUT = 1e3;\r\nvar INTERACTIVE_HIDE_DELAY = 100;\r\nvar lastTooltipHideTime;\r\nvar isLocked = false;\r\nvar TooltipStateManager = class extends BeanStub {\r\n  constructor(tooltipCtrl, getTooltipValue) {\r\n    super();\r\n    this.tooltipCtrl = tooltipCtrl;\r\n    this.getTooltipValue = getTooltipValue;\r\n    this.interactionEnabled = false;\r\n    this.isInteractingWithTooltip = false;\r\n    this.state = 0 /* NOTHING */;\r\n    // when showing the tooltip, we need to make sure it's the most recent instance we request, as due to\r\n    // async we could request two tooltips before the first instance returns, in which case we should\r\n    // disregard the second instance.\r\n    this.tooltipInstanceCount = 0;\r\n    this.tooltipMouseTrack = false;\r\n  }\r\n  wireBeans(beans) {\r\n    this.popupSvc = beans.popupSvc;\r\n    this.userCompFactory = beans.userCompFactory;\r\n  }\r\n  postConstruct() {\r\n    if (this.gos.get(\"tooltipInteraction\")) {\r\n      this.interactionEnabled = true;\r\n    }\r\n    this.tooltipTrigger = this.getTooltipTrigger();\r\n    this.tooltipMouseTrack = this.gos.get(\"tooltipMouseTrack\");\r\n    const el = this.tooltipCtrl.getGui();\r\n    if (this.tooltipTrigger === 0 /* HOVER */) {\r\n      this.addManagedListeners(el, {\r\n        mouseenter: this.onMouseEnter.bind(this),\r\n        mouseleave: this.onMouseLeave.bind(this)\r\n      });\r\n    }\r\n    if (this.tooltipTrigger === 1 /* FOCUS */) {\r\n      this.addManagedListeners(el, {\r\n        focusin: this.onFocusIn.bind(this),\r\n        focusout: this.onFocusOut.bind(this)\r\n      });\r\n    }\r\n    this.addManagedListeners(el, { mousemove: this.onMouseMove.bind(this) });\r\n    if (!this.interactionEnabled) {\r\n      this.addManagedListeners(el, {\r\n        mousedown: this.onMouseDown.bind(this),\r\n        keydown: this.onKeyDown.bind(this)\r\n      });\r\n    }\r\n  }\r\n  getGridOptionsTooltipDelay(delayOption) {\r\n    const delay = this.gos.get(delayOption);\r\n    return Math.max(200, delay);\r\n  }\r\n  getTooltipDelay(type) {\r\n    if (type === \"show\") {\r\n      return this.tooltipCtrl.getTooltipShowDelayOverride?.() ?? this.getGridOptionsTooltipDelay(\"tooltipShowDelay\");\r\n    }\r\n    return this.tooltipCtrl.getTooltipHideDelayOverride?.() ?? this.getGridOptionsTooltipDelay(\"tooltipHideDelay\");\r\n  }\r\n  destroy() {\r\n    this.setToDoNothing();\r\n    super.destroy();\r\n  }\r\n  getTooltipTrigger() {\r\n    const trigger = this.gos.get(\"tooltipTrigger\");\r\n    if (!trigger || trigger === \"hover\") {\r\n      return 0 /* HOVER */;\r\n    }\r\n    return 1 /* FOCUS */;\r\n  }\r\n  onMouseEnter(e) {\r\n    if (this.interactionEnabled && this.interactiveTooltipTimeoutId) {\r\n      this.unlockService();\r\n      this.startHideTimeout();\r\n    }\r\n    if (_isIOSUserAgent()) {\r\n      return;\r\n    }\r\n    if (isLocked) {\r\n      this.showTooltipTimeoutId = window.setTimeout(() => {\r\n        this.prepareToShowTooltip(e);\r\n      }, INTERACTIVE_HIDE_DELAY);\r\n    } else {\r\n      this.prepareToShowTooltip(e);\r\n    }\r\n  }\r\n  onMouseMove(e) {\r\n    if (this.lastMouseEvent) {\r\n      this.lastMouseEvent = e;\r\n    }\r\n    if (this.tooltipMouseTrack && this.state === 2 /* SHOWING */ && this.tooltipComp) {\r\n      this.positionTooltip();\r\n    }\r\n  }\r\n  onMouseDown() {\r\n    this.setToDoNothing();\r\n  }\r\n  onMouseLeave() {\r\n    if (this.interactionEnabled) {\r\n      this.lockService();\r\n    } else {\r\n      this.setToDoNothing();\r\n    }\r\n  }\r\n  onFocusIn() {\r\n    this.prepareToShowTooltip();\r\n  }\r\n  onFocusOut(e) {\r\n    const relatedTarget = e.relatedTarget;\r\n    const parentCompGui = this.tooltipCtrl.getGui();\r\n    const tooltipGui = this.tooltipComp?.getGui();\r\n    if (this.isInteractingWithTooltip || parentCompGui.contains(relatedTarget) || this.interactionEnabled && tooltipGui?.contains(relatedTarget)) {\r\n      return;\r\n    }\r\n    this.setToDoNothing();\r\n  }\r\n  onKeyDown() {\r\n    if (this.isInteractingWithTooltip) {\r\n      this.isInteractingWithTooltip = false;\r\n    }\r\n    this.setToDoNothing();\r\n  }\r\n  prepareToShowTooltip(mouseEvent) {\r\n    if (this.state != 0 /* NOTHING */ || isLocked) {\r\n      return;\r\n    }\r\n    let delay = 0;\r\n    if (mouseEvent) {\r\n      delay = this.isLastTooltipHiddenRecently() ? 200 : this.getTooltipDelay(\"show\");\r\n    }\r\n    this.lastMouseEvent = mouseEvent || null;\r\n    this.showTooltipTimeoutId = window.setTimeout(this.showTooltip.bind(this), delay);\r\n    this.state = 1 /* WAITING_TO_SHOW */;\r\n  }\r\n  isLastTooltipHiddenRecently() {\r\n    const now = Date.now();\r\n    const then = lastTooltipHideTime;\r\n    return now - then < SHOW_QUICK_TOOLTIP_DIFF;\r\n  }\r\n  setToDoNothing(fromHideTooltip) {\r\n    if (!fromHideTooltip && this.state === 2 /* SHOWING */) {\r\n      this.hideTooltip();\r\n    }\r\n    if (this.onBodyScrollEventCallback) {\r\n      this.onBodyScrollEventCallback();\r\n      this.onBodyScrollEventCallback = void 0;\r\n    }\r\n    if (this.onColumnMovedEventCallback) {\r\n      this.onColumnMovedEventCallback();\r\n      this.onColumnMovedEventCallback = void 0;\r\n    }\r\n    if (this.onDocumentKeyDownCallback) {\r\n      this.onDocumentKeyDownCallback();\r\n      this.onDocumentKeyDownCallback = void 0;\r\n    }\r\n    this.clearTimeouts();\r\n    this.state = 0 /* NOTHING */;\r\n    this.lastMouseEvent = null;\r\n  }\r\n  showTooltip() {\r\n    const value = this.getTooltipValue();\r\n    const ctrl = this.tooltipCtrl;\r\n    if (!_exists(value) || ctrl.shouldDisplayTooltip && !ctrl.shouldDisplayTooltip()) {\r\n      this.setToDoNothing();\r\n      return;\r\n    }\r\n    const rowNode = ctrl.getRowNode?.();\r\n    const params = _addGridCommonParams(this.gos, {\r\n      location: ctrl.getLocation?.() ?? \"UNKNOWN\",\r\n      //'cell',\r\n      colDef: ctrl.getColDef?.(),\r\n      column: ctrl.getColumn?.(),\r\n      rowIndex: ctrl.getRowIndex?.(),\r\n      node: rowNode,\r\n      data: rowNode?.data,\r\n      value,\r\n      valueFormatted: ctrl.getValueFormatted?.(),\r\n      hideTooltipCallback: () => this.hideTooltip(true),\r\n      ...ctrl.getAdditionalParams?.() ?? {}\r\n    });\r\n    this.state = 2 /* SHOWING */;\r\n    this.tooltipInstanceCount++;\r\n    const callback = this.newTooltipComponentCallback.bind(this, this.tooltipInstanceCount);\r\n    const userDetails = _getTooltipCompDetails(this.userCompFactory, params);\r\n    userDetails?.newAgStackInstance().then(callback);\r\n  }\r\n  hideTooltip(forceHide) {\r\n    if (!forceHide && this.isInteractingWithTooltip) {\r\n      return;\r\n    }\r\n    if (this.tooltipComp) {\r\n      this.destroyTooltipComp();\r\n      lastTooltipHideTime = Date.now();\r\n    }\r\n    this.eventSvc.dispatchEvent({\r\n      type: \"tooltipHide\",\r\n      parentGui: this.tooltipCtrl.getGui()\r\n    });\r\n    if (forceHide) {\r\n      this.isInteractingWithTooltip = false;\r\n    }\r\n    this.setToDoNothing(true);\r\n  }\r\n  newTooltipComponentCallback(tooltipInstanceCopy, tooltipComp) {\r\n    const compNoLongerNeeded = this.state !== 2 /* SHOWING */ || this.tooltipInstanceCount !== tooltipInstanceCopy;\r\n    if (compNoLongerNeeded) {\r\n      this.destroyBean(tooltipComp);\r\n      return;\r\n    }\r\n    const eGui = tooltipComp.getGui();\r\n    this.tooltipComp = tooltipComp;\r\n    if (!eGui.classList.contains(\"ag-tooltip\")) {\r\n      eGui.classList.add(\"ag-tooltip-custom\");\r\n    }\r\n    if (this.tooltipTrigger === 0 /* HOVER */) {\r\n      eGui.classList.add(\"ag-tooltip-animate\");\r\n    }\r\n    if (this.interactionEnabled) {\r\n      eGui.classList.add(\"ag-tooltip-interactive\");\r\n    }\r\n    const translate = this.getLocaleTextFunc();\r\n    const addPopupRes = this.popupSvc?.addPopup({\r\n      eChild: eGui,\r\n      ariaLabel: translate(\"ariaLabelTooltip\", \"Tooltip\")\r\n    });\r\n    if (addPopupRes) {\r\n      this.tooltipPopupDestroyFunc = addPopupRes.hideFunc;\r\n    }\r\n    this.positionTooltip();\r\n    if (this.tooltipTrigger === 1 /* FOCUS */) {\r\n      const listener = () => this.setToDoNothing();\r\n      [this.onBodyScrollEventCallback, this.onColumnMovedEventCallback] = this.addManagedEventListeners({\r\n        bodyScroll: listener,\r\n        columnMoved: listener\r\n      });\r\n    }\r\n    if (this.interactionEnabled) {\r\n      [this.tooltipMouseEnterListener, this.tooltipMouseLeaveListener] = this.addManagedElementListeners(eGui, {\r\n        mouseenter: this.onTooltipMouseEnter.bind(this),\r\n        mouseleave: this.onTooltipMouseLeave.bind(this)\r\n      });\r\n      [this.onDocumentKeyDownCallback] = this.addManagedElementListeners(_getDocument(this.beans), {\r\n        keydown: (e) => {\r\n          if (!eGui.contains(e?.target)) {\r\n            this.onKeyDown();\r\n          }\r\n        }\r\n      });\r\n      if (this.tooltipTrigger === 1 /* FOCUS */) {\r\n        [this.tooltipFocusInListener, this.tooltipFocusOutListener] = this.addManagedElementListeners(eGui, {\r\n          focusin: this.onTooltipFocusIn.bind(this),\r\n          focusout: this.onTooltipFocusOut.bind(this)\r\n        });\r\n      }\r\n    }\r\n    this.eventSvc.dispatchEvent({\r\n      type: \"tooltipShow\",\r\n      tooltipGui: eGui,\r\n      parentGui: this.tooltipCtrl.getGui()\r\n    });\r\n    this.startHideTimeout();\r\n  }\r\n  onTooltipMouseEnter() {\r\n    this.isInteractingWithTooltip = true;\r\n    this.unlockService();\r\n  }\r\n  onTooltipMouseLeave() {\r\n    if (this.isTooltipFocused()) {\r\n      return;\r\n    }\r\n    this.isInteractingWithTooltip = false;\r\n    this.lockService();\r\n  }\r\n  onTooltipFocusIn() {\r\n    this.isInteractingWithTooltip = true;\r\n  }\r\n  isTooltipFocused() {\r\n    const tooltipGui = this.tooltipComp?.getGui();\r\n    const activeEl = _getActiveDomElement(this.beans);\r\n    return !!tooltipGui && tooltipGui.contains(activeEl);\r\n  }\r\n  onTooltipFocusOut(e) {\r\n    const parentGui = this.tooltipCtrl.getGui();\r\n    if (this.isTooltipFocused()) {\r\n      return;\r\n    }\r\n    this.isInteractingWithTooltip = false;\r\n    if (parentGui.contains(e.relatedTarget)) {\r\n      this.startHideTimeout();\r\n    } else {\r\n      this.hideTooltip();\r\n    }\r\n  }\r\n  positionTooltip() {\r\n    const params = {\r\n      type: \"tooltip\",\r\n      ePopup: this.tooltipComp.getGui(),\r\n      nudgeY: 18,\r\n      skipObserver: this.tooltipMouseTrack\r\n    };\r\n    if (this.lastMouseEvent) {\r\n      this.popupSvc?.positionPopupUnderMouseEvent({\r\n        ...params,\r\n        mouseEvent: this.lastMouseEvent\r\n      });\r\n    } else {\r\n      this.popupSvc?.positionPopupByComponent({\r\n        ...params,\r\n        eventSource: this.tooltipCtrl.getGui(),\r\n        position: \"under\",\r\n        keepWithinBounds: true,\r\n        nudgeY: 5\r\n      });\r\n    }\r\n  }\r\n  destroyTooltipComp() {\r\n    this.tooltipComp.getGui().classList.add(\"ag-tooltip-hiding\");\r\n    const tooltipPopupDestroyFunc = this.tooltipPopupDestroyFunc;\r\n    const tooltipComp = this.tooltipComp;\r\n    const delay = this.tooltipTrigger === 0 /* HOVER */ ? FADE_OUT_TOOLTIP_TIMEOUT : 0;\r\n    window.setTimeout(() => {\r\n      tooltipPopupDestroyFunc();\r\n      this.destroyBean(tooltipComp);\r\n    }, delay);\r\n    this.clearTooltipListeners();\r\n    this.tooltipPopupDestroyFunc = void 0;\r\n    this.tooltipComp = void 0;\r\n  }\r\n  clearTooltipListeners() {\r\n    [\r\n      this.tooltipMouseEnterListener,\r\n      this.tooltipMouseLeaveListener,\r\n      this.tooltipFocusInListener,\r\n      this.tooltipFocusOutListener\r\n    ].forEach((listener) => {\r\n      if (listener) {\r\n        listener();\r\n      }\r\n    });\r\n    this.tooltipMouseEnterListener = this.tooltipMouseLeaveListener = this.tooltipFocusInListener = this.tooltipFocusOutListener = null;\r\n  }\r\n  lockService() {\r\n    isLocked = true;\r\n    this.interactiveTooltipTimeoutId = window.setTimeout(() => {\r\n      this.unlockService();\r\n      this.setToDoNothing();\r\n    }, INTERACTIVE_HIDE_DELAY);\r\n  }\r\n  unlockService() {\r\n    isLocked = false;\r\n    this.clearInteractiveTimeout();\r\n  }\r\n  startHideTimeout() {\r\n    this.clearHideTimeout();\r\n    this.hideTooltipTimeoutId = window.setTimeout(this.hideTooltip.bind(this), this.getTooltipDelay(\"hide\"));\r\n  }\r\n  clearShowTimeout() {\r\n    if (!this.showTooltipTimeoutId) {\r\n      return;\r\n    }\r\n    window.clearTimeout(this.showTooltipTimeoutId);\r\n    this.showTooltipTimeoutId = void 0;\r\n  }\r\n  clearHideTimeout() {\r\n    if (!this.hideTooltipTimeoutId) {\r\n      return;\r\n    }\r\n    window.clearTimeout(this.hideTooltipTimeoutId);\r\n    this.hideTooltipTimeoutId = void 0;\r\n  }\r\n  clearInteractiveTimeout() {\r\n    if (!this.interactiveTooltipTimeoutId) {\r\n      return;\r\n    }\r\n    window.clearTimeout(this.interactiveTooltipTimeoutId);\r\n    this.interactiveTooltipTimeoutId = void 0;\r\n  }\r\n  clearTimeouts() {\r\n    this.clearShowTimeout();\r\n    this.clearHideTimeout();\r\n    this.clearInteractiveTimeout();\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/tooltip/tooltipFeature.ts\r\nfunction _isShowTooltipWhenTruncated(gos) {\r\n  return gos.get(\"tooltipShowMode\") === \"whenTruncated\";\r\n}\r\nfunction _getShouldDisplayTooltip(gos, getElement2) {\r\n  return _isShowTooltipWhenTruncated(gos) ? _isElementOverflowingCallback(getElement2) : void 0;\r\n}\r\nvar TooltipFeature = class extends BeanStub {\r\n  constructor(ctrl, beans) {\r\n    super();\r\n    this.ctrl = ctrl;\r\n    if (beans) {\r\n      this.beans = beans;\r\n    }\r\n  }\r\n  postConstruct() {\r\n    this.refreshTooltip();\r\n  }\r\n  /**\r\n   *\r\n   * @param tooltip The tooltip value\r\n   * @param allowEmptyString Set it to true to allow the title to be set to `''`. This is necessary\r\n   * when the browser adds a default tooltip the element and the tooltip service will be displayed\r\n   * next to a browser tooltip causing confusion.\r\n   */\r\n  setBrowserTooltip(tooltip, allowEmptyString) {\r\n    const name = \"title\";\r\n    const eGui = this.ctrl.getGui();\r\n    if (!eGui) {\r\n      return;\r\n    }\r\n    if (tooltip != null && (tooltip != \"\" || allowEmptyString)) {\r\n      eGui.setAttribute(name, tooltip);\r\n    } else {\r\n      eGui.removeAttribute(name);\r\n    }\r\n  }\r\n  updateTooltipText() {\r\n    const { getTooltipValue } = this.ctrl;\r\n    if (getTooltipValue) {\r\n      this.tooltip = getTooltipValue();\r\n    }\r\n  }\r\n  createTooltipFeatureIfNeeded() {\r\n    if (this.tooltipManager == null) {\r\n      this.tooltipManager = this.createBean(\r\n        new TooltipStateManager(this.ctrl, () => this.tooltip),\r\n        this.beans.context\r\n      );\r\n    }\r\n  }\r\n  setTooltipAndRefresh(tooltip) {\r\n    this.tooltip = tooltip;\r\n    this.refreshTooltip();\r\n  }\r\n  refreshTooltip(clearWithEmptyString) {\r\n    this.browserTooltips = this.beans.gos.get(\"enableBrowserTooltips\");\r\n    this.updateTooltipText();\r\n    if (this.browserTooltips) {\r\n      this.setBrowserTooltip(this.tooltip);\r\n      this.tooltipManager = this.destroyBean(this.tooltipManager, this.beans.context);\r\n    } else {\r\n      this.setBrowserTooltip(clearWithEmptyString ? \"\" : null, clearWithEmptyString);\r\n      this.createTooltipFeatureIfNeeded();\r\n    }\r\n  }\r\n  destroy() {\r\n    this.tooltipManager = this.destroyBean(this.tooltipManager, this.beans.context);\r\n    super.destroy();\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/utils/number.ts\r\nfunction _formatNumberCommas(value, getLocaleTextFunc) {\r\n  if (typeof value !== \"number\") {\r\n    return \"\";\r\n  }\r\n  const localeTextFunc = getLocaleTextFunc();\r\n  const thousandSeparator = localeTextFunc(\"thousandSeparator\", \",\");\r\n  const decimalSeparator = localeTextFunc(\"decimalSeparator\", \".\");\r\n  return value.toString().replace(\".\", decimalSeparator).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, `$1${thousandSeparator}`);\r\n}\r\n\r\n// packages/ag-grid-community/src/export/baseCreator.ts\r\nvar BaseCreator = class extends BeanStub {\r\n  getFileName(fileName) {\r\n    const extension = this.getDefaultFileExtension();\r\n    if (fileName == null || !fileName.length) {\r\n      fileName = this.getDefaultFileName();\r\n    }\r\n    return fileName.indexOf(\".\") === -1 ? `${fileName}.${extension}` : fileName;\r\n  }\r\n  getData(params) {\r\n    const serializingSession = this.createSerializingSession(params);\r\n    return this.beans.gridSerializer.serialize(serializingSession, params);\r\n  }\r\n  getDefaultFileName() {\r\n    return `export.${this.getDefaultFileExtension()}`;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/export/baseGridSerializingSession.ts\r\nvar BaseGridSerializingSession = class {\r\n  constructor(config) {\r\n    const {\r\n      colModel,\r\n      rowGroupColsSvc,\r\n      colNames,\r\n      valueSvc,\r\n      gos,\r\n      processCellCallback,\r\n      processHeaderCallback,\r\n      processGroupHeaderCallback,\r\n      processRowGroupCallback\r\n    } = config;\r\n    this.colModel = colModel;\r\n    this.rowGroupColsSvc = rowGroupColsSvc;\r\n    this.colNames = colNames;\r\n    this.valueSvc = valueSvc;\r\n    this.gos = gos;\r\n    this.processCellCallback = processCellCallback;\r\n    this.processHeaderCallback = processHeaderCallback;\r\n    this.processGroupHeaderCallback = processGroupHeaderCallback;\r\n    this.processRowGroupCallback = processRowGroupCallback;\r\n  }\r\n  prepare(_columnsToExport) {\r\n  }\r\n  extractHeaderValue(column) {\r\n    const value = this.getHeaderName(this.processHeaderCallback, column);\r\n    return value ?? \"\";\r\n  }\r\n  extractRowCellValue(column, currentColumnIndex, accumulatedRowIndex, type, node) {\r\n    const isFullWidthGroup = currentColumnIndex === 0 && _isFullWidthGroupRow(this.gos, node, this.colModel.isPivotMode());\r\n    if (this.processRowGroupCallback && (this.gos.get(\"treeData\") || node.group) && (column.isRowGroupDisplayed(node.rowGroupColumn?.getColId() ?? \"\") || isFullWidthGroup)) {\r\n      return { value: this.processRowGroupCallback(_addGridCommonParams(this.gos, { column, node })) ?? \"\" };\r\n    }\r\n    if (this.processCellCallback) {\r\n      return {\r\n        value: this.processCellCallback(\r\n          _addGridCommonParams(this.gos, {\r\n            accumulatedRowIndex,\r\n            column,\r\n            node,\r\n            value: this.valueSvc.getValueForDisplay(column, node, void 0, void 0).value,\r\n            type,\r\n            parseValue: (valueToParse) => this.valueSvc.parseValue(\r\n              column,\r\n              node,\r\n              valueToParse,\r\n              this.valueSvc.getValue(column, node, void 0)\r\n            ),\r\n            formatValue: (valueToFormat) => this.valueSvc.formatValue(column, node, valueToFormat) ?? valueToFormat\r\n          })\r\n        ) ?? \"\"\r\n      };\r\n    }\r\n    const isTreeData = this.gos.get(\"treeData\");\r\n    const valueService = this.valueSvc;\r\n    const isGrandTotalRow = node.level === -1 && node.footer;\r\n    const isMultiAutoCol = column.colDef.showRowGroup === true && (node.group || isTreeData);\r\n    if (!isGrandTotalRow && (isFullWidthGroup || isMultiAutoCol)) {\r\n      let concatenatedGroupValue = \"\";\r\n      let pointer = node;\r\n      while (pointer && pointer.level !== -1) {\r\n        const { value: value2, valueFormatted: valueFormatted2 } = valueService.getValueForDisplay(\r\n          isFullWidthGroup ? void 0 : column,\r\n          // full width group doesn't have a column\r\n          pointer,\r\n          true,\r\n          true\r\n        );\r\n        concatenatedGroupValue = ` -> ${valueFormatted2 ?? value2 ?? \"\"}${concatenatedGroupValue}`;\r\n        pointer = pointer.parent;\r\n      }\r\n      return {\r\n        value: concatenatedGroupValue,\r\n        // don't return the unformatted value; as if the grid detects number it'll not use the concatenated string\r\n        valueFormatted: concatenatedGroupValue\r\n      };\r\n    }\r\n    const { value, valueFormatted } = valueService.getValueForDisplay(column, node, true, true);\r\n    return {\r\n      value: value ?? \"\",\r\n      valueFormatted\r\n    };\r\n  }\r\n  getHeaderName(callback, column) {\r\n    if (callback) {\r\n      return callback(_addGridCommonParams(this.gos, { column }));\r\n    }\r\n    return this.colNames.getDisplayNameForColumn(column, \"csv\", true);\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/export/downloader.ts\r\nfunction _downloadFile(fileName, content) {\r\n  const win = document.defaultView || window;\r\n  if (!win) {\r\n    _warn(52);\r\n    return;\r\n  }\r\n  const element = document.createElement(\"a\");\r\n  const url = win.URL.createObjectURL(content);\r\n  element.setAttribute(\"href\", url);\r\n  element.setAttribute(\"download\", fileName);\r\n  element.style.display = \"none\";\r\n  document.body.appendChild(element);\r\n  element.dispatchEvent(\r\n    new MouseEvent(\"click\", {\r\n      bubbles: false,\r\n      cancelable: true,\r\n      view: win\r\n    })\r\n  );\r\n  document.body.removeChild(element);\r\n  win.setTimeout(() => {\r\n    win.URL.revokeObjectURL(url);\r\n  }, 0);\r\n}\r\n\r\n// packages/ag-grid-community/src/gridOptionsInitial.ts\r\nvar INITIAL_GRID_OPTION_KEYS = {\r\n  enableBrowserTooltips: true,\r\n  tooltipTrigger: true,\r\n  tooltipMouseTrack: true,\r\n  tooltipShowMode: true,\r\n  tooltipInteraction: true,\r\n  defaultColGroupDef: true,\r\n  suppressAutoSize: true,\r\n  skipHeaderOnAutoSize: true,\r\n  autoSizeStrategy: true,\r\n  components: true,\r\n  stopEditingWhenCellsLoseFocus: true,\r\n  undoRedoCellEditing: true,\r\n  undoRedoCellEditingLimit: true,\r\n  excelStyles: true,\r\n  cacheQuickFilter: true,\r\n  customChartThemes: true,\r\n  chartThemeOverrides: true,\r\n  chartToolPanelsDef: true,\r\n  loadingCellRendererSelector: true,\r\n  localeText: true,\r\n  keepDetailRows: true,\r\n  keepDetailRowsCount: true,\r\n  detailRowHeight: true,\r\n  detailRowAutoHeight: true,\r\n  tabIndex: true,\r\n  valueCache: true,\r\n  valueCacheNeverExpires: true,\r\n  enableCellExpressions: true,\r\n  suppressTouch: true,\r\n  suppressBrowserResizeObserver: true,\r\n  suppressPropertyNamesCheck: true,\r\n  debug: true,\r\n  dragAndDropImageComponent: true,\r\n  loadingOverlayComponent: true,\r\n  suppressLoadingOverlay: true,\r\n  noRowsOverlayComponent: true,\r\n  paginationPageSizeSelector: true,\r\n  paginateChildRows: true,\r\n  pivotPanelShow: true,\r\n  pivotSuppressAutoColumn: true,\r\n  suppressExpandablePivotGroups: true,\r\n  aggFuncs: true,\r\n  allowShowChangeAfterFilter: true,\r\n  ensureDomOrder: true,\r\n  enableRtl: true,\r\n  suppressColumnVirtualisation: true,\r\n  suppressMaxRenderedRowRestriction: true,\r\n  suppressRowVirtualisation: true,\r\n  rowDragText: true,\r\n  groupLockGroupColumns: true,\r\n  suppressGroupRowsSticky: true,\r\n  rowModelType: true,\r\n  cacheOverflowSize: true,\r\n  infiniteInitialRowCount: true,\r\n  serverSideInitialRowCount: true,\r\n  maxBlocksInCache: true,\r\n  maxConcurrentDatasourceRequests: true,\r\n  blockLoadDebounceMillis: true,\r\n  serverSideOnlyRefreshFilteredGroups: true,\r\n  serverSidePivotResultFieldSeparator: true,\r\n  viewportRowModelPageSize: true,\r\n  viewportRowModelBufferSize: true,\r\n  debounceVerticalScrollbar: true,\r\n  suppressAnimationFrame: true,\r\n  suppressPreventDefaultOnMouseWheel: true,\r\n  scrollbarWidth: true,\r\n  icons: true,\r\n  suppressRowTransform: true,\r\n  gridId: true,\r\n  enableGroupEdit: true,\r\n  initialState: true,\r\n  processUnpinnedColumns: true,\r\n  createChartContainer: true,\r\n  getLocaleText: true,\r\n  getRowId: true,\r\n  reactiveCustomComponents: true,\r\n  renderingMode: true,\r\n  columnMenu: true,\r\n  suppressSetFilterByDefault: true,\r\n  getDataPath: true,\r\n  enableCellSpan: true,\r\n  enableFilterHandlers: true,\r\n  filterHandlers: true\r\n};\r\n\r\n// packages/ag-grid-community/src/validation/apiFunctionValidator.ts\r\nvar clientSide = \"clientSide\";\r\nvar serverSide = \"serverSide\";\r\nvar infinite = \"infinite\";\r\nvar functionRowModels = {\r\n  onGroupExpandedOrCollapsed: [clientSide],\r\n  refreshClientSideRowModel: [clientSide],\r\n  isRowDataEmpty: [clientSide],\r\n  forEachLeafNode: [clientSide],\r\n  forEachNodeAfterFilter: [clientSide],\r\n  forEachNodeAfterFilterAndSort: [clientSide],\r\n  resetRowHeights: [clientSide],\r\n  applyTransaction: [clientSide],\r\n  applyTransactionAsync: [clientSide],\r\n  flushAsyncTransactions: [clientSide],\r\n  getBestCostNodeSelection: [clientSide],\r\n  getServerSideSelectionState: [serverSide],\r\n  setServerSideSelectionState: [serverSide],\r\n  applyServerSideTransaction: [serverSide],\r\n  applyServerSideTransactionAsync: [serverSide],\r\n  applyServerSideRowData: [serverSide],\r\n  retryServerSideLoads: [serverSide],\r\n  flushServerSideAsyncTransactions: [serverSide],\r\n  refreshServerSide: [serverSide],\r\n  getServerSideGroupLevelState: [serverSide],\r\n  refreshInfiniteCache: [infinite],\r\n  purgeInfiniteCache: [infinite],\r\n  getInfiniteRowCount: [infinite],\r\n  isLastRowIndexKnown: [infinite, serverSide],\r\n  expandAll: [clientSide, serverSide],\r\n  collapseAll: [clientSide, serverSide],\r\n  onRowHeightChanged: [clientSide, serverSide],\r\n  setRowCount: [infinite, serverSide],\r\n  getCacheBlockState: [infinite, serverSide]\r\n};\r\nvar deprecatedFunctions = {\r\n  showLoadingOverlay: {\r\n    version: \"v32\",\r\n    message: '`showLoadingOverlay` is deprecated. Use the grid option \"loading\"=true instead or setGridOption(\"loading\", true).'\r\n  },\r\n  clearRangeSelection: {\r\n    version: \"v32.2\",\r\n    message: \"Use `clearCellSelection` instead.\"\r\n  },\r\n  getInfiniteRowCount: {\r\n    version: \"v32.2\",\r\n    old: \"getInfiniteRowCount()\",\r\n    new: \"getDisplayedRowCount()\"\r\n  },\r\n  selectAllFiltered: {\r\n    version: \"v33\",\r\n    old: \"selectAllFiltered()\",\r\n    new: 'selectAll(\"filtered\")'\r\n  },\r\n  deselectAllFiltered: {\r\n    version: \"v33\",\r\n    old: \"deselectAllFiltered()\",\r\n    new: 'deselectAll(\"filtered\")'\r\n  },\r\n  selectAllOnCurrentPage: {\r\n    version: \"v33\",\r\n    old: \"selectAllOnCurrentPage()\",\r\n    new: 'selectAll(\"currentPage\")'\r\n  },\r\n  deselectAllOnCurrentPage: {\r\n    version: \"v33\",\r\n    old: \"deselectAllOnCurrentPage()\",\r\n    new: 'deselectAll(\"currentPage\")'\r\n  }\r\n};\r\nfunction validateApiFunction(functionName, apiFunction, beans) {\r\n  const deprecation = deprecatedFunctions[functionName];\r\n  if (deprecation) {\r\n    const { version, new: replacement, old, message } = deprecation;\r\n    const apiMethod = old ?? functionName;\r\n    return (...args) => {\r\n      const replacementMessage = replacement ? `Please use ${replacement} instead. ` : \"\";\r\n      _warnOnce(`Since ${version} api.${apiMethod} is deprecated. ${replacementMessage}${message ?? \"\"}`);\r\n      return apiFunction.apply(apiFunction, args);\r\n    };\r\n  }\r\n  const rowModels = functionRowModels[functionName];\r\n  if (rowModels) {\r\n    return (...args) => {\r\n      const rowModel = beans.rowModel.getType();\r\n      if (!rowModels.includes(rowModel)) {\r\n        _errorOnce(\r\n          `api.${functionName} can only be called when gridOptions.rowModelType is ${rowModels.join(\" or \")}`\r\n        );\r\n        return void 0;\r\n      }\r\n      return apiFunction.apply(apiFunction, args);\r\n    };\r\n  }\r\n  return apiFunction;\r\n}\r\n\r\n// packages/ag-grid-community/src/validation/rules/dynamicBeanValidations.ts\r\nvar DYNAMIC_BEAN_MODULES = {\r\n  detailCellRendererCtrl: \"SharedMasterDetail\",\r\n  dndSourceComp: \"DragAndDrop\",\r\n  fillHandle: \"CellSelection\",\r\n  groupCellRendererCtrl: \"GroupCellRenderer\",\r\n  headerFilterCellCtrl: \"ColumnFilter\",\r\n  headerGroupCellCtrl: \"ColumnGroup\",\r\n  rangeHandle: \"CellSelection\",\r\n  tooltipFeature: \"Tooltip\",\r\n  groupStrategy: \"RowGrouping\",\r\n  treeGroupStrategy: \"TreeData\",\r\n  rowNumberRowResizer: \"RowNumbers\",\r\n  singleCell: \"EditCore\",\r\n  fullRow: \"EditCore\",\r\n  agSetColumnFilterHandler: \"SetFilter\",\r\n  agMultiColumnFilterHandler: \"MultiFilter\",\r\n  agGroupColumnFilterHandler: \"GroupFilter\",\r\n  agNumberColumnFilterHandler: \"NumberFilter\",\r\n  agDateColumnFilterHandler: \"DateFilter\",\r\n  agTextColumnFilterHandler: \"TextFilter\"\r\n};\r\n\r\n// packages/ag-grid-community/src/validation/rules/iconValidations.ts\r\nvar ICON_VALUES = {\r\n  expanded: 1,\r\n  contracted: 1,\r\n  \"tree-closed\": 1,\r\n  \"tree-open\": 1,\r\n  \"tree-indeterminate\": 1,\r\n  pin: 1,\r\n  \"eye-slash\": 1,\r\n  arrows: 1,\r\n  left: 1,\r\n  right: 1,\r\n  group: 1,\r\n  aggregation: 1,\r\n  pivot: 1,\r\n  \"not-allowed\": 1,\r\n  chart: 1,\r\n  cross: 1,\r\n  cancel: 1,\r\n  tick: 1,\r\n  first: 1,\r\n  previous: 1,\r\n  next: 1,\r\n  last: 1,\r\n  linked: 1,\r\n  unlinked: 1,\r\n  \"color-picker\": 1,\r\n  loading: 1,\r\n  menu: 1,\r\n  \"menu-alt\": 1,\r\n  filter: 1,\r\n  \"filter-add\": 1,\r\n  columns: 1,\r\n  maximize: 1,\r\n  minimize: 1,\r\n  copy: 1,\r\n  cut: 1,\r\n  paste: 1,\r\n  grip: 1,\r\n  save: 1,\r\n  csv: 1,\r\n  excel: 1,\r\n  \"small-down\": 1,\r\n  \"small-left\": 1,\r\n  \"small-right\": 1,\r\n  \"small-up\": 1,\r\n  asc: 1,\r\n  desc: 1,\r\n  none: 1,\r\n  up: 1,\r\n  down: 1,\r\n  plus: 1,\r\n  minus: 1,\r\n  settings: 1,\r\n  \"checkbox-checked\": 1,\r\n  \"checkbox-indeterminate\": 1,\r\n  \"checkbox-unchecked\": 1,\r\n  \"radio-button-on\": 1,\r\n  \"radio-button-off\": 1,\r\n  eye: 1,\r\n  \"column-arrow\": 1,\r\n  \"un-pin\": 1,\r\n  \"pinned-top\": 1,\r\n  \"pinned-bottom\": 1,\r\n  \"chevron-up\": 1,\r\n  \"chevron-down\": 1,\r\n  \"chevron-left\": 1,\r\n  \"chevron-right\": 1,\r\n  edit: 1\r\n};\r\nvar ICON_MODULES = {\r\n  chart: \"MenuCore\",\r\n  cancel: \"EnterpriseCore\",\r\n  first: \"Pagination\",\r\n  previous: \"Pagination\",\r\n  next: \"Pagination\",\r\n  last: \"Pagination\",\r\n  linked: \"IntegratedCharts\",\r\n  loadingMenuItems: \"MenuCore\",\r\n  unlinked: \"IntegratedCharts\",\r\n  menu: \"ColumnHeaderComp\",\r\n  legacyMenu: \"ColumnMenu\",\r\n  filter: \"ColumnFilter\",\r\n  filterActive: \"ColumnFilter\",\r\n  filterAdd: \"NewFiltersToolPanel\",\r\n  filterCardCollapse: \"NewFiltersToolPanel\",\r\n  filterCardExpand: \"NewFiltersToolPanel\",\r\n  filterCardEditing: \"NewFiltersToolPanel\",\r\n  filterTab: \"ColumnMenu\",\r\n  filtersToolPanel: \"FiltersToolPanel\",\r\n  columns: [\"MenuCore\"],\r\n  columnsToolPanel: [\"ColumnsToolPanel\"],\r\n  maximize: \"EnterpriseCore\",\r\n  minimize: \"EnterpriseCore\",\r\n  save: \"MenuCore\",\r\n  columnGroupOpened: \"ColumnGroupHeaderComp\",\r\n  columnGroupClosed: \"ColumnGroupHeaderComp\",\r\n  accordionOpen: \"EnterpriseCore\",\r\n  accordionClosed: \"EnterpriseCore\",\r\n  accordionIndeterminate: \"EnterpriseCore\",\r\n  columnSelectClosed: [\"ColumnsToolPanel\", \"ColumnMenu\"],\r\n  columnSelectOpen: [\"ColumnsToolPanel\", \"ColumnMenu\"],\r\n  columnSelectIndeterminate: [\"ColumnsToolPanel\", \"ColumnMenu\"],\r\n  columnMovePin: \"SharedDragAndDrop\",\r\n  columnMoveHide: \"SharedDragAndDrop\",\r\n  columnMoveMove: \"SharedDragAndDrop\",\r\n  columnMoveLeft: \"SharedDragAndDrop\",\r\n  columnMoveRight: \"SharedDragAndDrop\",\r\n  columnMoveGroup: \"SharedDragAndDrop\",\r\n  columnMoveValue: \"SharedDragAndDrop\",\r\n  columnMovePivot: \"SharedDragAndDrop\",\r\n  dropNotAllowed: \"SharedDragAndDrop\",\r\n  ensureColumnVisible: [\"ColumnsToolPanel\", \"ColumnMenu\"],\r\n  groupContracted: \"GroupCellRenderer\",\r\n  groupExpanded: \"GroupCellRenderer\",\r\n  setFilterGroupClosed: \"SetFilter\",\r\n  setFilterGroupOpen: \"SetFilter\",\r\n  setFilterGroupIndeterminate: \"SetFilter\",\r\n  setFilterLoading: \"SetFilter\",\r\n  close: \"EnterpriseCore\",\r\n  check: \"MenuItem\",\r\n  colorPicker: \"CommunityCore\",\r\n  groupLoading: \"LoadingCellRenderer\",\r\n  menuAlt: \"ColumnHeaderComp\",\r\n  menuPin: \"MenuCore\",\r\n  menuValue: \"MenuCore\",\r\n  menuAddRowGroup: [\"MenuCore\", \"ColumnsToolPanel\"],\r\n  menuRemoveRowGroup: [\"MenuCore\", \"ColumnsToolPanel\"],\r\n  clipboardCopy: \"MenuCore\",\r\n  clipboardCut: \"MenuCore\",\r\n  clipboardPaste: \"MenuCore\",\r\n  pivotPanel: [\"ColumnsToolPanel\", \"RowGroupingPanel\"],\r\n  rowGroupPanel: [\"ColumnsToolPanel\", \"RowGroupingPanel\"],\r\n  valuePanel: \"ColumnsToolPanel\",\r\n  columnDrag: \"EnterpriseCore\",\r\n  rowDrag: [\"RowDrag\", \"DragAndDrop\"],\r\n  csvExport: \"MenuCore\",\r\n  excelExport: \"MenuCore\",\r\n  smallDown: \"CommunityCore\",\r\n  selectOpen: \"CommunityCore\",\r\n  richSelectOpen: \"RichSelect\",\r\n  richSelectRemove: \"RichSelect\",\r\n  smallLeft: \"CommunityCore\",\r\n  smallRight: \"CommunityCore\",\r\n  subMenuOpen: \"MenuItem\",\r\n  subMenuOpenRtl: \"MenuItem\",\r\n  panelDelimiter: \"RowGroupingPanel\",\r\n  panelDelimiterRtl: \"RowGroupingPanel\",\r\n  smallUp: \"CommunityCore\",\r\n  sortAscending: [\"MenuCore\", \"Sort\"],\r\n  sortDescending: [\"MenuCore\", \"Sort\"],\r\n  sortUnSort: [\"MenuCore\", \"Sort\"],\r\n  advancedFilterBuilder: \"AdvancedFilter\",\r\n  advancedFilterBuilderDrag: \"AdvancedFilter\",\r\n  advancedFilterBuilderInvalid: \"AdvancedFilter\",\r\n  advancedFilterBuilderMoveUp: \"AdvancedFilter\",\r\n  advancedFilterBuilderMoveDown: \"AdvancedFilter\",\r\n  advancedFilterBuilderAdd: \"AdvancedFilter\",\r\n  advancedFilterBuilderRemove: \"AdvancedFilter\",\r\n  advancedFilterBuilderSelectOpen: \"AdvancedFilter\",\r\n  chartsMenu: \"IntegratedCharts\",\r\n  chartsMenuEdit: \"IntegratedCharts\",\r\n  chartsMenuAdvancedSettings: \"IntegratedCharts\",\r\n  chartsMenuAdd: \"IntegratedCharts\",\r\n  chartsColorPicker: \"IntegratedCharts\",\r\n  chartsThemePrevious: \"IntegratedCharts\",\r\n  chartsThemeNext: \"IntegratedCharts\",\r\n  chartsDownload: \"IntegratedCharts\",\r\n  checkboxChecked: \"CommunityCore\",\r\n  checkboxIndeterminate: \"CommunityCore\",\r\n  checkboxUnchecked: \"CommunityCore\",\r\n  radioButtonOn: \"CommunityCore\",\r\n  radioButtonOff: \"CommunityCore\",\r\n  rowPin: \"PinnedRow\",\r\n  rowUnpin: \"PinnedRow\",\r\n  rowPinBottom: \"PinnedRow\",\r\n  rowPinTop: \"PinnedRow\"\r\n};\r\nvar DEPRECATED_ICONS_V33 = /* @__PURE__ */ new Set([\r\n  \"colorPicker\",\r\n  \"smallUp\",\r\n  \"checkboxChecked\",\r\n  \"checkboxIndeterminate\",\r\n  \"checkboxUnchecked\",\r\n  \"radioButtonOn\",\r\n  \"radioButtonOff\",\r\n  \"smallDown\",\r\n  \"smallLeft\",\r\n  \"smallRight\"\r\n]);\r\n\r\n// packages/ag-grid-community/src/validation/validationService.ts\r\nvar ValidationService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"validation\";\r\n  }\r\n  wireBeans(beans) {\r\n    this.gridOptions = beans.gridOptions;\r\n    provideValidationServiceLogger(this);\r\n  }\r\n  warnOnInitialPropertyUpdate(source, key) {\r\n    if (source === \"api\" && INITIAL_GRID_OPTION_KEYS[key]) {\r\n      _warn(22, { key });\r\n    }\r\n  }\r\n  processGridOptions(options) {\r\n    this.processOptions(options, GRID_OPTIONS_VALIDATORS());\r\n  }\r\n  validateApiFunction(functionName, apiFunction) {\r\n    return validateApiFunction(functionName, apiFunction, this.beans);\r\n  }\r\n  missingUserComponent(propertyName, componentName, agGridDefaults, jsComps) {\r\n    const moduleForComponent = USER_COMP_MODULES[componentName];\r\n    if (moduleForComponent) {\r\n      this.gos.assertModuleRegistered(\r\n        moduleForComponent,\r\n        `AG Grid '${propertyName}' component: ${componentName}`\r\n      );\r\n    } else {\r\n      _warn(101, {\r\n        propertyName,\r\n        componentName,\r\n        agGridDefaults,\r\n        jsComps\r\n      });\r\n    }\r\n  }\r\n  missingDynamicBean(beanName) {\r\n    const moduleName = DYNAMIC_BEAN_MODULES[beanName];\r\n    return moduleName ? _errMsg(200, {\r\n      ...this.gos.getModuleErrorParams(),\r\n      moduleName,\r\n      reasonOrId: beanName\r\n    }) : void 0;\r\n  }\r\n  checkRowEvents(eventType) {\r\n    if (DEPRECATED_ROW_NODE_EVENTS.has(eventType)) {\r\n      _warn(10, { eventType });\r\n    }\r\n  }\r\n  validateIcon(iconName) {\r\n    if (DEPRECATED_ICONS_V33.has(iconName)) {\r\n      _warn(43, { iconName });\r\n    }\r\n    if (ICON_VALUES[iconName]) {\r\n      return;\r\n    }\r\n    const moduleName = ICON_MODULES[iconName];\r\n    if (moduleName) {\r\n      _error(200, {\r\n        reasonOrId: `icon '${iconName}'`,\r\n        moduleName,\r\n        gridScoped: _areModulesGridScoped(),\r\n        gridId: this.beans.context.getGridId(),\r\n        rowModelType: this.gos.get(\"rowModelType\"),\r\n        additionalText: \"Alternatively, use the CSS icon name directly.\"\r\n      });\r\n      return;\r\n    }\r\n    _warn(134, { iconName });\r\n  }\r\n  isProvidedUserComp(compName) {\r\n    return !!USER_COMP_MODULES[compName];\r\n  }\r\n  /** Should only be called via the GridOptionsService */\r\n  validateColDef(colDef) {\r\n    this.processOptions(colDef, COL_DEF_VALIDATORS());\r\n  }\r\n  processOptions(options, validator) {\r\n    const { validations, deprecations, allProperties, propertyExceptions, objectName, docsUrl } = validator;\r\n    if (allProperties && this.gridOptions.suppressPropertyNamesCheck !== true) {\r\n      this.checkProperties(\r\n        options,\r\n        [...propertyExceptions ?? [], ...Object.keys(deprecations)],\r\n        allProperties,\r\n        objectName,\r\n        docsUrl\r\n      );\r\n    }\r\n    const warnings = /* @__PURE__ */ new Set();\r\n    const optionKeys = Object.keys(options);\r\n    optionKeys.forEach((key) => {\r\n      const deprecation = deprecations[key];\r\n      if (deprecation) {\r\n        const { message, version } = deprecation;\r\n        warnings.add(`As of v${version}, ${String(key)} is deprecated. ${message ?? \"\"}`);\r\n      }\r\n      const value = options[key];\r\n      if (value == null || value === false) {\r\n        return;\r\n      }\r\n      const rules = validations[key];\r\n      if (!rules) {\r\n        return;\r\n      }\r\n      const { dependencies, validate, supportedRowModels, expectedType } = rules;\r\n      if (expectedType) {\r\n        const actualType = typeof value;\r\n        if (actualType !== expectedType) {\r\n          warnings.add(\r\n            `${String(key)} should be of type '${expectedType}' but received '${actualType}' (${value}).`\r\n          );\r\n          return;\r\n        }\r\n      }\r\n      if (supportedRowModels) {\r\n        const rowModel = this.gridOptions.rowModelType ?? \"clientSide\";\r\n        if (!supportedRowModels.includes(rowModel)) {\r\n          warnings.add(\r\n            `${String(key)} is not supported with the '${rowModel}' row model. It is only valid with: ${supportedRowModels.join(\", \")}.`\r\n          );\r\n          return;\r\n        }\r\n      }\r\n      if (dependencies) {\r\n        const warning = this.checkForRequiredDependencies(key, dependencies, options);\r\n        if (warning) {\r\n          warnings.add(warning);\r\n          return;\r\n        }\r\n      }\r\n      if (validate) {\r\n        const warning = validate(options, this.gridOptions, this.beans);\r\n        if (warning) {\r\n          warnings.add(warning);\r\n          return;\r\n        }\r\n      }\r\n    });\r\n    if (warnings.size > 0) {\r\n      warnings.forEach((warning) => {\r\n        _warnOnce(warning);\r\n      });\r\n    }\r\n  }\r\n  checkForRequiredDependencies(key, validator, options) {\r\n    const optionEntries = Object.entries(validator);\r\n    const failedOptions = optionEntries.filter(([key2, value]) => {\r\n      const gridOptionValue = options[key2];\r\n      return !value.required.includes(gridOptionValue);\r\n    });\r\n    if (failedOptions.length === 0) {\r\n      return null;\r\n    }\r\n    return failedOptions.map(\r\n      ([failedKey, possibleOptions]) => `'${String(key)}' requires '${failedKey}' to be one of [${possibleOptions.required.map((o) => {\r\n        if (o === null) {\r\n          return \"null\";\r\n        } else if (o === void 0) {\r\n          return \"undefined\";\r\n        }\r\n        return o;\r\n      }).join(\", \")}]. ${possibleOptions.reason ?? \"\"}`\r\n    ).join(\"\\n           \");\r\n  }\r\n  checkProperties(object, exceptions, validProperties, containerName, docsUrl) {\r\n    const VUE_FRAMEWORK_PROPS = [\"__ob__\", \"__v_skip\", \"__metadata__\"];\r\n    const invalidProperties = _fuzzyCheckStrings(\r\n      Object.getOwnPropertyNames(object),\r\n      [...VUE_FRAMEWORK_PROPS, ...exceptions, ...validProperties],\r\n      validProperties\r\n    );\r\n    const invalidPropertiesKeys = Object.keys(invalidProperties);\r\n    for (const key of invalidPropertiesKeys) {\r\n      const value = invalidProperties[key];\r\n      let message = `invalid ${containerName} property '${key}' did you mean any of these: ${value.slice(0, 8).join(\", \")}.`;\r\n      if (validProperties.includes(\"context\")) {\r\n        message += `\r\nIf you are trying to annotate ${containerName} with application data, use the '${containerName}.context' property instead.`;\r\n      }\r\n      _warnOnce(message);\r\n    }\r\n    if (invalidPropertiesKeys.length > 0 && docsUrl) {\r\n      const url = this.beans.frameworkOverrides.getDocLink(docsUrl);\r\n      _warnOnce(`to see all the valid ${containerName} properties please check: ${url}`);\r\n    }\r\n  }\r\n  getConsoleMessage(id, args) {\r\n    return getError(id, args);\r\n  }\r\n};\r\nfunction _fuzzyCheckStrings(inputValues, validValues, allSuggestions) {\r\n  const fuzzyMatches = {};\r\n  const invalidInputs = inputValues.filter(\r\n    (inputValue) => !validValues.some((validValue) => validValue === inputValue)\r\n  );\r\n  if (invalidInputs.length > 0) {\r\n    invalidInputs.forEach(\r\n      (invalidInput) => fuzzyMatches[invalidInput] = _fuzzySuggestions({ inputValue: invalidInput, allSuggestions }).values\r\n    );\r\n  }\r\n  return fuzzyMatches;\r\n}\r\nvar DEPRECATED_ROW_NODE_EVENTS = /* @__PURE__ */ new Set([\r\n  \"firstChildChanged\",\r\n  \"lastChildChanged\",\r\n  \"childIndexChanged\"\r\n]);\r\n\r\n// packages/ag-grid-community/src/validation/validationModule.ts\r\nvar ValidationModule = {\r\n  moduleName: \"Validation\",\r\n  version: VERSION,\r\n  beans: [ValidationService]\r\n};\r\n\r\n// packages/ag-grid-community/src/clientSideRowModel/filterStage.ts\r\nfunction updateRowNodeAfterFilter(rowNode) {\r\n  if (rowNode.sibling) {\r\n    rowNode.sibling.childrenAfterFilter = rowNode.childrenAfterFilter;\r\n  }\r\n}\r\nvar FilterStage = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"filterStage\";\r\n    this.refreshProps = /* @__PURE__ */ new Set([\"excludeChildrenWhenTreeDataFiltering\"]);\r\n    this.step = \"filter\";\r\n  }\r\n  wireBeans(beans) {\r\n    this.filterManager = beans.filterManager;\r\n  }\r\n  execute(params) {\r\n    const { changedPath } = params;\r\n    this.filter(changedPath);\r\n  }\r\n  filter(changedPath) {\r\n    const filterActive = !!this.filterManager?.isChildFilterPresent();\r\n    this.filterNodes(filterActive, changedPath);\r\n  }\r\n  filterNodes(filterActive, changedPath) {\r\n    const filterCallback = (rowNode, includeChildNodes) => {\r\n      if (rowNode.hasChildren()) {\r\n        if (filterActive && !includeChildNodes) {\r\n          rowNode.childrenAfterFilter = rowNode.childrenAfterGroup.filter((childNode) => {\r\n            const passBecauseChildren = childNode.childrenAfterFilter && childNode.childrenAfterFilter.length > 0;\r\n            const passBecauseDataPasses = childNode.data && this.filterManager.doesRowPassFilter({ rowNode: childNode });\r\n            return passBecauseChildren || passBecauseDataPasses;\r\n          });\r\n        } else {\r\n          rowNode.childrenAfterFilter = rowNode.childrenAfterGroup;\r\n        }\r\n      } else {\r\n        rowNode.childrenAfterFilter = rowNode.childrenAfterGroup;\r\n      }\r\n      updateRowNodeAfterFilter(rowNode);\r\n    };\r\n    if (this.doingTreeDataFiltering()) {\r\n      const treeDataDepthFirstFilter = (rowNode, alreadyFoundInParent) => {\r\n        if (rowNode.childrenAfterGroup) {\r\n          for (let i = 0; i < rowNode.childrenAfterGroup.length; i++) {\r\n            const childNode = rowNode.childrenAfterGroup[i];\r\n            const foundInParent = alreadyFoundInParent || this.filterManager.doesRowPassFilter({ rowNode: childNode });\r\n            if (childNode.childrenAfterGroup) {\r\n              treeDataDepthFirstFilter(rowNode.childrenAfterGroup[i], foundInParent);\r\n            } else {\r\n              filterCallback(childNode, foundInParent);\r\n            }\r\n          }\r\n        }\r\n        filterCallback(rowNode, alreadyFoundInParent);\r\n      };\r\n      const treeDataFilterCallback = (rowNode) => treeDataDepthFirstFilter(rowNode, false);\r\n      changedPath.executeFromRootNode(treeDataFilterCallback);\r\n    } else {\r\n      const defaultFilterCallback = (rowNode) => filterCallback(rowNode, false);\r\n      changedPath.forEachChangedNodeDepthFirst(defaultFilterCallback, true);\r\n    }\r\n  }\r\n  doingTreeDataFiltering() {\r\n    return this.gos.get(\"treeData\") && !this.gos.get(\"excludeChildrenWhenTreeDataFiltering\");\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/headerRendering/cells/floatingFilter/headerFilterCellCtrl.ts\r\nvar HeaderFilterCellCtrl = class extends AbstractHeaderCellCtrl {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.iconCreated = false;\r\n  }\r\n  setComp(comp, eGui, eButtonShowMainFilter, eFloatingFilterBody, compBeanInput) {\r\n    this.comp = comp;\r\n    const compBean = setupCompBean(this, this.beans.context, compBeanInput);\r\n    this.eButtonShowMainFilter = eButtonShowMainFilter;\r\n    this.eFloatingFilterBody = eFloatingFilterBody;\r\n    this.setGui(eGui, compBean);\r\n    this.setupActive();\r\n    this.refreshHeaderStyles();\r\n    this.setupWidth(compBean);\r\n    this.setupLeft(compBean);\r\n    this.setupHover(compBean);\r\n    this.setupFocus(compBean);\r\n    this.setupAria();\r\n    this.setupFilterButton();\r\n    this.setupUserComp();\r\n    this.setupSyncWithFilter(compBean);\r\n    this.setupUi();\r\n    compBean.addManagedElementListeners(this.eButtonShowMainFilter, { click: this.showParentFilter.bind(this) });\r\n    this.setupFilterChangedListener(compBean);\r\n    const colDefChanged = () => this.onColDefChanged(compBean);\r\n    compBean.addManagedListeners(this.column, { colDefChanged });\r\n    compBean.addManagedEventListeners({\r\n      filterSwitched: ({ column }) => {\r\n        if (column === this.column) {\r\n          colDefChanged();\r\n        }\r\n      }\r\n    });\r\n    compBean.addDestroyFunc(() => {\r\n      this.eButtonShowMainFilter = null;\r\n      this.eFloatingFilterBody = null;\r\n      this.userCompDetails = null;\r\n      this.clearComponent();\r\n    });\r\n  }\r\n  // empty abstract method\r\n  resizeHeader() {\r\n  }\r\n  moveHeader() {\r\n  }\r\n  getHeaderClassParams() {\r\n    const { column, beans } = this;\r\n    const colDef = column.colDef;\r\n    return _addGridCommonParams(beans.gos, {\r\n      colDef,\r\n      column,\r\n      floatingFilter: true\r\n    });\r\n  }\r\n  setupActive() {\r\n    const colDef = this.column.getColDef();\r\n    const filterExists = !!colDef.filter;\r\n    const floatingFilterExists = !!colDef.floatingFilter;\r\n    this.active = filterExists && floatingFilterExists;\r\n  }\r\n  setupUi() {\r\n    this.comp.setButtonWrapperDisplayed(!this.suppressFilterButton && this.active);\r\n    this.comp.addOrRemoveBodyCssClass(\"ag-floating-filter-full-body\", this.suppressFilterButton);\r\n    this.comp.addOrRemoveBodyCssClass(\"ag-floating-filter-body\", !this.suppressFilterButton);\r\n    if (!this.active || this.iconCreated) {\r\n      return;\r\n    }\r\n    const eMenuIcon = _createIconNoSpan(\"filter\", this.beans, this.column);\r\n    if (eMenuIcon) {\r\n      this.iconCreated = true;\r\n      this.eButtonShowMainFilter.appendChild(eMenuIcon);\r\n    }\r\n  }\r\n  setupFocus(compBean) {\r\n    compBean.createManagedBean(\r\n      new ManagedFocusFeature(this.eGui, {\r\n        shouldStopEventPropagation: this.shouldStopEventPropagation.bind(this),\r\n        onTabKeyDown: this.onTabKeyDown.bind(this),\r\n        handleKeyDown: this.handleKeyDown.bind(this),\r\n        onFocusIn: this.onFocusIn.bind(this)\r\n      })\r\n    );\r\n  }\r\n  setupAria() {\r\n    const localeTextFunc = this.getLocaleTextFunc();\r\n    _setAriaLabel(this.eButtonShowMainFilter, localeTextFunc(\"ariaFilterMenuOpen\", \"Open Filter Menu\"));\r\n  }\r\n  onTabKeyDown(e) {\r\n    const { beans } = this;\r\n    const activeEl = _getActiveDomElement(beans);\r\n    const wrapperHasFocus = activeEl === this.eGui;\r\n    if (wrapperHasFocus) {\r\n      return;\r\n    }\r\n    const nextFocusableEl = _findNextFocusableElement(beans, this.eGui, null, e.shiftKey);\r\n    if (nextFocusableEl) {\r\n      beans.headerNavigation?.scrollToColumn(this.column);\r\n      e.preventDefault();\r\n      nextFocusableEl.focus();\r\n      return;\r\n    }\r\n    const nextFocusableColumn = this.findNextColumnWithFloatingFilter(e.shiftKey);\r\n    if (!nextFocusableColumn) {\r\n      return;\r\n    }\r\n    if (beans.focusSvc.focusHeaderPosition({\r\n      headerPosition: {\r\n        headerRowIndex: this.rowCtrl.rowIndex,\r\n        column: nextFocusableColumn\r\n      },\r\n      event: e\r\n    })) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n  findNextColumnWithFloatingFilter(backwards) {\r\n    const presentedColsService = this.beans.visibleCols;\r\n    let nextCol = this.column;\r\n    do {\r\n      nextCol = backwards ? presentedColsService.getColBefore(nextCol) : presentedColsService.getColAfter(nextCol);\r\n      if (!nextCol) {\r\n        break;\r\n      }\r\n    } while (!nextCol.getColDef().filter || !nextCol.getColDef().floatingFilter);\r\n    return nextCol;\r\n  }\r\n  handleKeyDown(e) {\r\n    super.handleKeyDown(e);\r\n    const wrapperHasFocus = this.getWrapperHasFocus();\r\n    switch (e.key) {\r\n      case KeyCode.UP:\r\n      case KeyCode.DOWN:\r\n      case KeyCode.LEFT:\r\n      case KeyCode.RIGHT:\r\n        if (wrapperHasFocus) {\r\n          return;\r\n        }\r\n        _stopPropagationForAgGrid(e);\r\n      case KeyCode.ENTER:\r\n        if (wrapperHasFocus) {\r\n          if (_focusInto(this.eGui)) {\r\n            e.preventDefault();\r\n          }\r\n        }\r\n        break;\r\n      case KeyCode.ESCAPE:\r\n        if (!wrapperHasFocus) {\r\n          this.eGui.focus();\r\n        }\r\n    }\r\n  }\r\n  onFocusIn(e) {\r\n    const isRelatedWithin = this.eGui.contains(e.relatedTarget);\r\n    if (isRelatedWithin) {\r\n      return;\r\n    }\r\n    const notFromHeaderWrapper = !!e.relatedTarget && !e.relatedTarget.classList.contains(\"ag-floating-filter\");\r\n    const fromWithinHeader = !!e.relatedTarget && _isElementChildOfClass(e.relatedTarget, \"ag-floating-filter\");\r\n    if (notFromHeaderWrapper && fromWithinHeader && e.target === this.eGui) {\r\n      const lastFocusEvent = this.lastFocusEvent;\r\n      const fromTab = !!(lastFocusEvent && lastFocusEvent.key === KeyCode.TAB);\r\n      if (lastFocusEvent && fromTab) {\r\n        const shouldFocusLast = lastFocusEvent.shiftKey;\r\n        _focusInto(this.eGui, shouldFocusLast);\r\n      }\r\n    }\r\n    this.focusThis();\r\n  }\r\n  setupHover(compBean) {\r\n    this.beans.colHover?.addHeaderFilterColumnHoverListener(compBean, this.comp, this.column, this.eGui);\r\n  }\r\n  setupLeft(compBean) {\r\n    const setLeftFeature = new SetLeftFeature(this.column, this.eGui, this.beans);\r\n    compBean.createManagedBean(setLeftFeature);\r\n  }\r\n  setupFilterButton() {\r\n    this.suppressFilterButton = !this.beans.menuSvc?.isFloatingFilterButtonEnabled(this.column);\r\n    this.highlightFilterButtonWhenActive = !_isLegacyMenuEnabled(this.gos);\r\n  }\r\n  setupUserComp() {\r\n    if (!this.active) {\r\n      return;\r\n    }\r\n    const compDetails = this.beans.colFilter?.getFloatingFilterCompDetails(\r\n      this.column,\r\n      () => this.showParentFilter()\r\n    );\r\n    if (compDetails) {\r\n      this.setCompDetails(compDetails);\r\n    }\r\n  }\r\n  setCompDetails(compDetails) {\r\n    this.userCompDetails = compDetails;\r\n    this.comp.setCompDetails(compDetails);\r\n  }\r\n  showParentFilter() {\r\n    const eventSource = this.suppressFilterButton ? this.eFloatingFilterBody : this.eButtonShowMainFilter;\r\n    this.beans.menuSvc?.showFilterMenu({\r\n      column: this.column,\r\n      buttonElement: eventSource,\r\n      containerType: \"floatingFilter\",\r\n      positionBy: \"button\"\r\n    });\r\n  }\r\n  setupSyncWithFilter(compBean) {\r\n    if (!this.active) {\r\n      return;\r\n    }\r\n    const {\r\n      beans: { colFilter },\r\n      column,\r\n      gos\r\n    } = this;\r\n    const syncWithFilter = (event) => {\r\n      if (event?.source === \"filterDestroyed\" && (!this.isAlive() || !colFilter?.isAlive())) {\r\n        return;\r\n      }\r\n      const compPromise = this.comp.getFloatingFilterComp();\r\n      if (!compPromise) {\r\n        return;\r\n      }\r\n      compPromise.then((comp) => {\r\n        if (comp) {\r\n          if (gos.get(\"enableFilterHandlers\")) {\r\n            const eventWithParams = event;\r\n            let source = \"filter\";\r\n            if (eventWithParams?.afterFloatingFilter) {\r\n              source = \"ui\";\r\n            } else if (eventWithParams?.afterDataChange) {\r\n              source = \"dataChanged\";\r\n            } else if (event?.source === \"api\") {\r\n              source = \"api\";\r\n            }\r\n            this.updateFloatingFilterParams(this.userCompDetails, source);\r\n            return;\r\n          }\r\n          const parentModel = colFilter?.getCurrentFloatingFilterParentModel(column);\r\n          const filterChangedEvent = event ? {\r\n            // event can have additional params like `afterDataChange` which need to be passed through\r\n            ...event,\r\n            columns: event.columns ?? [],\r\n            source: event.source === \"api\" ? \"api\" : \"columnFilter\"\r\n          } : null;\r\n          comp.onParentModelChanged(parentModel, filterChangedEvent);\r\n        }\r\n      });\r\n    };\r\n    [this.destroySyncListener] = compBean.addManagedListeners(column, { filterChanged: syncWithFilter });\r\n    if (colFilter?.isFilterActive(column)) {\r\n      syncWithFilter(null);\r\n    }\r\n  }\r\n  setupWidth(compBean) {\r\n    const listener = () => {\r\n      const width = `${this.column.getActualWidth()}px`;\r\n      this.comp.setWidth(width);\r\n    };\r\n    compBean.addManagedListeners(this.column, { widthChanged: listener });\r\n    listener();\r\n  }\r\n  setupFilterChangedListener(compBean) {\r\n    if (this.active) {\r\n      [this.destroyFilterChangedListener] = compBean.addManagedListeners(this.column, {\r\n        filterChanged: this.updateFilterButton.bind(this)\r\n      });\r\n      this.updateFilterButton();\r\n    }\r\n  }\r\n  updateFilterButton() {\r\n    if (!this.suppressFilterButton && this.comp) {\r\n      const isFilterAllowed = !!this.beans.filterManager?.isFilterAllowed(this.column);\r\n      this.comp.setButtonWrapperDisplayed(isFilterAllowed);\r\n      if (this.highlightFilterButtonWhenActive && isFilterAllowed) {\r\n        this.eButtonShowMainFilter.classList.toggle(\"ag-filter-active\", this.column.isFilterActive());\r\n      }\r\n    }\r\n  }\r\n  onColDefChanged(compBean) {\r\n    const wasActive = this.active;\r\n    this.setupActive();\r\n    const becomeActive = !wasActive && this.active;\r\n    if (wasActive && !this.active) {\r\n      this.destroySyncListener();\r\n      this.destroyFilterChangedListener();\r\n    }\r\n    const colFilter = this.beans.colFilter;\r\n    const newCompDetails = this.active ? colFilter?.getFloatingFilterCompDetails(this.column, () => this.showParentFilter()) : null;\r\n    const compPromise = this.comp.getFloatingFilterComp();\r\n    if (!compPromise || !newCompDetails) {\r\n      this.updateCompDetails(compBean, newCompDetails, becomeActive);\r\n    } else {\r\n      compPromise.then((compInstance) => {\r\n        if (!compInstance || colFilter?.areFilterCompsDifferent(this.userCompDetails ?? null, newCompDetails)) {\r\n          this.updateCompDetails(compBean, newCompDetails, becomeActive);\r\n        } else {\r\n          this.updateFloatingFilterParams(newCompDetails, \"colDef\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n  updateCompDetails(compBean, compDetails, becomeActive) {\r\n    if (!this.isAlive()) {\r\n      return;\r\n    }\r\n    this.setCompDetails(compDetails);\r\n    this.setupFilterButton();\r\n    this.setupUi();\r\n    if (becomeActive) {\r\n      this.setupSyncWithFilter(compBean);\r\n      this.setupFilterChangedListener(compBean);\r\n    }\r\n  }\r\n  updateFloatingFilterParams(userCompDetails, source) {\r\n    if (!userCompDetails) {\r\n      return;\r\n    }\r\n    let params = userCompDetails.params;\r\n    this.comp.getFloatingFilterComp()?.then((floatingFilter) => {\r\n      if (typeof floatingFilter?.refresh === \"function\") {\r\n        if (this.gos.get(\"enableFilterHandlers\")) {\r\n          params = {\r\n            ...params,\r\n            model: _getFilterModel(this.beans.colFilter?.model ?? {}, this.column.getColId()),\r\n            source\r\n          };\r\n        }\r\n        floatingFilter.refresh(params);\r\n      }\r\n    });\r\n  }\r\n  addResizeAndMoveKeyboardListeners() {\r\n  }\r\n  destroy() {\r\n    super.destroy();\r\n    this.destroySyncListener = null;\r\n    this.destroyFilterChangedListener = null;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/misc/menu/menuApi.ts\r\nfunction showColumnMenu(beans, colKey) {\r\n  const column = beans.colModel.getCol(colKey);\r\n  if (!column) {\r\n    _error(12, { colKey });\r\n    return;\r\n  }\r\n  beans.menuSvc?.showColumnMenu({\r\n    column,\r\n    positionBy: \"auto\"\r\n  });\r\n}\r\nfunction hidePopupMenu(beans) {\r\n  beans.menuSvc?.hidePopupMenu();\r\n}\r\n\r\n// packages/ag-grid-community/src/misc/menu/sharedMenuModule.ts\r\nvar SharedMenuModule = {\r\n  moduleName: \"SharedMenu\",\r\n  version: VERSION,\r\n  beans: [MenuService],\r\n  apiFunctions: {\r\n    showColumnMenu,\r\n    hidePopupMenu\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/widgets/popupService.ts\r\nvar instanceIdSeq = 0;\r\nvar WAIT_FOR_POPUP_CONTENT_RESIZE = 200;\r\nvar PopupService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"popupSvc\";\r\n    this.popupList = [];\r\n  }\r\n  postConstruct() {\r\n    this.beans.ctrlsSvc.whenReady(this, (p) => {\r\n      this.gridCtrl = p.gridCtrl;\r\n    });\r\n    this.addManagedEventListeners({ gridStylesChanged: this.handleThemeChange.bind(this) });\r\n  }\r\n  getPopupParent() {\r\n    const ePopupParent = this.gos.get(\"popupParent\");\r\n    if (ePopupParent) {\r\n      return ePopupParent;\r\n    }\r\n    return this.gridCtrl.getGui();\r\n  }\r\n  positionPopupForMenu(params) {\r\n    const { eventSource, ePopup, column, node, event } = params;\r\n    const sourceRect = eventSource.getBoundingClientRect();\r\n    const parentRect = this.getParentRect();\r\n    this.setAlignedTo(eventSource, ePopup);\r\n    let minWidthSet = false;\r\n    const updatePosition = () => {\r\n      const y = this.keepXYWithinBounds(ePopup, sourceRect.top - parentRect.top, 0 /* Vertical */);\r\n      const minWidth = ePopup.clientWidth > 0 ? ePopup.clientWidth : 200;\r\n      if (!minWidthSet) {\r\n        ePopup.style.minWidth = `${minWidth}px`;\r\n        minWidthSet = true;\r\n      }\r\n      const widthOfParent = parentRect.right - parentRect.left;\r\n      const maxX = widthOfParent - minWidth;\r\n      let x;\r\n      if (this.gos.get(\"enableRtl\")) {\r\n        x = xLeftPosition();\r\n        if (x < 0) {\r\n          x = xRightPosition();\r\n          this.setAlignedStyles(ePopup, \"left\");\r\n        }\r\n        if (x > maxX) {\r\n          x = 0;\r\n          this.setAlignedStyles(ePopup, \"right\");\r\n        }\r\n      } else {\r\n        x = xRightPosition();\r\n        if (x > maxX) {\r\n          x = xLeftPosition();\r\n          this.setAlignedStyles(ePopup, \"right\");\r\n        }\r\n        if (x < 0) {\r\n          x = 0;\r\n          this.setAlignedStyles(ePopup, \"left\");\r\n        }\r\n      }\r\n      return { x, y };\r\n      function xRightPosition() {\r\n        return sourceRect.right - parentRect.left - 2;\r\n      }\r\n      function xLeftPosition() {\r\n        return sourceRect.left - parentRect.left - minWidth;\r\n      }\r\n    };\r\n    this.positionPopup({\r\n      ePopup,\r\n      keepWithinBounds: true,\r\n      updatePosition,\r\n      postProcessCallback: () => this.callPostProcessPopup(\r\n        \"subMenu\",\r\n        ePopup,\r\n        eventSource,\r\n        event instanceof MouseEvent ? event : void 0,\r\n        column,\r\n        node\r\n      )\r\n    });\r\n  }\r\n  positionPopupUnderMouseEvent(params) {\r\n    const { ePopup, nudgeX, nudgeY, skipObserver } = params;\r\n    this.positionPopup({\r\n      ePopup,\r\n      nudgeX,\r\n      nudgeY,\r\n      keepWithinBounds: true,\r\n      skipObserver,\r\n      updatePosition: () => this.calculatePointerAlign(params.mouseEvent),\r\n      postProcessCallback: () => this.callPostProcessPopup(\r\n        params.type,\r\n        params.ePopup,\r\n        null,\r\n        params.mouseEvent,\r\n        params.column,\r\n        params.rowNode\r\n      )\r\n    });\r\n  }\r\n  calculatePointerAlign(e) {\r\n    const parentRect = this.getParentRect();\r\n    return {\r\n      x: e.clientX - parentRect.left,\r\n      y: e.clientY - parentRect.top\r\n    };\r\n  }\r\n  positionPopupByComponent(params) {\r\n    const {\r\n      ePopup,\r\n      nudgeX,\r\n      nudgeY,\r\n      keepWithinBounds,\r\n      eventSource,\r\n      alignSide = \"left\",\r\n      position = \"over\",\r\n      column,\r\n      rowNode,\r\n      type\r\n    } = params;\r\n    const sourceRect = eventSource.getBoundingClientRect();\r\n    const parentRect = this.getParentRect();\r\n    this.setAlignedTo(eventSource, ePopup);\r\n    const updatePosition = () => {\r\n      let x = sourceRect.left - parentRect.left;\r\n      if (alignSide === \"right\") {\r\n        x -= ePopup.offsetWidth - sourceRect.width;\r\n      }\r\n      let y;\r\n      if (position === \"over\") {\r\n        y = sourceRect.top - parentRect.top;\r\n        this.setAlignedStyles(ePopup, \"over\");\r\n      } else {\r\n        this.setAlignedStyles(ePopup, \"under\");\r\n        const alignSide2 = this.shouldRenderUnderOrAbove(ePopup, sourceRect, parentRect, params.nudgeY || 0);\r\n        if (alignSide2 === \"under\") {\r\n          y = sourceRect.top - parentRect.top + sourceRect.height;\r\n        } else {\r\n          y = sourceRect.top - ePopup.offsetHeight - (nudgeY || 0) * 2 - parentRect.top;\r\n        }\r\n      }\r\n      return { x, y };\r\n    };\r\n    this.positionPopup({\r\n      ePopup,\r\n      nudgeX,\r\n      nudgeY,\r\n      keepWithinBounds,\r\n      updatePosition,\r\n      postProcessCallback: () => this.callPostProcessPopup(type, ePopup, eventSource, null, column, rowNode)\r\n    });\r\n  }\r\n  shouldRenderUnderOrAbove(ePopup, targetCompRect, parentRect, nudgeY) {\r\n    const spaceAvailableUnder = parentRect.bottom - targetCompRect.bottom;\r\n    const spaceAvailableAbove = targetCompRect.top - parentRect.top;\r\n    const spaceRequired = ePopup.offsetHeight + nudgeY;\r\n    if (spaceAvailableUnder > spaceRequired) {\r\n      return \"under\";\r\n    }\r\n    if (spaceAvailableAbove > spaceRequired || spaceAvailableAbove > spaceAvailableUnder) {\r\n      return \"above\";\r\n    }\r\n    return \"under\";\r\n  }\r\n  setAlignedStyles(ePopup, positioned) {\r\n    const popupIdx = this.getPopupIndex(ePopup);\r\n    if (popupIdx === -1) {\r\n      return;\r\n    }\r\n    const popup = this.popupList[popupIdx];\r\n    const { alignedToElement } = popup;\r\n    if (!alignedToElement) {\r\n      return;\r\n    }\r\n    const positions = [\"right\", \"left\", \"over\", \"above\", \"under\"];\r\n    positions.forEach((position) => {\r\n      alignedToElement.classList.remove(`ag-has-popup-positioned-${position}`);\r\n      ePopup.classList.remove(`ag-popup-positioned-${position}`);\r\n    });\r\n    if (!positioned) {\r\n      return;\r\n    }\r\n    alignedToElement.classList.add(`ag-has-popup-positioned-${positioned}`);\r\n    ePopup.classList.add(`ag-popup-positioned-${positioned}`);\r\n  }\r\n  setAlignedTo(eventSource, ePopup) {\r\n    const popupIdx = this.getPopupIndex(ePopup);\r\n    if (popupIdx !== -1) {\r\n      const popup = this.popupList[popupIdx];\r\n      popup.alignedToElement = eventSource;\r\n    }\r\n  }\r\n  callPostProcessPopup(type, ePopup, eventSource, mouseEvent, column, rowNode) {\r\n    const callback = this.gos.getCallback(\"postProcessPopup\");\r\n    if (callback) {\r\n      const params = {\r\n        column,\r\n        rowNode,\r\n        ePopup,\r\n        type,\r\n        eventSource,\r\n        mouseEvent\r\n      };\r\n      callback(params);\r\n    }\r\n  }\r\n  positionPopup(params) {\r\n    const { ePopup, keepWithinBounds, nudgeX, nudgeY, skipObserver, updatePosition } = params;\r\n    const lastSize = { width: 0, height: 0 };\r\n    const updatePopupPosition = (fromResizeObserver = false) => {\r\n      let { x, y } = updatePosition();\r\n      if (fromResizeObserver && ePopup.clientWidth === lastSize.width && ePopup.clientHeight === lastSize.height) {\r\n        return;\r\n      }\r\n      lastSize.width = ePopup.clientWidth;\r\n      lastSize.height = ePopup.clientHeight;\r\n      if (nudgeX) {\r\n        x += nudgeX;\r\n      }\r\n      if (nudgeY) {\r\n        y += nudgeY;\r\n      }\r\n      if (keepWithinBounds) {\r\n        x = this.keepXYWithinBounds(ePopup, x, 1 /* Horizontal */);\r\n        y = this.keepXYWithinBounds(ePopup, y, 0 /* Vertical */);\r\n      }\r\n      ePopup.style.left = `${x}px`;\r\n      ePopup.style.top = `${y}px`;\r\n      if (params.postProcessCallback) {\r\n        params.postProcessCallback();\r\n      }\r\n    };\r\n    updatePopupPosition();\r\n    if (!skipObserver) {\r\n      const resizeObserverDestroyFunc = _observeResize(this.beans, ePopup, () => updatePopupPosition(true));\r\n      setTimeout(() => resizeObserverDestroyFunc(), WAIT_FOR_POPUP_CONTENT_RESIZE);\r\n    }\r\n  }\r\n  getActivePopups() {\r\n    return this.popupList.map((popup) => popup.element);\r\n  }\r\n  getParentRect() {\r\n    const eDocument = _getDocument(this.beans);\r\n    let popupParent = this.getPopupParent();\r\n    if (popupParent === eDocument.body) {\r\n      popupParent = eDocument.documentElement;\r\n    } else if (getComputedStyle(popupParent).position === \"static\") {\r\n      popupParent = popupParent.offsetParent;\r\n    }\r\n    return _getElementRectWithOffset(popupParent);\r\n  }\r\n  keepXYWithinBounds(ePopup, position, direction) {\r\n    const isVertical = direction === 0 /* Vertical */;\r\n    const sizeProperty = isVertical ? \"clientHeight\" : \"clientWidth\";\r\n    const anchorProperty = isVertical ? \"top\" : \"left\";\r\n    const offsetProperty = isVertical ? \"height\" : \"width\";\r\n    const scrollPositionProperty = isVertical ? \"scrollTop\" : \"scrollLeft\";\r\n    const eDocument = _getDocument(this.beans);\r\n    const docElement = eDocument.documentElement;\r\n    const popupParent = this.getPopupParent();\r\n    const popupRect = ePopup.getBoundingClientRect();\r\n    const parentRect = popupParent.getBoundingClientRect();\r\n    const documentRect = eDocument.documentElement.getBoundingClientRect();\r\n    const isBody = popupParent === eDocument.body;\r\n    const offsetSize = Math.ceil(popupRect[offsetProperty]);\r\n    const getSize2 = isVertical ? _getAbsoluteHeight : _getAbsoluteWidth;\r\n    let sizeOfParent = isBody ? getSize2(docElement) + docElement[scrollPositionProperty] : popupParent[sizeProperty];\r\n    if (isBody) {\r\n      sizeOfParent -= Math.abs(documentRect[anchorProperty] - parentRect[anchorProperty]);\r\n    }\r\n    const max = sizeOfParent - offsetSize;\r\n    return Math.min(Math.max(position, 0), Math.abs(max));\r\n  }\r\n  addPopup(params) {\r\n    const eDocument = _getDocument(this.beans);\r\n    const { eChild, ariaLabel, ariaOwns, alwaysOnTop, positionCallback, anchorToElement } = params;\r\n    if (!eDocument) {\r\n      _warn(122);\r\n      return { hideFunc: () => {\r\n      } };\r\n    }\r\n    const pos = this.getPopupIndex(eChild);\r\n    if (pos !== -1) {\r\n      const popup = this.popupList[pos];\r\n      return { hideFunc: popup.hideFunc };\r\n    }\r\n    this.initialisePopupPosition(eChild);\r\n    const wrapperEl = this.createPopupWrapper(eChild, !!alwaysOnTop, ariaLabel, ariaOwns);\r\n    const removeListeners = this.addEventListenersToPopup({ ...params, wrapperEl });\r\n    if (positionCallback) {\r\n      positionCallback();\r\n    }\r\n    this.addPopupToPopupList(eChild, wrapperEl, removeListeners, anchorToElement);\r\n    return {\r\n      hideFunc: removeListeners\r\n    };\r\n  }\r\n  initialisePopupPosition(element) {\r\n    const ePopupParent = this.getPopupParent();\r\n    const ePopupParentRect = ePopupParent.getBoundingClientRect();\r\n    if (!_exists(element.style.top)) {\r\n      element.style.top = `${ePopupParentRect.top * -1}px`;\r\n    }\r\n    if (!_exists(element.style.left)) {\r\n      element.style.left = `${ePopupParentRect.left * -1}px`;\r\n    }\r\n  }\r\n  createPopupWrapper(element, alwaysOnTop, ariaLabel, ariaOwns) {\r\n    const ePopupParent = this.getPopupParent();\r\n    const { environment, gos } = this.beans;\r\n    const eWrapper = _createElement({ tag: \"div\" });\r\n    environment.applyThemeClasses(eWrapper);\r\n    eWrapper.classList.add(\"ag-popup\");\r\n    element.classList.add(gos.get(\"enableRtl\") ? \"ag-rtl\" : \"ag-ltr\", \"ag-popup-child\");\r\n    if (!element.hasAttribute(\"role\")) {\r\n      _setAriaRole(element, \"dialog\");\r\n    }\r\n    if (ariaLabel) {\r\n      _setAriaLabel(element, ariaLabel);\r\n    } else if (ariaOwns) {\r\n      element.id || (element.id = `popup-component-${instanceIdSeq}`);\r\n      _setAriaOwns(ariaOwns, element.id);\r\n    }\r\n    eWrapper.appendChild(element);\r\n    ePopupParent.appendChild(eWrapper);\r\n    if (alwaysOnTop) {\r\n      this.setAlwaysOnTop(element, true);\r\n    } else {\r\n      this.bringPopupToFront(element);\r\n    }\r\n    return eWrapper;\r\n  }\r\n  handleThemeChange(e) {\r\n    if (e.themeChanged) {\r\n      const environment = this.beans.environment;\r\n      for (const popup of this.popupList) {\r\n        environment.applyThemeClasses(popup.wrapper);\r\n      }\r\n    }\r\n  }\r\n  addEventListenersToPopup(params) {\r\n    const beans = this.beans;\r\n    const eDocument = _getDocument(beans);\r\n    const ePopupParent = this.getPopupParent();\r\n    const { wrapperEl, eChild: popupEl, closedCallback, afterGuiAttached, closeOnEsc, modal, ariaOwns } = params;\r\n    let popupHidden = false;\r\n    const hidePopupOnKeyboardEvent = (event) => {\r\n      if (!wrapperEl.contains(_getActiveDomElement(beans))) {\r\n        return;\r\n      }\r\n      const key = event.key;\r\n      if (key === KeyCode.ESCAPE && !_isStopPropagationForAgGrid(event)) {\r\n        removeListeners({ keyboardEvent: event });\r\n      }\r\n    };\r\n    const hidePopupOnMouseEvent = (event) => removeListeners({ mouseEvent: event });\r\n    const hidePopupOnTouchEvent = (event) => removeListeners({ touchEvent: event });\r\n    const removeListeners = (popupParams = {}) => {\r\n      const { mouseEvent, touchEvent, keyboardEvent, forceHide } = popupParams;\r\n      if (!forceHide && // we don't hide popup if the event was on the child, or any\r\n      // children of this child\r\n      (this.isEventFromCurrentPopup({ mouseEvent, touchEvent }, popupEl) || // this method should only be called once. the client can have different\r\n      // paths, each one wanting to close, so this method may be called multiple times.\r\n      popupHidden)) {\r\n        return;\r\n      }\r\n      popupHidden = true;\r\n      ePopupParent.removeChild(wrapperEl);\r\n      eDocument.removeEventListener(\"keydown\", hidePopupOnKeyboardEvent);\r\n      eDocument.removeEventListener(\"mousedown\", hidePopupOnMouseEvent);\r\n      eDocument.removeEventListener(\"touchstart\", hidePopupOnTouchEvent);\r\n      eDocument.removeEventListener(\"contextmenu\", hidePopupOnMouseEvent);\r\n      this.eventSvc.removeEventListener(\"dragStarted\", hidePopupOnMouseEvent);\r\n      if (closedCallback) {\r\n        closedCallback(mouseEvent || touchEvent || keyboardEvent);\r\n      }\r\n      this.removePopupFromPopupList(popupEl, ariaOwns);\r\n    };\r\n    if (afterGuiAttached) {\r\n      afterGuiAttached({ hidePopup: removeListeners });\r\n    }\r\n    window.setTimeout(() => {\r\n      if (closeOnEsc) {\r\n        eDocument.addEventListener(\"keydown\", hidePopupOnKeyboardEvent);\r\n      }\r\n      if (modal) {\r\n        eDocument.addEventListener(\"mousedown\", hidePopupOnMouseEvent);\r\n        this.eventSvc.addEventListener(\"dragStarted\", hidePopupOnMouseEvent);\r\n        eDocument.addEventListener(\"touchstart\", hidePopupOnTouchEvent);\r\n        eDocument.addEventListener(\"contextmenu\", hidePopupOnMouseEvent);\r\n      }\r\n    }, 0);\r\n    return removeListeners;\r\n  }\r\n  addPopupToPopupList(element, wrapperEl, removeListeners, anchorToElement) {\r\n    this.popupList.push({\r\n      element,\r\n      wrapper: wrapperEl,\r\n      hideFunc: removeListeners,\r\n      instanceId: instanceIdSeq,\r\n      isAnchored: !!anchorToElement\r\n    });\r\n    if (anchorToElement) {\r\n      this.setPopupPositionRelatedToElement(element, anchorToElement);\r\n    }\r\n    instanceIdSeq = instanceIdSeq + 1;\r\n  }\r\n  getPopupIndex(el) {\r\n    return this.popupList.findIndex((p) => p.element === el);\r\n  }\r\n  setPopupPositionRelatedToElement(popupEl, relativeElement) {\r\n    const popupIndex = this.getPopupIndex(popupEl);\r\n    if (popupIndex === -1) {\r\n      return;\r\n    }\r\n    const popup = this.popupList[popupIndex];\r\n    if (popup.stopAnchoringPromise) {\r\n      popup.stopAnchoringPromise.then((destroyFunc) => destroyFunc && destroyFunc());\r\n    }\r\n    popup.stopAnchoringPromise = void 0;\r\n    popup.isAnchored = false;\r\n    if (!relativeElement) {\r\n      return;\r\n    }\r\n    const destroyPositionTracker = this.keepPopupPositionedRelativeTo({\r\n      element: relativeElement,\r\n      ePopup: popupEl,\r\n      hidePopup: popup.hideFunc\r\n    });\r\n    popup.stopAnchoringPromise = destroyPositionTracker;\r\n    popup.isAnchored = true;\r\n    return destroyPositionTracker;\r\n  }\r\n  removePopupFromPopupList(element, ariaOwns) {\r\n    this.setAlignedStyles(element, null);\r\n    this.setPopupPositionRelatedToElement(element, null);\r\n    if (ariaOwns) {\r\n      _setAriaOwns(ariaOwns, null);\r\n    }\r\n    this.popupList = this.popupList.filter((p) => p.element !== element);\r\n  }\r\n  keepPopupPositionedRelativeTo(params) {\r\n    const eParent = this.getPopupParent();\r\n    const parentRect = eParent.getBoundingClientRect();\r\n    const { element, ePopup } = params;\r\n    const sourceRect = element.getBoundingClientRect();\r\n    const extractFromPixelValue = (pxSize) => parseInt(pxSize.substring(0, pxSize.length - 1), 10);\r\n    const createPosition = (prop, direction) => {\r\n      const initialDiff = parentRect[prop] - sourceRect[prop];\r\n      const initial = extractFromPixelValue(ePopup.style[prop]);\r\n      return {\r\n        initialDiff,\r\n        lastDiff: initialDiff,\r\n        initial,\r\n        last: initial,\r\n        direction\r\n      };\r\n    };\r\n    const topPosition = createPosition(\"top\", 0 /* Vertical */);\r\n    const leftPosition = createPosition(\"left\", 1 /* Horizontal */);\r\n    const fwOverrides = this.beans.frameworkOverrides;\r\n    return new AgPromise((resolve) => {\r\n      fwOverrides.wrapIncoming(() => {\r\n        fwOverrides.setInterval(() => {\r\n          const pRect = eParent.getBoundingClientRect();\r\n          const sRect = element.getBoundingClientRect();\r\n          const elementNotInDom = sRect.top == 0 && sRect.left == 0 && sRect.height == 0 && sRect.width == 0;\r\n          if (elementNotInDom) {\r\n            params.hidePopup();\r\n            return;\r\n          }\r\n          const calculateNewPosition = (position, prop) => {\r\n            const current = extractFromPixelValue(ePopup.style[prop]);\r\n            if (position.last !== current) {\r\n              position.initial = current;\r\n              position.last = current;\r\n            }\r\n            const currentDiff = pRect[prop] - sRect[prop];\r\n            if (currentDiff != position.lastDiff) {\r\n              const newValue = this.keepXYWithinBounds(\r\n                ePopup,\r\n                position.initial + position.initialDiff - currentDiff,\r\n                position.direction\r\n              );\r\n              ePopup.style[prop] = `${newValue}px`;\r\n              position.last = newValue;\r\n            }\r\n            position.lastDiff = currentDiff;\r\n          };\r\n          calculateNewPosition(topPosition, \"top\");\r\n          calculateNewPosition(leftPosition, \"left\");\r\n        }, 200).then((intervalId) => {\r\n          const result = () => {\r\n            if (intervalId != null) {\r\n              window.clearInterval(intervalId);\r\n            }\r\n          };\r\n          resolve(result);\r\n        });\r\n      }, \"popupPositioning\");\r\n    });\r\n  }\r\n  hasAnchoredPopup() {\r\n    return this.popupList.some((popup) => popup.isAnchored);\r\n  }\r\n  isEventFromCurrentPopup(params, target) {\r\n    const { mouseEvent, touchEvent } = params;\r\n    const event = mouseEvent ? mouseEvent : touchEvent;\r\n    if (!event) {\r\n      return false;\r\n    }\r\n    const indexOfThisChild = this.getPopupIndex(target);\r\n    if (indexOfThisChild === -1) {\r\n      return false;\r\n    }\r\n    for (let i = indexOfThisChild; i < this.popupList.length; i++) {\r\n      const popup = this.popupList[i];\r\n      if (_isElementInEventPath(popup.element, event)) {\r\n        return true;\r\n      }\r\n    }\r\n    return this.isElementWithinCustomPopup(event.target);\r\n  }\r\n  isElementWithinCustomPopup(el) {\r\n    const eDocument = _getDocument(this.beans);\r\n    while (el && el !== eDocument.body) {\r\n      if (el.classList.contains(\"ag-custom-component-popup\") || el.parentElement === null) {\r\n        return true;\r\n      }\r\n      el = el.parentElement;\r\n    }\r\n    return false;\r\n  }\r\n  getWrapper(ePopup) {\r\n    while (!ePopup.classList.contains(\"ag-popup\") && ePopup.parentElement) {\r\n      ePopup = ePopup.parentElement;\r\n    }\r\n    return ePopup.classList.contains(\"ag-popup\") ? ePopup : null;\r\n  }\r\n  setAlwaysOnTop(ePopup, alwaysOnTop) {\r\n    const eWrapper = this.getWrapper(ePopup);\r\n    if (!eWrapper) {\r\n      return;\r\n    }\r\n    eWrapper.classList.toggle(\"ag-always-on-top\", !!alwaysOnTop);\r\n    if (alwaysOnTop) {\r\n      this.bringPopupToFront(eWrapper);\r\n    }\r\n  }\r\n  /** @returns true if moved */\r\n  bringPopupToFront(ePopup) {\r\n    const parent = this.getPopupParent();\r\n    const popupList = Array.prototype.slice.call(parent.querySelectorAll(\".ag-popup\"));\r\n    const popupLen = popupList.length;\r\n    const eWrapper = this.getWrapper(ePopup);\r\n    if (!eWrapper || popupLen <= 1 || !parent.contains(ePopup)) {\r\n      return;\r\n    }\r\n    const standardPopupList = [];\r\n    const alwaysOnTopList = [];\r\n    for (const popup of popupList) {\r\n      if (popup === eWrapper) {\r\n        continue;\r\n      }\r\n      if (popup.classList.contains(\"ag-always-on-top\")) {\r\n        alwaysOnTopList.push(popup);\r\n      } else {\r\n        standardPopupList.push(popup);\r\n      }\r\n    }\r\n    const innerElsScrollMap = [];\r\n    const onTopLength = alwaysOnTopList.length;\r\n    const isPopupAlwaysOnTop = eWrapper.classList.contains(\"ag-always-on-top\");\r\n    const shouldBeLast = isPopupAlwaysOnTop || !onTopLength;\r\n    const targetList = shouldBeLast ? [...standardPopupList, ...alwaysOnTopList, eWrapper] : [...standardPopupList, eWrapper, ...alwaysOnTopList];\r\n    for (let i = 0; i <= popupLen; i++) {\r\n      const currentPopup = targetList[i];\r\n      if (popupList[i] === targetList[i] || currentPopup === eWrapper) {\r\n        continue;\r\n      }\r\n      const innerEls = currentPopup.querySelectorAll(\"div\");\r\n      innerEls.forEach((el) => {\r\n        if (el.scrollTop !== 0) {\r\n          innerElsScrollMap.push([el, el.scrollTop]);\r\n        }\r\n      });\r\n      if (i === 0) {\r\n        parent.insertAdjacentElement(\"afterbegin\", currentPopup);\r\n      } else {\r\n        targetList[i - 1].insertAdjacentElement(\"afterend\", currentPopup);\r\n      }\r\n    }\r\n    while (innerElsScrollMap.length) {\r\n      const currentEl = innerElsScrollMap.pop();\r\n      currentEl[0].scrollTop = currentEl[1];\r\n    }\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/widgets/popupModule.ts\r\nvar PopupModule = {\r\n  moduleName: \"Popup\",\r\n  version: VERSION,\r\n  beans: [PopupService]\r\n};\r\n\r\n// packages/ag-grid-community/src/filter/column-filters.css-GENERATED.ts\r\nvar columnFiltersCSS = (\r\n  /*css*/\r\n  `.ag-set-filter{--ag-indentation-level:0}.ag-set-filter-item{align-items:center;display:flex;height:100%}:where(.ag-ltr) .ag-set-filter-item{padding-left:calc(var(--ag-widget-container-horizontal-padding) + var(--ag-indentation-level)*var(--ag-set-filter-indent-size))}:where(.ag-rtl) .ag-set-filter-item{padding-right:calc(var(--ag-widget-container-horizontal-padding) + var(--ag-indentation-level)*var(--ag-set-filter-indent-size))}.ag-set-filter-item-checkbox{display:flex;height:100%;width:100%}.ag-set-filter-group-icons{display:block;>*{cursor:pointer}}:where(.ag-ltr) .ag-set-filter-group-icons{margin-right:var(--ag-widget-container-horizontal-padding)}:where(.ag-rtl) .ag-set-filter-group-icons{margin-left:var(--ag-widget-container-horizontal-padding)}.ag-filter-body-wrapper{display:flex;flex-direction:column}:where(.ag-menu:not(.ag-tabs) .ag-filter) .ag-filter-body-wrapper,:where(.ag-menu:not(.ag-tabs) .ag-filter)>:not(.ag-filter-wrapper){min-width:180px}.ag-filter-filter{flex:1 1 0px}.ag-filter-condition{display:flex;justify-content:center}.ag-floating-filter-body{display:flex;flex:1 1 auto;height:100%;position:relative}.ag-floating-filter-full-body{align-items:center;display:flex;flex:1 1 auto;height:100%;overflow:hidden;width:100%}:where(.ag-floating-filter-full-body)>div{flex:1 1 auto}.ag-floating-filter-input{align-items:center;display:flex;width:100%;>*{flex:1 1 auto}:where(.ag-input-field-input[type=date]),:where(.ag-input-field-input[type=datetime-local]){width:1px}}.ag-floating-filter-button{display:flex;flex:none}.ag-date-floating-filter-wrapper{display:flex}.ag-set-floating-filter-input :where(input)[disabled]{pointer-events:none}.ag-floating-filter-button-button{-webkit-appearance:none;-moz-appearance:none;appearance:none;border:none;height:var(--ag-icon-size);width:var(--ag-icon-size)}.ag-filter-loading{align-items:unset;background-color:var(--ag-chrome-background-color);height:100%;padding:var(--ag-widget-container-vertical-padding) var(--ag-widget-container-horizontal-padding);position:absolute;width:100%;z-index:1;:where(.ag-menu) &{background-color:var(--ag-menu-background-color)}}.ag-filter-separator{border-top:solid var(--ag-border-width) var(--menu-separator-color)}:where(.ag-filter-select) .ag-picker-field-wrapper{width:0}.ag-filter-condition-operator{height:17px}:where(.ag-ltr) .ag-filter-condition-operator-or{margin-left:calc(var(--ag-spacing)*2)}:where(.ag-rtl) .ag-filter-condition-operator-or{margin-right:calc(var(--ag-spacing)*2)}.ag-set-filter-select-all{padding-top:var(--ag-widget-container-vertical-padding)}.ag-filter-no-matches,.ag-set-filter-list{height:calc(var(--ag-list-item-height)*6)}.ag-filter-no-matches{padding:var(--ag-widget-container-vertical-padding) var(--ag-widget-container-horizontal-padding)}.ag-set-filter-tree-list{height:calc(var(--ag-list-item-height)*10)}.ag-set-filter-filter{margin-left:var(--ag-widget-container-horizontal-padding);margin-right:var(--ag-widget-container-horizontal-padding);margin-top:var(--ag-widget-container-vertical-padding)}.ag-filter-to{margin-top:var(--ag-widget-vertical-spacing)}.ag-mini-filter{margin:var(--ag-widget-container-vertical-padding) var(--ag-widget-container-horizontal-padding)}:where(.ag-ltr) .ag-set-filter-add-group-indent{margin-left:calc(var(--ag-icon-size) + var(--ag-widget-container-horizontal-padding))}:where(.ag-rtl) .ag-set-filter-add-group-indent{margin-right:calc(var(--ag-icon-size) + var(--ag-widget-container-horizontal-padding))}:where(.ag-filter-menu) .ag-set-filter-list{min-width:200px}.ag-filter-virtual-list-item:focus-visible{box-shadow:inset var(--ag-focus-shadow)}.ag-filter-apply-panel{display:flex;justify-content:flex-end;overflow:hidden;padding:var(--ag-widget-vertical-spacing) var(--ag-widget-container-horizontal-padding) var(--ag-widget-container-vertical-padding)}.ag-filter-apply-panel-button{line-height:1.5}:where(.ag-ltr) .ag-filter-apply-panel-button{margin-left:calc(var(--ag-spacing)*2)}:where(.ag-rtl) .ag-filter-apply-panel-button{margin-right:calc(var(--ag-spacing)*2)}.ag-simple-filter-body-wrapper{display:flex;flex-direction:column;min-height:calc(var(--ag-list-item-height) + var(--ag-widget-container-vertical-padding) + var(--ag-widget-vertical-spacing));overflow-y:auto;padding:var(--ag-widget-container-vertical-padding) var(--ag-widget-container-horizontal-padding);padding-bottom:calc(var(--ag-widget-container-vertical-padding) - var(--ag-widget-vertical-spacing));&>*{margin-bottom:var(--ag-widget-vertical-spacing)}:where(.ag-resizer-wrapper){margin:0}}.ag-multi-filter-menu-item{margin:var(--ag-spacing) 0}.ag-multi-filter-group-title-bar{background-color:transparent;color:var(--ag-header-text-color);font-weight:500;padding:calc(var(--ag-spacing)*1.5) var(--ag-spacing)}.ag-group-filter-field-select-wrapper{display:flex;flex-direction:column;gap:var(--ag-widget-vertical-spacing);padding:var(--ag-widget-container-vertical-padding) var(--ag-widget-container-horizontal-padding)}`\r\n);\r\n\r\n// packages/ag-grid-community/src/filter/columnFilterApi.ts\r\nfunction isColumnFilterPresent(beans) {\r\n  const filterManager = beans.filterManager;\r\n  return !!filterManager?.isColumnFilterPresent() || !!filterManager?.isAggregateFilterPresent();\r\n}\r\nfunction getColumnFilterInstance(beans, key) {\r\n  return beans.filterManager?.getColumnFilterInstance(key) ?? Promise.resolve(void 0);\r\n}\r\nfunction destroyFilter(beans, key) {\r\n  const column = beans.colModel.getColDefCol(key);\r\n  if (column) {\r\n    return beans.colFilter?.destroyFilter(column, \"api\");\r\n  }\r\n}\r\nfunction setFilterModel(beans, model) {\r\n  beans.frameworkOverrides.wrapIncoming(() => beans.filterManager?.setFilterModel(model));\r\n}\r\nfunction getFilterModel(beans) {\r\n  return beans.filterManager?.getFilterModel() ?? {};\r\n}\r\nfunction getColumnFilterModel(beans, key, useUnapplied) {\r\n  const { gos, colModel, colFilter } = beans;\r\n  if (useUnapplied && !gos.get(\"enableFilterHandlers\")) {\r\n    _warn(288);\r\n    useUnapplied = false;\r\n  }\r\n  const column = colModel.getColDefCol(key);\r\n  return column ? colFilter?.getModelForColumn(column, useUnapplied) ?? null : null;\r\n}\r\nfunction setColumnFilterModel(beans, column, model) {\r\n  return beans.filterManager?.setColumnFilterModel(column, model) ?? Promise.resolve();\r\n}\r\nfunction showColumnFilter(beans, colKey) {\r\n  const column = beans.colModel.getCol(colKey);\r\n  if (!column) {\r\n    _error(12, { colKey });\r\n    return;\r\n  }\r\n  beans.menuSvc?.showFilterMenu({\r\n    column,\r\n    containerType: \"columnFilter\",\r\n    positionBy: \"auto\"\r\n  });\r\n}\r\nfunction hideColumnFilter(beans) {\r\n  beans.menuSvc?.hideFilterMenu();\r\n}\r\nfunction getColumnFilterHandler(beans, colKey) {\r\n  const column = beans.colModel.getCol(colKey);\r\n  if (!column) {\r\n    _error(12, { colKey });\r\n    return void 0;\r\n  }\r\n  return beans.colFilter?.getHandler(column, true);\r\n}\r\nfunction doFilterAction(beans, params) {\r\n  const { colModel, colFilter, gos } = beans;\r\n  if (!gos.get(\"enableFilterHandlers\")) {\r\n    _warn(287);\r\n    return;\r\n  }\r\n  const { colId, action } = params;\r\n  if (colId) {\r\n    const column = colModel.getColById(colId);\r\n    if (column) {\r\n      colFilter?.updateModel(column, action);\r\n    }\r\n  } else {\r\n    colFilter?.updateAllModels(action);\r\n  }\r\n}\r\n\r\n// packages/ag-grid-community/src/filter/columnFilterService.ts\r\nvar DUMMY_HANDLER = {\r\n  filterHandler: () => ({\r\n    doesFilterPass: () => true\r\n  })\r\n};\r\nvar ColumnFilterService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"colFilter\";\r\n    this.allColumnFilters = /* @__PURE__ */ new Map();\r\n    this.allColumnListeners = /* @__PURE__ */ new Map();\r\n    this.activeAggregateFilters = [];\r\n    this.activeColumnFilters = [];\r\n    // this is true when the grid is processing the filter change. this is used by the cell comps, so that they\r\n    // don't flash when data changes due to filter changes. there is no need to flash when filter changes as the\r\n    // user is in control, so doesn't make sense to show flashing changes. for example, go to main demo where\r\n    // this feature is turned off (hack code to always return false for isSuppressFlashingCellsBecauseFiltering(), put in)\r\n    // 100,000 rows and group by country. then do some filtering. all the cells flash, which is silly.\r\n    this.processingFilterChange = false;\r\n    // when we're waiting for cell data types to be inferred, we need to defer filter model updates\r\n    this.modelUpdates = [];\r\n    this.columnModelUpdates = [];\r\n    /** This contains the UI state for handler columns */\r\n    this.state = /* @__PURE__ */ new Map();\r\n    this.handlerMap = {\r\n      ...FILTER_HANDLER_MAP\r\n    };\r\n    this.isGlobalButtons = false;\r\n    this.activeFilterComps = /* @__PURE__ */ new Set();\r\n  }\r\n  postConstruct() {\r\n    this.addManagedEventListeners({\r\n      gridColumnsChanged: this.onColumnsChanged.bind(this),\r\n      dataTypesInferred: this.processFilterModelUpdateQueue.bind(this)\r\n    });\r\n    const gos = this.gos;\r\n    const initialFilterModel = {\r\n      ...gos.get(\"initialState\")?.filter?.filterModel ?? {}\r\n    };\r\n    this.initialModel = initialFilterModel;\r\n    this.model = {\r\n      ...initialFilterModel\r\n    };\r\n    if (!gos.get(\"enableFilterHandlers\")) {\r\n      delete this.handlerMap[\"agMultiColumnFilter\"];\r\n    }\r\n  }\r\n  refreshModel() {\r\n    this.onNewRowsLoaded(\"rowDataUpdated\");\r\n  }\r\n  setModel(model, source = \"api\") {\r\n    const { colModel, dataTypeSvc, filterManager } = this.beans;\r\n    if (dataTypeSvc?.isPendingInference) {\r\n      this.modelUpdates.push({ model, source });\r\n      return;\r\n    }\r\n    const allPromises = [];\r\n    const previousModel = this.getModel(true);\r\n    if (model) {\r\n      const modelKeys = new Set(Object.keys(model));\r\n      this.allColumnFilters.forEach((filterWrapper, colId) => {\r\n        const newModel = model[colId];\r\n        allPromises.push(this.setModelOnFilterWrapper(filterWrapper, newModel));\r\n        modelKeys.delete(colId);\r\n      });\r\n      modelKeys.forEach((colId) => {\r\n        const column = colModel.getColDefCol(colId) || colModel.getCol(colId);\r\n        if (!column) {\r\n          _warn(62, { colId });\r\n          return;\r\n        }\r\n        if (!column.isFilterAllowed()) {\r\n          _warn(63, { colId });\r\n          return;\r\n        }\r\n        const filterWrapper = this.getOrCreateFilterWrapper(column, true);\r\n        if (!filterWrapper) {\r\n          _warn(64, { colId });\r\n          return;\r\n        }\r\n        allPromises.push(this.setModelOnFilterWrapper(filterWrapper, model[colId], true));\r\n      });\r\n    } else {\r\n      this.model = {};\r\n      this.allColumnFilters.forEach((filterWrapper) => {\r\n        allPromises.push(this.setModelOnFilterWrapper(filterWrapper, null));\r\n      });\r\n    }\r\n    AgPromise.all(allPromises).then(() => {\r\n      const currentModel = this.getModel(true);\r\n      const columns = [];\r\n      this.allColumnFilters.forEach((filterWrapper, colId) => {\r\n        const before = previousModel ? previousModel[colId] : null;\r\n        const after = currentModel ? currentModel[colId] : null;\r\n        if (!_jsonEquals(before, after)) {\r\n          columns.push(filterWrapper.column);\r\n        }\r\n      });\r\n      if (columns.length > 0) {\r\n        filterManager?.onFilterChanged({ columns, source });\r\n      }\r\n    });\r\n  }\r\n  getModel(excludeInitialState) {\r\n    const result = {};\r\n    const {\r\n      allColumnFilters,\r\n      initialModel,\r\n      beans: { colModel }\r\n    } = this;\r\n    allColumnFilters.forEach((filterWrapper, key) => {\r\n      const model = this.getModelFromFilterWrapper(filterWrapper);\r\n      if (_exists(model)) {\r\n        result[key] = model;\r\n      }\r\n    });\r\n    if (!excludeInitialState) {\r\n      for (const colId of Object.keys(initialModel)) {\r\n        const model = initialModel[colId];\r\n        if (_exists(model) && !allColumnFilters.has(colId) && colModel.getCol(colId)?.isFilterAllowed()) {\r\n          result[colId] = model;\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n  setState(model, state, source = \"api\") {\r\n    this.state.clear();\r\n    if (state) {\r\n      for (const colId of Object.keys(state)) {\r\n        const newState = state[colId];\r\n        this.state.set(colId, {\r\n          model: _getFilterModel(this.model, colId),\r\n          state: newState\r\n        });\r\n      }\r\n    }\r\n    this.setModel(model, source);\r\n  }\r\n  getState() {\r\n    const state = this.state;\r\n    if (!state.size) {\r\n      return void 0;\r\n    }\r\n    const newState = {};\r\n    let hasNewState = false;\r\n    state.forEach((colState, colId) => {\r\n      const actualState = colState.state;\r\n      if (actualState != null) {\r\n        hasNewState = true;\r\n        newState[colId] = actualState;\r\n      }\r\n    });\r\n    return hasNewState ? newState : void 0;\r\n  }\r\n  getModelFromFilterWrapper(filterWrapper) {\r\n    const column = filterWrapper.column;\r\n    const colId = column.getColId();\r\n    if (filterWrapper.isHandler) {\r\n      return _getFilterModel(this.model, colId);\r\n    }\r\n    const filter = filterWrapper.filter;\r\n    if (filter) {\r\n      if (typeof filter.getModel !== \"function\") {\r\n        _warn(66);\r\n        return null;\r\n      }\r\n      return filter.getModel();\r\n    }\r\n    return _getFilterModel(this.initialModel, colId);\r\n  }\r\n  isFilterPresent() {\r\n    return this.activeColumnFilters.length > 0;\r\n  }\r\n  isAggFilterPresent() {\r\n    return !!this.activeAggregateFilters.length;\r\n  }\r\n  disableFilters() {\r\n    this.initialModel = {};\r\n    const { allColumnFilters } = this;\r\n    if (allColumnFilters.size) {\r\n      allColumnFilters.forEach(\r\n        (filterWrapper) => this.disposeFilterWrapper(filterWrapper, \"advancedFilterEnabled\")\r\n      );\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  updateActiveFilters() {\r\n    const isFilterActive = (filter) => {\r\n      if (!filter) {\r\n        return false;\r\n      }\r\n      if (!filter.isFilterActive) {\r\n        _warn(67);\r\n        return false;\r\n      }\r\n      return filter.isFilterActive();\r\n    };\r\n    const { colModel, gos } = this.beans;\r\n    const groupFilterEnabled = !!_getGroupAggFiltering(gos);\r\n    const isAggFilter = (column) => {\r\n      const isSecondary = !column.isPrimary();\r\n      if (isSecondary) {\r\n        return true;\r\n      }\r\n      const isShowingPrimaryColumns = !colModel.isPivotActive();\r\n      const isValueActive = column.isValueActive();\r\n      if (!isValueActive || !isShowingPrimaryColumns) {\r\n        return false;\r\n      }\r\n      if (colModel.isPivotMode()) {\r\n        return true;\r\n      }\r\n      return groupFilterEnabled;\r\n    };\r\n    const activeAggregateFilters = [];\r\n    const activeColumnFilters = [];\r\n    const addFilter = (column, filterActive, doesFilterPassWrapper) => {\r\n      if (filterActive) {\r\n        if (isAggFilter(column)) {\r\n          activeAggregateFilters.push(doesFilterPassWrapper);\r\n        } else {\r\n          activeColumnFilters.push(doesFilterPassWrapper);\r\n        }\r\n      }\r\n    };\r\n    const promises = [];\r\n    this.allColumnFilters.forEach((filterWrapper) => {\r\n      const column = filterWrapper.column;\r\n      const colId = column.getColId();\r\n      if (filterWrapper.isHandler) {\r\n        promises.push(\r\n          AgPromise.resolve().then(() => {\r\n            addFilter(column, this.isHandlerActive(column), {\r\n              colId,\r\n              isHandler: true,\r\n              handler: filterWrapper.handler,\r\n              handlerParams: filterWrapper.handlerParams\r\n            });\r\n          })\r\n        );\r\n      } else {\r\n        const promise = getFilterUiFromWrapper(filterWrapper);\r\n        if (promise) {\r\n          promises.push(\r\n            promise.then((filter) => {\r\n              addFilter(column, isFilterActive(filter), {\r\n                colId,\r\n                isHandler: false,\r\n                comp: filter\r\n              });\r\n            })\r\n          );\r\n        }\r\n      }\r\n    });\r\n    return AgPromise.all(promises).then(() => {\r\n      this.activeAggregateFilters = activeAggregateFilters;\r\n      this.activeColumnFilters = activeColumnFilters;\r\n    });\r\n  }\r\n  updateFilterFlagInColumns(source, additionalEventAttributes) {\r\n    const promises = [];\r\n    this.allColumnFilters.forEach((filterWrapper) => {\r\n      const column = filterWrapper.column;\r\n      if (filterWrapper.isHandler) {\r\n        promises.push(\r\n          AgPromise.resolve().then(() => {\r\n            this.setColFilterActive(\r\n              column,\r\n              this.isHandlerActive(column),\r\n              source,\r\n              additionalEventAttributes\r\n            );\r\n          })\r\n        );\r\n      } else {\r\n        const promise = getFilterUiFromWrapper(filterWrapper);\r\n        if (promise) {\r\n          promises.push(\r\n            promise.then((filter) => {\r\n              this.setColFilterActive(\r\n                column,\r\n                filter.isFilterActive(),\r\n                source,\r\n                additionalEventAttributes\r\n              );\r\n            })\r\n          );\r\n        }\r\n      }\r\n    });\r\n    this.beans.groupFilter?.updateFilterFlags(source, additionalEventAttributes);\r\n    return AgPromise.all(promises);\r\n  }\r\n  doFiltersPass(node, colIdToSkip, targetAggregates) {\r\n    const { data, aggData } = node;\r\n    const targetedFilters = targetAggregates ? this.activeAggregateFilters : this.activeColumnFilters;\r\n    const targetedData = targetAggregates ? aggData : data;\r\n    const model = this.model;\r\n    for (let i = 0; i < targetedFilters.length; i++) {\r\n      const filter = targetedFilters[i];\r\n      const { colId, isHandler } = filter;\r\n      if (colId === colIdToSkip) {\r\n        continue;\r\n      }\r\n      if (isHandler) {\r\n        const { handler, handlerParams } = filter;\r\n        if (!handler.doesFilterPass({\r\n          node,\r\n          data: targetedData,\r\n          model: _getFilterModel(model, colId),\r\n          handlerParams\r\n        })) {\r\n          return false;\r\n        }\r\n      } else {\r\n        const comp = filter.comp;\r\n        if (typeof comp.doesFilterPass !== \"function\") {\r\n          _error(91);\r\n          continue;\r\n        }\r\n        if (!comp.doesFilterPass({ node, data: targetedData })) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  getHandlerParams(column) {\r\n    const wrapper = this.allColumnFilters.get(column.getColId());\r\n    return wrapper?.isHandler ? wrapper.handlerParams : void 0;\r\n  }\r\n  // sometimes (especially in React) the filter can call onFilterChanged when we are in the middle\r\n  // of a render cycle. this would be bad, so we wait for render cycle to complete when this happens.\r\n  // this happens in react when we change React State in the grid (eg setting RowCtrl's in RowContainer)\r\n  // which results in React State getting applied in the main application, triggering a useEffect() to\r\n  // be kicked off adn then the application calling the grid's API. in AG-6554, the custom filter was\r\n  // getting it's useEffect() triggered in this way.\r\n  callOnFilterChangedOutsideRenderCycle(params) {\r\n    const { rowRenderer, filterManager } = this.beans;\r\n    const action = () => {\r\n      if (this.isAlive()) {\r\n        filterManager?.onFilterChanged(params);\r\n      }\r\n    };\r\n    if (rowRenderer.isRefreshInProgress()) {\r\n      setTimeout(action, 0);\r\n    } else {\r\n      action();\r\n    }\r\n  }\r\n  updateBeforeFilterChanged(params = {}) {\r\n    const { column, additionalEventAttributes } = params;\r\n    const colId = column?.getColId();\r\n    return this.updateActiveFilters().then(\r\n      () => this.updateFilterFlagInColumns(\"filterChanged\", additionalEventAttributes).then(() => {\r\n        this.allColumnFilters.forEach((filterWrapper) => {\r\n          const { column: filterColumn, isHandler } = filterWrapper;\r\n          if (colId === filterColumn.getColId()) {\r\n            return;\r\n          }\r\n          if (isHandler) {\r\n            filterWrapper.handler.onAnyFilterChanged?.();\r\n          }\r\n          getFilterUiFromWrapper(filterWrapper, isHandler)?.then((filter) => {\r\n            if (typeof filter?.onAnyFilterChanged === \"function\") {\r\n              filter.onAnyFilterChanged();\r\n            }\r\n          });\r\n        });\r\n        this.processingFilterChange = true;\r\n      })\r\n    );\r\n  }\r\n  updateAfterFilterChanged() {\r\n    this.processingFilterChange = false;\r\n  }\r\n  isSuppressFlashingCellsBecauseFiltering() {\r\n    const allowShowChangeAfterFilter = this.gos.get(\"allowShowChangeAfterFilter\") ?? false;\r\n    return !allowShowChangeAfterFilter && this.processingFilterChange;\r\n  }\r\n  onNewRowsLoaded(source) {\r\n    const promises = [];\r\n    this.allColumnFilters.forEach((filterWrapper) => {\r\n      const isHandler = filterWrapper.isHandler;\r\n      if (isHandler) {\r\n        filterWrapper.handler.onNewRowsLoaded?.();\r\n      }\r\n      const promise = getFilterUiFromWrapper(filterWrapper, isHandler);\r\n      if (promise) {\r\n        promises.push(\r\n          promise.then((filter) => {\r\n            filter.onNewRowsLoaded?.();\r\n          })\r\n        );\r\n      }\r\n    });\r\n    AgPromise.all(promises).then(() => this.updateFilterFlagInColumns(source, { afterDataChange: true })).then(() => this.updateActiveFilters());\r\n  }\r\n  createGetValue(filterColumn, filterValueGetterOverride) {\r\n    const { filterValueSvc, colModel } = this.beans;\r\n    return (rowNode, column) => {\r\n      const columnToUse = column ? colModel.getCol(column) : filterColumn;\r\n      return columnToUse ? filterValueSvc.getValue(columnToUse, rowNode, filterValueGetterOverride) : void 0;\r\n    };\r\n  }\r\n  isFilterActive(column) {\r\n    const filterWrapper = this.cachedFilter(column);\r\n    if (filterWrapper?.isHandler) {\r\n      return this.isHandlerActive(column);\r\n    }\r\n    const filter = filterWrapper?.filter;\r\n    if (filter) {\r\n      return filter.isFilterActive();\r\n    }\r\n    return _getFilterModel(this.initialModel, column.getColId()) != null;\r\n  }\r\n  isHandlerActive(column) {\r\n    const active = _exists(_getFilterModel(this.model, column.getColId()));\r\n    if (active) {\r\n      return active;\r\n    }\r\n    const groupFilter = this.beans.groupFilter;\r\n    return groupFilter?.isGroupFilter(column) ? groupFilter.isFilterActive(column) : false;\r\n  }\r\n  getOrCreateFilterUi(column) {\r\n    const filterWrapper = this.getOrCreateFilterWrapper(column, true);\r\n    return filterWrapper ? getFilterUiFromWrapper(filterWrapper) : null;\r\n  }\r\n  getFilterUiForDisplay(column) {\r\n    const filterWrapper = this.getOrCreateFilterWrapper(column, true);\r\n    if (!filterWrapper) {\r\n      return null;\r\n    }\r\n    const compPromise = getFilterUiFromWrapper(filterWrapper);\r\n    if (!compPromise) {\r\n      return null;\r\n    }\r\n    return compPromise.then((comp) => ({\r\n      comp,\r\n      params: filterWrapper.filterUi.filterParams,\r\n      isHandler: filterWrapper.isHandler\r\n    }));\r\n  }\r\n  getHandler(column, createIfMissing) {\r\n    const filterWrapper = this.getOrCreateFilterWrapper(column, createIfMissing);\r\n    return filterWrapper?.isHandler ? filterWrapper.handler : void 0;\r\n  }\r\n  getOrCreateFilterWrapper(column, createIfMissing) {\r\n    if (!column.isFilterAllowed()) {\r\n      return void 0;\r\n    }\r\n    let filterWrapper = this.cachedFilter(column);\r\n    if (!filterWrapper && createIfMissing) {\r\n      filterWrapper = this.createFilterWrapper(column);\r\n      this.setColumnFilterWrapper(column, filterWrapper);\r\n    }\r\n    return filterWrapper;\r\n  }\r\n  cachedFilter(column) {\r\n    return this.allColumnFilters.get(column.getColId());\r\n  }\r\n  getDefaultFilter(column, isFloating = false) {\r\n    return this.getDefaultFilterFromDataType(() => this.beans.dataTypeSvc?.getBaseDataType(column), isFloating);\r\n  }\r\n  getDefaultFilterFromDataType(getCellDataType, isFloating = false) {\r\n    if (_isSetFilterByDefault(this.gos)) {\r\n      return isFloating ? \"agSetColumnFloatingFilter\" : \"agSetColumnFilter\";\r\n    }\r\n    return _getDefaultSimpleFilter(getCellDataType(), isFloating);\r\n  }\r\n  getDefaultFloatingFilter(column) {\r\n    return this.getDefaultFilter(column, true);\r\n  }\r\n  createFilterComp(column, filterDef, defaultFilter, getFilterParams, isHandler, source) {\r\n    const createFilterCompDetails = () => {\r\n      const params = this.createFilterCompParams(column, isHandler, source);\r\n      const updatedParams = getFilterParams(params, isHandler);\r\n      return _getFilterDetails(this.beans.userCompFactory, filterDef, updatedParams, defaultFilter);\r\n    };\r\n    const compDetails = createFilterCompDetails();\r\n    if (!compDetails) {\r\n      return null;\r\n    }\r\n    const createFilterUi = (update) => {\r\n      return (update ? createFilterCompDetails() : compDetails).newAgStackInstance();\r\n    };\r\n    return {\r\n      compDetails,\r\n      createFilterUi\r\n    };\r\n  }\r\n  createFilterInstance(column, filterDef, defaultFilter, getFilterParams) {\r\n    const selectableFilter = this.beans.selectableFilter;\r\n    if (selectableFilter?.isSelectable(filterDef)) {\r\n      filterDef = selectableFilter.getFilterDef(column, filterDef);\r\n    }\r\n    const { handler, handlerParams, handlerGenerator } = this.createHandler(column, filterDef, defaultFilter) ?? {};\r\n    const filterCompDetails = this.createFilterComp(\r\n      column,\r\n      filterDef,\r\n      defaultFilter,\r\n      getFilterParams,\r\n      !!handler,\r\n      \"init\"\r\n    );\r\n    if (!filterCompDetails) {\r\n      return {\r\n        compDetails: null,\r\n        createFilterUi: null,\r\n        handler,\r\n        handlerGenerator,\r\n        handlerParams\r\n      };\r\n    }\r\n    const { compDetails, createFilterUi } = filterCompDetails;\r\n    if (this.isGlobalButtons) {\r\n      const hasLocalButtons = !!compDetails.params?.buttons?.length;\r\n      if (!hasLocalButtons) {\r\n        _warn(281, { colId: column.getColId() });\r\n      }\r\n    }\r\n    return {\r\n      compDetails,\r\n      handler,\r\n      handlerGenerator,\r\n      handlerParams,\r\n      createFilterUi\r\n    };\r\n  }\r\n  createBaseFilterParams(column, forFloatingFilter) {\r\n    const { filterManager, rowModel } = this.beans;\r\n    return _addGridCommonParams(this.gos, {\r\n      column,\r\n      colDef: column.getColDef(),\r\n      getValue: this.createGetValue(column),\r\n      doesRowPassOtherFilter: forFloatingFilter ? () => true : (node) => filterManager?.doesRowPassOtherFilters(column.getColId(), node) ?? true,\r\n      // to avoid breaking changes to `filterParams` defined as functions\r\n      // we need to provide the below options even though they are not valid for handlers\r\n      rowModel\r\n    });\r\n  }\r\n  createFilterCompParams(column, useHandler, source, forFloatingFilter) {\r\n    const filterChangedCallback = this.filterChangedCallbackFactory(column);\r\n    const params = this.createBaseFilterParams(column, forFloatingFilter);\r\n    params.filterChangedCallback = filterChangedCallback;\r\n    params.filterModifiedCallback = forFloatingFilter ? () => {\r\n    } : (additionalEventAttributes) => this.filterModified(column, additionalEventAttributes);\r\n    if (useHandler) {\r\n      const displayParams = params;\r\n      const colId = column.getColId();\r\n      const model = _getFilterModel(this.model, colId);\r\n      displayParams.model = model;\r\n      displayParams.state = this.state.get(colId) ?? {\r\n        model\r\n      };\r\n      displayParams.onModelChange = (model2, additionalEventAttributes) => {\r\n        this.updateStoredModel(colId, model2);\r\n        this.refreshHandlerAndUi(column, model2, \"ui\").then(() => {\r\n          filterChangedCallback({ ...additionalEventAttributes, source: \"columnFilter\" });\r\n        });\r\n      };\r\n      displayParams.onStateChange = (state) => {\r\n        this.updateState(column, state);\r\n        this.updateOrRefreshFilterUi(column);\r\n      };\r\n      displayParams.onAction = (action, additionalEventAttributes, event) => {\r\n        this.updateModel(column, action, additionalEventAttributes);\r\n        this.dispatchLocalEvent({\r\n          type: \"filterAction\",\r\n          column,\r\n          action,\r\n          event\r\n        });\r\n      };\r\n      displayParams.getHandler = () => this.getHandler(column, true);\r\n      displayParams.onUiChange = (additionalEventAttributes) => this.filterUiChanged(column, additionalEventAttributes);\r\n      displayParams.source = source;\r\n    }\r\n    return params;\r\n  }\r\n  createFilterUiForHandler(compDetails, createFilterUi) {\r\n    return createFilterUi ? {\r\n      created: false,\r\n      create: createFilterUi,\r\n      filterParams: compDetails.params,\r\n      compDetails\r\n    } : null;\r\n  }\r\n  createFilterUiLegacy(compDetails, createFilterUi, updateInstanceCallback) {\r\n    const promise = createFilterUi();\r\n    const filterUi = {\r\n      created: true,\r\n      create: createFilterUi,\r\n      filterParams: compDetails.params,\r\n      compDetails,\r\n      promise\r\n    };\r\n    promise.then(updateInstanceCallback);\r\n    return filterUi;\r\n  }\r\n  createFilterWrapper(column) {\r\n    const { compDetails, handler, handlerGenerator, handlerParams, createFilterUi } = this.createFilterInstance(\r\n      column,\r\n      column.getColDef(),\r\n      this.getDefaultFilter(column),\r\n      (params) => params\r\n    );\r\n    const colId = column.getColId();\r\n    if (handler) {\r\n      delete this.initialModel[colId];\r\n      handler.init?.({\r\n        ...handlerParams,\r\n        source: \"init\",\r\n        model: _getFilterModel(this.model, colId)\r\n      });\r\n      return {\r\n        column,\r\n        isHandler: true,\r\n        handler,\r\n        handlerGenerator,\r\n        handlerParams,\r\n        filterUi: this.createFilterUiForHandler(compDetails, createFilterUi)\r\n      };\r\n    }\r\n    if (createFilterUi) {\r\n      const filterWrapper = {\r\n        column,\r\n        filterUi: null,\r\n        isHandler: false\r\n      };\r\n      filterWrapper.filterUi = this.createFilterUiLegacy(compDetails, createFilterUi, (filterComp) => {\r\n        filterWrapper.filter = filterComp ?? void 0;\r\n      });\r\n      return filterWrapper;\r\n    }\r\n    return {\r\n      column,\r\n      filterUi: null,\r\n      isHandler: false\r\n    };\r\n  }\r\n  createHandlerFunc(filterDef, defaultFilter) {\r\n    const { gos, frameworkOverrides, registry } = this.beans;\r\n    let doesFilterPass;\r\n    const getFilterHandlerFromDef = (filterDef2) => {\r\n      const filter = filterDef2.filter;\r\n      if (isColumnFilterComp(filter)) {\r\n        const handler = filter.handler;\r\n        if (handler) {\r\n          return handler;\r\n        }\r\n        doesFilterPass = filter.doesFilterPass;\r\n        if (doesFilterPass) {\r\n          return () => ({\r\n            doesFilterPass\r\n          });\r\n        }\r\n        return void 0;\r\n      }\r\n      return typeof filter === \"string\" ? filter : void 0;\r\n    };\r\n    const providedFilterHandler = gos.get(\"enableFilterHandlers\") ? getFilterHandlerFromDef(filterDef) : void 0;\r\n    const resolveProvidedFilterHandler = (handlerName2) => () => this.createBean(registry.createDynamicBean(handlerName2, true));\r\n    let filterHandler;\r\n    let handlerName;\r\n    if (typeof providedFilterHandler === \"string\") {\r\n      const userFilterHandler = gos.get(\"filterHandlers\")?.[providedFilterHandler];\r\n      if (userFilterHandler != null) {\r\n        filterHandler = userFilterHandler;\r\n      } else {\r\n        if (FILTER_HANDLERS.has(providedFilterHandler)) {\r\n          filterHandler = resolveProvidedFilterHandler(providedFilterHandler);\r\n          handlerName = providedFilterHandler;\r\n        }\r\n      }\r\n    } else {\r\n      filterHandler = providedFilterHandler;\r\n    }\r\n    if (!filterHandler) {\r\n      let filterName;\r\n      const { compName, jsComp, fwComp } = _getFilterCompKeys(frameworkOverrides, filterDef);\r\n      if (compName) {\r\n        filterName = compName;\r\n      } else {\r\n        const usingDefaultFilter = jsComp == null && fwComp == null && filterDef.filter === true;\r\n        if (usingDefaultFilter) {\r\n          filterName = defaultFilter;\r\n        }\r\n      }\r\n      handlerName = this.handlerMap[filterName];\r\n      if (handlerName) {\r\n        filterHandler = resolveProvidedFilterHandler(handlerName);\r\n      }\r\n    }\r\n    if (!filterHandler) {\r\n      return void 0;\r\n    }\r\n    return { filterHandler, handlerNameOrCallback: doesFilterPass ?? handlerName };\r\n  }\r\n  createHandler(column, filterDef, defaultFilter) {\r\n    let handlerFunc = this.createHandlerFunc(filterDef, defaultFilter);\r\n    if (!handlerFunc) {\r\n      const gos = this.gos;\r\n      if (!gos.get(\"enableFilterHandlers\")) {\r\n        return void 0;\r\n      }\r\n      if (_isClientSideRowModel(gos)) {\r\n        _warn(277, { colId: column.getColId() });\r\n      }\r\n      handlerFunc = DUMMY_HANDLER;\r\n    }\r\n    const filterParams = _mergeFilterParamsWithApplicationProvidedParams(\r\n      this.beans.userCompFactory,\r\n      filterDef,\r\n      this.createFilterCompParams(column, true, \"init\")\r\n    );\r\n    const { handlerNameOrCallback, filterHandler } = handlerFunc;\r\n    const { handler, handlerParams } = this.createHandlerFromFunc(column, filterHandler, filterParams);\r\n    return {\r\n      handler,\r\n      handlerParams,\r\n      handlerGenerator: handlerNameOrCallback ?? filterHandler\r\n    };\r\n  }\r\n  createHandlerFromFunc(column, filterHandler, filterParams) {\r\n    const colDef = column.getColDef();\r\n    const handler = filterHandler(_addGridCommonParams(this.gos, { column, colDef }));\r\n    const handlerParams = this.createHandlerParams(column, filterParams);\r\n    return { handler, handlerParams };\r\n  }\r\n  createHandlerParams(column, filterParams) {\r\n    const colDef = column.getColDef();\r\n    const colId = column.getColId();\r\n    const filterChangedCallback = this.filterChangedCallbackFactory(column);\r\n    return _addGridCommonParams(this.gos, {\r\n      colDef,\r\n      column,\r\n      getValue: this.createGetValue(column),\r\n      doesRowPassOtherFilter: (node) => this.beans.filterManager?.doesRowPassOtherFilters(colId, node) ?? true,\r\n      onModelChange: (newModel, additionalEventAttributes) => {\r\n        this.updateStoredModel(colId, newModel);\r\n        this.refreshHandlerAndUi(column, newModel, \"handler\").then(() => {\r\n          filterChangedCallback({ ...additionalEventAttributes, source: \"columnFilter\" });\r\n        });\r\n      },\r\n      filterParams\r\n    });\r\n  }\r\n  onColumnsChanged() {\r\n    const columns = [];\r\n    const { colModel, filterManager, groupFilter } = this.beans;\r\n    this.allColumnFilters.forEach((wrapper, colId) => {\r\n      let currentColumn;\r\n      if (wrapper.column.isPrimary()) {\r\n        currentColumn = colModel.getColDefCol(colId);\r\n      } else {\r\n        currentColumn = colModel.getCol(colId);\r\n      }\r\n      if (currentColumn && currentColumn === wrapper.column) {\r\n        return;\r\n      }\r\n      columns.push(wrapper.column);\r\n      this.disposeFilterWrapper(wrapper, \"columnChanged\");\r\n      this.disposeColumnListener(colId);\r\n    });\r\n    const allFiltersAreGroupFilters = groupFilter && columns.every((col) => groupFilter.isGroupFilter(col));\r\n    if (columns.length > 0 && !allFiltersAreGroupFilters) {\r\n      filterManager?.onFilterChanged({ columns, source: \"api\" });\r\n    }\r\n  }\r\n  isFilterAllowed(column) {\r\n    const isFilterAllowed = column.isFilterAllowed();\r\n    if (!isFilterAllowed) {\r\n      return false;\r\n    }\r\n    const groupFilter = this.beans.groupFilter;\r\n    if (groupFilter?.isGroupFilter(column)) {\r\n      return groupFilter.isFilterAllowed(column);\r\n    }\r\n    return true;\r\n  }\r\n  getFloatingFilterCompDetails(column, showParentFilter) {\r\n    const { userCompFactory, frameworkOverrides, selectableFilter } = this.beans;\r\n    const parentFilterInstance = (callback) => {\r\n      const filterComponent = this.getOrCreateFilterUi(column);\r\n      if (filterComponent == null) {\r\n        return;\r\n      }\r\n      filterComponent.then((instance) => {\r\n        callback(_unwrapUserComp(instance));\r\n      });\r\n    };\r\n    const colDef = column.getColDef();\r\n    const filterDef = selectableFilter?.isSelectable(colDef) ? selectableFilter.getFilterDef(column, colDef) : colDef;\r\n    const defaultFloatingFilterType = _getDefaultFloatingFilterType(frameworkOverrides, filterDef, () => this.getDefaultFloatingFilter(column)) ?? \"agReadOnlyFloatingFilter\";\r\n    const isReactive = this.gos.get(\"enableFilterHandlers\");\r\n    const filterParams = _mergeFilterParamsWithApplicationProvidedParams(\r\n      userCompFactory,\r\n      filterDef,\r\n      this.createFilterCompParams(column, isReactive, \"init\", true)\r\n    );\r\n    const params = _addGridCommonParams(this.gos, {\r\n      column,\r\n      filterParams,\r\n      currentParentModel: () => this.getCurrentFloatingFilterParentModel(column),\r\n      parentFilterInstance,\r\n      showParentFilter\r\n    });\r\n    if (isReactive) {\r\n      const displayParams = params;\r\n      const colId = column.getColId();\r\n      const filterChangedCallback = this.filterChangedCallbackFactory(column);\r\n      displayParams.onUiChange = (additionalEventAttributes) => this.floatingFilterUiChanged(column, additionalEventAttributes);\r\n      displayParams.model = _getFilterModel(this.model, colId);\r\n      displayParams.onModelChange = (model, additionalEventAttributes) => {\r\n        this.updateStoredModel(colId, model);\r\n        this.refreshHandlerAndUi(column, model, \"floating\", true).then(() => {\r\n          filterChangedCallback({ ...additionalEventAttributes, source: \"columnFilter\" });\r\n        });\r\n      };\r\n      displayParams.getHandler = () => this.getHandler(column, true);\r\n      displayParams.source = \"init\";\r\n    }\r\n    return _getFloatingFilterCompDetails(userCompFactory, colDef, params, defaultFloatingFilterType);\r\n  }\r\n  getCurrentFloatingFilterParentModel(column) {\r\n    return this.getModelFromFilterWrapper(this.cachedFilter(column) ?? { column });\r\n  }\r\n  destroyFilterUi(filterWrapper, column, compDetails, createFilterUi) {\r\n    if (filterWrapper.isHandler) {\r\n      const colId = column.getColId();\r\n      delete this.initialModel[colId];\r\n      this.state.delete(colId);\r\n      const filterUi = filterWrapper.filterUi;\r\n      const newFilterUi = this.createFilterUiForHandler(compDetails, createFilterUi);\r\n      filterWrapper.filterUi = newFilterUi;\r\n      if (filterUi?.created) {\r\n        filterUi.promise.then((filter) => {\r\n          this.destroyBean(filter);\r\n          this.eventSvc.dispatchEvent({\r\n            type: \"filterDestroyed\",\r\n            source: \"paramsUpdated\",\r\n            column: filterWrapper.column\r\n          });\r\n        });\r\n      }\r\n    } else {\r\n      this.destroyFilter(column, \"paramsUpdated\");\r\n    }\r\n  }\r\n  // destroys the filter, so it no longer takes part\r\n  destroyFilter(column, source = \"api\") {\r\n    const colId = column.getColId();\r\n    const filterWrapper = this.allColumnFilters.get(colId);\r\n    this.disposeColumnListener(colId);\r\n    delete this.initialModel[colId];\r\n    if (filterWrapper) {\r\n      this.disposeFilterWrapper(filterWrapper, source).then((wasActive) => {\r\n        if (wasActive && this.isAlive()) {\r\n          this.beans.filterManager?.onFilterChanged({\r\n            columns: [column],\r\n            source: \"api\"\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n  disposeColumnListener(colId) {\r\n    const columnListener = this.allColumnListeners.get(colId);\r\n    if (columnListener) {\r\n      this.allColumnListeners.delete(colId);\r\n      columnListener();\r\n    }\r\n  }\r\n  disposeFilterWrapper(filterWrapper, source) {\r\n    let isActive = false;\r\n    const { column, isHandler, filterUi } = filterWrapper;\r\n    const colId = column.getColId();\r\n    if (isHandler) {\r\n      isActive = this.isHandlerActive(column);\r\n      this.destroyBean(filterWrapper.handler);\r\n      delete this.model[colId];\r\n      this.state.delete(colId);\r\n    }\r\n    const removeFilter = () => {\r\n      this.setColFilterActive(column, false, \"filterDestroyed\");\r\n      this.allColumnFilters.delete(colId);\r\n      this.eventSvc.dispatchEvent({\r\n        type: \"filterDestroyed\",\r\n        source,\r\n        column\r\n      });\r\n    };\r\n    if (filterUi) {\r\n      if (filterUi.created) {\r\n        return filterUi.promise.then((filter) => {\r\n          isActive = isHandler ? isActive : !!filter?.isFilterActive();\r\n          this.destroyBean(filter);\r\n          removeFilter();\r\n          return isActive;\r\n        });\r\n      } else {\r\n        removeFilter();\r\n      }\r\n    }\r\n    return AgPromise.resolve(isActive);\r\n  }\r\n  filterChangedCallbackFactory(column) {\r\n    return (additionalEventAttributes) => {\r\n      this.callOnFilterChangedOutsideRenderCycle({\r\n        additionalEventAttributes,\r\n        columns: [column],\r\n        column,\r\n        source: additionalEventAttributes?.source ?? \"columnFilter\"\r\n      });\r\n    };\r\n  }\r\n  filterParamsChanged(colId, source = \"api\") {\r\n    const filterWrapper = this.allColumnFilters.get(colId);\r\n    if (!filterWrapper) {\r\n      return;\r\n    }\r\n    const beans = this.beans;\r\n    const column = filterWrapper.column;\r\n    const colDef = column.getColDef();\r\n    const isFilterAllowed = column.isFilterAllowed();\r\n    const defaultFilter = this.getDefaultFilter(column);\r\n    const selectableFilter = beans.selectableFilter;\r\n    const filterDef = selectableFilter?.isSelectable(colDef) ? selectableFilter.getFilterDef(column, colDef) : colDef;\r\n    const handlerFunc = isFilterAllowed ? this.createHandlerFunc(filterDef, this.getDefaultFilter(column)) : void 0;\r\n    const isHandler = !!handlerFunc;\r\n    const wasHandler = filterWrapper.isHandler;\r\n    if (wasHandler != isHandler) {\r\n      this.destroyFilter(column, \"paramsUpdated\");\r\n      return;\r\n    }\r\n    const { compDetails, createFilterUi } = (isFilterAllowed ? this.createFilterComp(column, filterDef, defaultFilter, (params) => params, isHandler, \"colDef\") : null) ?? { compDetails: null, createFilterUi: null };\r\n    const newFilterParams = compDetails?.params ?? _mergeFilterParamsWithApplicationProvidedParams(\r\n      beans.userCompFactory,\r\n      filterDef,\r\n      this.createFilterCompParams(column, isHandler, \"colDef\")\r\n    );\r\n    if (wasHandler) {\r\n      const handlerGenerator = handlerFunc?.handlerNameOrCallback ?? handlerFunc?.filterHandler;\r\n      const existingModel = _getFilterModel(this.model, colId);\r\n      if (filterWrapper.handlerGenerator != handlerGenerator) {\r\n        const oldHandler = filterWrapper.handler;\r\n        const { handler, handlerParams } = this.createHandlerFromFunc(\r\n          column,\r\n          handlerFunc.filterHandler,\r\n          newFilterParams\r\n        );\r\n        filterWrapper.handler = handler;\r\n        filterWrapper.handlerParams = handlerParams;\r\n        filterWrapper.handlerGenerator = handlerGenerator;\r\n        delete this.model[colId];\r\n        handler.init?.({ ...handlerParams, source: \"init\", model: null });\r\n        this.destroyBean(oldHandler);\r\n        if (existingModel != null) {\r\n          this.beans.filterManager?.onFilterChanged({\r\n            columns: [column],\r\n            source\r\n          });\r\n        }\r\n      } else {\r\n        const handlerParams = this.createHandlerParams(column, compDetails?.params);\r\n        filterWrapper.handlerParams = handlerParams;\r\n        filterWrapper.handler.refresh?.({\r\n          ...handlerParams,\r\n          source: \"colDef\",\r\n          model: existingModel\r\n        });\r\n      }\r\n    }\r\n    if (this.areFilterCompsDifferent(filterWrapper.filterUi?.compDetails ?? null, compDetails) || !filterWrapper.filterUi || !compDetails) {\r\n      this.destroyFilterUi(filterWrapper, column, compDetails, createFilterUi);\r\n      return;\r\n    }\r\n    filterWrapper.filterUi.filterParams = newFilterParams;\r\n    getFilterUiFromWrapper(filterWrapper, wasHandler)?.then((filter) => {\r\n      const shouldRefreshFilter = filter?.refresh ? filter.refresh(newFilterParams) : true;\r\n      if (shouldRefreshFilter === false) {\r\n        this.destroyFilterUi(filterWrapper, column, compDetails, createFilterUi);\r\n      } else {\r\n        this.dispatchLocalEvent({\r\n          type: \"filterParamsChanged\",\r\n          column,\r\n          params: newFilterParams\r\n        });\r\n      }\r\n    });\r\n  }\r\n  refreshHandlerAndUi(column, model, source, createIfMissing) {\r\n    const filterWrapper = this.cachedFilter(column);\r\n    if (!filterWrapper) {\r\n      if (createIfMissing) {\r\n        this.getOrCreateFilterWrapper(column, true);\r\n      }\r\n      return AgPromise.resolve();\r\n    }\r\n    if (!filterWrapper.isHandler) {\r\n      return AgPromise.resolve();\r\n    }\r\n    const { filterUi, handler, handlerParams } = filterWrapper;\r\n    return _refreshHandlerAndUi(\r\n      () => {\r\n        if (filterUi) {\r\n          const { created, filterParams } = filterUi;\r\n          if (created) {\r\n            return filterUi.promise.then((filter) => {\r\n              return filter ? { filter, filterParams } : void 0;\r\n            });\r\n          } else {\r\n            filterUi.refreshed = true;\r\n          }\r\n        }\r\n        return AgPromise.resolve(void 0);\r\n      },\r\n      handler,\r\n      handlerParams,\r\n      model,\r\n      this.state.get(column.getColId()) ?? { model },\r\n      source\r\n    );\r\n  }\r\n  setColumnFilterWrapper(column, filterWrapper) {\r\n    const colId = column.getColId();\r\n    this.allColumnFilters.set(colId, filterWrapper);\r\n    this.allColumnListeners.set(\r\n      colId,\r\n      this.addManagedListeners(column, { colDefChanged: () => this.filterParamsChanged(colId) })[0]\r\n    );\r\n  }\r\n  areFilterCompsDifferent(oldCompDetails, newCompDetails) {\r\n    if (!newCompDetails || !oldCompDetails) {\r\n      return true;\r\n    }\r\n    const { componentClass: oldComponentClass } = oldCompDetails;\r\n    const { componentClass: newComponentClass } = newCompDetails;\r\n    const isSameComponentClass = oldComponentClass === newComponentClass || // react hooks returns new wrappers, so check nested render method\r\n    oldComponentClass?.render && newComponentClass?.render && oldComponentClass.render === newComponentClass.render;\r\n    return !isSameComponentClass;\r\n  }\r\n  hasFloatingFilters() {\r\n    const gridColumns = this.beans.colModel.getCols();\r\n    return gridColumns.some((col) => col.getColDef().floatingFilter);\r\n  }\r\n  getFilterInstance(key) {\r\n    const column = this.beans.colModel.getColDefCol(key);\r\n    if (!column) {\r\n      return Promise.resolve(void 0);\r\n    }\r\n    const filterPromise = this.getOrCreateFilterUi(column);\r\n    if (!filterPromise) {\r\n      return Promise.resolve(null);\r\n    }\r\n    return new Promise((resolve) => {\r\n      filterPromise.then((filter) => {\r\n        resolve(_unwrapUserComp(filter));\r\n      });\r\n    });\r\n  }\r\n  processFilterModelUpdateQueue() {\r\n    this.modelUpdates.forEach(({ model, source }) => this.setModel(model, source));\r\n    this.modelUpdates = [];\r\n    this.columnModelUpdates.forEach(({ key, model, resolve }) => {\r\n      this.setModelForColumn(key, model).then(() => resolve());\r\n    });\r\n    this.columnModelUpdates = [];\r\n  }\r\n  getModelForColumn(column, useUnapplied) {\r\n    if (useUnapplied) {\r\n      const { state, model } = this;\r\n      const colId = column.getColId();\r\n      const colState = state.get(colId);\r\n      if (colState) {\r\n        return colState.model ?? null;\r\n      }\r\n      return _getFilterModel(model, colId);\r\n    }\r\n    const filterWrapper = this.cachedFilter(column);\r\n    return filterWrapper ? this.getModelFromFilterWrapper(filterWrapper) : null;\r\n  }\r\n  setModelForColumn(key, model) {\r\n    if (this.beans.dataTypeSvc?.isPendingInference) {\r\n      let resolve = () => {\r\n      };\r\n      const promise = new Promise((res) => {\r\n        resolve = res;\r\n      });\r\n      this.columnModelUpdates.push({ key, model, resolve });\r\n      return promise;\r\n    }\r\n    return new Promise((resolve) => {\r\n      this.setModelForColumnLegacy(key, model).then((result) => resolve(result));\r\n    });\r\n  }\r\n  getStateForColumn(colId) {\r\n    return this.state.get(colId) ?? {\r\n      model: _getFilterModel(this.model, colId)\r\n    };\r\n  }\r\n  setModelForColumnLegacy(key, model) {\r\n    const column = this.beans.colModel.getColDefCol(key);\r\n    const filterWrapper = column ? this.getOrCreateFilterWrapper(column, true) : null;\r\n    return filterWrapper ? this.setModelOnFilterWrapper(filterWrapper, model) : AgPromise.resolve();\r\n  }\r\n  setColDefPropsForDataType(colDef, dataTypeDefinition, formatValue) {\r\n    const providedFilter = colDef.filter;\r\n    const filter = providedFilter === true ? this.getDefaultFilterFromDataType(() => dataTypeDefinition.baseDataType) : providedFilter;\r\n    if (typeof filter !== \"string\") {\r\n      return;\r\n    }\r\n    let filterParams;\r\n    let filterValueGetter;\r\n    const beans = this.beans;\r\n    const { filterParams: colDefFilterParams, filterValueGetter: colDefFilterValueGetter } = colDef;\r\n    if (filter === \"agMultiColumnFilter\") {\r\n      ({ filterParams, filterValueGetter } = beans.multiFilter?.getParamsForDataType(\r\n        colDefFilterParams,\r\n        colDefFilterValueGetter,\r\n        dataTypeDefinition,\r\n        formatValue\r\n      ) ?? {});\r\n    } else {\r\n      ({ filterParams, filterValueGetter } = _getFilterParamsForDataType(\r\n        filter,\r\n        colDefFilterParams,\r\n        colDefFilterValueGetter,\r\n        dataTypeDefinition,\r\n        formatValue,\r\n        beans,\r\n        this.getLocaleTextFunc()\r\n      ));\r\n    }\r\n    colDef.filterParams = filterParams;\r\n    if (filterValueGetter) {\r\n      colDef.filterValueGetter = filterValueGetter;\r\n    }\r\n  }\r\n  // additionalEventAttributes is used by provided simple floating filter, so it can add 'floatingFilter=true' to the event\r\n  setColFilterActive(column, active, source, additionalEventAttributes) {\r\n    if (column.filterActive !== active) {\r\n      column.filterActive = active;\r\n      column.dispatchColEvent(\"filterActiveChanged\", source);\r\n    }\r\n    column.dispatchColEvent(\"filterChanged\", source, additionalEventAttributes);\r\n  }\r\n  setModelOnFilterWrapper(filterWrapper, newModel, justCreated) {\r\n    return new AgPromise((resolve) => {\r\n      if (filterWrapper.isHandler) {\r\n        const column = filterWrapper.column;\r\n        const colId = column.getColId();\r\n        const existingModel = this.model[colId];\r\n        this.updateStoredModel(colId, newModel);\r\n        if (justCreated && newModel === existingModel) {\r\n          resolve();\r\n          return;\r\n        }\r\n        this.refreshHandlerAndUi(column, newModel, \"api\").then(() => resolve());\r\n        return;\r\n      }\r\n      const uiPromise = getFilterUiFromWrapper(filterWrapper);\r\n      if (uiPromise) {\r\n        uiPromise.then((filter) => {\r\n          if (typeof filter?.setModel !== \"function\") {\r\n            _warn(65);\r\n            resolve();\r\n            return;\r\n          }\r\n          (filter.setModel(newModel) || AgPromise.resolve()).then(() => resolve());\r\n        });\r\n        return;\r\n      }\r\n      resolve();\r\n    });\r\n  }\r\n  /** for handlers only */\r\n  updateStoredModel(colId, model) {\r\n    if (_exists(model)) {\r\n      this.model[colId] = model;\r\n    } else {\r\n      delete this.model[colId];\r\n    }\r\n    const oldState = this.state.get(colId);\r\n    const newState = {\r\n      model,\r\n      state: oldState?.state\r\n    };\r\n    this.state.set(colId, newState);\r\n  }\r\n  filterModified(column, additionalEventAttributes) {\r\n    this.getOrCreateFilterUi(column)?.then((filterInstance) => {\r\n      this.eventSvc.dispatchEvent({\r\n        type: \"filterModified\",\r\n        column,\r\n        filterInstance,\r\n        ...additionalEventAttributes\r\n      });\r\n    });\r\n  }\r\n  filterUiChanged(column, additionalEventAttributes) {\r\n    if (this.gos.get(\"enableFilterHandlers\")) {\r\n      this.eventSvc.dispatchEvent({\r\n        type: \"filterUiChanged\",\r\n        column,\r\n        ...additionalEventAttributes\r\n      });\r\n    }\r\n  }\r\n  floatingFilterUiChanged(column, additionalEventAttributes) {\r\n    if (this.gos.get(\"enableFilterHandlers\")) {\r\n      this.eventSvc.dispatchEvent({\r\n        type: \"floatingFilterUiChanged\",\r\n        column,\r\n        ...additionalEventAttributes\r\n      });\r\n    }\r\n  }\r\n  updateModel(column, action, additionalEventAttributes) {\r\n    const colId = column.getColId();\r\n    const getFilterUi = () => this.cachedFilter(column)?.filterUi;\r\n    _updateFilterModel(\r\n      action,\r\n      getFilterUi,\r\n      () => _getFilterModel(this.model, colId),\r\n      () => this.state.get(colId),\r\n      (state) => this.updateState(column, state),\r\n      (model) => getFilterUi()?.filterParams?.onModelChange(model, additionalEventAttributes)\r\n    );\r\n  }\r\n  updateAllModels(action, additionalEventAttributes) {\r\n    const promises = [];\r\n    this.allColumnFilters.forEach((filter, colId) => {\r\n      const column = this.beans.colModel.getColDefCol(colId);\r\n      if (column) {\r\n        _updateFilterModel(\r\n          action,\r\n          () => filter.filterUi,\r\n          () => _getFilterModel(this.model, colId),\r\n          () => this.state.get(colId),\r\n          (state) => this.updateState(column, state),\r\n          (model) => {\r\n            this.updateStoredModel(colId, model);\r\n            this.dispatchLocalEvent({\r\n              type: \"filterAction\",\r\n              column,\r\n              action\r\n            });\r\n            promises.push(this.refreshHandlerAndUi(column, model, \"ui\"));\r\n          }\r\n        );\r\n      }\r\n    });\r\n    if (promises.length) {\r\n      AgPromise.all(promises).then(() => {\r\n        this.callOnFilterChangedOutsideRenderCycle({\r\n          source: \"columnFilter\",\r\n          additionalEventAttributes,\r\n          columns: []\r\n        });\r\n      });\r\n    }\r\n  }\r\n  updateOrRefreshFilterUi(column) {\r\n    const colId = column.getColId();\r\n    getAndRefreshFilterUi(\r\n      () => this.cachedFilter(column)?.filterUi,\r\n      () => _getFilterModel(this.model, colId),\r\n      () => this.state.get(colId)\r\n    );\r\n  }\r\n  updateState(column, state) {\r\n    this.state.set(column.getColId(), state);\r\n    this.dispatchLocalEvent({\r\n      type: \"filterStateChanged\",\r\n      column,\r\n      state\r\n    });\r\n  }\r\n  // for tool panel only\r\n  canApplyAll() {\r\n    const { state, model, activeFilterComps } = this;\r\n    for (const comp of activeFilterComps) {\r\n      if (comp.source === \"COLUMN_MENU\") {\r\n        return false;\r\n      }\r\n    }\r\n    let hasChanges = false;\r\n    for (const colId of state.keys()) {\r\n      const colState = state.get(colId);\r\n      if (colState.valid === false) {\r\n        return false;\r\n      }\r\n      if ((colState.model ?? null) !== _getFilterModel(model, colId)) {\r\n        hasChanges = true;\r\n      }\r\n    }\r\n    return hasChanges;\r\n  }\r\n  hasUnappliedModel(colId) {\r\n    const { model, state } = this;\r\n    return (state.get(colId)?.model ?? null) !== _getFilterModel(model, colId);\r\n  }\r\n  setGlobalButtons(isGlobal) {\r\n    this.isGlobalButtons = isGlobal;\r\n    this.dispatchLocalEvent({\r\n      type: \"filterGlobalButtons\",\r\n      isGlobal\r\n    });\r\n  }\r\n  shouldKeepStateOnDetach(column, lastContainerType) {\r\n    if (lastContainerType === \"newFiltersToolPanel\") {\r\n      return true;\r\n    }\r\n    const filterPanelSvc = this.beans.filterPanelSvc;\r\n    if (filterPanelSvc?.isActive) {\r\n      return !!filterPanelSvc.getState(column.getColId());\r\n    }\r\n    return false;\r\n  }\r\n  destroy() {\r\n    super.destroy();\r\n    this.allColumnFilters.forEach((filterWrapper) => this.disposeFilterWrapper(filterWrapper, \"gridDestroyed\"));\r\n    this.allColumnListeners.clear();\r\n    this.state.clear();\r\n    this.activeFilterComps.clear();\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/filter/filterApi.ts\r\nfunction isAnyFilterPresent(beans) {\r\n  return !!beans.filterManager?.isAnyFilterPresent();\r\n}\r\nfunction onFilterChanged(beans, source = \"api\") {\r\n  beans.filterManager?.onFilterChanged({ source });\r\n}\r\n\r\n// packages/ag-grid-community/src/filter/filterManager.ts\r\nvar FilterManager = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"filterManager\";\r\n    // when we're waiting for cell data types to be inferred, we need to defer filter model updates\r\n    this.advFilterModelUpdateQueue = [];\r\n  }\r\n  wireBeans(beans) {\r\n    this.quickFilter = beans.quickFilter;\r\n    this.advancedFilter = beans.advancedFilter;\r\n    this.colFilter = beans.colFilter;\r\n  }\r\n  postConstruct() {\r\n    const refreshFiltersForAggregations = this.refreshFiltersForAggregations.bind(this);\r\n    const updateAdvFilterColumns = this.updateAdvFilterColumns.bind(this);\r\n    this.addManagedEventListeners({\r\n      columnValueChanged: refreshFiltersForAggregations,\r\n      columnPivotChanged: refreshFiltersForAggregations,\r\n      columnPivotModeChanged: refreshFiltersForAggregations,\r\n      newColumnsLoaded: updateAdvFilterColumns,\r\n      columnVisible: updateAdvFilterColumns,\r\n      advancedFilterEnabledChanged: ({ enabled }) => this.onAdvFilterEnabledChanged(enabled),\r\n      dataTypesInferred: this.processFilterModelUpdateQueue.bind(this)\r\n    });\r\n    this.externalFilterPresent = this.isExternalFilterPresentCallback();\r\n    this.addManagedPropertyListeners([\"isExternalFilterPresent\", \"doesExternalFilterPass\"], () => {\r\n      this.onFilterChanged({ source: \"api\" });\r\n    });\r\n    this.updateAggFiltering();\r\n    this.addManagedPropertyListener(\"groupAggFiltering\", () => {\r\n      this.updateAggFiltering();\r\n      this.onFilterChanged();\r\n    });\r\n    if (this.quickFilter) {\r\n      this.addManagedListeners(this.quickFilter, {\r\n        quickFilterChanged: () => this.onFilterChanged({ source: \"quickFilter\" })\r\n      });\r\n    }\r\n    const { gos } = this;\r\n    this.alwaysPassFilter = gos.get(\"alwaysPassFilter\");\r\n    this.addManagedPropertyListener(\"alwaysPassFilter\", () => {\r\n      this.alwaysPassFilter = gos.get(\"alwaysPassFilter\");\r\n      this.onFilterChanged({ source: \"api\" });\r\n    });\r\n  }\r\n  isExternalFilterPresentCallback() {\r\n    const isFilterPresent = this.gos.getCallback(\"isExternalFilterPresent\");\r\n    return typeof isFilterPresent === \"function\" && isFilterPresent({});\r\n  }\r\n  doesExternalFilterPass(node) {\r\n    const doesFilterPass = this.gos.get(\"doesExternalFilterPass\");\r\n    return typeof doesFilterPass === \"function\" && doesFilterPass(node);\r\n  }\r\n  setFilterState(model, state, source = \"api\") {\r\n    if (this.isAdvFilterEnabled()) {\r\n      return;\r\n    }\r\n    this.colFilter?.setState(model, state, source);\r\n  }\r\n  setFilterModel(model, source = \"api\", skipWarning) {\r\n    if (this.isAdvFilterEnabled()) {\r\n      if (!skipWarning) {\r\n        this.warnAdvFilters();\r\n      }\r\n      return;\r\n    }\r\n    this.colFilter?.setModel(model, source);\r\n  }\r\n  getFilterModel() {\r\n    return this.colFilter?.getModel() ?? {};\r\n  }\r\n  getFilterState() {\r\n    return this.colFilter?.getState();\r\n  }\r\n  isColumnFilterPresent() {\r\n    return !!this.colFilter?.isFilterPresent();\r\n  }\r\n  isAggregateFilterPresent() {\r\n    return !!this.colFilter?.isAggFilterPresent();\r\n  }\r\n  isChildFilterPresent() {\r\n    return this.isColumnFilterPresent() || this.isQuickFilterPresent() || this.externalFilterPresent || this.isAdvFilterPresent();\r\n  }\r\n  isAnyFilterPresent() {\r\n    return this.isChildFilterPresent() || this.isAggregateFilterPresent();\r\n  }\r\n  isAdvFilterPresent() {\r\n    return this.isAdvFilterEnabled() && this.advancedFilter.isFilterPresent();\r\n  }\r\n  onAdvFilterEnabledChanged(enabled) {\r\n    if (enabled) {\r\n      if (this.colFilter?.disableFilters()) {\r\n        this.onFilterChanged({ source: \"advancedFilter\" });\r\n      }\r\n    } else {\r\n      if (this.advancedFilter?.isFilterPresent()) {\r\n        this.advancedFilter.setModel(null);\r\n        this.onFilterChanged({ source: \"advancedFilter\" });\r\n      }\r\n    }\r\n  }\r\n  isAdvFilterEnabled() {\r\n    return !!this.advancedFilter?.isEnabled();\r\n  }\r\n  isAdvFilterHeaderActive() {\r\n    return this.isAdvFilterEnabled() && this.advancedFilter.isHeaderActive();\r\n  }\r\n  refreshFiltersForAggregations() {\r\n    if (_getGroupAggFiltering(this.gos) && this.isAnyFilterPresent()) {\r\n      this.onFilterChanged();\r\n    }\r\n  }\r\n  onFilterChanged(params = {}) {\r\n    const { source, additionalEventAttributes, columns = [] } = params;\r\n    this.externalFilterPresent = this.isExternalFilterPresentCallback();\r\n    (this.colFilter ? this.colFilter.updateBeforeFilterChanged(params) : AgPromise.resolve()).then(() => {\r\n      const filterChangedEvent = {\r\n        source,\r\n        type: \"filterChanged\",\r\n        columns\r\n      };\r\n      if (additionalEventAttributes) {\r\n        _mergeDeep(filterChangedEvent, additionalEventAttributes);\r\n      }\r\n      this.eventSvc.dispatchEvent(filterChangedEvent);\r\n      this.colFilter?.updateAfterFilterChanged();\r\n    });\r\n  }\r\n  isSuppressFlashingCellsBecauseFiltering() {\r\n    return !!this.colFilter?.isSuppressFlashingCellsBecauseFiltering();\r\n  }\r\n  isQuickFilterPresent() {\r\n    return !!this.quickFilter?.isFilterPresent();\r\n  }\r\n  updateAggFiltering() {\r\n    this.aggFiltering = !!_getGroupAggFiltering(this.gos);\r\n  }\r\n  isAggregateQuickFilterPresent() {\r\n    return this.isQuickFilterPresent() && this.shouldApplyQuickFilterAfterAgg();\r\n  }\r\n  isNonAggregateQuickFilterPresent() {\r\n    return this.isQuickFilterPresent() && !this.shouldApplyQuickFilterAfterAgg();\r\n  }\r\n  shouldApplyQuickFilterAfterAgg() {\r\n    return (this.aggFiltering || this.beans.colModel.isPivotMode()) && !this.gos.get(\"applyQuickFilterBeforePivotOrAgg\");\r\n  }\r\n  doesRowPassOtherFilters(colIdToSkip, rowNode) {\r\n    return this.doesRowPassFilter({ rowNode, colIdToSkip });\r\n  }\r\n  doesRowPassAggregateFilters(params) {\r\n    const { rowNode } = params;\r\n    if (this.alwaysPassFilter?.(rowNode)) {\r\n      return true;\r\n    }\r\n    if (this.isAggregateQuickFilterPresent() && !this.quickFilter.doesRowPass(rowNode)) {\r\n      return false;\r\n    }\r\n    if (this.isAggregateFilterPresent() && !this.colFilter.doFiltersPass(rowNode, params.colIdToSkip, true)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  doesRowPassFilter(params) {\r\n    const { rowNode } = params;\r\n    if (this.alwaysPassFilter?.(rowNode)) {\r\n      return true;\r\n    }\r\n    if (this.isNonAggregateQuickFilterPresent() && !this.quickFilter.doesRowPass(rowNode)) {\r\n      return false;\r\n    }\r\n    if (this.externalFilterPresent && !this.doesExternalFilterPass(rowNode)) {\r\n      return false;\r\n    }\r\n    if (this.isColumnFilterPresent() && !this.colFilter.doFiltersPass(rowNode, params.colIdToSkip)) {\r\n      return false;\r\n    }\r\n    if (this.isAdvFilterPresent() && !this.advancedFilter.doesFilterPass(rowNode)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  // for group filters, can change dynamically whether they are allowed or not\r\n  isFilterAllowed(column) {\r\n    if (this.isAdvFilterEnabled()) {\r\n      return false;\r\n    }\r\n    return !!this.colFilter?.isFilterAllowed(column);\r\n  }\r\n  getAdvFilterModel() {\r\n    return this.isAdvFilterEnabled() ? this.advancedFilter.getModel() : null;\r\n  }\r\n  setAdvFilterModel(expression, source = \"api\") {\r\n    if (!this.isAdvFilterEnabled()) {\r\n      return;\r\n    }\r\n    if (this.beans.dataTypeSvc?.isPendingInference) {\r\n      this.advFilterModelUpdateQueue.push(expression);\r\n      return;\r\n    }\r\n    this.advancedFilter.setModel(expression ?? null);\r\n    this.onFilterChanged({ source });\r\n  }\r\n  toggleAdvFilterBuilder(show, source) {\r\n    if (!this.isAdvFilterEnabled()) {\r\n      return;\r\n    }\r\n    this.advancedFilter.getCtrl().toggleFilterBuilder({ source, force: show });\r\n  }\r\n  updateAdvFilterColumns() {\r\n    if (!this.isAdvFilterEnabled()) {\r\n      return;\r\n    }\r\n    if (this.advancedFilter.updateValidity()) {\r\n      this.onFilterChanged({ source: \"advancedFilter\" });\r\n    }\r\n  }\r\n  hasFloatingFilters() {\r\n    if (this.isAdvFilterEnabled()) {\r\n      return false;\r\n    }\r\n    return !!this.colFilter?.hasFloatingFilters();\r\n  }\r\n  getColumnFilterInstance(key) {\r\n    if (this.isAdvFilterEnabled()) {\r\n      this.warnAdvFilters();\r\n      return Promise.resolve(void 0);\r\n    }\r\n    return this.colFilter?.getFilterInstance(key) ?? Promise.resolve(void 0);\r\n  }\r\n  warnAdvFilters() {\r\n    _warn(68);\r\n  }\r\n  setupAdvFilterHeaderComp(eCompToInsertBefore) {\r\n    this.advancedFilter?.getCtrl().setupHeaderComp(eCompToInsertBefore);\r\n  }\r\n  getHeaderRowCount() {\r\n    return this.isAdvFilterHeaderActive() ? 1 : 0;\r\n  }\r\n  getHeaderHeight() {\r\n    return this.isAdvFilterHeaderActive() ? this.advancedFilter.getCtrl().getHeaderHeight() : 0;\r\n  }\r\n  processFilterModelUpdateQueue() {\r\n    this.advFilterModelUpdateQueue.forEach((model) => this.setAdvFilterModel(model));\r\n    this.advFilterModelUpdateQueue = [];\r\n  }\r\n  setColumnFilterModel(key, model) {\r\n    if (this.isAdvFilterEnabled()) {\r\n      this.warnAdvFilters();\r\n      return Promise.resolve();\r\n    }\r\n    return this.colFilter?.setModelForColumn(key, model) ?? Promise.resolve();\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/filter/filterMenuFactory.ts\r\nvar FilterMenuFactory = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"filterMenuFactory\";\r\n  }\r\n  wireBeans(beans) {\r\n    this.popupSvc = beans.popupSvc;\r\n  }\r\n  hideActiveMenu() {\r\n    this.hidePopup?.();\r\n  }\r\n  showMenuAfterMouseEvent(column, mouseEvent, containerType, onClosedCallback) {\r\n    if (column && !column.isColumn) {\r\n      return;\r\n    }\r\n    this.showPopup(\r\n      column,\r\n      (eMenu) => {\r\n        this.popupSvc?.positionPopupUnderMouseEvent({\r\n          column,\r\n          type: containerType,\r\n          mouseEvent,\r\n          ePopup: eMenu\r\n        });\r\n      },\r\n      containerType,\r\n      mouseEvent.target,\r\n      _isLegacyMenuEnabled(this.gos),\r\n      onClosedCallback\r\n    );\r\n  }\r\n  showMenuAfterButtonClick(column, eventSource, containerType, onClosedCallback) {\r\n    if (column && !column.isColumn) {\r\n      return;\r\n    }\r\n    let multiplier = -1;\r\n    let alignSide = \"left\";\r\n    const isLegacyMenuEnabled = _isLegacyMenuEnabled(this.gos);\r\n    if (!isLegacyMenuEnabled && this.gos.get(\"enableRtl\")) {\r\n      multiplier = 1;\r\n      alignSide = \"right\";\r\n    }\r\n    const nudgeX = isLegacyMenuEnabled ? void 0 : 4 * multiplier;\r\n    const nudgeY = isLegacyMenuEnabled ? void 0 : 4;\r\n    this.showPopup(\r\n      column,\r\n      (eMenu) => {\r\n        this.popupSvc?.positionPopupByComponent({\r\n          type: containerType,\r\n          eventSource,\r\n          ePopup: eMenu,\r\n          nudgeX,\r\n          nudgeY,\r\n          alignSide,\r\n          keepWithinBounds: true,\r\n          position: \"under\",\r\n          column\r\n        });\r\n      },\r\n      containerType,\r\n      eventSource,\r\n      isLegacyMenuEnabled,\r\n      onClosedCallback\r\n    );\r\n  }\r\n  showPopup(column, positionCallback, containerType, eventSource, isLegacyMenuEnabled, onClosedCallback) {\r\n    const comp = column ? this.createBean(new FilterComp(column, \"COLUMN_MENU\")) : void 0;\r\n    this.activeMenu = comp;\r\n    if (!comp?.hasFilter() || !column) {\r\n      _error(57);\r\n      return;\r\n    }\r\n    const eMenu = _createElement({\r\n      tag: \"div\",\r\n      cls: `ag-menu${!isLegacyMenuEnabled ? \" ag-filter-menu\" : \"\"}`,\r\n      role: \"presentation\"\r\n    });\r\n    [this.tabListener] = this.addManagedElementListeners(eMenu, {\r\n      keydown: (e) => this.trapFocusWithin(e, eMenu)\r\n    });\r\n    eMenu.appendChild(comp?.getGui());\r\n    let hidePopup;\r\n    const afterGuiDetached = () => comp?.afterGuiDetached();\r\n    const anchorToElement = _isColumnMenuAnchoringEnabled(this.gos) ? eventSource ?? this.beans.ctrlsSvc.getGridBodyCtrl().eGridBody : void 0;\r\n    const closedCallback = (e) => {\r\n      _setColMenuVisible(column, false, \"contextMenu\");\r\n      const isKeyboardEvent = e instanceof KeyboardEvent;\r\n      if (this.tabListener) {\r\n        this.tabListener = this.tabListener();\r\n      }\r\n      if (isKeyboardEvent && eventSource && _isVisible(eventSource)) {\r\n        const focusableEl = _findTabbableParent(eventSource);\r\n        focusableEl?.focus({ preventScroll: true });\r\n      }\r\n      afterGuiDetached();\r\n      this.destroyBean(this.activeMenu);\r\n      this.dispatchVisibleChangedEvent(false, containerType, column);\r\n      onClosedCallback?.();\r\n    };\r\n    const translate = this.getLocaleTextFunc();\r\n    const ariaLabel = isLegacyMenuEnabled && containerType !== \"columnFilter\" ? translate(\"ariaLabelColumnMenu\", \"Column Menu\") : translate(\"ariaLabelColumnFilter\", \"Column Filter\");\r\n    const addPopupRes = this.popupSvc?.addPopup({\r\n      modal: true,\r\n      eChild: eMenu,\r\n      closeOnEsc: true,\r\n      closedCallback,\r\n      positionCallback: () => positionCallback(eMenu),\r\n      anchorToElement,\r\n      ariaLabel\r\n    });\r\n    if (addPopupRes) {\r\n      this.hidePopup = hidePopup = addPopupRes.hideFunc;\r\n    }\r\n    comp.afterInit().then(() => {\r\n      positionCallback(eMenu);\r\n      comp.afterGuiAttached({ container: containerType, hidePopup });\r\n    });\r\n    _setColMenuVisible(column, true, \"contextMenu\");\r\n    this.dispatchVisibleChangedEvent(true, containerType, column);\r\n  }\r\n  trapFocusWithin(e, menu) {\r\n    if (e.key !== KeyCode.TAB || e.defaultPrevented || _findNextFocusableElement(this.beans, menu, false, e.shiftKey)) {\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    _focusInto(menu, e.shiftKey);\r\n  }\r\n  dispatchVisibleChangedEvent(visible, containerType, column) {\r\n    this.eventSvc.dispatchEvent({\r\n      type: \"columnMenuVisibleChanged\",\r\n      visible,\r\n      switchingTab: false,\r\n      key: containerType,\r\n      column: column ?? null,\r\n      columnGroup: null\r\n    });\r\n  }\r\n  isMenuEnabled(column) {\r\n    return column.isFilterAllowed() && (column.getColDef().menuTabs ?? [\"filterMenuTab\"]).includes(\"filterMenuTab\");\r\n  }\r\n  showMenuAfterContextMenuEvent() {\r\n  }\r\n  destroy() {\r\n    this.destroyBean(this.activeMenu);\r\n    super.destroy();\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/filter/filterValueService.ts\r\nvar FilterValueService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"filterValueSvc\";\r\n  }\r\n  getValue(column, rowNode, filterValueGetterOverride) {\r\n    if (!rowNode) {\r\n      return;\r\n    }\r\n    const colDef = column.getColDef();\r\n    const { selectableFilter, valueSvc } = this.beans;\r\n    const filterValueGetter = filterValueGetterOverride ?? selectableFilter?.getFilterValueGetter(column.getColId()) ?? colDef.filterValueGetter;\r\n    if (filterValueGetter) {\r\n      return this.executeFilterValueGetter(filterValueGetter, rowNode.data, column, rowNode, colDef);\r\n    }\r\n    return valueSvc.getValue(column, rowNode);\r\n  }\r\n  executeFilterValueGetter(valueGetter, data, column, node, colDef) {\r\n    const { expressionSvc, valueSvc } = this.beans;\r\n    const params = _addGridCommonParams(this.gos, {\r\n      data,\r\n      node,\r\n      column,\r\n      colDef,\r\n      getValue: valueSvc.getValueCallback.bind(valueSvc, node)\r\n    });\r\n    if (typeof valueGetter === \"function\") {\r\n      return valueGetter(params);\r\n    }\r\n    return expressionSvc?.evaluate(valueGetter, params);\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/filter/floating/provided/readOnlyFloatingFilter.ts\r\nvar ReadOnlyFloatingFilterElement = {\r\n  tag: \"div\",\r\n  cls: \"ag-floating-filter-input\",\r\n  role: \"presentation\",\r\n  children: [\r\n    {\r\n      tag: \"ag-input-text-field\",\r\n      ref: \"eFloatingFilterText\"\r\n    }\r\n  ]\r\n};\r\nvar ReadOnlyFloatingFilter = class extends Component {\r\n  constructor() {\r\n    super(ReadOnlyFloatingFilterElement, [AgInputTextFieldSelector]);\r\n    this.eFloatingFilterText = RefPlaceholder;\r\n  }\r\n  init(params) {\r\n    this.params = params;\r\n    const displayName = this.beans.colNames.getDisplayNameForColumn(params.column, \"header\", true);\r\n    this.eFloatingFilterText.setDisabled(true).setInputAriaLabel(`${displayName} ${this.getLocaleTextFunc()(\"ariaFilterInput\", \"Filter Input\")}`);\r\n    if (this.gos.get(\"enableFilterHandlers\")) {\r\n      const reactiveParams = params;\r\n      const handler = reactiveParams.getHandler();\r\n      if (handler.getModelAsString) {\r\n        const modelAsString = handler.getModelAsString(reactiveParams.model);\r\n        this.eFloatingFilterText.setValue(modelAsString);\r\n      }\r\n    }\r\n  }\r\n  onParentModelChanged(parentModel) {\r\n    if (parentModel == null) {\r\n      this.eFloatingFilterText.setValue(\"\");\r\n      return;\r\n    }\r\n    this.params.parentFilterInstance((filterInstance) => {\r\n      if (filterInstance.getModelAsString) {\r\n        const modelAsString = filterInstance.getModelAsString(parentModel);\r\n        this.eFloatingFilterText.setValue(modelAsString);\r\n      }\r\n    });\r\n  }\r\n  refresh(params) {\r\n    this.init(params);\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/filter/provided/optionsFactory.ts\r\nvar OptionsFactory = class {\r\n  constructor() {\r\n    this.customFilterOptions = {};\r\n  }\r\n  init(params, defaultOptions) {\r\n    this.filterOptions = params.filterOptions ?? defaultOptions;\r\n    this.mapCustomOptions();\r\n    this.defaultOption = this.getDefaultItem(params.defaultOption);\r\n  }\r\n  refresh(params, defaultOptions) {\r\n    const filterOptions = params.filterOptions ?? defaultOptions;\r\n    if (this.filterOptions !== filterOptions) {\r\n      this.filterOptions = filterOptions;\r\n      this.customFilterOptions = {};\r\n      this.mapCustomOptions();\r\n    }\r\n    this.defaultOption = this.getDefaultItem(params.defaultOption);\r\n  }\r\n  mapCustomOptions() {\r\n    const { filterOptions } = this;\r\n    if (!filterOptions) {\r\n      return;\r\n    }\r\n    filterOptions.forEach((filterOption) => {\r\n      if (typeof filterOption === \"string\") {\r\n        return;\r\n      }\r\n      const requiredProperties = [[\"displayKey\"], [\"displayName\"], [\"predicate\", \"test\"]];\r\n      const propertyCheck = (keys) => {\r\n        if (!keys.some((key) => filterOption[key] != null)) {\r\n          _warn(72, { keys });\r\n          return false;\r\n        }\r\n        return true;\r\n      };\r\n      if (!requiredProperties.every(propertyCheck)) {\r\n        this.filterOptions = filterOptions.filter((v) => v === filterOption) || [];\r\n        return;\r\n      }\r\n      this.customFilterOptions[filterOption.displayKey] = filterOption;\r\n    });\r\n  }\r\n  getDefaultItem(defaultOption) {\r\n    const { filterOptions } = this;\r\n    if (defaultOption) {\r\n      return defaultOption;\r\n    } else if (filterOptions.length >= 1) {\r\n      const firstFilterOption = filterOptions[0];\r\n      if (typeof firstFilterOption === \"string\") {\r\n        return firstFilterOption;\r\n      } else if (firstFilterOption.displayKey) {\r\n        return firstFilterOption.displayKey;\r\n      } else {\r\n        _warn(73);\r\n      }\r\n    } else {\r\n      _warn(74);\r\n    }\r\n    return void 0;\r\n  }\r\n  getCustomOption(name) {\r\n    return this.customFilterOptions[name];\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/filter/provided/simpleFilterUtils.ts\r\nfunction removeItems(items, startPosition, deleteCount) {\r\n  return deleteCount == null ? items.splice(startPosition) : items.splice(startPosition, deleteCount);\r\n}\r\nfunction isBlank(cellValue) {\r\n  return cellValue == null || typeof cellValue === \"string\" && cellValue.trim().length === 0;\r\n}\r\nfunction getDefaultJoinOperator(defaultJoinOperator) {\r\n  return defaultJoinOperator === \"AND\" || defaultJoinOperator === \"OR\" ? defaultJoinOperator : \"AND\";\r\n}\r\nfunction evaluateCustomFilter(customFilterOption, values, cellValue) {\r\n  if (customFilterOption == null) {\r\n    return;\r\n  }\r\n  const { predicate } = customFilterOption;\r\n  if (predicate != null && !values.some((v) => v == null)) {\r\n    return predicate(values, cellValue);\r\n  }\r\n  return;\r\n}\r\nfunction validateAndUpdateConditions(conditions, maxNumConditions) {\r\n  let numConditions = conditions.length;\r\n  if (numConditions > maxNumConditions) {\r\n    conditions.splice(maxNumConditions);\r\n    _warn(78);\r\n    numConditions = maxNumConditions;\r\n  }\r\n  return numConditions;\r\n}\r\nfunction getNumberOfInputs(type, optionsFactory) {\r\n  const customOpts = optionsFactory.getCustomOption(type);\r\n  if (customOpts) {\r\n    const { numberOfInputs } = customOpts;\r\n    return numberOfInputs != null ? numberOfInputs : 1;\r\n  }\r\n  const zeroInputTypes = [\"empty\", \"notBlank\", \"blank\"];\r\n  if (type && zeroInputTypes.indexOf(type) >= 0) {\r\n    return 0;\r\n  } else if (type === \"inRange\") {\r\n    return 2;\r\n  }\r\n  return 1;\r\n}\r\n\r\n// packages/ag-grid-community/src/filter/provided/simpleFilter.ts\r\nvar SimpleFilter = class extends ProvidedFilter {\r\n  constructor(filterNameKey, mapValuesFromModel, defaultOptions) {\r\n    super(filterNameKey, \"simple-filter\");\r\n    this.mapValuesFromModel = mapValuesFromModel;\r\n    this.defaultOptions = defaultOptions;\r\n    this.eTypes = [];\r\n    this.eJoinPanels = [];\r\n    this.eJoinAnds = [];\r\n    this.eJoinOrs = [];\r\n    this.eConditionBodies = [];\r\n    this.listener = () => this.onUiChanged();\r\n    this.lastUiCompletePosition = null;\r\n    this.joinOperatorId = 0;\r\n  }\r\n  setParams(params) {\r\n    super.setParams(params);\r\n    const optionsFactory = new OptionsFactory();\r\n    this.optionsFactory = optionsFactory;\r\n    optionsFactory.init(params, this.defaultOptions);\r\n    this.commonUpdateSimpleParams(params);\r\n    this.createOption();\r\n    this.createMissingConditionsAndOperators();\r\n  }\r\n  updateParams(newParams, oldParams) {\r\n    this.optionsFactory.refresh(newParams, this.defaultOptions);\r\n    super.updateParams(newParams, oldParams);\r\n    this.commonUpdateSimpleParams(newParams);\r\n  }\r\n  commonUpdateSimpleParams(params) {\r\n    this.setNumConditions(params);\r\n    this.defaultJoinOperator = getDefaultJoinOperator(params.defaultJoinOperator);\r\n    this.filterPlaceholder = params.filterPlaceholder;\r\n    this.createFilterListOptions();\r\n    const eGui = this.getGui();\r\n    if (this.isReadOnly()) {\r\n      eGui.setAttribute(\"tabindex\", \"-1\");\r\n    } else {\r\n      eGui.removeAttribute(\"tabindex\");\r\n    }\r\n  }\r\n  // floating filter calls this when user applies filter from floating filter\r\n  onFloatingFilterChanged(type, value) {\r\n    this.setTypeFromFloatingFilter(type);\r\n    this.setValueFromFloatingFilter(value);\r\n    this.onUiChanged(\"immediately\", true);\r\n  }\r\n  setTypeFromFloatingFilter(type) {\r\n    this.eTypes.forEach((eType, position) => {\r\n      const value = position === 0 ? type : this.optionsFactory.defaultOption;\r\n      eType.setValue(value, true);\r\n    });\r\n  }\r\n  getModelFromUi() {\r\n    const conditions = this.getUiCompleteConditions();\r\n    if (conditions.length === 0) {\r\n      return null;\r\n    }\r\n    if (this.maxNumConditions > 1 && conditions.length > 1) {\r\n      return {\r\n        filterType: this.filterType,\r\n        operator: this.getJoinOperator(),\r\n        conditions\r\n      };\r\n    }\r\n    return conditions[0];\r\n  }\r\n  getConditionTypes() {\r\n    return this.eTypes.map((eType) => eType.getValue());\r\n  }\r\n  getConditionType(position) {\r\n    return this.eTypes[position].getValue();\r\n  }\r\n  getJoinOperator() {\r\n    const { eJoinOrs: eJoinOperatorsOr, defaultJoinOperator } = this;\r\n    return eJoinOperatorsOr.length === 0 ? defaultJoinOperator : eJoinOperatorsOr[0].getValue() === true ? \"OR\" : \"AND\";\r\n  }\r\n  areNonNullModelsEqual(a, b) {\r\n    const aIsSimple = !a.operator;\r\n    const bIsSimple = !b.operator;\r\n    const oneSimpleOneCombined = !aIsSimple && bIsSimple || aIsSimple && !bIsSimple;\r\n    if (oneSimpleOneCombined) {\r\n      return false;\r\n    }\r\n    let res;\r\n    if (aIsSimple) {\r\n      const aSimple = a;\r\n      const bSimple = b;\r\n      res = this.areSimpleModelsEqual(aSimple, bSimple);\r\n    } else {\r\n      const aCombined = a;\r\n      const bCombined = b;\r\n      res = aCombined.operator === bCombined.operator && _areEqual(\r\n        aCombined.conditions,\r\n        bCombined.conditions,\r\n        (aModel, bModel) => this.areSimpleModelsEqual(aModel, bModel)\r\n      );\r\n    }\r\n    return res;\r\n  }\r\n  setModelIntoUi(model, isInitialLoad) {\r\n    if (model == null) {\r\n      this.resetUiToDefaults(isInitialLoad);\r\n      return AgPromise.resolve();\r\n    }\r\n    const isCombined = model.operator;\r\n    if (isCombined) {\r\n      const combinedModel = model;\r\n      let conditions = combinedModel.conditions;\r\n      if (conditions == null) {\r\n        conditions = [];\r\n        _warn(77);\r\n      }\r\n      const numConditions = validateAndUpdateConditions(conditions, this.maxNumConditions);\r\n      const numPrevConditions = this.getNumConditions();\r\n      if (numConditions < numPrevConditions) {\r\n        this.removeConditionsAndOperators(numConditions);\r\n      } else if (numConditions > numPrevConditions) {\r\n        for (let i = numPrevConditions; i < numConditions; i++) {\r\n          this.createJoinOperatorPanel();\r\n          this.createOption();\r\n        }\r\n      }\r\n      const orChecked = combinedModel.operator === \"OR\";\r\n      this.eJoinAnds.forEach((eJoinOperatorAnd) => eJoinOperatorAnd.setValue(!orChecked, true));\r\n      this.eJoinOrs.forEach((eJoinOperatorOr) => eJoinOperatorOr.setValue(orChecked, true));\r\n      conditions.forEach((condition, position) => {\r\n        this.eTypes[position].setValue(condition.type, true);\r\n        this.setConditionIntoUi(condition, position);\r\n      });\r\n    } else {\r\n      const simpleModel = model;\r\n      if (this.getNumConditions() > 1) {\r\n        this.removeConditionsAndOperators(1);\r\n      }\r\n      this.eTypes[0].setValue(simpleModel.type, true);\r\n      this.setConditionIntoUi(simpleModel, 0);\r\n    }\r\n    this.lastUiCompletePosition = this.getNumConditions() - 1;\r\n    this.createMissingConditionsAndOperators();\r\n    this.updateUiVisibility();\r\n    if (!isInitialLoad) {\r\n      this.params.onUiChange(this.getUiChangeEventParams());\r\n    }\r\n    return AgPromise.resolve();\r\n  }\r\n  setNumConditions(params) {\r\n    let maxNumConditions = params.maxNumConditions ?? 2;\r\n    if (maxNumConditions < 1) {\r\n      _warn(79);\r\n      maxNumConditions = 1;\r\n    }\r\n    this.maxNumConditions = maxNumConditions;\r\n    let numAlwaysVisibleConditions = params.numAlwaysVisibleConditions ?? 1;\r\n    if (numAlwaysVisibleConditions < 1) {\r\n      _warn(80);\r\n      numAlwaysVisibleConditions = 1;\r\n    }\r\n    if (numAlwaysVisibleConditions > maxNumConditions) {\r\n      _warn(81);\r\n      numAlwaysVisibleConditions = maxNumConditions;\r\n    }\r\n    this.numAlwaysVisibleConditions = numAlwaysVisibleConditions;\r\n  }\r\n  createOption() {\r\n    const eGui = this.getGui();\r\n    const eType = this.createManagedBean(new AgSelect());\r\n    this.eTypes.push(eType);\r\n    eType.addCss(\"ag-filter-select\");\r\n    eGui.appendChild(eType.getGui());\r\n    const eConditionBody = this.createEValue();\r\n    this.eConditionBodies.push(eConditionBody);\r\n    eGui.appendChild(eConditionBody);\r\n    this.putOptionsIntoDropdown(eType);\r\n    this.resetType(eType);\r\n    const position = this.getNumConditions() - 1;\r\n    this.forEachPositionInput(position, (element) => this.resetInput(element));\r\n    this.addChangedListeners(eType, position);\r\n  }\r\n  createJoinOperatorPanel() {\r\n    const eJoinOperatorPanel = _createElement({ tag: \"div\", cls: \"ag-filter-condition\" });\r\n    this.eJoinPanels.push(eJoinOperatorPanel);\r\n    const eJoinOperatorAnd = this.createJoinOperator(this.eJoinAnds, eJoinOperatorPanel, \"and\");\r\n    const eJoinOperatorOr = this.createJoinOperator(this.eJoinOrs, eJoinOperatorPanel, \"or\");\r\n    this.getGui().appendChild(eJoinOperatorPanel);\r\n    const index = this.eJoinPanels.length - 1;\r\n    const uniqueGroupId = this.joinOperatorId++;\r\n    this.resetJoinOperatorAnd(eJoinOperatorAnd, index, uniqueGroupId);\r\n    this.resetJoinOperatorOr(eJoinOperatorOr, index, uniqueGroupId);\r\n    if (!this.isReadOnly()) {\r\n      eJoinOperatorAnd.onValueChange(this.listener);\r\n      eJoinOperatorOr.onValueChange(this.listener);\r\n    }\r\n  }\r\n  createJoinOperator(eJoinOperators, eJoinOperatorPanel, andOr) {\r\n    const eJoinOperator = this.createManagedBean(new AgRadioButton());\r\n    eJoinOperators.push(eJoinOperator);\r\n    const baseClass = \"ag-filter-condition-operator\";\r\n    eJoinOperator.addCss(baseClass);\r\n    eJoinOperator.addCss(`${baseClass}-${andOr}`);\r\n    eJoinOperatorPanel.appendChild(eJoinOperator.getGui());\r\n    return eJoinOperator;\r\n  }\r\n  createFilterListOptions() {\r\n    this.filterListOptions = this.optionsFactory.filterOptions.map(\r\n      (option) => typeof option === \"string\" ? this.createBoilerplateListOption(option) : this.createCustomListOption(option)\r\n    );\r\n  }\r\n  putOptionsIntoDropdown(eType) {\r\n    const { filterListOptions } = this;\r\n    filterListOptions.forEach((listOption) => {\r\n      eType.addOption(listOption);\r\n    });\r\n    eType.setDisabled(filterListOptions.length <= 1);\r\n  }\r\n  createBoilerplateListOption(option) {\r\n    return { value: option, text: this.translate(option) };\r\n  }\r\n  createCustomListOption(option) {\r\n    const { displayKey } = option;\r\n    const customOption = this.optionsFactory.getCustomOption(option.displayKey);\r\n    return {\r\n      value: displayKey,\r\n      text: customOption ? this.getLocaleTextFunc()(customOption.displayKey, customOption.displayName) : this.translate(displayKey)\r\n    };\r\n  }\r\n  createBodyTemplate() {\r\n    return null;\r\n  }\r\n  getAgComponents() {\r\n    return [];\r\n  }\r\n  updateUiVisibility() {\r\n    const joinOperator = this.getJoinOperator();\r\n    this.updateNumConditions();\r\n    this.updateConditionStatusesAndValues(this.lastUiCompletePosition, joinOperator);\r\n  }\r\n  updateNumConditions() {\r\n    let lastUiCompletePosition = -1;\r\n    let areAllConditionsUiComplete = true;\r\n    for (let position = 0; position < this.getNumConditions(); position++) {\r\n      if (this.isConditionUiComplete(position)) {\r\n        lastUiCompletePosition = position;\r\n      } else {\r\n        areAllConditionsUiComplete = false;\r\n      }\r\n    }\r\n    if (this.shouldAddNewConditionAtEnd(areAllConditionsUiComplete)) {\r\n      this.createJoinOperatorPanel();\r\n      this.createOption();\r\n    } else {\r\n      const activePosition = this.lastUiCompletePosition ?? this.getNumConditions() - 2;\r\n      if (lastUiCompletePosition < activePosition) {\r\n        this.removeConditionsAndOperators(activePosition + 1);\r\n        const removeStartPosition = lastUiCompletePosition + 1;\r\n        const numConditionsToRemove = activePosition - removeStartPosition;\r\n        if (numConditionsToRemove > 0) {\r\n          this.removeConditionsAndOperators(removeStartPosition, numConditionsToRemove);\r\n        }\r\n        this.createMissingConditionsAndOperators();\r\n      }\r\n    }\r\n    this.lastUiCompletePosition = lastUiCompletePosition;\r\n  }\r\n  updateConditionStatusesAndValues(lastUiCompletePosition, joinOperator) {\r\n    this.eTypes.forEach((eType, position) => {\r\n      const disabled = this.isConditionDisabled(position, lastUiCompletePosition);\r\n      eType.setDisabled(disabled || this.filterListOptions.length <= 1);\r\n      if (position === 1) {\r\n        _setDisabled(this.eJoinPanels[0], disabled);\r\n        this.eJoinAnds[0].setDisabled(disabled);\r\n        this.eJoinOrs[0].setDisabled(disabled);\r\n      }\r\n    });\r\n    this.eConditionBodies.forEach((element, index) => {\r\n      _setDisplayed(element, this.isConditionBodyVisible(index));\r\n    });\r\n    const orChecked = (joinOperator ?? this.getJoinOperator()) === \"OR\";\r\n    this.eJoinAnds.forEach((eJoinOperatorAnd) => {\r\n      eJoinOperatorAnd.setValue(!orChecked, true);\r\n    });\r\n    this.eJoinOrs.forEach((eJoinOperatorOr) => {\r\n      eJoinOperatorOr.setValue(orChecked, true);\r\n    });\r\n    this.forEachInput((element, index, position, numberOfInputs) => {\r\n      this.setElementDisplayed(element, index < numberOfInputs);\r\n      this.setElementDisabled(element, this.isConditionDisabled(position, lastUiCompletePosition));\r\n    });\r\n    this.resetPlaceholder();\r\n  }\r\n  shouldAddNewConditionAtEnd(areAllConditionsUiComplete) {\r\n    return areAllConditionsUiComplete && this.getNumConditions() < this.maxNumConditions && !this.isReadOnly();\r\n  }\r\n  removeConditionsAndOperators(startPosition, deleteCount) {\r\n    if (startPosition >= this.getNumConditions()) {\r\n      return;\r\n    }\r\n    const {\r\n      eTypes,\r\n      eConditionBodies,\r\n      eJoinPanels: eJoinOperatorPanels,\r\n      eJoinAnds: eJoinOperatorsAnd,\r\n      eJoinOrs: eJoinOperatorsOr\r\n    } = this;\r\n    this.removeComponents(eTypes, startPosition, deleteCount);\r\n    this.removeElements(eConditionBodies, startPosition, deleteCount);\r\n    this.removeEValues(startPosition, deleteCount);\r\n    const joinOperatorIndex = Math.max(startPosition - 1, 0);\r\n    this.removeElements(eJoinOperatorPanels, joinOperatorIndex, deleteCount);\r\n    this.removeComponents(eJoinOperatorsAnd, joinOperatorIndex, deleteCount);\r\n    this.removeComponents(eJoinOperatorsOr, joinOperatorIndex, deleteCount);\r\n  }\r\n  removeElements(elements, startPosition, deleteCount) {\r\n    const removedElements = removeItems(elements, startPosition, deleteCount);\r\n    removedElements.forEach((element) => _removeFromParent(element));\r\n  }\r\n  removeComponents(components, startPosition, deleteCount) {\r\n    const removedComponents = removeItems(components, startPosition, deleteCount);\r\n    removedComponents.forEach((comp) => {\r\n      _removeFromParent(comp.getGui());\r\n      this.destroyBean(comp);\r\n    });\r\n  }\r\n  afterGuiAttached(params) {\r\n    super.afterGuiAttached(params);\r\n    this.resetPlaceholder();\r\n    if (!params?.suppressFocus) {\r\n      let elementToFocus;\r\n      if (!this.isReadOnly()) {\r\n        const firstInput = this.getInputs(0)[0];\r\n        if (firstInput instanceof AgAbstractInputField && this.isConditionBodyVisible(0)) {\r\n          elementToFocus = firstInput.getInputElement();\r\n        } else {\r\n          elementToFocus = this.eTypes[0]?.getFocusableElement();\r\n        }\r\n      }\r\n      (elementToFocus ?? this.getGui()).focus({ preventScroll: true });\r\n    }\r\n  }\r\n  afterGuiDetached() {\r\n    super.afterGuiDetached();\r\n    const params = this.params;\r\n    if (this.beans.colFilter?.shouldKeepStateOnDetach(params.column)) {\r\n      return;\r\n    }\r\n    params.onStateChange({\r\n      model: params.model\r\n    });\r\n    let lastUiCompletePosition = -1;\r\n    let updatedLastUiCompletePosition = -1;\r\n    let conditionsRemoved = false;\r\n    const joinOperator = this.getJoinOperator();\r\n    for (let position = this.getNumConditions() - 1; position >= 0; position--) {\r\n      if (this.isConditionUiComplete(position)) {\r\n        if (lastUiCompletePosition === -1) {\r\n          lastUiCompletePosition = position;\r\n          updatedLastUiCompletePosition = position;\r\n        }\r\n      } else {\r\n        const shouldRemovePositionAtEnd = position >= this.numAlwaysVisibleConditions && !this.isConditionUiComplete(position - 1);\r\n        const positionBeforeLastUiCompletePosition = position < lastUiCompletePosition;\r\n        if (shouldRemovePositionAtEnd || positionBeforeLastUiCompletePosition) {\r\n          this.removeConditionsAndOperators(position, 1);\r\n          conditionsRemoved = true;\r\n          if (positionBeforeLastUiCompletePosition) {\r\n            updatedLastUiCompletePosition--;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    let shouldUpdateConditionStatusesAndValues = false;\r\n    if (this.getNumConditions() < this.numAlwaysVisibleConditions) {\r\n      this.createMissingConditionsAndOperators();\r\n      shouldUpdateConditionStatusesAndValues = true;\r\n    }\r\n    if (this.shouldAddNewConditionAtEnd(updatedLastUiCompletePosition === this.getNumConditions() - 1)) {\r\n      this.createJoinOperatorPanel();\r\n      this.createOption();\r\n      shouldUpdateConditionStatusesAndValues = true;\r\n    }\r\n    if (shouldUpdateConditionStatusesAndValues) {\r\n      this.updateConditionStatusesAndValues(updatedLastUiCompletePosition, joinOperator);\r\n    }\r\n    if (conditionsRemoved) {\r\n      this.updateJoinOperatorsDisabled();\r\n    }\r\n    this.lastUiCompletePosition = updatedLastUiCompletePosition;\r\n  }\r\n  getModelAsString(model) {\r\n    return this.params.getHandler()?.getModelAsString?.(model) ?? \"\";\r\n  }\r\n  getPlaceholderText(defaultPlaceholder, position) {\r\n    let placeholder = this.translate(defaultPlaceholder);\r\n    if (typeof this.filterPlaceholder === \"function\") {\r\n      const filterOptionKey = this.eTypes[position].getValue();\r\n      const filterOption = this.translate(filterOptionKey);\r\n      placeholder = this.filterPlaceholder({\r\n        filterOptionKey,\r\n        filterOption,\r\n        placeholder\r\n      });\r\n    } else if (typeof this.filterPlaceholder === \"string\") {\r\n      placeholder = this.filterPlaceholder;\r\n    }\r\n    return placeholder;\r\n  }\r\n  // allow sub-classes to reset HTML placeholders after UI update.\r\n  resetPlaceholder() {\r\n    const globalTranslate = this.getLocaleTextFunc();\r\n    this.forEachInput((element, index, position, numberOfInputs) => {\r\n      if (!(element instanceof AgAbstractInputField)) {\r\n        return;\r\n      }\r\n      const placeholder = index === 0 && numberOfInputs > 1 ? \"inRangeStart\" : index === 0 ? \"filterOoo\" : \"inRangeEnd\";\r\n      const ariaLabel = index === 0 && numberOfInputs > 1 ? globalTranslate(\"ariaFilterFromValue\", \"Filter from value\") : index === 0 ? globalTranslate(\"ariaFilterValue\", \"Filter Value\") : globalTranslate(\"ariaFilterToValue\", \"Filter to Value\");\r\n      element.setInputPlaceholder(this.getPlaceholderText(placeholder, position));\r\n      element.setInputAriaLabel(ariaLabel);\r\n    });\r\n  }\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  setElementValue(element, value, fromFloatingFilter) {\r\n    if (element instanceof AgAbstractInputField) {\r\n      element.setValue(value != null ? String(value) : null, true);\r\n    }\r\n  }\r\n  setElementDisplayed(element, displayed) {\r\n    if (element instanceof Component) {\r\n      _setDisplayed(element.getGui(), displayed);\r\n    }\r\n  }\r\n  setElementDisabled(element, disabled) {\r\n    if (element instanceof Component) {\r\n      _setDisabled(element.getGui(), disabled);\r\n    }\r\n  }\r\n  attachElementOnChange(element, listener) {\r\n    if (element instanceof AgAbstractInputField) {\r\n      element.onValueChange(listener);\r\n    }\r\n  }\r\n  forEachInput(cb) {\r\n    this.getConditionTypes().forEach((type, position) => {\r\n      this.forEachPositionTypeInput(position, type, cb);\r\n    });\r\n  }\r\n  forEachPositionInput(position, cb) {\r\n    const type = this.getConditionType(position);\r\n    this.forEachPositionTypeInput(position, type, cb);\r\n  }\r\n  forEachPositionTypeInput(position, type, cb) {\r\n    const numberOfInputs = getNumberOfInputs(type, this.optionsFactory);\r\n    const inputs = this.getInputs(position);\r\n    for (let index = 0; index < inputs.length; index++) {\r\n      const input = inputs[index];\r\n      if (input != null) {\r\n        cb(input, index, position, numberOfInputs);\r\n      }\r\n    }\r\n  }\r\n  isConditionDisabled(position, lastUiCompletePosition) {\r\n    if (this.isReadOnly()) {\r\n      return true;\r\n    }\r\n    if (position === 0) {\r\n      return false;\r\n    }\r\n    return position > lastUiCompletePosition + 1;\r\n  }\r\n  isConditionBodyVisible(position) {\r\n    const type = this.getConditionType(position);\r\n    const numberOfInputs = getNumberOfInputs(type, this.optionsFactory);\r\n    return numberOfInputs > 0;\r\n  }\r\n  // returns true if the UI represents a working filter, eg all parts are filled out.\r\n  // eg if text filter and textfield blank then returns false.\r\n  isConditionUiComplete(position) {\r\n    if (position >= this.getNumConditions()) {\r\n      return false;\r\n    }\r\n    const type = this.getConditionType(position);\r\n    if (type === \"empty\") {\r\n      return false;\r\n    }\r\n    if (this.getValues(position).some((v) => v == null)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  getNumConditions() {\r\n    return this.eTypes.length;\r\n  }\r\n  getUiCompleteConditions() {\r\n    const conditions = [];\r\n    for (let position = 0; position < this.getNumConditions(); position++) {\r\n      if (this.isConditionUiComplete(position)) {\r\n        conditions.push(this.createCondition(position));\r\n      }\r\n    }\r\n    return conditions;\r\n  }\r\n  createMissingConditionsAndOperators() {\r\n    if (this.isReadOnly()) {\r\n      return;\r\n    }\r\n    for (let i = this.getNumConditions(); i < this.numAlwaysVisibleConditions; i++) {\r\n      this.createJoinOperatorPanel();\r\n      this.createOption();\r\n    }\r\n  }\r\n  resetUiToDefaults(silent) {\r\n    this.removeConditionsAndOperators(this.isReadOnly() ? 1 : this.numAlwaysVisibleConditions);\r\n    this.eTypes.forEach((eType) => this.resetType(eType));\r\n    this.eJoinAnds.forEach(\r\n      (eJoinOperatorAnd, index) => this.resetJoinOperatorAnd(eJoinOperatorAnd, index, this.joinOperatorId + index)\r\n    );\r\n    this.eJoinOrs.forEach(\r\n      (eJoinOperatorOr, index) => this.resetJoinOperatorOr(eJoinOperatorOr, index, this.joinOperatorId + index)\r\n    );\r\n    this.joinOperatorId++;\r\n    this.forEachInput((element) => this.resetInput(element));\r\n    this.resetPlaceholder();\r\n    this.createMissingConditionsAndOperators();\r\n    this.lastUiCompletePosition = null;\r\n    this.updateUiVisibility();\r\n    if (!silent) {\r\n      this.params.onUiChange(this.getUiChangeEventParams());\r\n    }\r\n  }\r\n  resetType(eType) {\r\n    const translate = this.getLocaleTextFunc();\r\n    const filteringLabel = translate(\"ariaFilteringOperator\", \"Filtering operator\");\r\n    eType.setValue(this.optionsFactory.defaultOption, true).setAriaLabel(filteringLabel).setDisabled(this.isReadOnly() || this.filterListOptions.length <= 1);\r\n  }\r\n  resetJoinOperatorAnd(eJoinOperatorAnd, index, uniqueGroupId) {\r\n    this.resetJoinOperator(\r\n      eJoinOperatorAnd,\r\n      index,\r\n      this.defaultJoinOperator === \"AND\",\r\n      this.translate(\"andCondition\"),\r\n      uniqueGroupId\r\n    );\r\n  }\r\n  resetJoinOperatorOr(eJoinOperatorOr, index, uniqueGroupId) {\r\n    this.resetJoinOperator(\r\n      eJoinOperatorOr,\r\n      index,\r\n      this.defaultJoinOperator === \"OR\",\r\n      this.translate(\"orCondition\"),\r\n      uniqueGroupId\r\n    );\r\n  }\r\n  resetJoinOperator(eJoinOperator, index, value, label, uniqueGroupId) {\r\n    this.updateJoinOperatorDisabled(\r\n      eJoinOperator.setValue(value, true).setName(`ag-simple-filter-and-or-${this.getCompId()}-${uniqueGroupId}`).setLabel(label),\r\n      index\r\n    );\r\n  }\r\n  updateJoinOperatorsDisabled() {\r\n    const updater = (eJoinOperator, index) => this.updateJoinOperatorDisabled(eJoinOperator, index);\r\n    this.eJoinAnds.forEach(updater);\r\n    this.eJoinOrs.forEach(updater);\r\n  }\r\n  updateJoinOperatorDisabled(eJoinOperator, index) {\r\n    eJoinOperator.setDisabled(this.isReadOnly() || index > 0);\r\n  }\r\n  resetInput(element) {\r\n    this.setElementValue(element, null);\r\n    this.setElementDisabled(element, this.isReadOnly());\r\n  }\r\n  // puts model values into the UI\r\n  setConditionIntoUi(model, position) {\r\n    const values = this.mapValuesFromModel(model, this.optionsFactory);\r\n    this.forEachInput((element, index, elPosition) => {\r\n      if (elPosition !== position) {\r\n        return;\r\n      }\r\n      this.setElementValue(element, values[index] != null ? values[index] : null);\r\n    });\r\n  }\r\n  // after floating filter changes, this sets the 'value' section. this is implemented by the base class\r\n  // (as that's where value is controlled), the 'type' part from the floating filter is dealt with in this class.\r\n  setValueFromFloatingFilter(value) {\r\n    this.forEachInput((element, index, position) => {\r\n      this.setElementValue(element, index === 0 && position === 0 ? value : null, true);\r\n    });\r\n  }\r\n  addChangedListeners(eType, position) {\r\n    if (this.isReadOnly()) {\r\n      return;\r\n    }\r\n    eType.onValueChange(this.listener);\r\n    this.forEachPositionInput(position, (element) => {\r\n      this.attachElementOnChange(element, this.listener);\r\n    });\r\n  }\r\n  hasInvalidInputs() {\r\n    return false;\r\n  }\r\n  isReadOnly() {\r\n    return !!this.params.readOnly;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/filter/provided/date/dateCompWrapper.ts\r\nvar DateCompWrapper = class {\r\n  constructor(context, userCompFactory, colDef, dateComponentParams, eParent, onReady) {\r\n    this.alive = true;\r\n    this.context = context;\r\n    this.eParent = eParent;\r\n    const compDetails = _getDateCompDetails(userCompFactory, colDef, dateComponentParams);\r\n    if (!compDetails) {\r\n      return;\r\n    }\r\n    compDetails.newAgStackInstance().then((dateComp) => {\r\n      if (!this.alive) {\r\n        context.destroyBean(dateComp);\r\n        return;\r\n      }\r\n      this.dateComp = dateComp;\r\n      if (!dateComp) {\r\n        return;\r\n      }\r\n      eParent.appendChild(dateComp.getGui());\r\n      dateComp?.afterGuiAttached?.();\r\n      const { tempValue, disabled } = this;\r\n      if (tempValue) {\r\n        dateComp.setDate(tempValue);\r\n      }\r\n      if (disabled != null) {\r\n        dateComp.setDisabled?.(disabled);\r\n      }\r\n      onReady?.(this);\r\n    });\r\n  }\r\n  destroy() {\r\n    this.alive = false;\r\n    this.dateComp = this.context.destroyBean(this.dateComp);\r\n  }\r\n  getDate() {\r\n    return this.dateComp ? this.dateComp.getDate() : this.tempValue;\r\n  }\r\n  setDate(value) {\r\n    const dateComp = this.dateComp;\r\n    if (dateComp) {\r\n      dateComp.setDate(value);\r\n    } else {\r\n      this.tempValue = value;\r\n    }\r\n  }\r\n  setDisabled(disabled) {\r\n    const dateComp = this.dateComp;\r\n    if (dateComp) {\r\n      dateComp.setDisabled?.(disabled);\r\n    } else {\r\n      this.disabled = disabled;\r\n    }\r\n  }\r\n  setDisplayed(displayed) {\r\n    _setDisplayed(this.eParent, displayed);\r\n  }\r\n  setInputPlaceholder(placeholder) {\r\n    this.dateComp?.setInputPlaceholder?.(placeholder);\r\n  }\r\n  setInputAriaLabel(label) {\r\n    this.dateComp?.setInputAriaLabel?.(label);\r\n  }\r\n  afterGuiAttached(params) {\r\n    this.dateComp?.afterGuiAttached?.(params);\r\n  }\r\n  updateParams(params) {\r\n    this.dateComp?.refresh?.(params);\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/filter/provided/date/dateFilterConstants.ts\r\nvar DEFAULT_DATE_FILTER_OPTIONS = [\r\n  \"equals\",\r\n  \"notEqual\",\r\n  \"lessThan\",\r\n  \"greaterThan\",\r\n  \"inRange\",\r\n  \"blank\",\r\n  \"notBlank\"\r\n];\r\n\r\n// packages/ag-grid-community/src/filter/provided/date/dateFilterUtils.ts\r\nfunction mapValuesFromDateFilterModel(filterModel, optionsFactory) {\r\n  const { dateFrom, dateTo, type } = filterModel || {};\r\n  return [\r\n    dateFrom && _parseDateTimeFromString(dateFrom) || null,\r\n    dateTo && _parseDateTimeFromString(dateTo) || null\r\n  ].slice(0, getNumberOfInputs(type, optionsFactory));\r\n}\r\n\r\n// packages/ag-grid-community/src/filter/provided/date/dateFilter.ts\r\nvar DEFAULT_MIN_YEAR = 1e3;\r\nvar DEFAULT_MAX_YEAR = Infinity;\r\nvar DateFilter = class extends SimpleFilter {\r\n  constructor() {\r\n    super(\"dateFilter\", mapValuesFromDateFilterModel, DEFAULT_DATE_FILTER_OPTIONS);\r\n    this.eConditionPanelsFrom = [];\r\n    this.eConditionPanelsTo = [];\r\n    this.dateConditionFromComps = [];\r\n    this.dateConditionToComps = [];\r\n    this.minValidYear = DEFAULT_MIN_YEAR;\r\n    this.maxValidYear = DEFAULT_MAX_YEAR;\r\n    this.minValidDate = null;\r\n    this.maxValidDate = null;\r\n    this.filterType = \"date\";\r\n  }\r\n  afterGuiAttached(params) {\r\n    super.afterGuiAttached(params);\r\n    this.dateConditionFromComps[0].afterGuiAttached(params);\r\n  }\r\n  commonUpdateSimpleParams(params) {\r\n    super.commonUpdateSimpleParams(params);\r\n    const yearParser = (param, fallback) => {\r\n      const value = params[param];\r\n      if (value != null) {\r\n        if (!isNaN(value)) {\r\n          return value == null ? fallback : Number(value);\r\n        } else {\r\n          _warn(82, { param });\r\n        }\r\n      }\r\n      return fallback;\r\n    };\r\n    const minValidYear = yearParser(\"minValidYear\", DEFAULT_MIN_YEAR);\r\n    const maxValidYear = yearParser(\"maxValidYear\", DEFAULT_MAX_YEAR);\r\n    this.minValidYear = minValidYear;\r\n    this.maxValidYear = maxValidYear;\r\n    if (minValidYear > maxValidYear) {\r\n      _warn(83);\r\n    }\r\n    const { minValidDate, maxValidDate } = params;\r\n    const parsedMinValidDate = minValidDate instanceof Date ? minValidDate : _parseDateTimeFromString(minValidDate);\r\n    this.minValidDate = parsedMinValidDate;\r\n    const parsedMaxValidDate = maxValidDate instanceof Date ? maxValidDate : _parseDateTimeFromString(maxValidDate);\r\n    this.maxValidDate = parsedMaxValidDate;\r\n    if (parsedMinValidDate && parsedMaxValidDate && parsedMinValidDate > parsedMaxValidDate) {\r\n      _warn(84);\r\n    }\r\n  }\r\n  createDateCompWrapper(element) {\r\n    const {\r\n      beans: { userCompFactory, context, gos },\r\n      params\r\n    } = this;\r\n    const dateCompWrapper = new DateCompWrapper(\r\n      context,\r\n      userCompFactory,\r\n      params.colDef,\r\n      _addGridCommonParams(gos, {\r\n        onDateChanged: () => this.onUiChanged(),\r\n        filterParams: params,\r\n        location: \"filter\"\r\n      }),\r\n      element\r\n    );\r\n    this.addDestroyFunc(() => dateCompWrapper.destroy());\r\n    return dateCompWrapper;\r\n  }\r\n  setElementValue(element, value) {\r\n    element.setDate(value);\r\n  }\r\n  setElementDisplayed(element, displayed) {\r\n    element.setDisplayed(displayed);\r\n  }\r\n  setElementDisabled(element, disabled) {\r\n    element.setDisabled(disabled);\r\n  }\r\n  createEValue() {\r\n    const eCondition = _createElement({ tag: \"div\", cls: \"ag-filter-body\" });\r\n    this.createFromToElement(eCondition, this.eConditionPanelsFrom, this.dateConditionFromComps, \"from\");\r\n    this.createFromToElement(eCondition, this.eConditionPanelsTo, this.dateConditionToComps, \"to\");\r\n    return eCondition;\r\n  }\r\n  createFromToElement(eCondition, eConditionPanels, dateConditionComps, fromTo) {\r\n    const eConditionPanel = _createElement({ tag: \"div\", cls: `ag-filter-${fromTo} ag-filter-date-${fromTo}` });\r\n    eConditionPanels.push(eConditionPanel);\r\n    eCondition.appendChild(eConditionPanel);\r\n    dateConditionComps.push(this.createDateCompWrapper(eConditionPanel));\r\n  }\r\n  removeEValues(startPosition, deleteCount) {\r\n    this.removeDateComps(this.dateConditionFromComps, startPosition, deleteCount);\r\n    this.removeDateComps(this.dateConditionToComps, startPosition, deleteCount);\r\n    removeItems(this.eConditionPanelsFrom, startPosition, deleteCount);\r\n    removeItems(this.eConditionPanelsTo, startPosition, deleteCount);\r\n  }\r\n  removeDateComps(components, startPosition, deleteCount) {\r\n    const removedComponents = removeItems(components, startPosition, deleteCount);\r\n    removedComponents.forEach((comp) => comp.destroy());\r\n  }\r\n  isValidDateValue(value) {\r\n    if (value === null) {\r\n      return false;\r\n    }\r\n    const { minValidDate, maxValidDate, minValidYear, maxValidYear } = this;\r\n    if (minValidDate) {\r\n      if (value < minValidDate) {\r\n        return false;\r\n      }\r\n    } else {\r\n      if (value.getUTCFullYear() < minValidYear) {\r\n        return false;\r\n      }\r\n    }\r\n    if (maxValidDate) {\r\n      if (value > maxValidDate) {\r\n        return false;\r\n      }\r\n    } else {\r\n      if (value.getUTCFullYear() > maxValidYear) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  isConditionUiComplete(position) {\r\n    if (!super.isConditionUiComplete(position)) {\r\n      return false;\r\n    }\r\n    let valid = true;\r\n    this.forEachInput((element, index, elPosition, numberOfInputs) => {\r\n      if (elPosition !== position || !valid || index >= numberOfInputs) {\r\n        return;\r\n      }\r\n      valid = valid && this.isValidDateValue(element.getDate());\r\n    });\r\n    return valid;\r\n  }\r\n  areSimpleModelsEqual(aSimple, bSimple) {\r\n    return aSimple.dateFrom === bSimple.dateFrom && aSimple.dateTo === bSimple.dateTo && aSimple.type === bSimple.type;\r\n  }\r\n  createCondition(position) {\r\n    const type = this.getConditionType(position);\r\n    const model = {};\r\n    const values = this.getValues(position);\r\n    if (values.length > 0) {\r\n      model.dateFrom = _serialiseDate(values[0]);\r\n    }\r\n    if (values.length > 1) {\r\n      model.dateTo = _serialiseDate(values[1]);\r\n    }\r\n    return {\r\n      dateFrom: null,\r\n      dateTo: null,\r\n      filterType: this.filterType,\r\n      type,\r\n      ...model\r\n    };\r\n  }\r\n  resetPlaceholder() {\r\n    const globalTranslate = this.getLocaleTextFunc();\r\n    const placeholder = this.translate(\"dateFormatOoo\");\r\n    const ariaLabel = globalTranslate(\"ariaFilterValue\", \"Filter Value\");\r\n    this.forEachInput((element) => {\r\n      element.setInputPlaceholder(placeholder);\r\n      element.setInputAriaLabel(ariaLabel);\r\n    });\r\n  }\r\n  getInputs(position) {\r\n    const { dateConditionFromComps, dateConditionToComps } = this;\r\n    if (position >= dateConditionFromComps.length) {\r\n      return [null, null];\r\n    }\r\n    return [dateConditionFromComps[position], dateConditionToComps[position]];\r\n  }\r\n  getValues(position) {\r\n    const result = [];\r\n    this.forEachPositionInput(position, (element, index, _elPosition, numberOfInputs) => {\r\n      if (index < numberOfInputs) {\r\n        result.push(element.getDate());\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  translate(key) {\r\n    if (key === \"lessThan\") {\r\n      return super.translate(\"before\");\r\n    }\r\n    if (key === \"greaterThan\") {\r\n      return super.translate(\"after\");\r\n    }\r\n    return super.translate(key);\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/filter/provided/simpleFilterHandler.ts\r\nvar SimpleFilterHandler = class extends BeanStub {\r\n  constructor(mapValuesFromModel, defaultOptions) {\r\n    super();\r\n    this.mapValuesFromModel = mapValuesFromModel;\r\n    this.defaultOptions = defaultOptions;\r\n  }\r\n  init(params) {\r\n    const filterParams = params.filterParams;\r\n    const optionsFactory = new OptionsFactory();\r\n    this.optionsFactory = optionsFactory;\r\n    optionsFactory.init(filterParams, this.defaultOptions);\r\n    this.filterModelFormatter = this.createManagedBean(\r\n      new this.FilterModelFormatterClass(optionsFactory, filterParams)\r\n    );\r\n    this.updateParams(params);\r\n    this.validateModel(params);\r\n  }\r\n  refresh(params) {\r\n    if (params.source === \"colDef\") {\r\n      const filterParams = params.filterParams;\r\n      const optionsFactory = this.optionsFactory;\r\n      optionsFactory.refresh(filterParams, this.defaultOptions);\r\n      this.filterModelFormatter.updateParams({ optionsFactory, filterParams });\r\n      this.updateParams(params);\r\n    }\r\n    this.validateModel(params);\r\n  }\r\n  updateParams(params) {\r\n    this.params = params;\r\n  }\r\n  doesFilterPass(params) {\r\n    const model = params.model;\r\n    if (model == null) {\r\n      return true;\r\n    }\r\n    const { operator } = model;\r\n    const models = [];\r\n    if (operator) {\r\n      const combinedModel = model;\r\n      models.push(...combinedModel.conditions ?? []);\r\n    } else {\r\n      models.push(model);\r\n    }\r\n    const combineFunction = operator && operator === \"OR\" ? \"some\" : \"every\";\r\n    const cellValue = this.params.getValue(params.node);\r\n    return models[combineFunction]((m) => this.individualConditionPasses(params, m, cellValue));\r\n  }\r\n  getModelAsString(model, source) {\r\n    return this.filterModelFormatter.getModelAsString(model, source) ?? \"\";\r\n  }\r\n  validateModel(params) {\r\n    const {\r\n      model,\r\n      filterParams: { filterOptions, maxNumConditions }\r\n    } = params;\r\n    if (model == null) {\r\n      return;\r\n    }\r\n    const isCombined = isCombinedFilterModel(model);\r\n    let conditions = isCombined ? model.conditions : [model];\r\n    const newOptionsList = filterOptions?.map((option) => typeof option === \"string\" ? option : option.displayKey) ?? this.defaultOptions;\r\n    const allConditionsExistInNewOptionsList = !conditions || conditions.every((condition) => newOptionsList.find((option) => option === condition.type) !== void 0);\r\n    if (!allConditionsExistInNewOptionsList) {\r\n      this.params = {\r\n        ...params,\r\n        model: null\r\n      };\r\n      params.onModelChange(null);\r\n      return;\r\n    }\r\n    let needsUpdate = false;\r\n    const filterType = this.filterType;\r\n    if (conditions && !conditions.every((condition) => condition.filterType === filterType) || model.filterType !== filterType) {\r\n      conditions = conditions.map((condition) => ({ ...condition, filterType }));\r\n      needsUpdate = true;\r\n    }\r\n    if (typeof maxNumConditions === \"number\" && conditions && conditions.length > maxNumConditions) {\r\n      conditions = conditions.slice(0, maxNumConditions);\r\n      needsUpdate = true;\r\n    }\r\n    if (needsUpdate) {\r\n      const updatedModel = conditions.length > 1 ? {\r\n        ...model,\r\n        filterType,\r\n        conditions\r\n      } : {\r\n        ...conditions[0],\r\n        filterType\r\n      };\r\n      this.params = {\r\n        ...params,\r\n        model: updatedModel\r\n      };\r\n      params.onModelChange(updatedModel);\r\n      return;\r\n    }\r\n  }\r\n  /** returns true if the row passes the said condition */\r\n  individualConditionPasses(params, filterModel, cellValue) {\r\n    const optionsFactory = this.optionsFactory;\r\n    const values = this.mapValuesFromModel(filterModel, optionsFactory);\r\n    const customFilterOption = optionsFactory.getCustomOption(filterModel.type);\r\n    const customFilterResult = evaluateCustomFilter(customFilterOption, values, cellValue);\r\n    if (customFilterResult != null) {\r\n      return customFilterResult;\r\n    }\r\n    if (cellValue == null) {\r\n      return this.evaluateNullValue(filterModel.type);\r\n    }\r\n    return this.evaluateNonNullValue(values, cellValue, filterModel, params);\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/filter/provided/scalarFilterHandler.ts\r\nvar ScalarFilterHandler = class extends SimpleFilterHandler {\r\n  evaluateNullValue(filterType) {\r\n    const {\r\n      includeBlanksInEquals,\r\n      includeBlanksInNotEqual,\r\n      includeBlanksInGreaterThan,\r\n      includeBlanksInLessThan,\r\n      includeBlanksInRange\r\n    } = this.params.filterParams;\r\n    switch (filterType) {\r\n      case \"equals\":\r\n        if (includeBlanksInEquals) {\r\n          return true;\r\n        }\r\n        break;\r\n      case \"notEqual\":\r\n        if (includeBlanksInNotEqual) {\r\n          return true;\r\n        }\r\n        break;\r\n      case \"greaterThan\":\r\n      case \"greaterThanOrEqual\":\r\n        if (includeBlanksInGreaterThan) {\r\n          return true;\r\n        }\r\n        break;\r\n      case \"lessThan\":\r\n      case \"lessThanOrEqual\":\r\n        if (includeBlanksInLessThan) {\r\n          return true;\r\n        }\r\n        break;\r\n      case \"inRange\":\r\n        if (includeBlanksInRange) {\r\n          return true;\r\n        }\r\n        break;\r\n      case \"blank\":\r\n        return true;\r\n      case \"notBlank\":\r\n        return false;\r\n    }\r\n    return false;\r\n  }\r\n  evaluateNonNullValue(values, cellValue, filterModel) {\r\n    const type = filterModel.type;\r\n    if (!this.isValid(cellValue)) {\r\n      return type === \"notEqual\" || type === \"notBlank\";\r\n    }\r\n    const comparator = this.comparator();\r\n    const compareResult = values[0] != null ? comparator(values[0], cellValue) : 0;\r\n    switch (type) {\r\n      case \"equals\":\r\n        return compareResult === 0;\r\n      case \"notEqual\":\r\n        return compareResult !== 0;\r\n      case \"greaterThan\":\r\n        return compareResult > 0;\r\n      case \"greaterThanOrEqual\":\r\n        return compareResult >= 0;\r\n      case \"lessThan\":\r\n        return compareResult < 0;\r\n      case \"lessThanOrEqual\":\r\n        return compareResult <= 0;\r\n      case \"inRange\": {\r\n        const compareToResult = comparator(values[1], cellValue);\r\n        return this.params.filterParams.inRangeInclusive ? compareResult >= 0 && compareToResult <= 0 : compareResult > 0 && compareToResult < 0;\r\n      }\r\n      case \"blank\":\r\n        return isBlank(cellValue);\r\n      case \"notBlank\":\r\n        return !isBlank(cellValue);\r\n      default:\r\n        _warn(76, { filterModelType: type });\r\n        return true;\r\n    }\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/filter/provided/simpleFilterModelFormatter.ts\r\nvar SCALAR_FILTER_TYPE_KEYS = {\r\n  equals: \"Equals\",\r\n  notEqual: \"NotEqual\",\r\n  greaterThan: \"GreaterThan\",\r\n  greaterThanOrEqual: \"GreaterThanOrEqual\",\r\n  lessThan: \"LessThan\",\r\n  lessThanOrEqual: \"LessThanOrEqual\",\r\n  inRange: \"InRange\"\r\n};\r\nvar TEXT_FILTER_TYPE_KEYS = {\r\n  contains: \"Contains\",\r\n  notContains: \"NotContains\",\r\n  equals: \"TextEquals\",\r\n  notEqual: \"TextNotEqual\",\r\n  startsWith: \"StartsWith\",\r\n  endsWith: \"EndsWith\",\r\n  inRange: \"InRange\"\r\n};\r\nvar SimpleFilterModelFormatter = class extends BeanStub {\r\n  constructor(optionsFactory, filterParams, valueFormatter) {\r\n    super();\r\n    this.optionsFactory = optionsFactory;\r\n    this.filterParams = filterParams;\r\n    this.valueFormatter = valueFormatter;\r\n  }\r\n  // used by:\r\n  // 1) NumberFloatingFilter & TextFloatingFilter: Always, for both when editable and read only.\r\n  // 2) DateFloatingFilter: Only when read only (as we show text rather than a date picker when read only)\r\n  getModelAsString(model, source) {\r\n    const translate = this.getLocaleTextFunc();\r\n    const forToolPanel = source === \"filterToolPanel\";\r\n    if (!model) {\r\n      return forToolPanel ? translateForFilter(this, \"filterSummaryInactive\") : null;\r\n    }\r\n    const isCombined = model.operator != null;\r\n    if (isCombined) {\r\n      const combinedModel = model;\r\n      const conditions = combinedModel.conditions ?? [];\r\n      const customOptions = conditions.map((condition) => this.getModelAsString(condition, source));\r\n      const joinOperatorTranslateKey = combinedModel.operator === \"AND\" ? \"andCondition\" : \"orCondition\";\r\n      return customOptions.join(` ${translateForFilter(this, joinOperatorTranslateKey)} `);\r\n    } else if (model.type === \"blank\" || model.type === \"notBlank\") {\r\n      return forToolPanel ? translateForFilter(this, model.type === \"blank\" ? \"filterSummaryBlank\" : \"filterSummaryNotBlank\") : translate(model.type, model.type);\r\n    } else {\r\n      const condition = model;\r\n      const customOption = this.optionsFactory.getCustomOption(condition.type);\r\n      const { displayKey, displayName, numberOfInputs } = customOption || {};\r\n      if (displayKey && displayName && numberOfInputs === 0) {\r\n        return translate(displayKey, displayName);\r\n      }\r\n      return this.conditionToString(\r\n        condition,\r\n        forToolPanel,\r\n        condition.type === \"inRange\" || numberOfInputs === 2,\r\n        displayKey,\r\n        displayName\r\n      );\r\n    }\r\n  }\r\n  updateParams(params) {\r\n    const { optionsFactory, filterParams } = params;\r\n    this.optionsFactory = optionsFactory;\r\n    this.filterParams = filterParams;\r\n  }\r\n  conditionForToolPanel(type, isRange, getFilter, getFilterTo, customDisplayKey, customDisplayName) {\r\n    let typeValue;\r\n    const typeKey = this.getTypeKey(type);\r\n    if (typeKey) {\r\n      typeValue = translateForFilter(this, typeKey);\r\n    }\r\n    if (customDisplayKey && customDisplayName) {\r\n      typeValue = this.getLocaleTextFunc()(customDisplayKey, customDisplayName);\r\n    }\r\n    if (typeValue != null) {\r\n      if (isRange) {\r\n        return `${typeValue} ${translateForFilter(this, \"filterSummaryInRangeValues\", [getFilter(), getFilterTo()])}`;\r\n      } else {\r\n        return `${typeValue} ${getFilter()}`;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  getTypeKey(type) {\r\n    const suffix = this.filterTypeKeys[type];\r\n    return suffix ? `filterSummary${suffix}` : null;\r\n  }\r\n  formatValue(value) {\r\n    const valueFormatter = this.valueFormatter;\r\n    return valueFormatter ? valueFormatter(value ?? null) ?? \"\" : String(value);\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/filter/provided/date/dateFilterModelFormatter.ts\r\nvar DateFilterModelFormatter = class extends SimpleFilterModelFormatter {\r\n  constructor(optionsFactory, filterParams) {\r\n    super(optionsFactory, filterParams, (value) => {\r\n      const { dataTypeSvc, valueSvc } = this.beans;\r\n      const column = filterParams.column;\r\n      const dateFormatFn = dataTypeSvc?.getDateFormatterFunction(column);\r\n      const dateStringStringValue = dateFormatFn?.(value ?? void 0);\r\n      return valueSvc.formatValue(column, null, dateStringStringValue);\r\n    });\r\n    this.filterTypeKeys = SCALAR_FILTER_TYPE_KEYS;\r\n  }\r\n  conditionToString(condition, forToolPanel, isRange, customDisplayKey, customDisplayName) {\r\n    const { type } = condition;\r\n    const dateFrom = _parseDateTimeFromString(condition.dateFrom);\r\n    const dateTo = _parseDateTimeFromString(condition.dateTo);\r\n    const format = this.filterParams.inRangeFloatingFilterDateFormat;\r\n    const formatDate = forToolPanel ? this.formatValue.bind(this) : (value) => _dateToFormattedString(value, format);\r\n    const formattedFrom = () => dateFrom !== null ? formatDate(dateFrom) : \"null\";\r\n    const formattedTo = () => dateTo !== null ? formatDate(dateTo) : \"null\";\r\n    if (forToolPanel) {\r\n      const valueForToolPanel = this.conditionForToolPanel(\r\n        type,\r\n        isRange,\r\n        formattedFrom,\r\n        formattedTo,\r\n        customDisplayKey,\r\n        customDisplayName\r\n      );\r\n      if (valueForToolPanel != null) {\r\n        return valueForToolPanel;\r\n      }\r\n    }\r\n    if (isRange) {\r\n      return `${formattedFrom()}-${formattedTo()}`;\r\n    }\r\n    if (dateFrom != null) {\r\n      return formatDate(dateFrom);\r\n    }\r\n    return `${type}`;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/filter/provided/date/dateFilterHandler.ts\r\nfunction defaultDateComparator(filterDate, cellValue) {\r\n  const cellAsDate = cellValue;\r\n  if (cellAsDate < filterDate) {\r\n    return -1;\r\n  }\r\n  if (cellAsDate > filterDate) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\nvar DateFilterHandler = class extends ScalarFilterHandler {\r\n  constructor() {\r\n    super(mapValuesFromDateFilterModel, DEFAULT_DATE_FILTER_OPTIONS);\r\n    this.filterType = \"date\";\r\n    this.FilterModelFormatterClass = DateFilterModelFormatter;\r\n  }\r\n  comparator() {\r\n    return this.params.filterParams.comparator ?? defaultDateComparator;\r\n  }\r\n  isValid(value) {\r\n    const isValidDate2 = this.params.filterParams.isValidDate;\r\n    return !isValidDate2 || isValidDate2(value);\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/filter/floating/provided/simpleFloatingFilter.ts\r\nvar SimpleFloatingFilter = class extends Component {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.defaultDebounceMs = 0;\r\n  }\r\n  setLastTypeFromModel(model) {\r\n    if (!model) {\r\n      this.lastType = this.optionsFactory.defaultOption;\r\n      return;\r\n    }\r\n    const isCombined = model.operator;\r\n    let condition;\r\n    if (isCombined) {\r\n      const combinedModel = model;\r\n      condition = combinedModel.conditions[0];\r\n    } else {\r\n      condition = model;\r\n    }\r\n    this.lastType = condition.type;\r\n  }\r\n  canWeEditAfterModelFromParentFilter(model) {\r\n    if (!model) {\r\n      return this.isTypeEditable(this.lastType);\r\n    }\r\n    const isCombined = model.operator;\r\n    if (isCombined) {\r\n      return false;\r\n    }\r\n    const simpleModel = model;\r\n    return this.isTypeEditable(simpleModel.type);\r\n  }\r\n  init(params) {\r\n    this.params = params;\r\n    const reactive = this.gos.get(\"enableFilterHandlers\");\r\n    this.reactive = reactive;\r\n    this.setParams(params);\r\n    if (reactive) {\r\n      const reactiveParams = params;\r\n      this.onModelUpdated(reactiveParams.model);\r\n    }\r\n  }\r\n  setParams(params) {\r\n    const optionsFactory = new OptionsFactory();\r\n    this.optionsFactory = optionsFactory;\r\n    optionsFactory.init(params.filterParams, this.defaultOptions);\r\n    this.filterModelFormatter = this.createManagedBean(\r\n      new this.FilterModelFormatterClass(optionsFactory, params.filterParams)\r\n    );\r\n    this.setSimpleParams(params, false);\r\n  }\r\n  setSimpleParams(params, update = true) {\r\n    const defaultOption = this.optionsFactory.defaultOption;\r\n    if (!update) {\r\n      this.lastType = defaultOption;\r\n    }\r\n    this.readOnly = !!params.filterParams.readOnly;\r\n    const editable = this.isTypeEditable(defaultOption);\r\n    this.setEditable(editable);\r\n  }\r\n  refresh(params) {\r\n    this.params = params;\r\n    const reactiveParams = params;\r\n    const reactive = this.reactive;\r\n    if (!reactive || reactiveParams.source === \"colDef\") {\r\n      this.updateParams(params);\r\n    }\r\n    if (reactive) {\r\n      const { source, model } = reactiveParams;\r\n      if (source === \"dataChanged\" || source === \"ui\") {\r\n        return;\r\n      }\r\n      this.onModelUpdated(model);\r\n    }\r\n  }\r\n  updateParams(params) {\r\n    const optionsFactory = this.optionsFactory;\r\n    optionsFactory.refresh(params.filterParams, this.defaultOptions);\r\n    this.setSimpleParams(params);\r\n    this.filterModelFormatter.updateParams({\r\n      optionsFactory,\r\n      filterParams: params.filterParams\r\n    });\r\n  }\r\n  onParentModelChanged(model, event) {\r\n    if (event?.afterFloatingFilter || event?.afterDataChange) {\r\n      return;\r\n    }\r\n    this.onModelUpdated(model);\r\n  }\r\n  hasSingleInput(filterType) {\r\n    const numberOfInputs = this.optionsFactory.getCustomOption(filterType)?.numberOfInputs;\r\n    return numberOfInputs == null || numberOfInputs == 1;\r\n  }\r\n  isTypeEditable(type) {\r\n    const uneditableTypes = [\"inRange\", \"empty\", \"blank\", \"notBlank\"];\r\n    return !!type && !this.readOnly && this.hasSingleInput(type) && uneditableTypes.indexOf(type) < 0;\r\n  }\r\n  getAriaLabel(params) {\r\n    const displayName = this.beans.colNames.getDisplayNameForColumn(params.column, \"header\", true);\r\n    return `${displayName} ${this.getLocaleTextFunc()(\"ariaFilterInput\", \"Filter Input\")}`;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/filter/provided/date/dateFloatingFilter.ts\r\nvar DateFloatingFilterElement = {\r\n  tag: \"div\",\r\n  cls: \"ag-floating-filter-input\",\r\n  role: \"presentation\",\r\n  children: [\r\n    {\r\n      tag: \"ag-input-text-field\",\r\n      ref: \"eReadOnlyText\"\r\n    },\r\n    { tag: \"div\", ref: \"eDateWrapper\", cls: \"ag-date-floating-filter-wrapper\" }\r\n  ]\r\n};\r\nvar DateFloatingFilter = class extends SimpleFloatingFilter {\r\n  constructor() {\r\n    super(DateFloatingFilterElement, [AgInputTextFieldSelector]);\r\n    this.eReadOnlyText = RefPlaceholder;\r\n    this.eDateWrapper = RefPlaceholder;\r\n    this.FilterModelFormatterClass = DateFilterModelFormatter;\r\n    this.filterType = \"date\";\r\n    this.defaultOptions = DEFAULT_DATE_FILTER_OPTIONS;\r\n  }\r\n  setParams(params) {\r\n    super.setParams(params);\r\n    this.createDateComponent();\r\n    const translate = this.getLocaleTextFunc();\r\n    this.eReadOnlyText.setDisabled(true).setInputAriaLabel(translate(\"ariaDateFilterInput\", \"Date Filter Input\"));\r\n  }\r\n  updateParams(params) {\r\n    super.updateParams(params);\r\n    this.dateComp.updateParams(this.getDateComponentParams());\r\n    this.updateCompOnModelChange(params.currentParentModel());\r\n  }\r\n  updateCompOnModelChange(model) {\r\n    const allowEditing = !this.readOnly && this.canWeEditAfterModelFromParentFilter(model);\r\n    this.setEditable(allowEditing);\r\n    if (allowEditing) {\r\n      const dateModel = model ? _parseDateTimeFromString(model.dateFrom) : null;\r\n      this.dateComp.setDate(dateModel);\r\n      this.eReadOnlyText.setValue(\"\");\r\n    } else {\r\n      this.eReadOnlyText.setValue(this.filterModelFormatter.getModelAsString(model));\r\n      this.dateComp.setDate(null);\r\n    }\r\n  }\r\n  setEditable(editable) {\r\n    _setDisplayed(this.eDateWrapper, editable);\r\n    _setDisplayed(this.eReadOnlyText.getGui(), !editable);\r\n  }\r\n  onModelUpdated(model) {\r\n    super.setLastTypeFromModel(model);\r\n    this.updateCompOnModelChange(model);\r\n  }\r\n  onDateChanged() {\r\n    const filterValueDate = this.dateComp.getDate();\r\n    if (this.reactive) {\r\n      const reactiveParams = this.params;\r\n      reactiveParams.onUiChange();\r\n      const model = reactiveParams.model;\r\n      const filterValueText = _serialiseDate(filterValueDate);\r\n      const newModel = filterValueText == null ? null : {\r\n        ...model ?? {\r\n          filterType: this.filterType,\r\n          type: this.lastType ?? this.optionsFactory.defaultOption\r\n        },\r\n        dateFrom: filterValueText\r\n      };\r\n      reactiveParams.onModelChange(newModel, { afterFloatingFilter: true });\r\n    } else {\r\n      this.params.parentFilterInstance((filterInstance) => {\r\n        filterInstance?.onFloatingFilterChanged(this.lastType || null, filterValueDate);\r\n      });\r\n    }\r\n  }\r\n  getDateComponentParams() {\r\n    const { filterParams } = this.params;\r\n    const debounceMs = getDebounceMs(filterParams, this.defaultDebounceMs);\r\n    return _addGridCommonParams(this.gos, {\r\n      onDateChanged: _debounce(this, this.onDateChanged.bind(this), debounceMs),\r\n      filterParams,\r\n      location: \"floatingFilter\"\r\n    });\r\n  }\r\n  createDateComponent() {\r\n    const {\r\n      beans: { context, userCompFactory },\r\n      eDateWrapper,\r\n      params\r\n    } = this;\r\n    this.dateComp = new DateCompWrapper(\r\n      context,\r\n      userCompFactory,\r\n      params.column.getColDef(),\r\n      this.getDateComponentParams(),\r\n      eDateWrapper,\r\n      (dateComp) => {\r\n        dateComp.setInputAriaLabel(this.getAriaLabel(params));\r\n      }\r\n    );\r\n    this.addDestroyFunc(() => this.dateComp.destroy());\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/filter/provided/date/defaultDateComponent.ts\r\nvar DefaultDateElement = {\r\n  tag: \"div\",\r\n  cls: \"ag-filter-filter\",\r\n  children: [\r\n    {\r\n      tag: \"ag-input-text-field\",\r\n      ref: \"eDateInput\",\r\n      cls: \"ag-date-filter\"\r\n    }\r\n  ]\r\n};\r\nvar DefaultDateComponent = class extends Component {\r\n  constructor() {\r\n    super(DefaultDateElement, [AgInputTextFieldSelector]);\r\n    this.eDateInput = RefPlaceholder;\r\n    this.isApply = false;\r\n    this.applyOnFocusOut = false;\r\n  }\r\n  init(params) {\r\n    this.params = params;\r\n    this.setParams(params);\r\n    const inputElement = this.eDateInput.getInputElement();\r\n    this.addManagedListeners(inputElement, {\r\n      // ensures that the input element is focussed when a clear button is clicked,\r\n      // unless using safari as there is no clear button and focus does not work properly\r\n      mouseDown: () => {\r\n        if (this.eDateInput.isDisabled() || this.usingSafariDatePicker) {\r\n          return;\r\n        }\r\n        inputElement.focus({ preventScroll: true });\r\n      },\r\n      input: this.handleInput.bind(this, false),\r\n      change: this.handleInput.bind(this, true),\r\n      focusout: this.handleFocusOut.bind(this)\r\n    });\r\n  }\r\n  handleInput(isChange) {\r\n    if (this.eDateInput.isDisabled()) {\r\n      return;\r\n    }\r\n    if (this.isApply) {\r\n      this.applyOnFocusOut = !isChange;\r\n      if (isChange) {\r\n        this.params.onDateChanged();\r\n      }\r\n      return;\r\n    }\r\n    if (!isChange) {\r\n      this.params.onDateChanged();\r\n    }\r\n  }\r\n  handleFocusOut() {\r\n    if (this.applyOnFocusOut) {\r\n      this.applyOnFocusOut = false;\r\n      this.params.onDateChanged();\r\n    }\r\n  }\r\n  setParams(params) {\r\n    const inputElement = this.eDateInput.getInputElement();\r\n    const shouldUseBrowserDatePicker = this.shouldUseBrowserDatePicker(params);\r\n    this.usingSafariDatePicker = shouldUseBrowserDatePicker && _isBrowserSafari();\r\n    const { minValidYear, maxValidYear, minValidDate, maxValidDate, buttons, includeTime, colDef } = params.filterParams || {};\r\n    const dataTypeSvc = this.beans.dataTypeSvc;\r\n    const shouldUseDateTimeLocal = includeTime ?? dataTypeSvc?.getDateIncludesTimeFlag?.(colDef.cellDataType) ?? false;\r\n    if (shouldUseBrowserDatePicker) {\r\n      if (shouldUseDateTimeLocal) {\r\n        inputElement.type = \"datetime-local\";\r\n        inputElement.step = \"1\";\r\n      } else {\r\n        inputElement.type = \"date\";\r\n      }\r\n    } else {\r\n      inputElement.type = \"text\";\r\n    }\r\n    if (minValidDate && minValidYear) {\r\n      _warn(85);\r\n    }\r\n    if (maxValidDate && maxValidYear) {\r\n      _warn(86);\r\n    }\r\n    if (minValidDate && maxValidDate) {\r\n      const [parsedMinValidDate, parsedMaxValidDate] = [minValidDate, maxValidDate].map(\r\n        (v) => v instanceof Date ? v : _parseDateTimeFromString(v)\r\n      );\r\n      if (parsedMinValidDate && parsedMaxValidDate && parsedMinValidDate.getTime() > parsedMaxValidDate.getTime()) {\r\n        _warn(87);\r\n      }\r\n    }\r\n    if (minValidDate) {\r\n      if (minValidDate instanceof Date) {\r\n        inputElement.min = _dateToFormattedString(minValidDate);\r\n      } else {\r\n        inputElement.min = minValidDate;\r\n      }\r\n    } else {\r\n      if (minValidYear) {\r\n        inputElement.min = `${minValidYear}-01-01`;\r\n      }\r\n    }\r\n    if (maxValidDate) {\r\n      if (maxValidDate instanceof Date) {\r\n        inputElement.max = _dateToFormattedString(maxValidDate);\r\n      } else {\r\n        inputElement.max = maxValidDate;\r\n      }\r\n    } else {\r\n      if (maxValidYear) {\r\n        inputElement.max = `${maxValidYear}-12-31`;\r\n      }\r\n    }\r\n    this.isApply = params.location === \"floatingFilter\" && !!buttons?.includes(\"apply\");\r\n  }\r\n  refresh(params) {\r\n    this.params = params;\r\n    this.setParams(params);\r\n  }\r\n  getDate() {\r\n    return _parseDateTimeFromString(this.eDateInput.getValue());\r\n  }\r\n  setDate(date) {\r\n    const colType = this.params.filterParams.colDef.cellDataType;\r\n    const includeTime = this.beans.dataTypeSvc?.getDateIncludesTimeFlag(colType) ?? false;\r\n    this.eDateInput.setValue(_serialiseDate(date, includeTime));\r\n  }\r\n  setInputPlaceholder(placeholder) {\r\n    this.eDateInput.setInputPlaceholder(placeholder);\r\n  }\r\n  setInputAriaLabel(ariaLabel) {\r\n    this.eDateInput.setAriaLabel(ariaLabel);\r\n  }\r\n  setDisabled(disabled) {\r\n    this.eDateInput.setDisabled(disabled);\r\n  }\r\n  afterGuiAttached(params) {\r\n    if (!params || !params.suppressFocus) {\r\n      this.eDateInput.getInputElement().focus({ preventScroll: true });\r\n    }\r\n  }\r\n  shouldUseBrowserDatePicker(params) {\r\n    return params?.filterParams?.browserDatePicker ?? true;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/filter/provided/number/numberFilterConstants.ts\r\nvar DEFAULT_NUMBER_FILTER_OPTIONS = [\r\n  \"equals\",\r\n  \"notEqual\",\r\n  \"greaterThan\",\r\n  \"greaterThanOrEqual\",\r\n  \"lessThan\",\r\n  \"lessThanOrEqual\",\r\n  \"inRange\",\r\n  \"blank\",\r\n  \"notBlank\"\r\n];\r\n\r\n// packages/ag-grid-community/src/filter/provided/number/numberFilterUtils.ts\r\nfunction getAllowedCharPattern(filterParams) {\r\n  const { allowedCharPattern } = filterParams ?? {};\r\n  return allowedCharPattern ?? null;\r\n}\r\nfunction processNumberFilterValue(value) {\r\n  if (value == null) {\r\n    return null;\r\n  }\r\n  return isNaN(value) ? null : value;\r\n}\r\nfunction mapValuesFromNumberFilterModel(filterModel, optionsFactory) {\r\n  const { filter, filterTo, type } = filterModel || {};\r\n  return [processNumberFilterValue(filter), processNumberFilterValue(filterTo)].slice(\r\n    0,\r\n    getNumberOfInputs(type, optionsFactory)\r\n  );\r\n}\r\n\r\n// packages/ag-grid-community/src/filter/provided/number/numberFilter.ts\r\nvar NumberFilter = class extends SimpleFilter {\r\n  constructor() {\r\n    super(\"numberFilter\", mapValuesFromNumberFilterModel, DEFAULT_NUMBER_FILTER_OPTIONS);\r\n    this.eValuesFrom = [];\r\n    this.eValuesTo = [];\r\n    this.filterType = \"number\";\r\n    this.defaultDebounceMs = 500;\r\n  }\r\n  setElementValue(element, value, fromFloatingFilter) {\r\n    const { numberFormatter } = this.params;\r\n    const valueToSet = !fromFloatingFilter && numberFormatter ? numberFormatter(value ?? null) : value;\r\n    super.setElementValue(element, valueToSet);\r\n  }\r\n  createEValue() {\r\n    const allowedCharPattern = getAllowedCharPattern(this.params);\r\n    const eCondition = _createElement({ tag: \"div\", cls: \"ag-filter-body\", role: \"presentation\" });\r\n    this.createFromToElement(eCondition, this.eValuesFrom, \"from\", allowedCharPattern);\r\n    this.createFromToElement(eCondition, this.eValuesTo, \"to\", allowedCharPattern);\r\n    return eCondition;\r\n  }\r\n  createFromToElement(eCondition, eValues, fromTo, allowedCharPattern) {\r\n    const eValue = this.createManagedBean(\r\n      allowedCharPattern ? new AgInputTextField({ allowedCharPattern }) : new AgInputNumberField()\r\n    );\r\n    eValue.addCss(`ag-filter-${fromTo}`);\r\n    eValue.addCss(\"ag-filter-filter\");\r\n    eValues.push(eValue);\r\n    eCondition.appendChild(eValue.getGui());\r\n  }\r\n  removeEValues(startPosition, deleteCount) {\r\n    const removeComps = (eGui) => this.removeComponents(eGui, startPosition, deleteCount);\r\n    removeComps(this.eValuesFrom);\r\n    removeComps(this.eValuesTo);\r\n  }\r\n  getValues(position) {\r\n    const result = [];\r\n    this.forEachPositionInput(position, (element, index, _elPosition, numberOfInputs) => {\r\n      if (index < numberOfInputs) {\r\n        result.push(processNumberFilterValue(this.stringToFloat(element.getValue())));\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  areSimpleModelsEqual(aSimple, bSimple) {\r\n    return aSimple.filter === bSimple.filter && aSimple.filterTo === bSimple.filterTo && aSimple.type === bSimple.type;\r\n  }\r\n  stringToFloat(value) {\r\n    if (typeof value === \"number\") {\r\n      return value;\r\n    }\r\n    let filterText = _makeNull(value);\r\n    if (filterText != null && filterText.trim() === \"\") {\r\n      filterText = null;\r\n    }\r\n    const numberParser = this.params.numberParser;\r\n    if (numberParser) {\r\n      return numberParser(filterText);\r\n    }\r\n    return filterText == null || filterText.trim() === \"-\" ? null : parseFloat(filterText);\r\n  }\r\n  createCondition(position) {\r\n    const type = this.getConditionType(position);\r\n    const model = {\r\n      filterType: this.filterType,\r\n      type\r\n    };\r\n    const values = this.getValues(position);\r\n    if (values.length > 0) {\r\n      model.filter = values[0];\r\n    }\r\n    if (values.length > 1) {\r\n      model.filterTo = values[1];\r\n    }\r\n    return model;\r\n  }\r\n  getInputs(position) {\r\n    const { eValuesFrom, eValuesTo } = this;\r\n    if (position >= eValuesFrom.length) {\r\n      return [null, null];\r\n    }\r\n    return [eValuesFrom[position], eValuesTo[position]];\r\n  }\r\n  hasInvalidInputs() {\r\n    let invalidInputs = false;\r\n    this.forEachInput((element) => {\r\n      if (!element.getInputElement().validity.valid) {\r\n        invalidInputs = true;\r\n        return;\r\n      }\r\n    });\r\n    return invalidInputs;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/filter/provided/number/numberFilterModelFormatter.ts\r\nvar NumberFilterModelFormatter = class extends SimpleFilterModelFormatter {\r\n  constructor(optionsFactory, filterParams) {\r\n    super(optionsFactory, filterParams, filterParams.numberFormatter);\r\n    this.filterTypeKeys = SCALAR_FILTER_TYPE_KEYS;\r\n  }\r\n  conditionToString(condition, forToolPanel, isRange, customDisplayKey, customDisplayName) {\r\n    const { filter, filterTo, type } = condition;\r\n    const formatValue = this.formatValue.bind(this);\r\n    if (forToolPanel) {\r\n      const valueForToolPanel = this.conditionForToolPanel(\r\n        type,\r\n        isRange,\r\n        () => formatValue(filter),\r\n        () => formatValue(filterTo),\r\n        customDisplayKey,\r\n        customDisplayName\r\n      );\r\n      if (valueForToolPanel != null) {\r\n        return valueForToolPanel;\r\n      }\r\n    }\r\n    if (isRange) {\r\n      return `${formatValue(filter)}-${formatValue(filterTo)}`;\r\n    }\r\n    if (filter != null) {\r\n      return formatValue(filter);\r\n    }\r\n    return `${type}`;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/filter/provided/number/numberFilterHandler.ts\r\nvar NumberFilterHandler = class extends ScalarFilterHandler {\r\n  constructor() {\r\n    super(mapValuesFromNumberFilterModel, DEFAULT_NUMBER_FILTER_OPTIONS);\r\n    this.filterType = \"number\";\r\n    this.FilterModelFormatterClass = NumberFilterModelFormatter;\r\n  }\r\n  comparator() {\r\n    return (left, right) => {\r\n      if (left === right) {\r\n        return 0;\r\n      }\r\n      return left < right ? 1 : -1;\r\n    };\r\n  }\r\n  isValid(value) {\r\n    return !isNaN(value);\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/filter/floating/provided/floatingFilterTextInputService.ts\r\nvar FloatingFilterTextInputService = class extends BeanStub {\r\n  constructor(params) {\r\n    super();\r\n    this.params = params;\r\n    this.eInput = RefPlaceholder;\r\n    this.onValueChanged = () => {\r\n    };\r\n  }\r\n  setupGui(parentElement) {\r\n    this.eInput = this.createManagedBean(new AgInputTextField(this.params?.config));\r\n    const eInput = this.eInput.getGui();\r\n    parentElement.appendChild(eInput);\r\n    const listener = (e) => this.onValueChanged(e);\r\n    this.addManagedListeners(eInput, {\r\n      input: listener,\r\n      keydown: listener\r\n    });\r\n  }\r\n  setEditable(editable) {\r\n    this.eInput.setDisabled(!editable);\r\n  }\r\n  getValue() {\r\n    return this.eInput.getValue();\r\n  }\r\n  setValue(value, silent) {\r\n    this.eInput.setValue(value, silent);\r\n  }\r\n  setValueChangedListener(listener) {\r\n    this.onValueChanged = listener;\r\n  }\r\n  setParams({ ariaLabel, autoComplete }) {\r\n    const { eInput } = this;\r\n    eInput.setInputAriaLabel(ariaLabel);\r\n    if (autoComplete !== void 0) {\r\n      eInput.setAutoComplete(autoComplete);\r\n    }\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/filter/provided/text/textFilterUtils.ts\r\nfunction trimInputForFilter(value) {\r\n  const trimmedInput = value?.trim();\r\n  return trimmedInput === \"\" ? value : trimmedInput;\r\n}\r\nfunction mapValuesFromTextFilterModel(filterModel, optionsFactory) {\r\n  const { filter, filterTo, type } = filterModel || {};\r\n  return [filter || null, filterTo || null].slice(0, getNumberOfInputs(type, optionsFactory));\r\n}\r\n\r\n// packages/ag-grid-community/src/filter/floating/provided/textInputFloatingFilter.ts\r\nvar TextInputFloatingFilterElement = {\r\n  tag: \"div\",\r\n  ref: \"eFloatingFilterInputContainer\",\r\n  cls: \"ag-floating-filter-input\",\r\n  role: \"presentation\"\r\n};\r\nvar TextInputFloatingFilter = class extends SimpleFloatingFilter {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.eFloatingFilterInputContainer = RefPlaceholder;\r\n    this.defaultDebounceMs = 500;\r\n  }\r\n  postConstruct() {\r\n    this.setTemplate(TextInputFloatingFilterElement);\r\n  }\r\n  onModelUpdated(model) {\r\n    this.setLastTypeFromModel(model);\r\n    this.setEditable(this.canWeEditAfterModelFromParentFilter(model));\r\n    this.inputSvc.setValue(this.filterModelFormatter.getModelAsString(model));\r\n  }\r\n  setParams(params) {\r\n    this.setupFloatingFilterInputService(params);\r\n    super.setParams(params);\r\n    this.setTextInputParams(params);\r\n  }\r\n  setupFloatingFilterInputService(params) {\r\n    this.inputSvc = this.createFloatingFilterInputService(params);\r\n    this.inputSvc.setupGui(this.eFloatingFilterInputContainer);\r\n  }\r\n  setTextInputParams(params) {\r\n    const autoComplete = params.browserAutoComplete ?? false;\r\n    const { inputSvc, defaultDebounceMs, readOnly } = this;\r\n    inputSvc.setParams({\r\n      ariaLabel: this.getAriaLabel(params),\r\n      autoComplete\r\n    });\r\n    this.applyActive = _isUseApplyButton(params.filterParams);\r\n    if (!readOnly) {\r\n      const debounceMs = getDebounceMs(params.filterParams, defaultDebounceMs);\r\n      const toDebounce = _debounce(\r\n        this,\r\n        this.syncUpWithParentFilter.bind(this),\r\n        debounceMs\r\n      );\r\n      inputSvc.setValueChangedListener(toDebounce);\r\n    }\r\n  }\r\n  updateParams(params) {\r\n    super.updateParams(params);\r\n    this.setTextInputParams(params);\r\n  }\r\n  recreateFloatingFilterInputService(params) {\r\n    const { inputSvc } = this;\r\n    const value = inputSvc.getValue();\r\n    _clearElement(this.eFloatingFilterInputContainer);\r\n    this.destroyBean(inputSvc);\r\n    this.setupFloatingFilterInputService(params);\r\n    inputSvc.setValue(value, true);\r\n  }\r\n  syncUpWithParentFilter(e) {\r\n    const isEnterKey = e.key === KeyCode.ENTER;\r\n    const reactive = this.reactive;\r\n    if (reactive) {\r\n      const reactiveParams = this.params;\r\n      reactiveParams.onUiChange();\r\n    }\r\n    if (this.applyActive && !isEnterKey) {\r\n      return;\r\n    }\r\n    const { inputSvc, params, lastType } = this;\r\n    let value = inputSvc.getValue();\r\n    if (params.filterParams.trimInput) {\r\n      value = trimInputForFilter(value);\r\n      inputSvc.setValue(value, true);\r\n    }\r\n    if (reactive) {\r\n      const reactiveParams = params;\r\n      const model = reactiveParams.model;\r\n      const parsedValue = this.convertValue(value);\r\n      const newModel = parsedValue == null ? null : {\r\n        ...model ?? {\r\n          filterType: this.filterType,\r\n          type: lastType ?? this.optionsFactory.defaultOption\r\n        },\r\n        filter: parsedValue\r\n      };\r\n      reactiveParams.onModelChange(newModel, { afterFloatingFilter: true });\r\n    } else {\r\n      params.parentFilterInstance((filterInstance) => {\r\n        filterInstance?.onFloatingFilterChanged(lastType || null, value || null);\r\n      });\r\n    }\r\n  }\r\n  convertValue(value) {\r\n    return value || null;\r\n  }\r\n  setEditable(editable) {\r\n    this.inputSvc.setEditable(editable);\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/filter/provided/number/numberFloatingFilter.ts\r\nvar FloatingFilterNumberInputService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.onValueChanged = () => {\r\n    };\r\n    this.numberInputActive = true;\r\n  }\r\n  setupGui(parentElement) {\r\n    this.eNumberInput = this.createManagedBean(new AgInputNumberField());\r\n    this.eTextInput = this.createManagedBean(new AgInputTextField());\r\n    this.eTextInput.setDisabled(true);\r\n    const eNumberInput = this.eNumberInput.getGui();\r\n    const eTextInput = this.eTextInput.getGui();\r\n    parentElement.appendChild(eNumberInput);\r\n    parentElement.appendChild(eTextInput);\r\n    this.setupListeners(eNumberInput, (e) => this.onValueChanged(e));\r\n    this.setupListeners(eTextInput, (e) => this.onValueChanged(e));\r\n  }\r\n  setEditable(editable) {\r\n    this.numberInputActive = editable;\r\n    this.eNumberInput.setDisplayed(this.numberInputActive);\r\n    this.eTextInput.setDisplayed(!this.numberInputActive);\r\n  }\r\n  setAutoComplete(autoComplete) {\r\n    this.eNumberInput.setAutoComplete(autoComplete);\r\n    this.eTextInput.setAutoComplete(autoComplete);\r\n  }\r\n  getValue() {\r\n    return this.getActiveInputElement().getValue();\r\n  }\r\n  setValue(value, silent) {\r\n    this.getActiveInputElement().setValue(value, silent);\r\n  }\r\n  getActiveInputElement() {\r\n    return this.numberInputActive ? this.eNumberInput : this.eTextInput;\r\n  }\r\n  setValueChangedListener(listener) {\r\n    this.onValueChanged = listener;\r\n  }\r\n  setupListeners(element, listener) {\r\n    this.addManagedListeners(element, {\r\n      input: listener,\r\n      keydown: listener\r\n    });\r\n  }\r\n  setParams(params) {\r\n    this.setAriaLabel(params.ariaLabel);\r\n    if (params.autoComplete !== void 0) {\r\n      this.setAutoComplete(params.autoComplete);\r\n    }\r\n  }\r\n  setAriaLabel(ariaLabel) {\r\n    this.eNumberInput.setInputAriaLabel(ariaLabel);\r\n    this.eTextInput.setInputAriaLabel(ariaLabel);\r\n  }\r\n};\r\nvar NumberFloatingFilter = class extends TextInputFloatingFilter {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.FilterModelFormatterClass = NumberFilterModelFormatter;\r\n    this.filterType = \"number\";\r\n    this.defaultOptions = DEFAULT_NUMBER_FILTER_OPTIONS;\r\n  }\r\n  updateParams(params) {\r\n    const allowedCharPattern = getAllowedCharPattern(params.filterParams);\r\n    if (allowedCharPattern !== this.allowedCharPattern) {\r\n      this.recreateFloatingFilterInputService(params);\r\n    }\r\n    super.updateParams(params);\r\n  }\r\n  createFloatingFilterInputService(params) {\r\n    this.allowedCharPattern = getAllowedCharPattern(params.filterParams);\r\n    if (this.allowedCharPattern) {\r\n      return this.createManagedBean(\r\n        new FloatingFilterTextInputService({\r\n          config: { allowedCharPattern: this.allowedCharPattern }\r\n        })\r\n      );\r\n    }\r\n    return this.createManagedBean(new FloatingFilterNumberInputService());\r\n  }\r\n  convertValue(value) {\r\n    return value ? Number(value) : null;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/filter/provided/text/textFilterConstants.ts\r\nvar DEFAULT_TEXT_FILTER_OPTIONS = [\r\n  \"contains\",\r\n  \"notContains\",\r\n  \"equals\",\r\n  \"notEqual\",\r\n  \"startsWith\",\r\n  \"endsWith\",\r\n  \"blank\",\r\n  \"notBlank\"\r\n];\r\n\r\n// packages/ag-grid-community/src/filter/provided/text/textFilter.ts\r\nvar TextFilter = class extends SimpleFilter {\r\n  constructor() {\r\n    super(\"textFilter\", mapValuesFromTextFilterModel, DEFAULT_TEXT_FILTER_OPTIONS);\r\n    this.filterType = \"text\";\r\n    this.eValuesFrom = [];\r\n    this.eValuesTo = [];\r\n    this.defaultDebounceMs = 500;\r\n  }\r\n  createCondition(position) {\r\n    const type = this.getConditionType(position);\r\n    const model = {\r\n      filterType: this.filterType,\r\n      type\r\n    };\r\n    const values = this.getValuesWithSideEffects(position, true);\r\n    if (values.length > 0) {\r\n      model.filter = values[0];\r\n    }\r\n    if (values.length > 1) {\r\n      model.filterTo = values[1];\r\n    }\r\n    return model;\r\n  }\r\n  areSimpleModelsEqual(aSimple, bSimple) {\r\n    return aSimple.filter === bSimple.filter && aSimple.filterTo === bSimple.filterTo && aSimple.type === bSimple.type;\r\n  }\r\n  getInputs(position) {\r\n    const { eValuesFrom, eValuesTo } = this;\r\n    if (position >= eValuesFrom.length) {\r\n      return [null, null];\r\n    }\r\n    return [eValuesFrom[position], eValuesTo[position]];\r\n  }\r\n  getValues(position) {\r\n    return this.getValuesWithSideEffects(position, false);\r\n  }\r\n  getValuesWithSideEffects(position, applySideEffects) {\r\n    const result = [];\r\n    this.forEachPositionInput(position, (element, index, _elPosition, numberOfInputs) => {\r\n      if (index < numberOfInputs) {\r\n        let value = _makeNull(element.getValue());\r\n        if (applySideEffects && this.params.trimInput) {\r\n          value = trimInputForFilter(value) ?? null;\r\n          element.setValue(value, true);\r\n        }\r\n        result.push(value);\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  createEValue() {\r\n    const eCondition = _createElement({ tag: \"div\", cls: \"ag-filter-body\", role: \"presentation\" });\r\n    const { eValuesFrom, eValuesTo } = this;\r\n    this.createFromToElement(eCondition, eValuesFrom, \"from\");\r\n    this.createFromToElement(eCondition, eValuesTo, \"to\");\r\n    return eCondition;\r\n  }\r\n  createFromToElement(eCondition, eValues, fromTo) {\r\n    const eValue = this.createManagedBean(new AgInputTextField());\r\n    eValue.addCss(`ag-filter-${fromTo}`);\r\n    eValue.addCss(\"ag-filter-filter\");\r\n    eValues.push(eValue);\r\n    eCondition.appendChild(eValue.getGui());\r\n  }\r\n  removeEValues(startPosition, deleteCount) {\r\n    const removeComps = (eGui) => this.removeComponents(eGui, startPosition, deleteCount);\r\n    const { eValuesFrom, eValuesTo } = this;\r\n    removeComps(eValuesFrom);\r\n    removeComps(eValuesTo);\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/filter/provided/text/textFilterModelFormatter.ts\r\nvar TextFilterModelFormatter = class extends SimpleFilterModelFormatter {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.filterTypeKeys = TEXT_FILTER_TYPE_KEYS;\r\n  }\r\n  conditionToString(condition, forToolPanel, isRange, customDisplayKey, customDisplayName) {\r\n    const { filter, filterTo, type } = condition;\r\n    if (forToolPanel) {\r\n      const getValueFunc = (value) => () => translateForFilter(this, \"filterSummaryTextQuote\", [value]);\r\n      const valueForToolPanel = this.conditionForToolPanel(\r\n        type,\r\n        isRange,\r\n        getValueFunc(filter),\r\n        getValueFunc(filterTo),\r\n        customDisplayKey,\r\n        customDisplayName\r\n      );\r\n      if (valueForToolPanel != null) {\r\n        return valueForToolPanel;\r\n      }\r\n    }\r\n    if (isRange) {\r\n      return `${filter}-${filterTo}`;\r\n    }\r\n    if (filter != null) {\r\n      return `${filter}`;\r\n    }\r\n    return `${type}`;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/filter/provided/text/textFilterHandler.ts\r\nvar defaultMatcher = ({ filterOption, value, filterText }) => {\r\n  if (filterText == null) {\r\n    return false;\r\n  }\r\n  switch (filterOption) {\r\n    case \"contains\":\r\n      return value.indexOf(filterText) >= 0;\r\n    case \"notContains\":\r\n      return value.indexOf(filterText) < 0;\r\n    case \"equals\":\r\n      return value === filterText;\r\n    case \"notEqual\":\r\n      return value != filterText;\r\n    case \"startsWith\":\r\n      return value.indexOf(filterText) === 0;\r\n    case \"endsWith\": {\r\n      const index = value.lastIndexOf(filterText);\r\n      return index >= 0 && index === value.length - filterText.length;\r\n    }\r\n    default:\r\n      return false;\r\n  }\r\n};\r\nvar defaultFormatter = (from) => from;\r\nvar defaultLowercaseFormatter = (from) => from == null ? null : from.toString().toLowerCase();\r\nvar TextFilterHandler = class extends SimpleFilterHandler {\r\n  constructor() {\r\n    super(mapValuesFromTextFilterModel, DEFAULT_TEXT_FILTER_OPTIONS);\r\n    this.filterType = \"text\";\r\n    this.FilterModelFormatterClass = TextFilterModelFormatter;\r\n  }\r\n  updateParams(params) {\r\n    super.updateParams(params);\r\n    const filterParams = params.filterParams;\r\n    this.matcher = filterParams.textMatcher ?? defaultMatcher;\r\n    this.formatter = filterParams.textFormatter ?? (filterParams.caseSensitive ? defaultFormatter : defaultLowercaseFormatter);\r\n  }\r\n  evaluateNullValue(filterType) {\r\n    const filterTypesAllowNulls = [\"notEqual\", \"notContains\", \"blank\"];\r\n    return filterType ? filterTypesAllowNulls.indexOf(filterType) >= 0 : false;\r\n  }\r\n  evaluateNonNullValue(values, cellValue, filterModel, params) {\r\n    const formattedValues = values.map((v) => this.formatter(v)) || [];\r\n    const cellValueFormatted = this.formatter(cellValue);\r\n    const {\r\n      api,\r\n      colDef,\r\n      column,\r\n      context,\r\n      filterParams: { textFormatter }\r\n    } = this.params;\r\n    if (filterModel.type === \"blank\") {\r\n      return isBlank(cellValue);\r\n    } else if (filterModel.type === \"notBlank\") {\r\n      return !isBlank(cellValue);\r\n    }\r\n    const matcherParams = {\r\n      api,\r\n      colDef,\r\n      column,\r\n      context,\r\n      node: params.node,\r\n      data: params.data,\r\n      filterOption: filterModel.type,\r\n      value: cellValueFormatted,\r\n      textFormatter\r\n    };\r\n    return formattedValues.some((v) => this.matcher({ ...matcherParams, filterText: v }));\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/filter/provided/text/textFloatingFilter.ts\r\nvar TextFloatingFilter = class extends TextInputFloatingFilter {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.FilterModelFormatterClass = TextFilterModelFormatter;\r\n    this.filterType = \"text\";\r\n    this.defaultOptions = DEFAULT_TEXT_FILTER_OPTIONS;\r\n  }\r\n  createFloatingFilterInputService() {\r\n    return this.createManagedBean(new FloatingFilterTextInputService());\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/filter/quickFilterApi.ts\r\nfunction isQuickFilterPresent(beans) {\r\n  return !!beans.quickFilter?.isFilterPresent();\r\n}\r\nfunction getQuickFilter(beans) {\r\n  return beans.quickFilter?.getText();\r\n}\r\nfunction resetQuickFilter(beans) {\r\n  beans.quickFilter?.resetCache();\r\n}\r\n\r\n// packages/ag-grid-community/src/filter/quickFilterService.ts\r\nvar QuickFilterService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"quickFilter\";\r\n    this.quickFilter = null;\r\n    this.quickFilterParts = null;\r\n  }\r\n  postConstruct() {\r\n    const resetListener = this.resetCache.bind(this);\r\n    const gos = this.gos;\r\n    this.addManagedEventListeners({\r\n      columnPivotModeChanged: resetListener,\r\n      newColumnsLoaded: resetListener,\r\n      columnRowGroupChanged: resetListener,\r\n      columnVisible: () => {\r\n        if (!gos.get(\"includeHiddenColumnsInQuickFilter\")) {\r\n          this.resetCache();\r\n        }\r\n      }\r\n    });\r\n    this.addManagedPropertyListener(\"quickFilterText\", (e) => this.setFilter(e.currentValue));\r\n    this.addManagedPropertyListeners(\r\n      [\"includeHiddenColumnsInQuickFilter\", \"applyQuickFilterBeforePivotOrAgg\"],\r\n      () => this.onColumnConfigChanged()\r\n    );\r\n    this.quickFilter = this.parseFilter(gos.get(\"quickFilterText\"));\r\n    this.parser = gos.get(\"quickFilterParser\");\r\n    this.matcher = gos.get(\"quickFilterMatcher\");\r\n    this.setFilterParts();\r\n    this.addManagedPropertyListeners([\"quickFilterMatcher\", \"quickFilterParser\"], () => this.setParserAndMatcher());\r\n  }\r\n  // if we are using autoGroupCols, then they should be included for quick filter. this covers the\r\n  // following scenarios:\r\n  // a) user provides 'field' into autoGroupCol of normal grid, so now because a valid col to filter leafs on\r\n  // b) using tree data and user depends on autoGroupCol for first col, and we also want to filter on this\r\n  //    (tree data is a bit different, as parent rows can be filtered on, unlike row grouping)\r\n  refreshCols() {\r\n    const { autoColSvc, colModel, gos, pivotResultCols } = this.beans;\r\n    const pivotMode = colModel.isPivotMode();\r\n    const groupAutoCols = autoColSvc?.getColumns();\r\n    const providedCols = colModel.getColDefCols();\r\n    let columnsForQuickFilter = (pivotMode && !gos.get(\"applyQuickFilterBeforePivotOrAgg\") ? pivotResultCols?.getPivotResultCols()?.list : providedCols) ?? [];\r\n    if (groupAutoCols) {\r\n      columnsForQuickFilter = columnsForQuickFilter.concat(groupAutoCols);\r\n    }\r\n    this.colsToUse = gos.get(\"includeHiddenColumnsInQuickFilter\") ? columnsForQuickFilter : columnsForQuickFilter.filter((col) => col.isVisible() || col.isRowGroupActive());\r\n  }\r\n  isFilterPresent() {\r\n    return this.quickFilter !== null;\r\n  }\r\n  doesRowPass(node) {\r\n    const usingCache = this.gos.get(\"cacheQuickFilter\");\r\n    if (this.matcher) {\r\n      return this.doesRowPassMatcher(usingCache, node);\r\n    }\r\n    return this.quickFilterParts.every(\r\n      (part) => usingCache ? this.doesRowPassCache(node, part) : this.doesRowPassNoCache(node, part)\r\n    );\r\n  }\r\n  resetCache() {\r\n    this.beans.rowModel.forEachNode((node) => node.quickFilterAggregateText = null);\r\n  }\r\n  getText() {\r\n    return this.gos.get(\"quickFilterText\");\r\n  }\r\n  setFilterParts() {\r\n    const { quickFilter, parser } = this;\r\n    if (quickFilter) {\r\n      this.quickFilterParts = parser ? parser(quickFilter) : quickFilter.split(\" \");\r\n    } else {\r\n      this.quickFilterParts = null;\r\n    }\r\n  }\r\n  parseFilter(newFilter) {\r\n    if (!_exists(newFilter)) {\r\n      return null;\r\n    }\r\n    return newFilter.toUpperCase();\r\n  }\r\n  setFilter(newFilter) {\r\n    if (newFilter != null && typeof newFilter !== \"string\") {\r\n      _warn(70, { newFilter });\r\n      return;\r\n    }\r\n    const parsedFilter = this.parseFilter(newFilter);\r\n    if (this.quickFilter !== parsedFilter) {\r\n      this.quickFilter = parsedFilter;\r\n      this.setFilterParts();\r\n      this.dispatchLocalEvent({ type: \"quickFilterChanged\" });\r\n    }\r\n  }\r\n  setParserAndMatcher() {\r\n    const parser = this.gos.get(\"quickFilterParser\");\r\n    const matcher = this.gos.get(\"quickFilterMatcher\");\r\n    const hasChanged = parser !== this.parser || matcher !== this.matcher;\r\n    this.parser = parser;\r\n    this.matcher = matcher;\r\n    if (hasChanged) {\r\n      this.setFilterParts();\r\n      this.dispatchLocalEvent({ type: \"quickFilterChanged\" });\r\n    }\r\n  }\r\n  onColumnConfigChanged() {\r\n    this.refreshCols();\r\n    this.resetCache();\r\n    if (this.isFilterPresent()) {\r\n      this.dispatchLocalEvent({ type: \"quickFilterChanged\" });\r\n    }\r\n  }\r\n  doesRowPassNoCache(node, filterPart) {\r\n    return this.colsToUse.some((column) => {\r\n      const part = this.getTextForColumn(column, node);\r\n      return _exists(part) && part.indexOf(filterPart) >= 0;\r\n    });\r\n  }\r\n  doesRowPassCache(node, filterPart) {\r\n    this.checkGenerateAggText(node);\r\n    return node.quickFilterAggregateText.indexOf(filterPart) >= 0;\r\n  }\r\n  doesRowPassMatcher(usingCache, node) {\r\n    let quickFilterAggregateText;\r\n    if (usingCache) {\r\n      this.checkGenerateAggText(node);\r\n      quickFilterAggregateText = node.quickFilterAggregateText;\r\n    } else {\r\n      quickFilterAggregateText = this.getAggText(node);\r\n    }\r\n    const { quickFilterParts, matcher } = this;\r\n    return matcher(quickFilterParts, quickFilterAggregateText);\r\n  }\r\n  checkGenerateAggText(node) {\r\n    if (!node.quickFilterAggregateText) {\r\n      node.quickFilterAggregateText = this.getAggText(node);\r\n    }\r\n  }\r\n  getTextForColumn(column, node) {\r\n    let value = this.beans.filterValueSvc.getValue(column, node);\r\n    const colDef = column.getColDef();\r\n    if (colDef.getQuickFilterText) {\r\n      const params = _addGridCommonParams(this.gos, {\r\n        value,\r\n        node,\r\n        data: node.data,\r\n        column,\r\n        colDef\r\n      });\r\n      value = colDef.getQuickFilterText(params);\r\n    }\r\n    return _exists(value) ? value.toString().toUpperCase() : null;\r\n  }\r\n  getAggText(node) {\r\n    const stringParts = [];\r\n    this.colsToUse.forEach((column) => {\r\n      const part = this.getTextForColumn(column, node);\r\n      if (_exists(part)) {\r\n        stringParts.push(part);\r\n      }\r\n    });\r\n    return stringParts.join(\"\\n\");\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/filter/filterModule.ts\r\nvar ClientSideRowModelFilterModule = {\r\n  moduleName: \"ClientSideRowModelFilter\",\r\n  version: VERSION,\r\n  rowModels: [\"clientSide\"],\r\n  beans: [FilterStage]\r\n};\r\nvar FilterCoreModule = {\r\n  moduleName: \"FilterCore\",\r\n  version: VERSION,\r\n  beans: [FilterManager],\r\n  apiFunctions: {\r\n    isAnyFilterPresent,\r\n    onFilterChanged\r\n  },\r\n  css: [columnFiltersCSS],\r\n  dependsOn: [ClientSideRowModelFilterModule]\r\n};\r\nvar FilterValueModule = {\r\n  moduleName: \"FilterValue\",\r\n  version: VERSION,\r\n  beans: [FilterValueService]\r\n};\r\nvar ColumnFilterModule = {\r\n  moduleName: \"ColumnFilter\",\r\n  version: VERSION,\r\n  beans: [ColumnFilterService, FilterMenuFactory],\r\n  dynamicBeans: { headerFilterCellCtrl: HeaderFilterCellCtrl },\r\n  icons: {\r\n    // open filter button - header, floating filter, menu\r\n    filter: \"filter\",\r\n    // filter is applied - header (legacy column menu), filter tool panel\r\n    filterActive: \"filter\"\r\n  },\r\n  apiFunctions: {\r\n    isColumnFilterPresent,\r\n    getColumnFilterInstance,\r\n    destroyFilter,\r\n    setFilterModel,\r\n    getFilterModel,\r\n    getColumnFilterModel,\r\n    setColumnFilterModel,\r\n    showColumnFilter,\r\n    hideColumnFilter,\r\n    getColumnFilterHandler,\r\n    doFilterAction\r\n  },\r\n  dependsOn: [FilterCoreModule, PopupModule, FilterValueModule, SharedMenuModule]\r\n};\r\nvar CustomFilterModule = {\r\n  moduleName: \"CustomFilter\",\r\n  version: VERSION,\r\n  userComponents: { agReadOnlyFloatingFilter: ReadOnlyFloatingFilter },\r\n  dependsOn: [ColumnFilterModule]\r\n};\r\nvar TextFilterModule = {\r\n  moduleName: \"TextFilter\",\r\n  version: VERSION,\r\n  dependsOn: [ColumnFilterModule],\r\n  userComponents: {\r\n    agTextColumnFilter: {\r\n      classImp: TextFilter,\r\n      params: {\r\n        useForm: true\r\n      }\r\n    },\r\n    agTextColumnFloatingFilter: TextFloatingFilter\r\n  },\r\n  dynamicBeans: {\r\n    agTextColumnFilterHandler: TextFilterHandler\r\n  }\r\n};\r\nvar NumberFilterModule = {\r\n  moduleName: \"NumberFilter\",\r\n  version: VERSION,\r\n  dependsOn: [ColumnFilterModule],\r\n  userComponents: {\r\n    agNumberColumnFilter: {\r\n      classImp: NumberFilter,\r\n      params: {\r\n        useForm: true\r\n      }\r\n    },\r\n    agNumberColumnFloatingFilter: NumberFloatingFilter\r\n  },\r\n  dynamicBeans: {\r\n    agNumberColumnFilterHandler: NumberFilterHandler\r\n  }\r\n};\r\nvar DateFilterModule = {\r\n  moduleName: \"DateFilter\",\r\n  version: VERSION,\r\n  dependsOn: [ColumnFilterModule],\r\n  userComponents: {\r\n    agDateColumnFilter: {\r\n      classImp: DateFilter,\r\n      params: {\r\n        useForm: true\r\n      }\r\n    },\r\n    agDateInput: DefaultDateComponent,\r\n    agDateColumnFloatingFilter: DateFloatingFilter\r\n  },\r\n  dynamicBeans: {\r\n    agDateColumnFilterHandler: DateFilterHandler\r\n  }\r\n};\r\nvar QuickFilterCoreModule = {\r\n  moduleName: \"QuickFilterCore\",\r\n  version: VERSION,\r\n  rowModels: [\"clientSide\"],\r\n  beans: [QuickFilterService],\r\n  dependsOn: [FilterCoreModule, FilterValueModule]\r\n};\r\nvar QuickFilterModule = {\r\n  moduleName: \"QuickFilter\",\r\n  version: VERSION,\r\n  apiFunctions: {\r\n    isQuickFilterPresent,\r\n    getQuickFilter,\r\n    resetQuickFilter\r\n  },\r\n  dependsOn: [QuickFilterCoreModule]\r\n};\r\nvar ExternalFilterModule = {\r\n  moduleName: \"ExternalFilter\",\r\n  version: VERSION,\r\n  dependsOn: [FilterCoreModule]\r\n};\r\n\r\n// packages/ag-grid-community/src/tooltip/tooltip.css-GENERATED.ts\r\nvar tooltipCSS = (\r\n  /*css*/\r\n  `.ag-tooltip{background-color:var(--ag-tooltip-background-color);border:var(--ag-tooltip-border);border-radius:var(--ag-border-radius);color:var(--ag-tooltip-text-color);padding:var(--ag-widget-container-vertical-padding) var(--ag-widget-container-horizontal-padding);position:absolute;white-space:normal;z-index:99999;&:where(.ag-cell-editor-tooltip){background-color:var(--ag-tooltip-error-background-color);border:var(--ag-tooltip-error-border);color:var(--ag-tooltip-error-text-color);font-weight:500}}.ag-tooltip-custom{position:absolute;z-index:99999}.ag-tooltip-custom:where(:not(.ag-tooltip-interactive)),.ag-tooltip:where(:not(.ag-tooltip-interactive)){pointer-events:none}.ag-tooltip-animate{transition:opacity 1s;&:where(.ag-tooltip-hiding){opacity:0}}`\r\n);\r\n\r\n// packages/ag-grid-community/src/tooltip/tooltipService.ts\r\nvar getEditErrorsForPosition = (beans, cellCtrl, translate) => {\r\n  const { editModelSvc } = beans;\r\n  const cellValidationErrors = editModelSvc?.getCellValidationModel()?.getCellValidation(cellCtrl)?.errorMessages;\r\n  const rowValidationErrors = editModelSvc?.getRowValidationModel().getRowValidation(cellCtrl)?.errorMessages;\r\n  const errors = cellValidationErrors || rowValidationErrors;\r\n  return errors && errors.length ? errors.join(translate(\"tooltipValidationErrorSeparator\", \". \")) : void 0;\r\n};\r\nvar TooltipService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"tooltipSvc\";\r\n  }\r\n  setupHeaderTooltip(existingTooltipFeature, ctrl, value, shouldDisplayTooltip) {\r\n    if (existingTooltipFeature) {\r\n      ctrl.destroyBean(existingTooltipFeature);\r\n    }\r\n    const isTooltipWhenTruncated = _isShowTooltipWhenTruncated(this.gos);\r\n    const { column, eGui } = ctrl;\r\n    const colDef = column.getColDef();\r\n    if (!shouldDisplayTooltip && isTooltipWhenTruncated && !colDef.headerComponent) {\r\n      shouldDisplayTooltip = _isElementOverflowingCallback(\r\n        () => eGui.querySelector(\".ag-header-cell-text\")\r\n      );\r\n    }\r\n    const tooltipCtrl = {\r\n      getColumn: () => column,\r\n      getColDef: () => column.getColDef(),\r\n      getGui: () => eGui,\r\n      getLocation: () => \"header\",\r\n      getTooltipValue: () => {\r\n        if (value != null) {\r\n          return value;\r\n        }\r\n        const res = column.getColDef().headerTooltip;\r\n        return res;\r\n      },\r\n      shouldDisplayTooltip\r\n    };\r\n    let tooltipFeature = this.createTooltipFeature(tooltipCtrl);\r\n    if (tooltipFeature) {\r\n      tooltipFeature = ctrl.createBean(tooltipFeature);\r\n      ctrl.setRefreshFunction(\"tooltip\", () => tooltipFeature.refreshTooltip());\r\n    }\r\n    return tooltipFeature;\r\n  }\r\n  setupHeaderGroupTooltip(existingTooltipFeature, ctrl, value, shouldDisplayTooltip) {\r\n    if (existingTooltipFeature) {\r\n      ctrl.destroyBean(existingTooltipFeature);\r\n    }\r\n    const isTooltipWhenTruncated = _isShowTooltipWhenTruncated(this.gos);\r\n    const { column, eGui } = ctrl;\r\n    const colGroupDef = column.getColGroupDef();\r\n    if (!shouldDisplayTooltip && isTooltipWhenTruncated && !colGroupDef?.headerGroupComponent) {\r\n      shouldDisplayTooltip = _isElementOverflowingCallback(\r\n        () => eGui.querySelector(\".ag-header-group-text\")\r\n      );\r\n    }\r\n    const tooltipCtrl = {\r\n      getColumn: () => column,\r\n      getGui: () => eGui,\r\n      getLocation: () => \"headerGroup\",\r\n      getTooltipValue: () => value ?? (colGroupDef && colGroupDef.headerTooltip),\r\n      shouldDisplayTooltip\r\n    };\r\n    if (colGroupDef) {\r\n      tooltipCtrl.getColDef = () => colGroupDef;\r\n    }\r\n    const tooltipFeature = this.createTooltipFeature(tooltipCtrl);\r\n    return tooltipFeature ? ctrl.createBean(tooltipFeature) : tooltipFeature;\r\n  }\r\n  enableCellTooltipFeature(ctrl, value, shouldDisplayTooltip) {\r\n    const { beans } = this;\r\n    const { gos, editSvc } = beans;\r\n    const { column, rowNode } = ctrl;\r\n    let location = \"cell\";\r\n    const getTooltipValue = () => {\r\n      const isEditing2 = !!editSvc?.isEditing(ctrl);\r\n      const errorMessages = !isEditing2 && getEditErrorsForPosition(beans, ctrl, this.getLocaleTextFunc());\r\n      if (errorMessages) {\r\n        location = \"cellEditor\";\r\n        return errorMessages;\r\n      }\r\n      location = \"cell\";\r\n      const colDef = column.getColDef();\r\n      const data = rowNode.data;\r\n      if (colDef.tooltipField && _exists(data)) {\r\n        return _getValueUsingField(data, colDef.tooltipField, column.isTooltipFieldContainsDots());\r\n      }\r\n      const valueGetter = colDef.tooltipValueGetter;\r\n      if (valueGetter) {\r\n        return valueGetter(\r\n          _addGridCommonParams(gos, {\r\n            location: \"cell\",\r\n            colDef: column.getColDef(),\r\n            column,\r\n            rowIndex: ctrl.cellPosition.rowIndex,\r\n            node: rowNode,\r\n            data: rowNode.data,\r\n            value: ctrl.value,\r\n            valueFormatted: ctrl.valueFormatted\r\n          })\r\n        );\r\n      }\r\n      return null;\r\n    };\r\n    const isTooltipWhenTruncated = _isShowTooltipWhenTruncated(gos);\r\n    if (!shouldDisplayTooltip) {\r\n      if (isTooltipWhenTruncated && !ctrl.isCellRenderer()) {\r\n        shouldDisplayTooltip = () => {\r\n          const isEditing2 = !!editSvc?.isEditing(ctrl);\r\n          const errorMessages = !isEditing2 && getEditErrorsForPosition(beans, ctrl, this.getLocaleTextFunc());\r\n          if (errorMessages) {\r\n            return true;\r\n          }\r\n          const isTooltipEnabled = column.isTooltipEnabled();\r\n          if (!isTooltipEnabled) {\r\n            return false;\r\n          }\r\n          const isElementOverflowing = _isElementOverflowingCallback(() => {\r\n            const eCell = ctrl.eGui;\r\n            return eCell.children.length === 0 ? eCell : eCell.querySelector(\".ag-cell-value\");\r\n          });\r\n          return !isEditing2 && isElementOverflowing();\r\n        };\r\n      } else {\r\n        shouldDisplayTooltip = () => !editSvc?.isEditing(ctrl);\r\n      }\r\n    }\r\n    const tooltipCtrl = {\r\n      getColumn: () => column,\r\n      getColDef: () => column.getColDef(),\r\n      getRowIndex: () => ctrl.cellPosition.rowIndex,\r\n      getRowNode: () => rowNode,\r\n      getGui: () => ctrl.eGui,\r\n      getLocation: () => location,\r\n      getTooltipValue: value != null ? () => value : getTooltipValue,\r\n      // this makes no sense, why is the cell formatted value passed to the tooltip???\r\n      getValueFormatted: () => ctrl.valueFormatted,\r\n      shouldDisplayTooltip\r\n    };\r\n    return this.createTooltipFeature(tooltipCtrl, beans);\r\n  }\r\n  setupFullWidthRowTooltip(existingTooltipFeature, ctrl, value, shouldDisplayTooltip) {\r\n    const tooltipParams = {\r\n      getGui: () => ctrl.getFullWidthElement(),\r\n      getTooltipValue: () => value,\r\n      getLocation: () => \"fullWidthRow\",\r\n      shouldDisplayTooltip\r\n    };\r\n    const beans = this.beans;\r\n    const context = beans.context;\r\n    if (existingTooltipFeature) {\r\n      ctrl.destroyBean(existingTooltipFeature, context);\r\n    }\r\n    const tooltipFeature = this.createTooltipFeature(tooltipParams, beans);\r\n    if (!tooltipFeature) {\r\n      return;\r\n    }\r\n    return ctrl.createBean(tooltipFeature, context);\r\n  }\r\n  setupCellEditorTooltip(cellCtrl, editor) {\r\n    const { beans } = this;\r\n    const { context } = beans;\r\n    const el = editor.getValidationElement?.(true) || !editor.isPopup?.() && cellCtrl.eGui;\r\n    if (!el) {\r\n      return;\r\n    }\r\n    const tooltipParams = {\r\n      getGui: () => el,\r\n      getTooltipValue: () => getEditErrorsForPosition(beans, cellCtrl, this.getLocaleTextFunc()),\r\n      getLocation: () => \"cellEditor\",\r\n      shouldDisplayTooltip: () => {\r\n        const { editModelSvc } = beans;\r\n        const rowValidationMap = editModelSvc?.getRowValidationModel()?.getRowValidationMap();\r\n        const cellValidationMap = editModelSvc?.getCellValidationModel()?.getCellValidationMap();\r\n        const hasRowValidationErrors = !!rowValidationMap && rowValidationMap.size > 0;\r\n        const hasCellValidationErrors = !!cellValidationMap && cellValidationMap.size > 0;\r\n        return hasRowValidationErrors || hasCellValidationErrors;\r\n      }\r\n    };\r\n    const tooltipFeature = this.createTooltipFeature(tooltipParams, beans);\r\n    if (!tooltipFeature) {\r\n      return;\r\n    }\r\n    return cellCtrl.createBean(tooltipFeature, context);\r\n  }\r\n  initCol(column) {\r\n    const { colDef } = column;\r\n    column.tooltipEnabled = _exists(colDef.tooltipField) || _exists(colDef.tooltipValueGetter) || _exists(colDef.tooltipComponent);\r\n  }\r\n  createTooltipFeature(tooltipCtrl, beans) {\r\n    return this.beans.registry.createDynamicBean(\"tooltipFeature\", false, tooltipCtrl, beans);\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/tooltip/tooltipModule.ts\r\nvar TooltipModule = {\r\n  moduleName: \"Tooltip\",\r\n  version: VERSION,\r\n  beans: [TooltipService],\r\n  dynamicBeans: {\r\n    tooltipFeature: TooltipFeature\r\n  },\r\n  userComponents: {\r\n    agTooltipComponent: TooltipComponent2\r\n  },\r\n  dependsOn: [PopupModule],\r\n  css: [tooltipCSS]\r\n};\r\n\r\n// packages/ag-grid-community/src/undoRedo/undoRedoStack.ts\r\nvar UndoRedoAction = class {\r\n  constructor(cellValueChanges) {\r\n    this.cellValueChanges = cellValueChanges;\r\n  }\r\n};\r\nvar RangeUndoRedoAction = class extends UndoRedoAction {\r\n  constructor(cellValueChanges, initialRange, finalRange, ranges) {\r\n    super(cellValueChanges);\r\n    this.initialRange = initialRange;\r\n    this.finalRange = finalRange;\r\n    this.ranges = ranges;\r\n  }\r\n};\r\nvar DEFAULT_STACK_SIZE = 10;\r\nvar UndoRedoStack = class {\r\n  constructor(maxStackSize) {\r\n    this.actionStack = [];\r\n    this.maxStackSize = maxStackSize ? maxStackSize : DEFAULT_STACK_SIZE;\r\n    this.actionStack = new Array(this.maxStackSize);\r\n  }\r\n  pop() {\r\n    return this.actionStack.pop();\r\n  }\r\n  push(item) {\r\n    const shouldAddActions = item.cellValueChanges && item.cellValueChanges.length > 0;\r\n    if (!shouldAddActions) {\r\n      return;\r\n    }\r\n    if (this.actionStack.length === this.maxStackSize) {\r\n      this.actionStack.shift();\r\n    }\r\n    this.actionStack.push(item);\r\n  }\r\n  clear() {\r\n    this.actionStack = [];\r\n  }\r\n  getCurrentStackSize() {\r\n    return this.actionStack.length;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/undoRedo/undoRedoService.ts\r\nvar UndoRedoService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"undoRedo\";\r\n    this.cellValueChanges = [];\r\n    this.activeCellEdit = null;\r\n    this.activeRowEdit = null;\r\n    this.isPasting = false;\r\n    this.isRangeInAction = false;\r\n    this.batchEditing = false;\r\n    this.bulkEditing = false;\r\n    this.onCellValueChanged = (event) => {\r\n      const eventCell = { column: event.column, rowIndex: event.rowIndex, rowPinned: event.rowPinned };\r\n      const isCellEditing = this.activeCellEdit !== null && _areCellsEqual(this.activeCellEdit, eventCell);\r\n      const isRowEditing = this.activeRowEdit !== null && _isSameRow(this.activeRowEdit, eventCell);\r\n      const shouldCaptureAction = isCellEditing || isRowEditing || this.isPasting || this.isRangeInAction;\r\n      if (!shouldCaptureAction) {\r\n        return;\r\n      }\r\n      const { rowPinned, rowIndex, column, oldValue, value } = event;\r\n      const cellValueChange = {\r\n        rowPinned,\r\n        rowIndex,\r\n        columnId: column.getColId(),\r\n        newValue: value,\r\n        oldValue\r\n      };\r\n      this.cellValueChanges.push(cellValueChange);\r\n    };\r\n    this.clearStacks = () => {\r\n      this.undoStack.clear();\r\n      this.redoStack.clear();\r\n    };\r\n  }\r\n  postConstruct() {\r\n    const { gos, ctrlsSvc } = this.beans;\r\n    if (!gos.get(\"undoRedoCellEditing\")) {\r\n      return;\r\n    }\r\n    const undoRedoLimit = gos.get(\"undoRedoCellEditingLimit\");\r\n    if (undoRedoLimit <= 0) {\r\n      return;\r\n    }\r\n    this.undoStack = new UndoRedoStack(undoRedoLimit);\r\n    this.redoStack = new UndoRedoStack(undoRedoLimit);\r\n    this.addListeners();\r\n    const listener = this.clearStacks.bind(this);\r\n    this.addManagedEventListeners({\r\n      cellValueChanged: this.onCellValueChanged.bind(this),\r\n      // undo / redo is restricted to actual editing so we clear the stacks when other operations are\r\n      // performed that change the order of the row / cols.\r\n      modelUpdated: (e) => {\r\n        if (!e.keepUndoRedoStack) {\r\n          this.clearStacks();\r\n        }\r\n      },\r\n      columnPivotModeChanged: listener,\r\n      newColumnsLoaded: listener,\r\n      columnGroupOpened: listener,\r\n      columnRowGroupChanged: listener,\r\n      columnMoved: listener,\r\n      columnPinned: listener,\r\n      columnVisible: listener,\r\n      rowDragEnd: listener\r\n    });\r\n    ctrlsSvc.whenReady(this, (p) => {\r\n      this.gridBodyCtrl = p.gridBodyCtrl;\r\n    });\r\n  }\r\n  getCurrentUndoStackSize() {\r\n    return this.undoStack?.getCurrentStackSize() ?? 0;\r\n  }\r\n  getCurrentRedoStackSize() {\r\n    return this.redoStack?.getCurrentStackSize() ?? 0;\r\n  }\r\n  undo(source) {\r\n    const { eventSvc, undoStack, redoStack } = this;\r\n    eventSvc.dispatchEvent({\r\n      type: \"undoStarted\",\r\n      source\r\n    });\r\n    const operationPerformed = this.undoRedo(undoStack, redoStack, \"initialRange\", \"oldValue\", \"undo\");\r\n    eventSvc.dispatchEvent({\r\n      type: \"undoEnded\",\r\n      source,\r\n      operationPerformed\r\n    });\r\n  }\r\n  redo(source) {\r\n    const { eventSvc, undoStack, redoStack } = this;\r\n    eventSvc.dispatchEvent({\r\n      type: \"redoStarted\",\r\n      source\r\n    });\r\n    const operationPerformed = this.undoRedo(redoStack, undoStack, \"finalRange\", \"newValue\", \"redo\");\r\n    eventSvc.dispatchEvent({\r\n      type: \"redoEnded\",\r\n      source,\r\n      operationPerformed\r\n    });\r\n  }\r\n  undoRedo(undoRedoStack, opposingUndoRedoStack, rangeProperty, cellValueChangeProperty, source) {\r\n    if (!undoRedoStack) {\r\n      return false;\r\n    }\r\n    const undoRedoAction = undoRedoStack.pop();\r\n    if (!undoRedoAction || !undoRedoAction.cellValueChanges) {\r\n      return false;\r\n    }\r\n    this.processAction(\r\n      undoRedoAction,\r\n      (cellValueChange) => cellValueChange[cellValueChangeProperty],\r\n      source\r\n    );\r\n    if (undoRedoAction instanceof RangeUndoRedoAction) {\r\n      this.processRange(undoRedoAction.ranges || [undoRedoAction[rangeProperty]]);\r\n    } else {\r\n      this.processCell(undoRedoAction.cellValueChanges);\r\n    }\r\n    opposingUndoRedoStack.push(undoRedoAction);\r\n    return true;\r\n  }\r\n  processAction(action, valueExtractor, source) {\r\n    action.cellValueChanges.forEach((cellValueChange) => {\r\n      const { rowIndex, rowPinned, columnId } = cellValueChange;\r\n      const rowPosition = { rowIndex, rowPinned };\r\n      const currentRow = _getRowNode(this.beans, rowPosition);\r\n      if (!currentRow.displayed) {\r\n        return;\r\n      }\r\n      currentRow.setDataValue(columnId, valueExtractor(cellValueChange), source);\r\n    });\r\n  }\r\n  processRange(ranges) {\r\n    let lastFocusedCell;\r\n    const rangeSvc = this.beans.rangeSvc;\r\n    rangeSvc.removeAllCellRanges(true);\r\n    ranges.forEach((range, idx) => {\r\n      if (!range) {\r\n        return;\r\n      }\r\n      const startRow = range.startRow;\r\n      const endRow = range.endRow;\r\n      if (idx === ranges.length - 1) {\r\n        lastFocusedCell = {\r\n          rowPinned: startRow.rowPinned,\r\n          rowIndex: startRow.rowIndex,\r\n          columnId: range.startColumn.getColId()\r\n        };\r\n        this.setLastFocusedCell(lastFocusedCell);\r\n      }\r\n      const cellRangeParams = {\r\n        rowStartIndex: startRow.rowIndex,\r\n        rowStartPinned: startRow.rowPinned,\r\n        rowEndIndex: endRow.rowIndex,\r\n        rowEndPinned: endRow.rowPinned,\r\n        columnStart: range.startColumn,\r\n        columns: range.columns\r\n      };\r\n      rangeSvc.addCellRange(cellRangeParams);\r\n    });\r\n  }\r\n  processCell(cellValueChanges) {\r\n    const cellValueChange = cellValueChanges[0];\r\n    const { rowIndex, rowPinned } = cellValueChange;\r\n    const rowPosition = { rowIndex, rowPinned };\r\n    const row = _getRowNode(this.beans, rowPosition);\r\n    const lastFocusedCell = {\r\n      rowPinned: cellValueChange.rowPinned,\r\n      rowIndex: row.rowIndex,\r\n      columnId: cellValueChange.columnId\r\n    };\r\n    this.setLastFocusedCell(lastFocusedCell);\r\n  }\r\n  setLastFocusedCell(lastFocusedCell) {\r\n    const { rowIndex, columnId, rowPinned } = lastFocusedCell;\r\n    const { colModel, focusSvc, rangeSvc } = this.beans;\r\n    const column = colModel.getCol(columnId);\r\n    if (!column) {\r\n      return;\r\n    }\r\n    const { scrollFeature } = this.gridBodyCtrl;\r\n    scrollFeature.ensureIndexVisible(rowIndex);\r\n    scrollFeature.ensureColumnVisible(column);\r\n    const cellPosition = { rowIndex, column, rowPinned };\r\n    focusSvc.setFocusedCell({ ...cellPosition, forceBrowserFocus: true });\r\n    rangeSvc?.setRangeToCell(cellPosition);\r\n  }\r\n  addListeners() {\r\n    this.addManagedEventListeners({\r\n      rowEditingStarted: (e) => {\r\n        this.activeRowEdit = { rowIndex: e.rowIndex, rowPinned: e.rowPinned };\r\n      },\r\n      rowEditingStopped: () => {\r\n        const action = new UndoRedoAction(this.cellValueChanges);\r\n        this.pushActionsToUndoStack(action);\r\n        this.activeRowEdit = null;\r\n      },\r\n      cellEditingStarted: (e) => {\r\n        this.activeCellEdit = { column: e.column, rowIndex: e.rowIndex, rowPinned: e.rowPinned };\r\n      },\r\n      cellEditingStopped: (e) => {\r\n        this.activeCellEdit = null;\r\n        const shouldPushAction = e.valueChanged && !this.activeRowEdit && !this.isPasting && !this.isRangeInAction;\r\n        if (shouldPushAction) {\r\n          const action = new UndoRedoAction(this.cellValueChanges);\r\n          this.pushActionsToUndoStack(action);\r\n        }\r\n      },\r\n      pasteStart: () => {\r\n        this.isPasting = true;\r\n      },\r\n      pasteEnd: () => {\r\n        const action = new UndoRedoAction(this.cellValueChanges);\r\n        this.pushActionsToUndoStack(action);\r\n        this.isPasting = false;\r\n      },\r\n      fillStart: () => {\r\n        this.isRangeInAction = true;\r\n      },\r\n      fillEnd: (event) => {\r\n        const action = new RangeUndoRedoAction(this.cellValueChanges, event.initialRange, event.finalRange);\r\n        this.pushActionsToUndoStack(action);\r\n        this.isRangeInAction = false;\r\n      },\r\n      keyShortcutChangedCellStart: () => {\r\n        this.isRangeInAction = true;\r\n      },\r\n      keyShortcutChangedCellEnd: () => {\r\n        let action;\r\n        const { rangeSvc, gos } = this.beans;\r\n        if (rangeSvc && _isCellSelectionEnabled(gos)) {\r\n          action = new RangeUndoRedoAction(this.cellValueChanges, void 0, void 0, [\r\n            ...rangeSvc.getCellRanges()\r\n          ]);\r\n        } else {\r\n          action = new UndoRedoAction(this.cellValueChanges);\r\n        }\r\n        this.pushActionsToUndoStack(action);\r\n        this.isRangeInAction = false;\r\n      },\r\n      batchEditingStarted: () => this.startBigChange(\"batchEditing\"),\r\n      batchEditingStopped: ({ changes }) => this.stopBigChange(\"batchEditing\", changes),\r\n      bulkEditingStarted: () => this.startBigChange(\"bulkEditing\"),\r\n      bulkEditingStopped: ({ changes }) => this.stopBigChange(\"bulkEditing\", changes)\r\n    });\r\n  }\r\n  startBigChange(key) {\r\n    this[key] = true;\r\n  }\r\n  stopBigChange(key, changes) {\r\n    if (!this[key]) {\r\n      return;\r\n    }\r\n    this[key] = false;\r\n    if (changes?.length === 0) {\r\n      return;\r\n    }\r\n    const action = new UndoRedoAction(changes ?? []);\r\n    this.pushActionsToUndoStack(action);\r\n    this.cellValueChanges = [];\r\n  }\r\n  pushActionsToUndoStack(action) {\r\n    this.undoStack.push(action);\r\n    this.cellValueChanges = [];\r\n    this.redoStack.clear();\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/edit/cell-editing.css-GENERATED.ts\r\nvar cellEditingCSS = (\r\n  /*css*/\r\n  `.ag-cell-inline-editing{border:var(--ag-cell-editing-border)!important;border-radius:var(--ag-border-radius);box-shadow:var(--ag-cell-editing-shadow);padding:0;z-index:1;.ag-cell-edit-wrapper,.ag-cell-editor,.ag-cell-wrapper,:where(.ag-cell-editor) .ag-input-field-input,:where(.ag-cell-editor) .ag-wrapper{height:100%;line-height:normal;min-height:100%;width:100%}&.ag-cell-editing-error{border-color:var(--ag-invalid-color)!important}}:where(.ag-popup-editor) .ag-large-text{background-color:var(--ag-background-color);border-radius:var(--ag-border-radius);box-shadow:var(--ag-dropdown-shadow);padding:0}.ag-large-text-input{height:auto;padding:var(--ag-cell-horizontal-padding)}:where(.ag-rtl .ag-large-text-input) textarea{resize:none}:where(.ag-ltr) .ag-checkbox-edit{padding-left:var(--ag-cell-horizontal-padding)}:where(.ag-rtl) .ag-checkbox-edit{padding-right:var(--ag-cell-horizontal-padding)}:where(.ag-row.ag-row-editing-invalid .ag-cell-inline-editing){opacity:.8}`\r\n);\r\n\r\n// packages/ag-grid-community/src/edit/cellEditors/checkboxCellEditor.ts\r\nvar CheckboxCellEditorElement = {\r\n  tag: \"div\",\r\n  cls: \"ag-cell-wrapper ag-cell-edit-wrapper ag-checkbox-edit\",\r\n  children: [\r\n    {\r\n      tag: \"ag-checkbox\",\r\n      ref: \"eEditor\",\r\n      role: \"presentation\"\r\n    }\r\n  ]\r\n};\r\nvar CheckboxCellEditor = class extends AgAbstractCellEditor {\r\n  constructor() {\r\n    super(CheckboxCellEditorElement, [AgCheckboxSelector]);\r\n    this.eEditor = RefPlaceholder;\r\n  }\r\n  initialiseEditor(params) {\r\n    const isSelected = params.value ?? void 0;\r\n    const eEditor = this.eEditor;\r\n    eEditor.setValue(isSelected);\r\n    const inputEl = eEditor.getInputElement();\r\n    inputEl.setAttribute(\"tabindex\", \"-1\");\r\n    this.setAriaLabel(isSelected);\r\n    this.addManagedListeners(eEditor, {\r\n      fieldValueChanged: (event) => this.setAriaLabel(event.selected)\r\n    });\r\n  }\r\n  getValue() {\r\n    return this.eEditor.getValue();\r\n  }\r\n  focusIn() {\r\n    this.eEditor.getFocusableElement().focus();\r\n  }\r\n  afterGuiAttached() {\r\n    if (this.params.cellStartedEdit) {\r\n      this.focusIn();\r\n    }\r\n  }\r\n  isPopup() {\r\n    return false;\r\n  }\r\n  setAriaLabel(isSelected) {\r\n    const translate = this.getLocaleTextFunc();\r\n    const stateName = _getAriaCheckboxStateName(translate, isSelected);\r\n    const ariaLabel = translate(\"ariaToggleCellValue\", \"Press SPACE to toggle cell value\");\r\n    this.eEditor.setInputAriaLabel(`${ariaLabel} (${stateName})`);\r\n  }\r\n  getValidationElement(tooltip) {\r\n    return tooltip ? this.params.eGridCell : this.eEditor.getInputElement();\r\n  }\r\n  getValidationErrors() {\r\n    const { params } = this;\r\n    const { getValidationErrors } = params;\r\n    const value = this.getValue();\r\n    if (!getValidationErrors) {\r\n      return null;\r\n    }\r\n    return getValidationErrors({\r\n      value,\r\n      internalErrors: null,\r\n      cellEditorParams: params\r\n    });\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/edit/cellEditors/simpleCellEditor.ts\r\nvar SimpleCellEditor = class extends AgAbstractCellEditor {\r\n  constructor(cellEditorInput) {\r\n    super();\r\n    this.cellEditorInput = cellEditorInput;\r\n    this.eEditor = RefPlaceholder;\r\n  }\r\n  initialiseEditor(params) {\r\n    const { cellEditorInput } = this;\r\n    this.setTemplate(\r\n      { tag: \"div\", cls: \"ag-cell-edit-wrapper\", children: [cellEditorInput.getTemplate()] },\r\n      cellEditorInput.getAgComponents()\r\n    );\r\n    const { eEditor } = this;\r\n    const { cellStartedEdit, eventKey, suppressPreventDefault } = params;\r\n    eEditor.getInputElement().setAttribute(\"title\", \"\");\r\n    cellEditorInput.init(eEditor, params);\r\n    let startValue;\r\n    let shouldSetStartValue = true;\r\n    if (cellStartedEdit) {\r\n      this.focusAfterAttached = true;\r\n      if (eventKey === KeyCode.BACKSPACE || eventKey === KeyCode.DELETE) {\r\n        startValue = \"\";\r\n      } else if (eventKey && eventKey.length === 1) {\r\n        if (suppressPreventDefault) {\r\n          shouldSetStartValue = false;\r\n        } else {\r\n          startValue = eventKey;\r\n        }\r\n      } else {\r\n        startValue = cellEditorInput.getStartValue();\r\n        if (eventKey !== KeyCode.F2) {\r\n          this.highlightAllOnFocus = true;\r\n        }\r\n      }\r\n    } else {\r\n      this.focusAfterAttached = false;\r\n      startValue = cellEditorInput.getStartValue();\r\n    }\r\n    if (shouldSetStartValue && startValue != null) {\r\n      eEditor.setStartValue(startValue);\r\n    }\r\n    this.addGuiEventListener(\"keydown\", (event) => {\r\n      const { key } = event;\r\n      if (key === KeyCode.PAGE_UP || key === KeyCode.PAGE_DOWN) {\r\n        event.preventDefault();\r\n      }\r\n    });\r\n  }\r\n  afterGuiAttached() {\r\n    const translate = this.getLocaleTextFunc();\r\n    const eInput = this.eEditor;\r\n    eInput.setInputAriaLabel(translate(\"ariaInputEditor\", \"Input Editor\"));\r\n    if (!this.focusAfterAttached) {\r\n      return;\r\n    }\r\n    if (!_isBrowserSafari()) {\r\n      eInput.getFocusableElement().focus();\r\n    }\r\n    const inputEl = eInput.getInputElement();\r\n    if (this.highlightAllOnFocus) {\r\n      inputEl.select();\r\n    } else {\r\n      this.cellEditorInput.setCaret?.();\r\n    }\r\n  }\r\n  // gets called when tabbing through cells and in full row edit mode\r\n  focusIn() {\r\n    const { eEditor } = this;\r\n    const focusEl = eEditor.getFocusableElement();\r\n    const inputEl = eEditor.getInputElement();\r\n    focusEl.focus();\r\n    inputEl.select();\r\n  }\r\n  getValue() {\r\n    return this.cellEditorInput.getValue();\r\n  }\r\n  isPopup() {\r\n    return false;\r\n  }\r\n  getValidationElement() {\r\n    return this.eEditor.getInputElement();\r\n  }\r\n  getValidationErrors() {\r\n    return this.cellEditorInput.getValidationErrors();\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/edit/cellEditors/dateCellEditor.ts\r\nvar DateCellElement = {\r\n  tag: \"ag-input-date-field\",\r\n  ref: \"eEditor\",\r\n  cls: \"ag-cell-editor\"\r\n};\r\nvar DateCellEditorInput = class {\r\n  constructor(getDataTypeService, getLocaleTextFunc) {\r\n    this.getDataTypeService = getDataTypeService;\r\n    this.getLocaleTextFunc = getLocaleTextFunc;\r\n  }\r\n  getTemplate() {\r\n    return DateCellElement;\r\n  }\r\n  getAgComponents() {\r\n    return [AgInputDateFieldSelector];\r\n  }\r\n  init(eEditor, params) {\r\n    this.eEditor = eEditor;\r\n    this.params = params;\r\n    const { min, max, step, colDef } = params;\r\n    if (min != null) {\r\n      eEditor.setMin(min);\r\n    }\r\n    if (max != null) {\r\n      eEditor.setMax(max);\r\n    }\r\n    if (step != null) {\r\n      eEditor.setStep(step);\r\n    }\r\n    this.includeTime = params.includeTime ?? this.getDataTypeService()?.getDateIncludesTimeFlag?.(colDef.cellDataType);\r\n    if (this.includeTime != null) {\r\n      eEditor.setIncludeTime(this.includeTime);\r\n    }\r\n  }\r\n  getValidationErrors() {\r\n    const eInput = this.eEditor.getInputElement();\r\n    const value = eInput.valueAsDate;\r\n    const { params } = this;\r\n    const { min, max, getValidationErrors } = params;\r\n    let internalErrors = [];\r\n    const translate = this.getLocaleTextFunc();\r\n    if (value instanceof Date && !isNaN(value.getTime())) {\r\n      if (min) {\r\n        const minValue = min instanceof Date ? min : new Date(min);\r\n        if (value < minValue) {\r\n          const minDateString = minValue.toLocaleDateString();\r\n          internalErrors.push(\r\n            translate(\"minDateValidation\", `Date must be after ${minDateString}`, [minDateString])\r\n          );\r\n        }\r\n      }\r\n      if (max) {\r\n        const maxValue = max instanceof Date ? max : new Date(max);\r\n        if (value > maxValue) {\r\n          const maxDateString = maxValue.toLocaleDateString();\r\n          internalErrors.push(\r\n            translate(\"maxDateValidation\", `Date must be before ${maxDateString}`, [maxDateString])\r\n          );\r\n        }\r\n      }\r\n    }\r\n    if (!internalErrors.length) {\r\n      internalErrors = null;\r\n    }\r\n    if (getValidationErrors) {\r\n      return getValidationErrors({ value, cellEditorParams: params, internalErrors });\r\n    }\r\n    return internalErrors;\r\n  }\r\n  getValue() {\r\n    const { eEditor, params } = this;\r\n    const value = eEditor.getDate();\r\n    if (!_exists(value) && !_exists(params.value)) {\r\n      return params.value;\r\n    }\r\n    return value ?? null;\r\n  }\r\n  getStartValue() {\r\n    const { value } = this.params;\r\n    if (!(value instanceof Date)) {\r\n      return void 0;\r\n    }\r\n    return _serialiseDate(value, this.includeTime ?? false);\r\n  }\r\n};\r\nvar DateCellEditor = class extends SimpleCellEditor {\r\n  constructor() {\r\n    super(\r\n      new DateCellEditorInput(\r\n        () => this.beans.dataTypeSvc,\r\n        () => this.getLocaleTextFunc()\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/edit/cellEditors/dateStringCellEditor.ts\r\nvar DateStringCellElement = {\r\n  tag: \"ag-input-date-field\",\r\n  ref: \"eEditor\",\r\n  cls: \"ag-cell-editor\"\r\n};\r\nvar DateStringCellEditorInput = class {\r\n  constructor(getDataTypeService, getLocaleTextFunc) {\r\n    this.getDataTypeService = getDataTypeService;\r\n    this.getLocaleTextFunc = getLocaleTextFunc;\r\n  }\r\n  getTemplate() {\r\n    return DateStringCellElement;\r\n  }\r\n  getAgComponents() {\r\n    return [AgInputDateFieldSelector];\r\n  }\r\n  init(eEditor, params) {\r\n    this.eEditor = eEditor;\r\n    this.params = params;\r\n    const { min, max, step, colDef } = params;\r\n    if (min != null) {\r\n      eEditor.setMin(min);\r\n    }\r\n    if (max != null) {\r\n      eEditor.setMax(max);\r\n    }\r\n    if (step != null) {\r\n      eEditor.setStep(step);\r\n    }\r\n    this.includeTime = params.includeTime ?? this.getDataTypeService()?.getDateIncludesTimeFlag?.(colDef.cellDataType);\r\n    if (this.includeTime != null) {\r\n      eEditor.setIncludeTime(this.includeTime);\r\n    }\r\n  }\r\n  getValidationErrors() {\r\n    const { eEditor, params } = this;\r\n    const raw = eEditor.getInputElement().value;\r\n    const value = this.formatDate(this.parseDate(raw ?? void 0));\r\n    const { min, max, getValidationErrors } = params;\r\n    let internalErrors = [];\r\n    if (value) {\r\n      const date = new Date(value);\r\n      const translate = this.getLocaleTextFunc();\r\n      if (min) {\r\n        const minDate = new Date(min);\r\n        if (date < minDate) {\r\n          const minDateString = minDate.toLocaleDateString();\r\n          internalErrors.push(\r\n            translate(\"minDateValidation\", `Date must be after ${minDateString}`, [minDateString])\r\n          );\r\n        }\r\n      }\r\n      if (max) {\r\n        const maxDate = new Date(max);\r\n        if (date > maxDate) {\r\n          const maxDateString = maxDate.toLocaleDateString();\r\n          internalErrors.push(\r\n            translate(\"maxDateValidation\", `Date must be before ${maxDateString}`, [maxDateString])\r\n          );\r\n        }\r\n      }\r\n    }\r\n    if (!internalErrors.length) {\r\n      internalErrors = null;\r\n    }\r\n    if (getValidationErrors) {\r\n      return getValidationErrors({\r\n        value: this.getValue(),\r\n        cellEditorParams: params,\r\n        internalErrors\r\n      });\r\n    }\r\n    return internalErrors;\r\n  }\r\n  getValue() {\r\n    const { params, eEditor } = this;\r\n    const value = this.formatDate(eEditor.getDate());\r\n    if (!_exists(value) && !_exists(params.value)) {\r\n      return params.value;\r\n    }\r\n    return params.parseValue(value ?? \"\");\r\n  }\r\n  getStartValue() {\r\n    return _serialiseDate(this.parseDate(this.params.value ?? void 0) ?? null, this.includeTime ?? false);\r\n  }\r\n  parseDate(value) {\r\n    const dataTypeSvc = this.getDataTypeService();\r\n    return dataTypeSvc ? dataTypeSvc.getDateParserFunction(this.params.column)(value) : _parseDateTimeFromString(value) ?? void 0;\r\n  }\r\n  formatDate(value) {\r\n    const dataTypeSvc = this.getDataTypeService();\r\n    return dataTypeSvc ? dataTypeSvc.getDateFormatterFunction(this.params.column)(value) : _serialiseDate(value ?? null, this.includeTime ?? false) ?? void 0;\r\n  }\r\n};\r\nvar DateStringCellEditor = class extends SimpleCellEditor {\r\n  constructor() {\r\n    super(\r\n      new DateStringCellEditorInput(\r\n        () => this.beans.dataTypeSvc,\r\n        () => this.getLocaleTextFunc()\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/edit/cellEditors/largeTextCellEditor.ts\r\nvar LargeTextCellElement = {\r\n  tag: \"div\",\r\n  cls: \"ag-large-text\",\r\n  children: [\r\n    {\r\n      tag: \"ag-input-text-area\",\r\n      ref: \"eEditor\",\r\n      cls: \"ag-large-text-input\"\r\n    }\r\n  ]\r\n};\r\nvar LargeTextCellEditor = class extends AgAbstractCellEditor {\r\n  constructor() {\r\n    super(LargeTextCellElement, [AgInputTextAreaSelector]);\r\n    this.eEditor = RefPlaceholder;\r\n  }\r\n  initialiseEditor(params) {\r\n    const { eEditor } = this;\r\n    const { cellStartedEdit, eventKey, value, maxLength, cols, rows } = params;\r\n    this.focusAfterAttached = cellStartedEdit;\r\n    eEditor.getInputElement().setAttribute(\"title\", \"\");\r\n    eEditor.setMaxLength(maxLength || 200).setCols(cols || 60).setRows(rows || 10);\r\n    let startValue;\r\n    if (cellStartedEdit) {\r\n      this.focusAfterAttached = true;\r\n      if (eventKey === KeyCode.BACKSPACE || eventKey === KeyCode.DELETE) {\r\n        startValue = \"\";\r\n      } else if (eventKey && eventKey.length === 1) {\r\n        startValue = eventKey;\r\n      } else {\r\n        startValue = value.toString();\r\n        if (eventKey !== KeyCode.F2) {\r\n          this.highlightAllOnFocus = true;\r\n        }\r\n      }\r\n    } else {\r\n      this.focusAfterAttached = false;\r\n      startValue = value.toString();\r\n    }\r\n    if (startValue != null) {\r\n      eEditor.setValue(startValue, true);\r\n    }\r\n    this.addGuiEventListener(\"keydown\", this.onKeyDown.bind(this));\r\n    this.activateTabIndex();\r\n  }\r\n  onKeyDown(event) {\r\n    const key = event.key;\r\n    if (key === KeyCode.LEFT || key === KeyCode.UP || key === KeyCode.RIGHT || key === KeyCode.DOWN || event.shiftKey && key === KeyCode.ENTER) {\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n  afterGuiAttached() {\r\n    const { eEditor, focusAfterAttached, highlightAllOnFocus } = this;\r\n    const translate = this.getLocaleTextFunc();\r\n    eEditor.setInputAriaLabel(translate(\"ariaInputEditor\", \"Input Editor\"));\r\n    if (focusAfterAttached) {\r\n      eEditor.getFocusableElement().focus();\r\n      if (highlightAllOnFocus) {\r\n        eEditor.getInputElement().select();\r\n      }\r\n    }\r\n  }\r\n  getValue() {\r\n    const { eEditor, params } = this;\r\n    const { value } = params;\r\n    const editorValue = eEditor.getValue();\r\n    if (!_exists(editorValue) && !_exists(value)) {\r\n      return value;\r\n    }\r\n    return params.parseValue(editorValue);\r\n  }\r\n  getValidationElement() {\r\n    return this.eEditor.getInputElement();\r\n  }\r\n  getValidationErrors() {\r\n    const { params } = this;\r\n    const { maxLength, getValidationErrors } = params;\r\n    const translate = this.getLocaleTextFunc();\r\n    const value = this.getValue();\r\n    let internalErrors = [];\r\n    if (typeof value === \"string\" && maxLength != null && value.length > maxLength) {\r\n      internalErrors.push(\r\n        translate(\"maxLengthValidation\", `Must be ${maxLength} characters or fewer.`, [String(maxLength)])\r\n      );\r\n    }\r\n    if (!internalErrors.length) {\r\n      internalErrors = null;\r\n    }\r\n    if (getValidationErrors) {\r\n      return getValidationErrors({\r\n        value,\r\n        internalErrors,\r\n        cellEditorParams: params\r\n      });\r\n    }\r\n    return internalErrors;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/edit/cellEditors/numberCellEditor.ts\r\nvar NumberCellElement = {\r\n  tag: \"ag-input-number-field\",\r\n  ref: \"eEditor\",\r\n  cls: \"ag-cell-editor\"\r\n};\r\nvar NumberCellEditorInput = class {\r\n  constructor(getLocaleTextFunc) {\r\n    this.getLocaleTextFunc = getLocaleTextFunc;\r\n  }\r\n  getTemplate() {\r\n    return NumberCellElement;\r\n  }\r\n  getAgComponents() {\r\n    return [AgInputNumberFieldSelector];\r\n  }\r\n  init(eEditor, params) {\r\n    this.eEditor = eEditor;\r\n    this.params = params;\r\n    const { max, min, precision, step } = params;\r\n    if (max != null) {\r\n      eEditor.setMax(max);\r\n    }\r\n    if (min != null) {\r\n      eEditor.setMin(min);\r\n    }\r\n    if (precision != null) {\r\n      eEditor.setPrecision(precision);\r\n    }\r\n    if (step != null) {\r\n      eEditor.setStep(step);\r\n    }\r\n    const editorEl = eEditor.getInputElement();\r\n    if (params.preventStepping) {\r\n      eEditor.addManagedElementListeners(editorEl, { keydown: this.preventStepping });\r\n    } else if (params.showStepperButtons) {\r\n      editorEl.classList.add(\"ag-number-field-input-stepper\");\r\n    }\r\n  }\r\n  getValidationErrors() {\r\n    const { params } = this;\r\n    const { min, max, getValidationErrors } = params;\r\n    const eInput = this.eEditor.getInputElement();\r\n    const value = eInput.valueAsNumber;\r\n    const translate = this.getLocaleTextFunc();\r\n    let internalErrors = [];\r\n    if (typeof value === \"number\") {\r\n      if (min != null && value < min) {\r\n        internalErrors.push(\r\n          translate(\"minValueValidation\", `Must be greater than or equal to ${min}.`, [String(min)])\r\n        );\r\n      }\r\n      if (max != null && value > max) {\r\n        internalErrors.push(\r\n          translate(\"maxValueValidation\", `Must be less than or equal to ${max}.`, [String(max)])\r\n        );\r\n      }\r\n    }\r\n    if (!internalErrors.length) {\r\n      internalErrors = null;\r\n    }\r\n    if (getValidationErrors) {\r\n      return getValidationErrors({\r\n        value,\r\n        cellEditorParams: params,\r\n        internalErrors\r\n      });\r\n    }\r\n    return internalErrors;\r\n  }\r\n  preventStepping(e) {\r\n    if (e.key === KeyCode.UP || e.key === KeyCode.DOWN) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n  getValue() {\r\n    const { eEditor, params } = this;\r\n    const value = eEditor.getValue();\r\n    if (!_exists(value) && !_exists(params.value)) {\r\n      return params.value;\r\n    }\r\n    let parsedValue = params.parseValue(value);\r\n    if (parsedValue == null) {\r\n      return parsedValue;\r\n    }\r\n    if (typeof parsedValue === \"string\") {\r\n      if (parsedValue === \"\") {\r\n        return null;\r\n      }\r\n      parsedValue = Number(parsedValue);\r\n    }\r\n    return isNaN(parsedValue) ? null : parsedValue;\r\n  }\r\n  getStartValue() {\r\n    return this.params.value;\r\n  }\r\n  setCaret() {\r\n    if (_isBrowserSafari()) {\r\n      this.eEditor.getInputElement().focus({ preventScroll: true });\r\n    }\r\n  }\r\n};\r\nvar NumberCellEditor = class extends SimpleCellEditor {\r\n  constructor() {\r\n    super(new NumberCellEditorInput(() => this.getLocaleTextFunc()));\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/edit/cellEditors/selectCellEditor.ts\r\nvar SelectCellElement = {\r\n  tag: \"div\",\r\n  cls: \"ag-cell-edit-wrapper\",\r\n  children: [\r\n    {\r\n      tag: \"ag-select\",\r\n      ref: \"eEditor\",\r\n      cls: \"ag-cell-editor\"\r\n    }\r\n  ]\r\n};\r\nvar SelectCellEditor = class extends AgAbstractCellEditor {\r\n  constructor() {\r\n    super(SelectCellElement, [AgSelectSelector]);\r\n    this.eEditor = RefPlaceholder;\r\n    this.startedByEnter = false;\r\n  }\r\n  wireBeans(beans) {\r\n    this.valueSvc = beans.valueSvc;\r\n  }\r\n  initialiseEditor(params) {\r\n    this.focusAfterAttached = params.cellStartedEdit;\r\n    const { eEditor, valueSvc, gos } = this;\r\n    const { values, value, eventKey } = params;\r\n    if (_missing(values)) {\r\n      _warn(58);\r\n      return;\r\n    }\r\n    this.startedByEnter = eventKey != null ? eventKey === KeyCode.ENTER : false;\r\n    let hasValue = false;\r\n    values.forEach((currentValue) => {\r\n      const option = { value: currentValue };\r\n      const valueFormatted = valueSvc.formatValue(params.column, null, currentValue);\r\n      const valueFormattedExits = valueFormatted !== null && valueFormatted !== void 0;\r\n      option.text = valueFormattedExits ? valueFormatted : currentValue;\r\n      eEditor.addOption(option);\r\n      hasValue = hasValue || value === currentValue;\r\n    });\r\n    if (hasValue) {\r\n      eEditor.setValue(params.value, true);\r\n    } else if (params.values.length) {\r\n      eEditor.setValue(params.values[0], true);\r\n    }\r\n    const { valueListGap, valueListMaxWidth, valueListMaxHeight } = params;\r\n    if (valueListGap != null) {\r\n      eEditor.setPickerGap(valueListGap);\r\n    }\r\n    if (valueListMaxHeight != null) {\r\n      eEditor.setPickerMaxHeight(valueListMaxHeight);\r\n    }\r\n    if (valueListMaxWidth != null) {\r\n      eEditor.setPickerMaxWidth(valueListMaxWidth);\r\n    }\r\n    if (gos.get(\"editType\") !== \"fullRow\") {\r\n      this.addManagedListeners(this.eEditor, { selectedItem: () => params.stopEditing() });\r\n    }\r\n  }\r\n  afterGuiAttached() {\r\n    if (this.focusAfterAttached) {\r\n      this.eEditor.getFocusableElement().focus();\r\n    }\r\n    if (this.startedByEnter) {\r\n      setTimeout(() => {\r\n        if (this.isAlive()) {\r\n          this.eEditor.showPicker();\r\n        }\r\n      });\r\n    }\r\n  }\r\n  focusIn() {\r\n    this.eEditor.getFocusableElement().focus();\r\n  }\r\n  getValue() {\r\n    return this.eEditor.getValue();\r\n  }\r\n  isPopup() {\r\n    return false;\r\n  }\r\n  getValidationElement() {\r\n    return this.eEditor.getAriaElement();\r\n  }\r\n  getValidationErrors() {\r\n    const { params } = this;\r\n    const { values, getValidationErrors } = params;\r\n    const value = this.getValue();\r\n    let internalErrors = [];\r\n    if (values && !values.includes(value)) {\r\n      const translate = this.getLocaleTextFunc();\r\n      internalErrors.push(translate(\"invalidSelectionValidation\", \"Invalid selection.\"));\r\n    } else {\r\n      internalErrors = null;\r\n    }\r\n    if (getValidationErrors) {\r\n      return getValidationErrors({\r\n        value,\r\n        internalErrors,\r\n        cellEditorParams: params\r\n      });\r\n    }\r\n    return internalErrors;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/edit/cellEditors/textCellEditor.ts\r\nvar TextCellEditorElement = {\r\n  tag: \"ag-input-text-field\",\r\n  ref: \"eEditor\",\r\n  cls: \"ag-cell-editor\"\r\n};\r\nvar TextCellEditorInput = class {\r\n  constructor(getLocaleTextFunc) {\r\n    this.getLocaleTextFunc = getLocaleTextFunc;\r\n  }\r\n  getTemplate() {\r\n    return TextCellEditorElement;\r\n  }\r\n  getAgComponents() {\r\n    return [AgInputTextFieldSelector];\r\n  }\r\n  init(eEditor, params) {\r\n    this.eEditor = eEditor;\r\n    this.params = params;\r\n    const maxLength = params.maxLength;\r\n    if (maxLength != null) {\r\n      eEditor.setMaxLength(maxLength);\r\n    }\r\n  }\r\n  getValidationErrors() {\r\n    const { params } = this;\r\n    const { maxLength, getValidationErrors } = params;\r\n    const value = this.getValue();\r\n    const translate = this.getLocaleTextFunc();\r\n    let internalErrors = [];\r\n    if (maxLength != null && typeof value === \"string\" && value.length > maxLength) {\r\n      internalErrors.push(\r\n        translate(\"maxLengthValidation\", `Must be ${maxLength} characters or fewer.`, [String(maxLength)])\r\n      );\r\n    }\r\n    if (!internalErrors.length) {\r\n      internalErrors = null;\r\n    }\r\n    if (getValidationErrors) {\r\n      return getValidationErrors({ value, cellEditorParams: params, internalErrors });\r\n    }\r\n    return internalErrors;\r\n  }\r\n  getValue() {\r\n    const { eEditor, params } = this;\r\n    const value = eEditor.getValue();\r\n    if (!_exists(value) && !_exists(params.value)) {\r\n      return params.value;\r\n    }\r\n    return params.parseValue(value);\r\n  }\r\n  getStartValue() {\r\n    const params = this.params;\r\n    const formatValue = params.useFormatter || params.column.getColDef().refData;\r\n    return formatValue ? params.formatValue(params.value) : params.value;\r\n  }\r\n  setCaret() {\r\n    const eInput = this.eEditor;\r\n    const value = eInput.getValue();\r\n    const len = _exists(value) && value.length || 0;\r\n    if (len) {\r\n      eInput.getInputElement().setSelectionRange(len, len);\r\n    }\r\n  }\r\n};\r\nvar TextCellEditor = class extends SimpleCellEditor {\r\n  constructor() {\r\n    super(new TextCellEditorInput(() => this.getLocaleTextFunc()));\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/api/scrollApi.ts\r\nfunction getVerticalPixelRange(beans) {\r\n  return beans.ctrlsSvc.getScrollFeature().getVScrollPosition();\r\n}\r\nfunction getHorizontalPixelRange(beans) {\r\n  return beans.ctrlsSvc.getScrollFeature().getHScrollPosition();\r\n}\r\nfunction ensureColumnVisible(beans, key, position = \"auto\") {\r\n  beans.frameworkOverrides.wrapIncoming(\r\n    () => beans.ctrlsSvc.getScrollFeature().ensureColumnVisible(key, position),\r\n    \"ensureVisible\"\r\n  );\r\n}\r\nfunction ensureIndexVisible(beans, index, position) {\r\n  beans.frameworkOverrides.wrapIncoming(\r\n    () => beans.ctrlsSvc.getScrollFeature().ensureIndexVisible(index, position),\r\n    \"ensureVisible\"\r\n  );\r\n}\r\nfunction ensureNodeVisible(beans, nodeSelector, position = null) {\r\n  beans.frameworkOverrides.wrapIncoming(\r\n    () => beans.ctrlsSvc.getScrollFeature().ensureNodeVisible(nodeSelector, position),\r\n    \"ensureVisible\"\r\n  );\r\n}\r\n\r\n// packages/ag-grid-community/src/edit/editApi.ts\r\nfunction undoCellEditing(beans) {\r\n  beans.undoRedo?.undo(\"api\");\r\n}\r\nfunction redoCellEditing(beans) {\r\n  beans.undoRedo?.redo(\"api\");\r\n}\r\nfunction getEditingCells(beans) {\r\n  const edits = beans.editModelSvc?.getEditMap();\r\n  const positions = [];\r\n  edits?.forEach((editRow, rowNode) => {\r\n    const { rowIndex, rowPinned } = rowNode;\r\n    editRow.forEach((editValue, column) => {\r\n      const { editorValue, pendingValue, sourceValue: oldValue, state } = editValue;\r\n      const diff = _sourceAndPendingDiffer(editValue);\r\n      let newValue = editorValue ?? pendingValue;\r\n      if (newValue === UNEDITED) {\r\n        newValue = void 0;\r\n      }\r\n      const edit = {\r\n        newValue,\r\n        oldValue,\r\n        state,\r\n        column,\r\n        colId: column.getColId(),\r\n        colKey: column.getColId(),\r\n        rowIndex,\r\n        rowPinned\r\n      };\r\n      const changed = state === \"changed\" && diff;\r\n      const editing = state === \"editing\";\r\n      if (editing || changed) {\r\n        positions.push(edit);\r\n      }\r\n    });\r\n  });\r\n  return positions;\r\n}\r\nfunction stopEditing(beans, cancel = false) {\r\n  const { editSvc } = beans;\r\n  if (editSvc?.isBatchEditing()) {\r\n    if (cancel) {\r\n      beans.editModelSvc?.getEditPositions().forEach((cellPosition) => {\r\n        if (cellPosition.state === \"editing\") {\r\n          editSvc.revertSingleCellEdit(cellPosition);\r\n        }\r\n      });\r\n    } else {\r\n      _syncFromEditors(beans, true);\r\n    }\r\n    _destroyEditors(beans);\r\n  } else {\r\n    editSvc?.stopEditing(void 0, { cancel, source: \"api\" });\r\n  }\r\n}\r\nfunction isEditing(beans, cellPosition) {\r\n  const cellCtrl = _getCellCtrl(beans, cellPosition);\r\n  return beans.editSvc?.isEditing(cellCtrl) ?? false;\r\n}\r\nfunction startEditingCell(beans, params) {\r\n  const { key, colKey, rowIndex, rowPinned } = params;\r\n  const { editSvc, colModel } = beans;\r\n  const column = colModel.getCol(colKey);\r\n  if (!column) {\r\n    _warn(12, { colKey });\r\n    return;\r\n  }\r\n  const cellPosition = {\r\n    rowIndex,\r\n    rowPinned: rowPinned || null,\r\n    column\r\n  };\r\n  const rowNode = _getRowNode(beans, cellPosition);\r\n  if (!rowNode) {\r\n    _warn(290, { rowIndex, rowPinned });\r\n    return;\r\n  }\r\n  if (!column.isCellEditable(rowNode)) {\r\n    return;\r\n  }\r\n  const notPinned = rowPinned == null;\r\n  if (notPinned) {\r\n    ensureIndexVisible(beans, rowIndex);\r\n  }\r\n  ensureColumnVisible(beans, colKey);\r\n  editSvc?.startEditing(\r\n    {\r\n      rowNode,\r\n      column\r\n    },\r\n    {\r\n      event: key ? new KeyboardEvent(\"keydown\", { key }) : void 0,\r\n      source: \"api\"\r\n    }\r\n  );\r\n}\r\nfunction validateEdit(beans) {\r\n  return beans.editSvc?.validateEdit() || null;\r\n}\r\nfunction getCurrentUndoSize(beans) {\r\n  return beans.undoRedo?.getCurrentUndoStackSize() ?? 0;\r\n}\r\nfunction getCurrentRedoSize(beans) {\r\n  return beans.undoRedo?.getCurrentRedoStackSize() ?? 0;\r\n}\r\n\r\n// packages/ag-grid-community/src/edit/cellEditors/popupEditorWrapper.ts\r\nvar PopupEditorElement = { tag: \"div\", cls: \"ag-popup-editor\", attrs: { tabindex: \"-1\" } };\r\nvar PopupEditorWrapper = class extends PopupComponent {\r\n  constructor(params) {\r\n    super(PopupEditorElement);\r\n    this.params = params;\r\n  }\r\n  postConstruct() {\r\n    _setDomData(this.gos, this.getGui(), \"popupEditorWrapper\", true);\r\n    this.addKeyDownListener();\r\n  }\r\n  addKeyDownListener() {\r\n    const eGui = this.getGui();\r\n    const params = this.params;\r\n    const listener = (event) => {\r\n      if (!_isUserSuppressingKeyboardEvent(this.gos, event, params.node, params.column, true)) {\r\n        params.onKeyDown(event);\r\n      }\r\n    };\r\n    this.addManagedElementListeners(eGui, { keydown: listener });\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/edit/styles/style-utils.ts\r\nvar editHighlightFn = (edit, includeEditing = false) => {\r\n  if (edit !== void 0) {\r\n    return _sourceAndPendingDiffer(edit) || includeEditing && edit.state === \"editing\";\r\n  }\r\n};\r\nfunction _hasEdits(beans, position, includeEditing = false) {\r\n  return editHighlightFn(beans.editModelSvc?.getEdit(position), includeEditing);\r\n}\r\nfunction _hasLeafEdits(beans, position) {\r\n  const { editModelSvc } = beans;\r\n  const { column, rowNode } = position;\r\n  if (beans.gos.get(\"groupTotalRow\") && !rowNode?.footer) {\r\n    return false;\r\n  }\r\n  for (const node of rowNode?.allLeafChildren ?? []) {\r\n    const highlight = editHighlightFn(editModelSvc?.getEdit({ rowNode: node, column })) || editHighlightFn(editModelSvc?.getEdit({ rowNode: node.pinnedSibling, column }));\r\n    if (highlight) {\r\n      return true;\r\n    }\r\n  }\r\n}\r\nfunction _hasPinnedEdits(beans, { rowNode, column }) {\r\n  rowNode = rowNode.pinnedSibling;\r\n  if (!rowNode) {\r\n    return;\r\n  }\r\n  return editHighlightFn(\r\n    beans.editModelSvc?.getEdit({\r\n      rowNode,\r\n      column\r\n    })\r\n  );\r\n}\r\n\r\n// packages/ag-grid-community/src/edit/styles/cellEditStyleFeature.ts\r\nvar CellEditStyleFeature = class extends BeanStub {\r\n  constructor(cellCtrl, beans) {\r\n    super();\r\n    this.cellCtrl = cellCtrl;\r\n    this.beans = beans;\r\n    this.editSvc = beans.editSvc;\r\n    this.editModelSvc = beans.editModelSvc;\r\n  }\r\n  setComp(comp) {\r\n    this.cellComp = comp;\r\n    this.applyCellStyles();\r\n  }\r\n  applyCellStyles() {\r\n    const { cellCtrl, editSvc, beans } = this;\r\n    if (editSvc?.isBatchEditing() && editSvc.isEditing()) {\r\n      const state = _hasEdits(beans, cellCtrl) || _hasLeafEdits(beans, cellCtrl) || _hasPinnedEdits(beans, cellCtrl);\r\n      this.applyBatchingStyle(state);\r\n    } else {\r\n      this.applyBatchingStyle(false);\r\n    }\r\n    const hasErrors = !!this.editModelSvc?.getCellValidationModel().hasCellValidation(this.cellCtrl);\r\n    this.cellComp.toggleCss(\"ag-cell-editing-error\", hasErrors);\r\n  }\r\n  applyBatchingStyle(newState) {\r\n    this.cellComp.toggleCss(\"ag-cell-editing\", newState ?? false);\r\n    this.cellComp.toggleCss(\"ag-cell-batch-edit\", (newState && this.editSvc?.isBatchEditing()) ?? false);\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/edit/styles/rowEditStyleFeature.ts\r\nvar RowEditStyleFeature = class extends BeanStub {\r\n  constructor(rowCtrl, beans) {\r\n    super();\r\n    this.rowCtrl = rowCtrl;\r\n    this.beans = beans;\r\n    this.gos = beans.gos;\r\n    this.editSvc = beans.editSvc;\r\n    this.editModelSvc = beans.editModelSvc;\r\n  }\r\n  applyRowStyles() {\r\n    const { rowCtrl, editModelSvc, beans } = this;\r\n    let rowNode = rowCtrl.rowNode;\r\n    let edits = editModelSvc?.getEditRow(rowNode);\r\n    const hasErrors = this.editModelSvc?.getRowValidationModel().hasRowValidation({ rowNode });\r\n    if (!edits && rowNode.pinnedSibling) {\r\n      rowNode = rowNode.pinnedSibling;\r\n      edits = editModelSvc?.getEditRow(rowNode);\r\n    }\r\n    if (edits) {\r\n      const editing = Array.from(edits.keys()).some((column) => {\r\n        const position = { rowNode, column };\r\n        return _hasEdits(beans, position, true) || _hasLeafEdits(beans, position) || _hasPinnedEdits(beans, position);\r\n      });\r\n      this.applyStyle(hasErrors, editing);\r\n      return;\r\n    }\r\n    this.applyStyle(hasErrors);\r\n  }\r\n  applyStyle(hasErrors = false, editing = false) {\r\n    const batchEdit = this.editSvc?.isBatchEditing() ?? false;\r\n    const fullRow = this.gos.get(\"editType\") === \"fullRow\";\r\n    this.rowCtrl?.forEachGui(void 0, ({ rowComp }) => {\r\n      rowComp.toggleCss(\"ag-row-editing\", fullRow && editing);\r\n      rowComp.toggleCss(\"ag-row-batch-edit\", fullRow && editing && batchEdit);\r\n      rowComp.toggleCss(\"ag-row-inline-editing\", editing);\r\n      rowComp.toggleCss(\"ag-row-not-inline-editing\", !editing);\r\n      rowComp.toggleCss(\"ag-row-editing-invalid\", fullRow && editing && hasErrors);\r\n    });\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/edit/utils/refresh.ts\r\nvar purgeRows = ({ rowModel, pinnedRowModel, editModelSvc }, rowNodes) => {\r\n  const found = /* @__PURE__ */ new Set();\r\n  rowModel.forEachNode((node) => rowNodes.has(node) && found.add(node));\r\n  pinnedRowModel?.forEachPinnedRow(\"top\", (node) => rowNodes.has(node) && found.add(node));\r\n  pinnedRowModel?.forEachPinnedRow(\"bottom\", (node) => rowNodes.has(node) && found.add(node));\r\n  rowNodes.forEach((rowNode) => {\r\n    if (!found.has(rowNode)) {\r\n      editModelSvc.removeEdits({ rowNode });\r\n    }\r\n  });\r\n  return found;\r\n};\r\nvar purgeCells = ({ editModelSvc }, rowNodes, columns) => {\r\n  rowNodes.forEach(\r\n    (rowNode) => editModelSvc?.getEditRow(rowNode)?.forEach((_, column) => !columns.has(column) && editModelSvc.removeEdits({ rowNode, column }))\r\n  );\r\n};\r\nvar _refreshEditCells = (beans) => () => {\r\n  const columns = new Set(beans.colModel.getCols());\r\n  const updates = beans.editModelSvc.getEditMap(true);\r\n  const rowNodes = new Set(updates.keys());\r\n  purgeCells(beans, purgeRows(beans, rowNodes), columns);\r\n};\r\n\r\n// packages/ag-grid-community/src/edit/editService.ts\r\nvar KEEP_EDITOR_SOURCES = /* @__PURE__ */ new Set([\"undo\", \"redo\"]);\r\nvar STOP_EDIT_SOURCE_TRANSFORM = {\r\n  paste: \"ui\",\r\n  rangeSvc: \"ui\",\r\n  fillHandle: \"api\",\r\n  cellClear: \"api\"\r\n};\r\nvar STOP_EDIT_SOURCE_TRANSFORM_KEYS = new Set(Object.keys(STOP_EDIT_SOURCE_TRANSFORM));\r\nvar SET_DATA_SOURCE_AS_API = /* @__PURE__ */ new Set([\r\n  \"paste\",\r\n  \"rangeSvc\",\r\n  \"renderer\",\r\n  \"cellClear\",\r\n  \"redo\",\r\n  \"undo\"\r\n]);\r\nvar CANCEL_PARAMS = { cancel: true, source: \"api\" };\r\nvar COMMIT_PARAMS = { cancel: false, source: \"api\" };\r\nvar CHECK_SIBLING = { checkSiblings: true };\r\nvar FORCE_REFRESH = { force: true, suppressFlash: true };\r\nvar EditService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"editSvc\";\r\n    this.batch = false;\r\n  }\r\n  postConstruct() {\r\n    const { beans } = this;\r\n    this.model = beans.editModelSvc;\r\n    this.valueSvc = beans.valueSvc;\r\n    this.rangeSvc = beans.rangeSvc;\r\n    this.addManagedPropertyListener(\"editType\", ({ currentValue }) => {\r\n      this.stopEditing(void 0, CANCEL_PARAMS);\r\n      this.createStrategy(currentValue);\r\n    });\r\n    const handler = _refreshEditCells(beans);\r\n    const stopInvalidEdits = () => {\r\n      const hasCellValidation = this.model.getCellValidationModel().getCellValidationMap().size > 0;\r\n      const hasRowValidation = this.model.getRowValidationModel().getRowValidationMap().size > 0;\r\n      if (hasCellValidation || hasRowValidation) {\r\n        this.stopEditing(void 0, CANCEL_PARAMS);\r\n      } else {\r\n        if (this.isEditing()) {\r\n          if (this.isBatchEditing()) {\r\n            _destroyEditors(beans, this.model.getEditPositions());\r\n          } else {\r\n            this.stopEditing(void 0, COMMIT_PARAMS);\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    };\r\n    this.addManagedEventListeners({\r\n      columnPinned: handler,\r\n      columnVisible: handler,\r\n      columnRowGroupChanged: handler,\r\n      rowGroupOpened: handler,\r\n      pinnedRowsChanged: handler,\r\n      displayedRowsChanged: handler,\r\n      sortChanged: stopInvalidEdits,\r\n      filterChanged: stopInvalidEdits,\r\n      cellFocused: this.onCellFocused.bind(this)\r\n    });\r\n  }\r\n  isBatchEditing() {\r\n    return this.batch;\r\n  }\r\n  setBatchEditing(enabled) {\r\n    if (enabled) {\r\n      this.batch = true;\r\n      this.stopEditing(void 0, CANCEL_PARAMS);\r\n    } else {\r\n      this.stopEditing(void 0, CANCEL_PARAMS);\r\n      this.batch = false;\r\n    }\r\n  }\r\n  createStrategy(editType) {\r\n    const { beans, gos, strategy } = this;\r\n    const name = editType ?? gos.get(\"editType\") ?? \"singleCell\";\r\n    if (strategy) {\r\n      if (strategy.beanName === name) {\r\n        return strategy;\r\n      }\r\n      this.destroyStrategy();\r\n    }\r\n    return this.strategy = this.createOptionalManagedBean(\r\n      beans.registry.createDynamicBean(name, true)\r\n    );\r\n  }\r\n  destroyStrategy() {\r\n    if (!this.strategy) {\r\n      return;\r\n    }\r\n    this.strategy.destroy();\r\n    this.strategy = this.destroyBean(this.strategy);\r\n  }\r\n  shouldStartEditing(position, event, cellStartedEdit, source = \"ui\") {\r\n    this.strategy ?? (this.strategy = this.createStrategy());\r\n    return this.strategy?.shouldStart(position, event, cellStartedEdit, source) ?? null;\r\n  }\r\n  shouldStopEditing(position, event, source = \"ui\") {\r\n    return this.strategy?.shouldStop(position, event, source) ?? null;\r\n  }\r\n  shouldCancelEditing(position, event, source = \"ui\") {\r\n    return this.strategy?.shouldCancel(position, event, source) ?? null;\r\n  }\r\n  validateEdit() {\r\n    return _validateEdit(this.beans);\r\n  }\r\n  isEditing(position, params) {\r\n    return this.model.hasEdits(position, params ?? CHECK_SIBLING);\r\n  }\r\n  isRowEditing(rowNode, params) {\r\n    return (rowNode && this.model.hasRowEdits(rowNode, params)) ?? false;\r\n  }\r\n  /** @returns whether to prevent default on event */\r\n  startEditing(position, params) {\r\n    const { startedEdit = true, event = null, source = \"ui\", ignoreEventKey = false } = params;\r\n    this.strategy ?? (this.strategy = this.createStrategy());\r\n    if (!this.isCellEditable(position, \"api\")) {\r\n      return;\r\n    }\r\n    const cellCtrl = _getCellCtrl(this.beans, position);\r\n    if (cellCtrl && !cellCtrl.comp) {\r\n      cellCtrl.onCompAttachedFuncs.push(() => this.startEditing(position, params));\r\n      return;\r\n    }\r\n    const res = this.shouldStartEditing?.(position, event, startedEdit, source);\r\n    if (res === false && source !== \"api\") {\r\n      this.isEditing(position) && this.stopEditing();\r\n      return;\r\n    }\r\n    if (!this.batch && this.shouldStopEditing(position, void 0, source)) {\r\n      this.stopEditing(void 0, { source });\r\n    }\r\n    if (res && this.isBatchEditing()) {\r\n      this.dispatchBatchEvent(\"batchEditingStarted\", /* @__PURE__ */ new Map());\r\n    }\r\n    this.strategy.start(position, event, source, ignoreEventKey);\r\n    return;\r\n  }\r\n  stopEditing(position, params) {\r\n    const { event, cancel, source = \"ui\", suppressNavigateAfterEdit } = params || {};\r\n    const { beans, model } = this;\r\n    if (STOP_EDIT_SOURCE_TRANSFORM_KEYS.has(source)) {\r\n      if (this.isBatchEditing()) {\r\n        this.bulkRefresh(position);\r\n        return false;\r\n      }\r\n      return this.stopEditing(position, { ...params, source: STOP_EDIT_SOURCE_TRANSFORM[source] });\r\n    }\r\n    const isEditingOrBatchWithEdits = this.isEditing(position) || this.isBatchEditing() && model.hasEdits(position, CHECK_SIBLING);\r\n    if (!isEditingOrBatchWithEdits || !this.strategy) {\r\n      return false;\r\n    }\r\n    const cellCtrl = _getCellCtrl(beans, position);\r\n    if (cellCtrl) {\r\n      cellCtrl.onEditorAttachedFuncs = [];\r\n    }\r\n    let edits = model.getEditMap(true);\r\n    let res = false;\r\n    const willStop = !cancel && !!this.shouldStopEditing(position, event, source);\r\n    const willCancel = cancel && !!this.shouldCancelEditing(position, event, source);\r\n    if (willStop || willCancel) {\r\n      _syncFromEditors(beans, true);\r\n      const freshEdits = model.getEditMap();\r\n      this.processEdits(freshEdits, cancel);\r\n      this.strategy?.stop(cancel, event);\r\n      this.bulkRefresh(void 0, edits);\r\n      edits = freshEdits;\r\n      res || (res = willStop);\r\n    } else if (event instanceof KeyboardEvent && this.batch && this.strategy?.midBatchInputsAllowed(position) && this.isEditing(position, { withOpenEditor: true })) {\r\n      const key = event.key;\r\n      const isEnter = key === KeyCode.ENTER;\r\n      const isEscape = key === KeyCode.ESCAPE;\r\n      const isTab = key === KeyCode.TAB;\r\n      if (isEnter || isTab || isEscape) {\r\n        if (isEnter || isTab) {\r\n          _syncFromEditors(beans, true);\r\n        } else if (isEscape) {\r\n          this.revertSingleCellEdit(cellCtrl);\r\n        }\r\n        if (this.isBatchEditing()) {\r\n          this.strategy?.cleanupEditors();\r\n        } else {\r\n          _destroyEditors(beans, model.getEditPositions(), { event });\r\n        }\r\n        event.preventDefault();\r\n        this.bulkRefresh(position, edits, { suppressFlash: true });\r\n        edits = model.getEditMap();\r\n      }\r\n    } else {\r\n      _syncFromEditors(beans, true);\r\n      edits = model.getEditMap();\r\n    }\r\n    if (res && position) {\r\n      this.model.removeEdits(position);\r\n    }\r\n    if (!suppressNavigateAfterEdit && cellCtrl) {\r\n      this.navigateAfterEdit(event instanceof KeyboardEvent && event.shiftKey, cellCtrl.cellPosition);\r\n    }\r\n    _purgeUnchangedEdits(beans);\r\n    if (!this.model.hasEdits()) {\r\n      this.model.getCellValidationModel().clearCellValidationMap();\r\n      this.model.getRowValidationModel().clearRowValidationMap();\r\n    }\r\n    this.bulkRefresh();\r\n    if (willCancel) {\r\n      this.beans.rowRenderer.refreshRows({ rowNodes: Array.from(edits.keys()) });\r\n    }\r\n    if (this.isBatchEditing()) {\r\n      this.beans.rowRenderer.refreshRows({ suppressFlash: true, force: true });\r\n      if (res && willStop) {\r\n        this.dispatchBatchEvent(\"batchEditingStopped\", edits);\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n  navigateAfterEdit(shiftKey, cellPosition) {\r\n    const navAfterEdit = this.gos.get(\"enterNavigatesVerticallyAfterEdit\");\r\n    if (navAfterEdit) {\r\n      const key = shiftKey ? KeyCode.UP : KeyCode.DOWN;\r\n      this.beans.navigation?.navigateToNextCell(null, key, cellPosition, false);\r\n    }\r\n  }\r\n  processEdits(edits, cancel = false) {\r\n    const rowNodes = Array.from(edits.keys());\r\n    const { beans } = this;\r\n    const hasValidationErrors = this.model.getCellValidationModel().getCellValidationMap().size > 0 || this.model.getRowValidationModel().getRowValidationMap().size > 0;\r\n    const editsToDelete = [];\r\n    for (const rowNode of rowNodes) {\r\n      const editRow = edits.get(rowNode);\r\n      for (const column of editRow.keys()) {\r\n        const editValue = editRow.get(column);\r\n        const position = { rowNode, column };\r\n        const cellCtrl = _getCellCtrl(beans, position);\r\n        const valueChanged = _sourceAndPendingDiffer(editValue);\r\n        const isCancelAfterEnd = cellCtrl?.comp?.getCellEditor()?.isCancelAfterEnd?.();\r\n        if (!cancel && !isCancelAfterEnd && valueChanged && !hasValidationErrors) {\r\n          const success = this.setNodeDataValue(rowNode, column, editValue.pendingValue);\r\n          if (!success) {\r\n            editsToDelete.push(position);\r\n          }\r\n        }\r\n        cellCtrl?.refreshCell(FORCE_REFRESH);\r\n      }\r\n    }\r\n    editsToDelete.forEach((position) => {\r\n      this.model.clearEditValue(position);\r\n    });\r\n  }\r\n  setNodeDataValue(rowNode, column, newValue, refreshCell) {\r\n    const { beans } = this;\r\n    const cellCtrl = _getCellCtrl(beans, { rowNode, column });\r\n    if (cellCtrl) {\r\n      cellCtrl.suppressRefreshCell = true;\r\n    }\r\n    const success = rowNode.setDataValue(column, newValue, \"commit\");\r\n    if (cellCtrl) {\r\n      cellCtrl.suppressRefreshCell = false;\r\n    }\r\n    if (refreshCell) {\r\n      cellCtrl?.refreshCell(FORCE_REFRESH);\r\n    }\r\n    return success;\r\n  }\r\n  setEditMap(edits, params) {\r\n    this.strategy ?? (this.strategy = this.createStrategy());\r\n    this.strategy?.setEditMap(edits, params);\r\n    this.bulkRefresh();\r\n    this.beans.rowRenderer.refreshCells(FORCE_REFRESH);\r\n  }\r\n  dispatchEditValuesChanged({ rowNode, column }, edit = {}) {\r\n    if (!rowNode || !column || !edit) {\r\n      return;\r\n    }\r\n    const { pendingValue, sourceValue } = edit;\r\n    const { rowIndex, rowPinned, data } = rowNode;\r\n    this.beans.eventSvc.dispatchEvent({\r\n      type: \"cellEditValuesChanged\",\r\n      node: rowNode,\r\n      rowIndex,\r\n      rowPinned,\r\n      column,\r\n      source: \"api\",\r\n      data,\r\n      newValue: pendingValue,\r\n      oldValue: sourceValue,\r\n      value: pendingValue,\r\n      colDef: column.getColDef()\r\n    });\r\n  }\r\n  bulkRefresh(position = {}, editMap, params = {}) {\r\n    const { beans, gos } = this;\r\n    const { editModelSvc, rowModel } = beans;\r\n    if (_isClientSideRowModel(gos, rowModel)) {\r\n      if (position.rowNode && position.column) {\r\n        this.refCell(position, this.model.getEdit(position), params);\r\n      } else if (editMap) {\r\n        editModelSvc?.getEditMap(false)?.forEach((editRow, rowNode) => {\r\n          for (const column of editRow.keys()) {\r\n            this.refCell({ rowNode, column }, editRow.get(column), params);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  refCell({ rowNode, column }, edit, params = {}) {\r\n    const { beans, gos } = this;\r\n    const updatedNodes = /* @__PURE__ */ new Set([rowNode]);\r\n    const refreshNodes = /* @__PURE__ */ new Set();\r\n    const pinnedSibling = rowNode.pinnedSibling;\r\n    if (pinnedSibling) {\r\n      updatedNodes.add(pinnedSibling);\r\n    }\r\n    const sibling = rowNode.sibling;\r\n    if (sibling) {\r\n      refreshNodes.add(sibling);\r\n    }\r\n    let parent = rowNode.parent;\r\n    while (parent) {\r\n      if (parent.sibling?.footer && gos.get(\"groupTotalRow\")) {\r\n        refreshNodes.add(parent.sibling);\r\n      } else if (!parent.parent && parent.sibling && gos.get(\"grandTotalRow\")) {\r\n        refreshNodes.add(parent.sibling);\r\n      } else {\r\n        refreshNodes.add(parent);\r\n      }\r\n      parent = parent.parent;\r\n    }\r\n    updatedNodes.forEach((node) => this.dispatchEditValuesChanged({ rowNode: node, column }, edit));\r\n    updatedNodes.forEach((node) => _getCellCtrl(beans, { rowNode: node, column })?.refreshCell(params));\r\n    refreshNodes.forEach((node) => _getCellCtrl(beans, { rowNode: node, column })?.refreshCell(params));\r\n  }\r\n  stopAllEditing(cancel = false, source = \"ui\") {\r\n    if (this.isEditing()) {\r\n      this.stopEditing(void 0, { cancel, source });\r\n    }\r\n  }\r\n  isCellEditable(position, source = \"ui\") {\r\n    const { rowNode } = position;\r\n    if (rowNode.group) {\r\n      if (this.gos.get(\"treeData\")) {\r\n        if (!rowNode.data && !this.gos.get(\"enableGroupEdit\")) {\r\n          return false;\r\n        }\r\n      } else {\r\n        if (!this.gos.get(\"enableGroupEdit\")) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    this.strategy ?? (this.strategy = this.createStrategy());\r\n    return this.strategy?.isCellEditable(position, source) ?? false;\r\n  }\r\n  cellEditingInvalidCommitBlocks() {\r\n    return this.gos.get(\"invalidEditValueMode\") === \"block\";\r\n  }\r\n  checkNavWithValidation(position, event, focus = true) {\r\n    if (this.hasValidationErrors(position)) {\r\n      const cellCtrl = _getCellCtrl(this.beans, position);\r\n      if (this.cellEditingInvalidCommitBlocks()) {\r\n        event?.preventDefault?.();\r\n        if (focus) {\r\n          !cellCtrl?.hasBrowserFocus() && cellCtrl?.focusCell();\r\n          cellCtrl?.comp?.getCellEditor()?.focusIn?.();\r\n        }\r\n        return \"block-stop\";\r\n      }\r\n      cellCtrl && this.revertSingleCellEdit(cellCtrl);\r\n      return \"revert-continue\";\r\n    }\r\n    return \"continue\";\r\n  }\r\n  revertSingleCellEdit(cellPosition, focus = false) {\r\n    const cellCtrl = _getCellCtrl(this.beans, cellPosition);\r\n    if (!cellCtrl?.comp?.getCellEditor()) {\r\n      return;\r\n    }\r\n    _destroyEditors(this.beans, [cellPosition], { silent: true });\r\n    this.model.clearEditValue(cellPosition);\r\n    _setupEditor(this.beans, cellPosition, { silent: true });\r\n    _populateModelValidationErrors(this.beans);\r\n    cellCtrl?.refreshCell(FORCE_REFRESH);\r\n    cellCtrl.rowCtrl.rowEditStyleFeature?.applyRowStyles();\r\n    if (!focus) {\r\n      return;\r\n    }\r\n    cellCtrl?.focusCell();\r\n    cellCtrl?.comp?.getCellEditor()?.focusIn?.();\r\n  }\r\n  hasValidationErrors(position) {\r\n    _populateModelValidationErrors(this.beans);\r\n    const cellCtrl = _getCellCtrl(this.beans, position);\r\n    if (cellCtrl) {\r\n      cellCtrl.refreshCell(FORCE_REFRESH);\r\n      cellCtrl.rowCtrl.rowEditStyleFeature?.applyRowStyles();\r\n    }\r\n    let invalid = false;\r\n    if (position?.rowNode) {\r\n      invalid || (invalid = this.model.getRowValidationModel().hasRowValidation({ rowNode: position.rowNode }));\r\n      if (position.column) {\r\n        invalid || (invalid = this.model.getCellValidationModel().hasCellValidation({ rowNode: position.rowNode, column: position.column }));\r\n      }\r\n    } else {\r\n      invalid || (invalid = this.model.getCellValidationModel().getCellValidationMap().size > 0);\r\n      invalid || (invalid = this.model.getRowValidationModel().getRowValidationMap().size > 0);\r\n    }\r\n    return invalid;\r\n  }\r\n  moveToNextCell(prev, backwards, event, source = \"ui\") {\r\n    let res;\r\n    const editing = this.isEditing();\r\n    const preventNavigation = editing && this.checkNavWithValidation(void 0, event) === \"block-stop\";\r\n    if (prev instanceof CellCtrl && editing) {\r\n      res = this.strategy?.moveToNextEditingCell(prev, backwards, event, source, preventNavigation);\r\n    }\r\n    if (res === null) {\r\n      return res;\r\n    }\r\n    res = res || !!this.beans.focusSvc.focusedHeader;\r\n    if (res === false && !preventNavigation) {\r\n      this.stopEditing();\r\n    }\r\n    return res;\r\n  }\r\n  getCellDataValue({ rowNode, column }, preferEditor = true) {\r\n    if (!rowNode || !column) {\r\n      return void 0;\r\n    }\r\n    let edit = this.model.getEdit({ rowNode, column });\r\n    const pinnedSibling = rowNode.pinnedSibling;\r\n    if (pinnedSibling) {\r\n      const siblingEdit = this.model.getEdit({ rowNode: pinnedSibling, column });\r\n      if (siblingEdit) {\r\n        edit = siblingEdit;\r\n      }\r\n    }\r\n    const newValue = preferEditor ? edit?.editorValue ?? edit?.pendingValue : edit?.pendingValue;\r\n    return newValue === UNEDITED || !edit ? this.valueSvc.getValue(column, rowNode, true, \"api\") : newValue;\r\n  }\r\n  getRowDataValue(rowNode, params) {\r\n    return this.model.getEditRowDataValue(rowNode, params);\r\n  }\r\n  addStopEditingWhenGridLosesFocus(viewports) {\r\n    _addStopEditingWhenGridLosesFocus(this, this.beans, viewports);\r\n  }\r\n  createPopupEditorWrapper(params) {\r\n    return new PopupEditorWrapper(params);\r\n  }\r\n  setDataValue(position, newValue, eventSource) {\r\n    if ((!this.isEditing() || eventSource === \"commit\") && !SET_DATA_SOURCE_AS_API.has(eventSource)) {\r\n      return;\r\n    }\r\n    const { beans } = this;\r\n    this.strategy ?? (this.strategy = this.createStrategy());\r\n    const source = this.isBatchEditing() ? \"ui\" : \"api\";\r\n    if (!eventSource || KEEP_EDITOR_SOURCES.has(eventSource)) {\r\n      _syncFromEditor(beans, position, true, newValue, eventSource);\r\n      return this.setNodeDataValue(position.rowNode, position.column, newValue, true);\r\n    }\r\n    const existing = this.model.getEdit(position);\r\n    if (existing) {\r\n      if (existing.pendingValue === newValue) {\r\n        return false;\r\n      }\r\n      if (existing.sourceValue !== newValue) {\r\n        _syncFromEditor(beans, position, true, newValue, eventSource);\r\n        this.stopEditing(position, { source, suppressNavigateAfterEdit: true });\r\n        return true;\r\n      }\r\n      if (existing.sourceValue === newValue) {\r\n        beans.editModelSvc?.removeEdits(position);\r\n        this.dispatchEditValuesChanged(position, {\r\n          ...existing,\r\n          pendingValue: newValue\r\n        });\r\n        return true;\r\n      }\r\n    }\r\n    _syncFromEditor(beans, position, true, newValue, eventSource);\r\n    this.stopEditing(position, { source, suppressNavigateAfterEdit: true });\r\n    return true;\r\n  }\r\n  handleColDefChanged(cellCtrl) {\r\n    _refreshEditorOnColDefChanged(this.beans, cellCtrl);\r\n  }\r\n  destroy() {\r\n    this.model.clear();\r\n    this.destroyStrategy();\r\n    super.destroy();\r\n  }\r\n  prepDetailsDuringBatch(position, params) {\r\n    if (!this.batch) {\r\n      return;\r\n    }\r\n    const hasEdits = this.model.hasRowEdits(position.rowNode, CHECK_SIBLING);\r\n    if (!hasEdits) {\r\n      return;\r\n    }\r\n    const { rowNode, column } = position;\r\n    const { compDetails, valueToDisplay } = params;\r\n    if (compDetails) {\r\n      const { params: params2 } = compDetails;\r\n      params2.data = this.model.getEditRowDataValue(rowNode, CHECK_SIBLING);\r\n      return { compDetails };\r\n    }\r\n    const editRow = this.model.getEditRow(position.rowNode, CHECK_SIBLING);\r\n    if (valueToDisplay !== void 0 && editRow?.has(column)) {\r\n      return { valueToDisplay: this.valueSvc.getValue(column, rowNode) };\r\n    }\r\n  }\r\n  cleanupEditors() {\r\n    this.strategy?.cleanupEditors();\r\n  }\r\n  dispatchCellEvent(position, event, type, payload) {\r\n    this.strategy?.dispatchCellEvent(position, event, type, payload);\r\n  }\r\n  dispatchRowEvent(position, type) {\r\n    this.strategy?.dispatchRowEvent(position, type);\r\n  }\r\n  dispatchBatchEvent(type, edits) {\r\n    this.eventSvc.dispatchEvent(this.createBatchEditEvent(type, edits));\r\n  }\r\n  createBatchEditEvent(type, edits) {\r\n    return _addGridCommonParams(this.gos, {\r\n      type,\r\n      ...type === \"batchEditingStopped\" ? {\r\n        changes: this.toEventChangeList(edits)\r\n      } : {}\r\n    });\r\n  }\r\n  toEventChangeList(edits) {\r\n    return this.model.getEditPositions(edits).map((edit) => ({\r\n      rowIndex: edit.rowNode.rowIndex,\r\n      rowPinned: edit.rowNode.rowPinned,\r\n      columnId: edit.column.getColId(),\r\n      newValue: edit.pendingValue,\r\n      oldValue: edit.sourceValue\r\n    }));\r\n  }\r\n  applyBulkEdit({ rowNode, column }, ranges) {\r\n    if (!ranges || ranges.length === 0) {\r\n      return;\r\n    }\r\n    const { beans, rangeSvc, valueSvc } = this;\r\n    _syncFromEditors(beans, true);\r\n    const edits = this.model.getEditMap(true);\r\n    const editValue = edits.get(rowNode)?.get(column)?.pendingValue;\r\n    if (!this.batch) {\r\n      this.eventSvc.dispatchEvent({ type: \"bulkEditingStarted\" });\r\n    }\r\n    ranges.forEach((range) => {\r\n      rangeSvc?.forEachRowInRange(range, (position) => {\r\n        const rowNode2 = _getRowNode(beans, position);\r\n        if (rowNode2 === void 0) {\r\n          return;\r\n        }\r\n        const editRow = edits.get(rowNode2) ?? /* @__PURE__ */ new Map();\r\n        for (const column2 of range.columns) {\r\n          if (!column2) {\r\n            continue;\r\n          }\r\n          if (this.isCellEditable({ rowNode: rowNode2, column: column2 }, \"api\")) {\r\n            const sourceValue = valueSvc.getValue(column2, rowNode2, true, \"api\");\r\n            let pendingValue = valueSvc.parseValue(\r\n              column2,\r\n              rowNode2 ?? null,\r\n              editValue,\r\n              sourceValue\r\n            );\r\n            if (Number.isNaN(pendingValue)) {\r\n              pendingValue = null;\r\n            }\r\n            editRow.set(column2, {\r\n              editorValue: void 0,\r\n              pendingValue,\r\n              sourceValue,\r\n              state: \"changed\"\r\n            });\r\n          }\r\n        }\r\n        if (editRow.size > 0) {\r\n          edits.set(rowNode2, editRow);\r\n        }\r\n      });\r\n      this.setEditMap(edits);\r\n      if (this.batch) {\r\n        this.cleanupEditors();\r\n        _purgeUnchangedEdits(beans);\r\n        this.bulkRefresh();\r\n        return;\r\n      }\r\n      this.stopEditing(void 0, { source: \"api\" });\r\n      this.eventSvc.dispatchEvent({ type: \"bulkEditingStopped\", changes: this.toEventChangeList(edits) });\r\n    });\r\n    this.bulkRefresh();\r\n    const cellCtrl = _getCellCtrl(beans, { rowNode, column });\r\n    if (cellCtrl) {\r\n      cellCtrl.focusCell(true);\r\n    }\r\n  }\r\n  createCellStyleFeature(cellCtrl, beans) {\r\n    return new CellEditStyleFeature(cellCtrl, beans);\r\n  }\r\n  createRowStyleFeature(rowCtrl, beans) {\r\n    return new RowEditStyleFeature(rowCtrl, beans);\r\n  }\r\n  setEditingCells(cells, params) {\r\n    const { beans } = this;\r\n    const { colModel, valueSvc } = beans;\r\n    const edits = /* @__PURE__ */ new Map();\r\n    cells.forEach(({ colId, column, colKey, rowIndex, rowPinned, newValue: pendingValue, state }) => {\r\n      const col = colId ? colModel.getCol(colId) : colKey ? colModel.getCol(colKey) : column;\r\n      if (!col) {\r\n        return;\r\n      }\r\n      const rowNode = _getRowNode(beans, { rowIndex, rowPinned });\r\n      if (!rowNode) {\r\n        return;\r\n      }\r\n      const sourceValue = valueSvc.getValue(col, rowNode, true, \"api\");\r\n      if (!_sourceAndPendingDiffer({ pendingValue, sourceValue }) && state !== \"editing\") {\r\n        return;\r\n      }\r\n      let editRow = edits.get(rowNode);\r\n      if (!editRow) {\r\n        editRow = /* @__PURE__ */ new Map();\r\n        edits.set(rowNode, editRow);\r\n      }\r\n      if (pendingValue === void 0) {\r\n        pendingValue = UNEDITED;\r\n      }\r\n      editRow.set(col, {\r\n        editorValue: void 0,\r\n        pendingValue,\r\n        sourceValue,\r\n        state: state ?? \"changed\"\r\n      });\r\n    });\r\n    this.setEditMap(edits, params);\r\n  }\r\n  onCellFocused(event) {\r\n    const cellCtrl = _getCellCtrl(this.beans, event);\r\n    if (!cellCtrl || !this.isEditing(cellCtrl, CHECK_SIBLING)) {\r\n      return;\r\n    }\r\n    const edit = this.model.getEdit(cellCtrl);\r\n    if (!edit || !_sourceAndPendingDiffer(edit)) {\r\n      return;\r\n    }\r\n    const translate = this.getLocaleTextFunc();\r\n    const label = translate(\"ariaPendingChange\", \"Pending Change\");\r\n    this.beans.ariaAnnounce?.announceValue(label, \"pendingChange\");\r\n  }\r\n  allowedFocusTargetOnValidation(cellPosition) {\r\n    return _getCellCtrl(this.beans, cellPosition);\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/edit/strategy/baseEditStrategy.ts\r\nvar BaseEditStrategy = class extends BeanStub {\r\n  postConstruct() {\r\n    this.model = this.beans.editModelSvc;\r\n    this.editSvc = this.beans.editSvc;\r\n    this.addManagedEventListeners({\r\n      cellFocused: this.onCellFocusChanged?.bind(this),\r\n      cellFocusCleared: this.onCellFocusChanged?.bind(this)\r\n    });\r\n  }\r\n  clearEdits(position) {\r\n    this.model.clearEditValue(position);\r\n  }\r\n  onCellFocusChanged(event) {\r\n    let cellCtrl;\r\n    const previous = event[\"previousParams\"];\r\n    const { editSvc, beans } = this;\r\n    const sourceEvent = event.type === \"cellFocused\" ? event.sourceEvent : null;\r\n    if (previous) {\r\n      cellCtrl = _getCellCtrl(beans, previous);\r\n    }\r\n    const { gos, editModelSvc } = beans;\r\n    const isFocusCleared = event.type === \"cellFocusCleared\";\r\n    if (editSvc.isEditing(void 0, { withOpenEditor: true })) {\r\n      const { column, rowIndex, rowPinned } = event;\r\n      const cellPositionFromEvent = {\r\n        column,\r\n        rowNode: _getRowNode(beans, { rowIndex, rowPinned })\r\n      };\r\n      const isBlock = gos.get(\"invalidEditValueMode\") === \"block\";\r\n      if (isBlock) {\r\n        return;\r\n      }\r\n      const shouldRevert = !isBlock;\r\n      const hasError = !!editModelSvc?.getCellValidationModel().hasCellValidation(cellPositionFromEvent);\r\n      const shouldCancel = shouldRevert && hasError;\r\n      const result = previous || isFocusCleared ? editSvc.stopEditing(void 0, {\r\n        cancel: shouldCancel,\r\n        source: isFocusCleared && shouldRevert ? \"api\" : void 0,\r\n        event: sourceEvent\r\n      }) : true;\r\n      if (!result) {\r\n        if (editSvc.isBatchEditing()) {\r\n          editSvc.cleanupEditors();\r\n        } else {\r\n          editSvc.stopEditing(void 0, { source: \"api\" });\r\n        }\r\n      }\r\n    }\r\n    cellCtrl?.refreshCell({ suppressFlash: true, force: true });\r\n  }\r\n  isCellEditable({ rowNode, column }, _source = \"ui\") {\r\n    return column.isColumnFunc(rowNode, column.getColDef().editable);\r\n  }\r\n  stop(cancel, event) {\r\n    const editingCells = this.model.getEditPositions();\r\n    const results = { all: [], pass: [], fail: [] };\r\n    editingCells.forEach((cell) => {\r\n      results.all.push(cell);\r\n      const validation2 = this.model.getCellValidationModel().getCellValidation(cell);\r\n      if ((validation2?.errorMessages?.length ?? 0) > 0) {\r\n        results.fail.push(cell);\r\n        return;\r\n      }\r\n      results.pass.push(cell);\r\n    });\r\n    if (cancel) {\r\n      editingCells.forEach((cell) => {\r\n        _destroyEditor(this.beans, cell);\r\n        this.model.stop(cell);\r\n      });\r\n      return true;\r\n    }\r\n    const actions = this.processValidationResults(results);\r\n    if (actions.destroy.length > 0) {\r\n      actions.destroy.forEach((cell) => {\r\n        _destroyEditor(this.beans, cell, { event });\r\n        this.model.stop(cell);\r\n      });\r\n    }\r\n    if (actions.keep.length > 0) {\r\n      actions.keep.forEach((cell) => {\r\n        const cellCtrl = _getCellCtrl(this.beans, cell);\r\n        if (!this.editSvc?.cellEditingInvalidCommitBlocks()) {\r\n          cellCtrl && this.editSvc.revertSingleCellEdit(cellCtrl);\r\n        }\r\n      });\r\n    }\r\n    return true;\r\n  }\r\n  cleanupEditors({ rowNode } = {}, includeEditing) {\r\n    _syncFromEditors(this.beans, false);\r\n    const positions = this.model.getEditPositions();\r\n    const discard = [];\r\n    if (rowNode) {\r\n      positions.forEach((pos) => {\r\n        if (!(!rowNode || pos.rowNode === rowNode)) {\r\n          discard.push(pos);\r\n        }\r\n      });\r\n    } else {\r\n      positions.forEach((pos) => {\r\n        discard.push(pos);\r\n      });\r\n    }\r\n    _destroyEditors(this.beans, discard);\r\n    _purgeUnchangedEdits(this.beans, includeEditing);\r\n  }\r\n  setFocusOutOnEditor(cellCtrl) {\r\n    cellCtrl.comp?.getCellEditor()?.focusOut?.();\r\n  }\r\n  setFocusInOnEditor(cellCtrl) {\r\n    const comp = cellCtrl.comp;\r\n    const editor = comp?.getCellEditor();\r\n    if (editor?.focusIn) {\r\n      editor.focusIn();\r\n    } else {\r\n      const isFullRow = this.beans.gos.get(\"editType\") === \"fullRow\";\r\n      cellCtrl.focusCell(isFullRow);\r\n      cellCtrl.onEditorAttachedFuncs.push(() => comp?.getCellEditor()?.focusIn?.());\r\n    }\r\n  }\r\n  setupEditors(cells = this.model.getEditPositions(), position, cellStartedEdit, event, ignoreEventKey = false) {\r\n    const key = event instanceof KeyboardEvent && !ignoreEventKey && event.key || void 0;\r\n    _setupEditors(this.beans, cells, position, key, event, cellStartedEdit);\r\n  }\r\n  dispatchCellEvent(position, event, type, payload) {\r\n    const cellCtrl = _getCellCtrl(this.beans, position);\r\n    if (cellCtrl) {\r\n      this.eventSvc.dispatchEvent({ ...cellCtrl.createEvent(event ?? null, type), ...payload });\r\n    }\r\n  }\r\n  dispatchRowEvent(position, type) {\r\n    const rowCtrl = _getRowCtrl(this.beans, position);\r\n    if (rowCtrl) {\r\n      this.eventSvc.dispatchEvent(rowCtrl.createRowEvent(type));\r\n    }\r\n  }\r\n  shouldStart({ column }, event, cellStartedEdit, source = \"ui\") {\r\n    if (event instanceof KeyboardEvent && (event.key === KeyCode.TAB || event.key === KeyCode.ENTER || event.key === KeyCode.F2 || event.key === KeyCode.BACKSPACE && cellStartedEdit)) {\r\n      return true;\r\n    }\r\n    const extendingRange = event?.shiftKey && this.beans.rangeSvc?.getCellRanges().length != 0;\r\n    if (extendingRange) {\r\n      return false;\r\n    }\r\n    const colDef = column?.getColDef();\r\n    const clickCount = this.deriveClickCount(colDef);\r\n    const type = event?.type;\r\n    if (type === \"click\" && event?.detail === 1 && clickCount === 1) {\r\n      return true;\r\n    }\r\n    if (type === \"dblclick\" && event?.detail === 2 && clickCount === 2) {\r\n      return true;\r\n    }\r\n    if (source === \"api\") {\r\n      return cellStartedEdit ?? false;\r\n    }\r\n    return false;\r\n  }\r\n  shouldStop(_position, event, source = \"ui\") {\r\n    const batch = this.editSvc.isBatchEditing();\r\n    if (batch && source === \"api\") {\r\n      return true;\r\n    }\r\n    if (batch && source === \"ui\") {\r\n      return false;\r\n    }\r\n    if (source === \"api\") {\r\n      return true;\r\n    }\r\n    if (event instanceof KeyboardEvent && !batch) {\r\n      return event.key === KeyCode.ENTER;\r\n    }\r\n    return null;\r\n  }\r\n  shouldCancel(_position, event, source = \"ui\") {\r\n    const batch = this.editSvc.isBatchEditing();\r\n    if (event instanceof KeyboardEvent && !batch) {\r\n      const result = event.key === KeyCode.ESCAPE;\r\n      if (result) {\r\n        return true;\r\n      }\r\n    }\r\n    if (batch && source === \"api\") {\r\n      return true;\r\n    }\r\n    if (source === \"api\") {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  setEditMap(edits, params) {\r\n    if (!params?.update) {\r\n      this.editSvc.stopEditing(void 0, { cancel: true, source: \"api\" });\r\n    }\r\n    const cells = [];\r\n    edits.forEach((editRow, rowNode) => {\r\n      editRow.forEach((cellData, column) => {\r\n        if (cellData.state === \"editing\") {\r\n          cells.push({ ...cellData, rowNode, column });\r\n        }\r\n      });\r\n    });\r\n    if (params?.update) {\r\n      edits = new Map([...this.model.getEditMap(), ...edits]);\r\n    }\r\n    this.model?.setEditMap(edits);\r\n    if (cells.length > 0) {\r\n      const cell = cells.at(-1);\r\n      const key = cell.pendingValue === UNEDITED ? void 0 : cell.pendingValue;\r\n      this.start(cell, new KeyboardEvent(\"keydown\", { key }), \"api\");\r\n      const cellCtrl = _getCellCtrl(this.beans, cell);\r\n      if (cellCtrl) {\r\n        this.setFocusInOnEditor(cellCtrl);\r\n      }\r\n    }\r\n  }\r\n  deriveClickCount(colDef) {\r\n    const { gos } = this.beans;\r\n    if (gos.get(\"suppressClickEdit\") === true) {\r\n      return 0;\r\n    }\r\n    if (gos.get(\"singleClickEdit\") === true) {\r\n      return 1;\r\n    }\r\n    if (colDef?.singleClickEdit) {\r\n      return 1;\r\n    }\r\n    return 2;\r\n  }\r\n  destroy() {\r\n    this.cleanupEditors();\r\n    super.destroy();\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/edit/strategy/fullRowEditStrategy.ts\r\nvar FullRowEditStrategy = class extends BaseEditStrategy {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"fullRow\";\r\n    this.startedRows = [];\r\n  }\r\n  isCellEditable(position, source = \"ui\") {\r\n    const editable = super.isCellEditable(position, source);\r\n    if (editable === true || source === \"ui\") {\r\n      return editable;\r\n    }\r\n    const columns = this.beans.colModel.getCols();\r\n    return columns.some((col) => super.isCellEditable({ rowNode: position.rowNode, column: col }, source));\r\n  }\r\n  shouldStop(position, event, _source = \"ui\") {\r\n    const { rowNode } = position || {};\r\n    const oldRowCtrl = _getRowCtrl(this.beans, {\r\n      rowNode: this.rowNode\r\n    });\r\n    if (!oldRowCtrl) {\r\n      return true;\r\n    }\r\n    const res = super.shouldStop({ rowNode: this.rowNode }, event, _source);\r\n    if (res !== null) {\r\n      return res;\r\n    }\r\n    if (!this.rowNode) {\r\n      return false;\r\n    }\r\n    return rowNode !== this.rowNode;\r\n  }\r\n  midBatchInputsAllowed({ rowNode }) {\r\n    if (!rowNode) {\r\n      return false;\r\n    }\r\n    return this.model.hasEdits({ rowNode });\r\n  }\r\n  clearEdits(position) {\r\n    this.model.clearEditValue(position);\r\n  }\r\n  start(position, event, _source = \"ui\", ignoreEventKey) {\r\n    const { rowNode } = position;\r\n    if (this.rowNode !== rowNode) {\r\n      super.cleanupEditors(position);\r\n    }\r\n    this.dispatchRowEvent({ rowNode }, \"rowEditingStarted\");\r\n    this.startedRows.push(rowNode);\r\n    const columns = this.beans.visibleCols.allCols;\r\n    const cells = [];\r\n    columns.forEach((column) => {\r\n      if (!column.isCellEditable(rowNode)) {\r\n        return;\r\n      }\r\n      const position2 = {\r\n        rowNode,\r\n        column\r\n      };\r\n      cells.push(position2);\r\n      if (!this.model.hasEdits(position2)) {\r\n        this.model.start(position2);\r\n      }\r\n    });\r\n    this.rowNode = rowNode;\r\n    this.setupEditors(cells, position, true, event, ignoreEventKey);\r\n  }\r\n  processValidationResults(results) {\r\n    const anyFailed = results.fail.length > 0;\r\n    if (anyFailed && this.editSvc.cellEditingInvalidCommitBlocks()) {\r\n      return {\r\n        destroy: [],\r\n        keep: results.all\r\n      };\r\n    }\r\n    return {\r\n      destroy: results.all,\r\n      keep: []\r\n    };\r\n  }\r\n  stop(cancel, event) {\r\n    const { rowNode } = this;\r\n    if (rowNode && !this.model.hasRowEdits(rowNode)) {\r\n      return false;\r\n    }\r\n    const changedRows = [];\r\n    if (!cancel) {\r\n      this.model.getEditMap().forEach((rowEdits, rowNode2) => {\r\n        if (!rowEdits || rowEdits.size === 0) {\r\n          return;\r\n        }\r\n        for (const edit of rowEdits.values()) {\r\n          if (_sourceAndPendingDiffer(edit)) {\r\n            changedRows.push(rowNode2);\r\n            break;\r\n          }\r\n        }\r\n      });\r\n    }\r\n    _populateModelValidationErrors(this.beans);\r\n    if (!cancel && this.editSvc?.checkNavWithValidation({ rowNode }) === \"block-stop\") {\r\n      return false;\r\n    }\r\n    super.stop(cancel, event);\r\n    changedRows.forEach((rowNode2) => this.dispatchRowEvent({ rowNode: rowNode2 }, \"rowValueChanged\"));\r\n    this.cleanupEditors({ rowNode }, true);\r\n    this.rowNode = void 0;\r\n    return true;\r\n  }\r\n  onCellFocusChanged(event) {\r\n    const { rowIndex } = event;\r\n    const prev = event[\"previousParams\"];\r\n    if (prev?.rowIndex === rowIndex || event.sourceEvent instanceof KeyboardEvent) {\r\n      return;\r\n    }\r\n    const prevCell = _getCellCtrl(this.beans, prev);\r\n    const isBlock = this.gos.get(\"invalidEditValueMode\") === \"block\";\r\n    if (isBlock && prevCell && (this.model.getCellValidationModel().getCellValidation(prevCell) || this.model.getRowValidationModel().getRowValidation(prevCell))) {\r\n      return;\r\n    }\r\n    super.onCellFocusChanged(event);\r\n  }\r\n  cleanupEditors(position = {}, includeEditing) {\r\n    super.cleanupEditors(position, includeEditing);\r\n    this.startedRows.forEach((rowNode) => this.dispatchRowEvent({ rowNode }, \"rowEditingStopped\"));\r\n    this.startedRows.length = 0;\r\n  }\r\n  // returns null if no navigation should be performed\r\n  moveToNextEditingCell(prevCell, backwards, event, source = \"ui\", preventNavigation = false) {\r\n    const prevPos = prevCell.cellPosition;\r\n    let nextCell;\r\n    this.model.suspend(true);\r\n    try {\r\n      nextCell = this.beans.navigation?.findNextCellToFocusOn(prevPos, {\r\n        backwards,\r\n        startEditing: true,\r\n        // Default behaviour for fullRow is skip to the next cell,\r\n        // editable or not. FullRow editing might have some editable\r\n        // and some not editable cells in the row.\r\n        // More complex logic needed to skip to the\r\n        // next FullRow editable cell,\r\n        skipToNextEditableCell: false\r\n      });\r\n    } finally {\r\n      this.model.suspend(false);\r\n    }\r\n    if (nextCell === false) {\r\n      return null;\r\n    }\r\n    if (nextCell == null) {\r\n      return false;\r\n    }\r\n    const nextPos = nextCell.cellPosition;\r\n    const prevEditable = prevCell.isCellEditable();\r\n    const nextEditable = nextCell.isCellEditable();\r\n    const rowsMatch = nextPos && prevPos.rowIndex === nextPos.rowIndex && prevPos.rowPinned === nextPos.rowPinned;\r\n    if (prevEditable) {\r\n      this.setFocusOutOnEditor(prevCell);\r\n    }\r\n    this.restoreEditors();\r\n    const suppressStartEditOnTab = this.gos.get(\"suppressStartEditOnTab\");\r\n    if (nextEditable && !preventNavigation) {\r\n      if (suppressStartEditOnTab) {\r\n        nextCell.focusCell(true, event);\r\n      } else {\r\n        if (!nextCell.comp?.getCellEditor()) {\r\n          _setupEditor(this.beans, nextCell, { event, cellStartedEdit: true });\r\n        }\r\n        this.setFocusInOnEditor(nextCell);\r\n        nextCell.focusCell(false, event);\r\n      }\r\n    } else {\r\n      if (nextEditable && preventNavigation) {\r\n        this.setFocusInOnEditor(nextCell);\r\n      }\r\n      nextCell.focusCell(true, event);\r\n    }\r\n    if (!rowsMatch && !preventNavigation) {\r\n      this.cleanupEditors(nextCell, true);\r\n      if (suppressStartEditOnTab) {\r\n        nextCell.focusCell(true, event);\r\n      } else {\r\n        this.editSvc.startEditing(nextCell, { startedEdit: true, event, source, ignoreEventKey: true });\r\n      }\r\n    }\r\n    prevCell.rowCtrl?.refreshRow({ suppressFlash: true, force: true });\r\n    return true;\r\n  }\r\n  restoreEditors() {\r\n    this.model.getEditMap().forEach(\r\n      (rowEdits, rowNode) => rowEdits.forEach(({ state }, column) => {\r\n        if (state !== \"editing\") {\r\n          return;\r\n        }\r\n        const cellCtrl = _getCellCtrl(this.beans, {\r\n          rowNode,\r\n          column\r\n        });\r\n        if (cellCtrl && !cellCtrl.comp?.getCellEditor()) {\r\n          _setupEditor(this.beans, cellCtrl, { silent: true });\r\n        }\r\n      })\r\n    );\r\n  }\r\n  destroy() {\r\n    super.destroy();\r\n    this.rowNode = void 0;\r\n    this.startedRows.length = 0;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/edit/strategy/singleCellEditStrategy.ts\r\nvar SingleCellEditStrategy = class extends BaseEditStrategy {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"singleCell\";\r\n  }\r\n  shouldStop(position, event, source = \"ui\") {\r\n    const res = super.shouldStop(position, event, source);\r\n    if (res !== null) {\r\n      return res;\r\n    }\r\n    const { rowNode, column } = position || {};\r\n    if ((!this.rowNode || !this.column) && rowNode && column) {\r\n      return null;\r\n    }\r\n    return this.rowNode !== rowNode || this.column !== column;\r\n  }\r\n  midBatchInputsAllowed(position) {\r\n    return this.model.hasEdits(position);\r\n  }\r\n  start(position, event, _source = \"ui\", ignoreEventKey) {\r\n    if (this.rowNode !== position.rowNode || this.column !== position.column) {\r\n      super.cleanupEditors();\r\n    }\r\n    this.rowNode = position.rowNode;\r\n    this.column = position.column;\r\n    this.model.start(position);\r\n    this.setupEditors([position], position, true, event, ignoreEventKey);\r\n  }\r\n  dispatchRowEvent(_position, _type) {\r\n  }\r\n  processValidationResults(results) {\r\n    const anyFailed = results.fail.length > 0;\r\n    if (anyFailed && this.editSvc.cellEditingInvalidCommitBlocks()) {\r\n      return {\r\n        destroy: [],\r\n        keep: results.all\r\n      };\r\n    }\r\n    return {\r\n      destroy: results.all,\r\n      keep: []\r\n    };\r\n  }\r\n  stop(cancel, event) {\r\n    super.stop(cancel, event);\r\n    this.rowNode = void 0;\r\n    this.column = void 0;\r\n    return true;\r\n  }\r\n  onCellFocusChanged(event) {\r\n    const { colModel, editSvc } = this.beans;\r\n    const { rowIndex, column, rowPinned } = event;\r\n    const rowNode = _getRowNode(this.beans, { rowIndex, rowPinned });\r\n    const curColId = _getColId(column);\r\n    const curCol = colModel.getCol(curColId);\r\n    const previous = event[\"previousParams\"];\r\n    if (previous) {\r\n      const prevColId = _getColId(previous.column);\r\n      if (previous?.rowIndex === rowIndex && prevColId === curColId && previous?.rowPinned === rowPinned) {\r\n        return;\r\n      }\r\n    }\r\n    if (editSvc?.isEditing({ rowNode, column: curCol }, { withOpenEditor: true }) && event.type === \"cellFocused\") {\r\n      return;\r\n    }\r\n    super.onCellFocusChanged(event);\r\n  }\r\n  // returns null if no navigation should be performed\r\n  moveToNextEditingCell(prevCell, backwards, event, source = \"ui\", preventNavigation = false) {\r\n    const prevPos = prevCell.cellPosition;\r\n    let nextCell;\r\n    const shouldSuspend = this.beans.gos.get(\"editType\") === \"fullRow\";\r\n    if (shouldSuspend) {\r\n      this.model.suspend(true);\r\n    }\r\n    if (!preventNavigation) {\r\n      prevCell.eGui.focus();\r\n      this.editSvc?.stopEditing(prevCell, { source: this.editSvc?.isBatchEditing() ? \"ui\" : \"api\", event });\r\n    }\r\n    try {\r\n      nextCell = this.beans.navigation?.findNextCellToFocusOn(prevPos, {\r\n        backwards,\r\n        startEditing: true\r\n        // Default behaviour for fullRow is skip to the next cell,\r\n        // editable or not. FullRow editing might have some editable\r\n        // and some not editable cells in the row.\r\n        // More complex logic needed to skip to the\r\n        // next FullRow editable cell,\r\n        // skipToNextEditableCell: false,\r\n      });\r\n    } finally {\r\n      if (shouldSuspend) {\r\n        this.model.suspend(false);\r\n      }\r\n    }\r\n    if (nextCell === false) {\r\n      return null;\r\n    }\r\n    if (nextCell == null) {\r\n      return false;\r\n    }\r\n    const nextPos = nextCell.cellPosition;\r\n    const prevEditable = prevCell.isCellEditable();\r\n    const nextEditable = nextCell.isCellEditable();\r\n    const rowsMatch = nextPos && prevPos.rowIndex === nextPos.rowIndex && prevPos.rowPinned === nextPos.rowPinned;\r\n    if (prevEditable && !preventNavigation) {\r\n      this.setFocusOutOnEditor(prevCell);\r\n    }\r\n    const suppressStartEditOnTab = this.gos.get(\"suppressStartEditOnTab\");\r\n    if (!rowsMatch && !preventNavigation) {\r\n      super.cleanupEditors(nextCell, true);\r\n      if (suppressStartEditOnTab) {\r\n        nextCell.focusCell(true, event);\r\n      } else {\r\n        this.editSvc.startEditing(nextCell, { startedEdit: true, event, source, ignoreEventKey: true });\r\n      }\r\n    }\r\n    if (nextEditable && !preventNavigation) {\r\n      nextCell.focusCell(false, event);\r\n      if (suppressStartEditOnTab) {\r\n        nextCell.focusCell(true, event);\r\n      } else if (!nextCell.comp?.getCellEditor()) {\r\n        _setupEditor(this.beans, nextCell, { event, cellStartedEdit: true });\r\n        this.setFocusInOnEditor(nextCell);\r\n      }\r\n    } else {\r\n      if (nextEditable && preventNavigation) {\r\n        this.setFocusInOnEditor(nextCell);\r\n      }\r\n      nextCell.focusCell(true, event);\r\n    }\r\n    prevCell.rowCtrl?.refreshRow({ suppressFlash: true, force: true });\r\n    return true;\r\n  }\r\n  destroy() {\r\n    super.destroy();\r\n    this.rowNode = void 0;\r\n    this.column = void 0;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/edit/editModule.ts\r\nvar EditCoreModule = {\r\n  moduleName: \"EditCore\",\r\n  version: VERSION,\r\n  beans: [EditModelService, EditService],\r\n  apiFunctions: {\r\n    getEditingCells,\r\n    getCellEditorInstances,\r\n    startEditingCell,\r\n    stopEditing,\r\n    isEditing,\r\n    validateEdit\r\n  },\r\n  dynamicBeans: {\r\n    singleCell: SingleCellEditStrategy,\r\n    fullRow: FullRowEditStrategy\r\n  },\r\n  dependsOn: [PopupModule, TooltipModule],\r\n  css: [cellEditingCSS]\r\n};\r\nvar UndoRedoEditModule = {\r\n  moduleName: \"UndoRedoEdit\",\r\n  version: VERSION,\r\n  beans: [UndoRedoService],\r\n  apiFunctions: {\r\n    undoCellEditing,\r\n    redoCellEditing,\r\n    getCurrentUndoSize,\r\n    getCurrentRedoSize\r\n  },\r\n  dependsOn: [EditCoreModule]\r\n};\r\nvar TextEditorModule = {\r\n  moduleName: \"TextEditor\",\r\n  version: VERSION,\r\n  userComponents: { agCellEditor: TextCellEditor, agTextCellEditor: TextCellEditor },\r\n  dependsOn: [EditCoreModule]\r\n};\r\nvar NumberEditorModule = {\r\n  moduleName: \"NumberEditor\",\r\n  version: VERSION,\r\n  userComponents: {\r\n    agNumberCellEditor: {\r\n      classImp: NumberCellEditor\r\n    }\r\n  },\r\n  dependsOn: [EditCoreModule]\r\n};\r\nvar DateEditorModule = {\r\n  moduleName: \"DateEditor\",\r\n  version: VERSION,\r\n  userComponents: {\r\n    agDateCellEditor: DateCellEditor,\r\n    agDateStringCellEditor: DateStringCellEditor\r\n  },\r\n  dependsOn: [EditCoreModule]\r\n};\r\nvar CheckboxEditorModule = {\r\n  moduleName: \"CheckboxEditor\",\r\n  version: VERSION,\r\n  userComponents: {\r\n    agCheckboxCellEditor: CheckboxCellEditor\r\n  },\r\n  dependsOn: [EditCoreModule]\r\n};\r\nvar SelectEditorModule = {\r\n  moduleName: \"SelectEditor\",\r\n  version: VERSION,\r\n  userComponents: { agSelectCellEditor: SelectCellEditor },\r\n  dependsOn: [EditCoreModule]\r\n};\r\nvar LargeTextEditorModule = {\r\n  moduleName: \"LargeTextEditor\",\r\n  version: VERSION,\r\n  userComponents: { agLargeTextCellEditor: LargeTextCellEditor },\r\n  dependsOn: [EditCoreModule]\r\n};\r\nvar CustomEditorModule = {\r\n  moduleName: \"CustomEditor\",\r\n  version: VERSION,\r\n  dependsOn: [EditCoreModule]\r\n};\r\n\r\n// packages/ag-grid-community/src/columns/selectionColService.ts\r\nvar SelectionColService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"selectionColSvc\";\r\n  }\r\n  postConstruct() {\r\n    this.addManagedPropertyListener(\"rowSelection\", (event) => {\r\n      this.onSelectionOptionsChanged(\r\n        event.currentValue,\r\n        event.previousValue,\r\n        _convertColumnEventSourceType(event.source)\r\n      );\r\n    });\r\n    this.addManagedPropertyListener(\"selectionColumnDef\", this.updateColumns.bind(this));\r\n  }\r\n  addColumns(cols) {\r\n    const selectionCols = this.columns;\r\n    if (selectionCols == null) {\r\n      return;\r\n    }\r\n    cols.list = selectionCols.list.concat(cols.list);\r\n    cols.tree = selectionCols.tree.concat(cols.tree);\r\n    _updateColsMap(cols);\r\n  }\r\n  createColumns(cols, updateOrders) {\r\n    const destroyCollection = () => {\r\n      _destroyColumnTree(this.beans, this.columns?.tree);\r\n      this.columns = null;\r\n    };\r\n    const newTreeDepth = cols.treeDepth;\r\n    const oldTreeDepth = this.columns?.treeDepth ?? -1;\r\n    const treeDepthSame = oldTreeDepth == newTreeDepth;\r\n    const list = this.generateSelectionCols();\r\n    const areSame = _areColIdsEqual(list, this.columns?.list ?? []);\r\n    if (areSame && treeDepthSame) {\r\n      return;\r\n    }\r\n    destroyCollection();\r\n    const { colGroupSvc } = this.beans;\r\n    const treeDepth = colGroupSvc?.findDepth(cols.tree) ?? 0;\r\n    const tree = colGroupSvc?.balanceTreeForAutoCols(list, treeDepth) ?? [];\r\n    this.columns = {\r\n      list,\r\n      tree,\r\n      treeDepth,\r\n      map: {}\r\n    };\r\n    const putSelectionColsFirstInList = (cols2) => {\r\n      if (!cols2) {\r\n        return null;\r\n      }\r\n      const colsFiltered = cols2.filter((col) => !isColumnSelectionCol(col));\r\n      return [...list, ...colsFiltered];\r\n    };\r\n    updateOrders(putSelectionColsFirstInList);\r\n  }\r\n  updateColumns(event) {\r\n    const source = _convertColumnEventSourceType(event.source);\r\n    this.columns?.list.forEach((col) => {\r\n      const newColDef = this.createSelectionColDef(event.currentValue);\r\n      col.setColDef(newColDef, null, source);\r\n      _applyColumnState(this.beans, { state: [{ ...newColDef, colId: col.getColId() }] }, source);\r\n    });\r\n  }\r\n  getColumn(key) {\r\n    return this.columns?.list.find((col) => _columnsMatch(col, key)) ?? null;\r\n  }\r\n  getColumns() {\r\n    return this.columns?.list ?? null;\r\n  }\r\n  isSelectionColumnEnabled() {\r\n    const { gos, beans } = this;\r\n    const rowSelection = gos.get(\"rowSelection\");\r\n    if (typeof rowSelection !== \"object\" || !_isRowSelection(gos)) {\r\n      return false;\r\n    }\r\n    const hasAutoCols = (beans.autoColSvc?.getColumns()?.length ?? 0) > 0;\r\n    if (rowSelection.checkboxLocation === \"autoGroupColumn\" && hasAutoCols) {\r\n      return false;\r\n    }\r\n    const checkboxes = !!_getCheckboxes(rowSelection);\r\n    const headerCheckbox = _getHeaderCheckbox(rowSelection);\r\n    return checkboxes || headerCheckbox;\r\n  }\r\n  createSelectionColDef(def) {\r\n    const { gos } = this.beans;\r\n    const selectionColumnDef = def ?? gos.get(\"selectionColumnDef\");\r\n    const enableRTL = gos.get(\"enableRtl\");\r\n    const { rowSpan: _, spanRows: __, ...filteredSelColDef } = selectionColumnDef ?? {};\r\n    return {\r\n      // overridable properties\r\n      width: 50,\r\n      resizable: false,\r\n      suppressHeaderMenuButton: true,\r\n      sortable: false,\r\n      suppressMovable: true,\r\n      lockPosition: enableRTL ? \"right\" : \"left\",\r\n      comparator(valueA, valueB, nodeA, nodeB) {\r\n        const aSelected = nodeA.isSelected();\r\n        const bSelected = nodeB.isSelected();\r\n        return aSelected === bSelected ? 0 : aSelected ? 1 : -1;\r\n      },\r\n      editable: false,\r\n      suppressFillHandle: true,\r\n      pinned: null,\r\n      // overrides\r\n      ...filteredSelColDef,\r\n      // non-overridable properties\r\n      colId: SELECTION_COLUMN_ID,\r\n      chartDataType: \"excluded\"\r\n    };\r\n  }\r\n  generateSelectionCols() {\r\n    if (!this.isSelectionColumnEnabled()) {\r\n      return [];\r\n    }\r\n    const colDef = this.createSelectionColDef();\r\n    const colId = colDef.colId;\r\n    this.gos.validateColDef(colDef, colId, true);\r\n    const col = new AgColumn(colDef, null, colId, false);\r\n    this.createBean(col);\r\n    return [col];\r\n  }\r\n  onSelectionOptionsChanged(current, prev, source) {\r\n    const prevCheckbox = prev && typeof prev !== \"string\" ? _getCheckboxes(prev) : void 0;\r\n    const currCheckbox = current && typeof current !== \"string\" ? _getCheckboxes(current) : void 0;\r\n    const checkboxHasChanged = prevCheckbox !== currCheckbox;\r\n    const prevHeaderCheckbox = prev && typeof prev !== \"string\" ? _getHeaderCheckbox(prev) : void 0;\r\n    const currHeaderCheckbox = current && typeof current !== \"string\" ? _getHeaderCheckbox(current) : void 0;\r\n    const headerCheckboxHasChanged = prevHeaderCheckbox !== currHeaderCheckbox;\r\n    const currLocation = _getCheckboxLocation(current);\r\n    const prevLocation = _getCheckboxLocation(prev);\r\n    const locationChanged = currLocation !== prevLocation;\r\n    if (checkboxHasChanged || headerCheckboxHasChanged || locationChanged) {\r\n      this.beans.colModel.refreshAll(source);\r\n    }\r\n  }\r\n  destroy() {\r\n    _destroyColumnTree(this.beans, this.columns?.tree);\r\n    super.destroy();\r\n  }\r\n  /**\r\n   * Refreshes visibility of the selection column based on which columns are currently visible.\r\n   * Called by the VisibleColsService with the columns that are currently visible in left/center/right\r\n   * containers. This method *MUTATES* those arrays directly.\r\n   *\r\n   * The selection column should be visible if all of the following are true\r\n   * - The selection column is not disabled\r\n   * - The number of visible columns excluding the selection column and row numbers column is greater than 0\r\n   * @param leftCols Visible columns in the left-pinned container\r\n   * @param centerCols Visible columns in the center viewport\r\n   * @param rightCols Visible columns in the right-pinned container\r\n   */\r\n  refreshVisibility(leftCols, centerCols, rightCols) {\r\n    if (!this.columns?.list.length) {\r\n      return;\r\n    }\r\n    const numVisibleCols = leftCols.length + centerCols.length + rightCols.length;\r\n    if (numVisibleCols === 0) {\r\n      return;\r\n    }\r\n    const column = this.columns.list[0];\r\n    if (!column.isVisible())\r\n      return;\r\n    const hideSelectionCol = () => {\r\n      let cols;\r\n      switch (column.pinned) {\r\n        case \"left\":\r\n        case true:\r\n          cols = leftCols;\r\n          break;\r\n        case \"right\":\r\n          cols = rightCols;\r\n          break;\r\n        default:\r\n          cols = centerCols;\r\n      }\r\n      cols && _removeFromArray(cols, column);\r\n    };\r\n    const rowNumbersCol = this.beans.rowNumbersSvc?.getColumn(ROW_NUMBERS_COLUMN_ID);\r\n    const expectedNumCols = rowNumbersCol ? 2 : 1;\r\n    if (expectedNumCols === numVisibleCols) {\r\n      hideSelectionCol();\r\n    }\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/selection/rowSelectionApi.ts\r\nfunction setNodesSelected(beans, params) {\r\n  const allNodesValid = params.nodes.every((node) => {\r\n    if (node.rowPinned && !_isManualPinnedRow(node)) {\r\n      _warn(59);\r\n      return false;\r\n    }\r\n    if (node.id === void 0) {\r\n      _warn(60);\r\n      return false;\r\n    }\r\n    return true;\r\n  });\r\n  if (!allNodesValid) {\r\n    return;\r\n  }\r\n  const { nodes, source, newValue } = params;\r\n  beans.selectionSvc?.setNodesSelected({ nodes, source: source ?? \"api\", newValue });\r\n}\r\nfunction selectAll(beans, selectAll2, source = \"apiSelectAll\") {\r\n  beans.selectionSvc?.selectAllRowNodes({ source, selectAll: selectAll2 });\r\n}\r\nfunction deselectAll(beans, selectAll2, source = \"apiSelectAll\") {\r\n  beans.selectionSvc?.deselectAllRowNodes({ source, selectAll: selectAll2 });\r\n}\r\nfunction selectAllFiltered(beans, source = \"apiSelectAllFiltered\") {\r\n  beans.selectionSvc?.selectAllRowNodes({ source, selectAll: \"filtered\" });\r\n}\r\nfunction deselectAllFiltered(beans, source = \"apiSelectAllFiltered\") {\r\n  beans.selectionSvc?.deselectAllRowNodes({ source, selectAll: \"filtered\" });\r\n}\r\nfunction selectAllOnCurrentPage(beans, source = \"apiSelectAllCurrentPage\") {\r\n  beans.selectionSvc?.selectAllRowNodes({ source, selectAll: \"currentPage\" });\r\n}\r\nfunction deselectAllOnCurrentPage(beans, source = \"apiSelectAllCurrentPage\") {\r\n  beans.selectionSvc?.deselectAllRowNodes({ source, selectAll: \"currentPage\" });\r\n}\r\nfunction getSelectedNodes(beans) {\r\n  return beans.selectionSvc?.getSelectedNodes() ?? [];\r\n}\r\nfunction getSelectedRows(beans) {\r\n  return beans.selectionSvc?.getSelectedRows() ?? [];\r\n}\r\n\r\n// packages/ag-grid-community/src/selection/selectionService.ts\r\nvar SelectionService = class extends BaseSelectionService {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"selectionSvc\";\r\n    this.selectedNodes = /* @__PURE__ */ new Map();\r\n    /** Only used to track detail grid selection state when master/detail is enabled */\r\n    this.detailSelection = /* @__PURE__ */ new Map();\r\n    this.masterSelectsDetail = false;\r\n  }\r\n  postConstruct() {\r\n    super.postConstruct();\r\n    const { gos } = this;\r\n    this.mode = _getRowSelectionMode(gos);\r\n    this.groupSelectsDescendants = _getGroupSelectsDescendants(gos);\r\n    this.groupSelectsFiltered = _getGroupSelection(gos) === \"filteredDescendants\";\r\n    this.masterSelectsDetail = _getMasterSelects(gos) === \"detail\";\r\n    this.addManagedPropertyListeners([\"groupSelectsChildren\", \"groupSelectsFiltered\", \"rowSelection\"], () => {\r\n      const groupSelectsDescendants = _getGroupSelectsDescendants(gos);\r\n      const selectionMode = _getRowSelectionMode(gos);\r\n      const groupSelectsFiltered = _getGroupSelection(gos) === \"filteredDescendants\";\r\n      this.masterSelectsDetail = _getMasterSelects(gos) === \"detail\";\r\n      if (groupSelectsDescendants !== this.groupSelectsDescendants || groupSelectsFiltered !== this.groupSelectsFiltered || selectionMode !== this.mode) {\r\n        this.deselectAllRowNodes({ source: \"api\" });\r\n        this.groupSelectsDescendants = groupSelectsDescendants;\r\n        this.groupSelectsFiltered = groupSelectsFiltered;\r\n        this.mode = selectionMode;\r\n      }\r\n    });\r\n    this.addManagedEventListeners({ rowSelected: this.onRowSelected.bind(this) });\r\n  }\r\n  destroy() {\r\n    super.destroy();\r\n    this.resetNodes();\r\n  }\r\n  handleSelectionEvent(event, rowNode, source) {\r\n    if (this.isRowSelectionBlocked(rowNode))\r\n      return 0;\r\n    const selection = this.inferNodeSelections(rowNode, event.shiftKey, event.metaKey || event.ctrlKey, source);\r\n    if (selection == null) {\r\n      return 0;\r\n    }\r\n    this.selectionCtx.selectAll = false;\r\n    if (\"select\" in selection) {\r\n      if (selection.reset) {\r\n        this.resetNodes();\r\n      } else {\r\n        this.selectRange(selection.deselect, false, source);\r\n      }\r\n      return this.selectRange(selection.select, true, source);\r\n    } else {\r\n      return this.setNodesSelected({\r\n        nodes: [selection.node],\r\n        newValue: selection.newValue,\r\n        clearSelection: selection.clearSelection,\r\n        keepDescendants: selection.keepDescendants,\r\n        event,\r\n        source\r\n      });\r\n    }\r\n  }\r\n  setNodesSelected({\r\n    newValue,\r\n    clearSelection,\r\n    suppressFinishActions,\r\n    nodes,\r\n    event,\r\n    source,\r\n    keepDescendants = false\r\n  }) {\r\n    if (!_isRowSelection(this.gos) && newValue) {\r\n      _warn(132);\r\n      return 0;\r\n    }\r\n    if (nodes.length === 0)\r\n      return 0;\r\n    if (nodes.length > 1 && !this.isMultiSelect()) {\r\n      _warn(130);\r\n      return 0;\r\n    }\r\n    let updatedCount = 0;\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      const rowNode = nodes[i];\r\n      const node = _normaliseSiblingRef(rowNode);\r\n      const skipThisNode = this.groupSelectsFiltered && node.group;\r\n      if (node.rowPinned && !_isManualPinnedRow(node)) {\r\n        _warn(59);\r\n        continue;\r\n      }\r\n      if (node.id === void 0) {\r\n        _warn(60);\r\n        continue;\r\n      }\r\n      if (!skipThisNode) {\r\n        const thisNodeWasSelected = this.selectRowNode(node, newValue, event, source);\r\n        if (thisNodeWasSelected) {\r\n          this.detailSelection.delete(node.id);\r\n          updatedCount++;\r\n        }\r\n      }\r\n      if (this.groupSelectsDescendants && node.childrenAfterGroup?.length) {\r\n        updatedCount += this.selectChildren(node, newValue, source);\r\n      }\r\n    }\r\n    if (!suppressFinishActions) {\r\n      if (nodes.length === 1 && source === \"api\") {\r\n        this.selectionCtx.setRoot(_normaliseSiblingRef(nodes[0]));\r\n      }\r\n      const clearOtherNodes = newValue && (clearSelection || !this.isMultiSelect());\r\n      if (clearOtherNodes) {\r\n        updatedCount += this.clearOtherNodes(_normaliseSiblingRef(nodes[0]), keepDescendants, source);\r\n      }\r\n      if (updatedCount > 0) {\r\n        this.updateGroupsFromChildrenSelections(source);\r\n        this.dispatchSelectionChanged(source);\r\n      }\r\n    }\r\n    return updatedCount;\r\n  }\r\n  // not to be mixed up with 'cell range selection' where you drag the mouse, this is row range selection, by\r\n  // holding down 'shift'.\r\n  selectRange(nodesToSelect, value, source) {\r\n    let updatedCount = 0;\r\n    nodesToSelect.forEach((node) => {\r\n      const rowNode = _normaliseSiblingRef(node);\r\n      if (rowNode.group && this.groupSelectsDescendants) {\r\n        return;\r\n      }\r\n      const nodeWasSelected = this.selectRowNode(rowNode, value, void 0, source);\r\n      if (nodeWasSelected) {\r\n        updatedCount++;\r\n      }\r\n    });\r\n    if (updatedCount > 0) {\r\n      this.updateGroupsFromChildrenSelections(source);\r\n      this.dispatchSelectionChanged(source);\r\n    }\r\n    return updatedCount;\r\n  }\r\n  selectChildren(node, newValue, source) {\r\n    const children = this.groupSelectsFiltered ? node.childrenAfterAggFilter : node.childrenAfterGroup;\r\n    if (!children) {\r\n      return 0;\r\n    }\r\n    return this.setNodesSelected({\r\n      newValue,\r\n      clearSelection: false,\r\n      suppressFinishActions: true,\r\n      source,\r\n      nodes: children\r\n    });\r\n  }\r\n  getSelectedNodes() {\r\n    return Array.from(this.selectedNodes.values());\r\n  }\r\n  getSelectedRows() {\r\n    const selectedRows = [];\r\n    this.selectedNodes.forEach((rowNode) => rowNode.data && selectedRows.push(rowNode.data));\r\n    return selectedRows;\r\n  }\r\n  getSelectionCount() {\r\n    return this.selectedNodes.size;\r\n  }\r\n  /**\r\n   * This method is used by the CSRM to remove groups which are being disposed of,\r\n   * events do not need fired in this case\r\n   */\r\n  filterFromSelection(predicate) {\r\n    const newSelectedNodes = /* @__PURE__ */ new Map();\r\n    this.selectedNodes.forEach((rowNode, key) => {\r\n      if (predicate(rowNode)) {\r\n        newSelectedNodes.set(key, rowNode);\r\n      }\r\n    });\r\n    this.selectedNodes = newSelectedNodes;\r\n  }\r\n  updateGroupsFromChildrenSelections(source, changedPath) {\r\n    if (!this.groupSelectsDescendants) {\r\n      return false;\r\n    }\r\n    const { gos, rowModel } = this.beans;\r\n    if (!_isClientSideRowModel(gos, rowModel)) {\r\n      return false;\r\n    }\r\n    const rootNode = rowModel.rootNode;\r\n    if (!rootNode) {\r\n      return false;\r\n    }\r\n    if (!changedPath) {\r\n      changedPath = new ChangedPath(true, rootNode);\r\n      changedPath.active = false;\r\n    }\r\n    let selectionChanged = false;\r\n    changedPath.forEachChangedNodeDepthFirst((rowNode) => {\r\n      if (rowNode !== rootNode) {\r\n        const selected = this.calculateSelectedFromChildren(rowNode);\r\n        selectionChanged = this.selectRowNode(rowNode, selected === null ? false : selected, void 0, source) || selectionChanged;\r\n      }\r\n    });\r\n    return selectionChanged;\r\n  }\r\n  clearOtherNodes(rowNodeToKeepSelected, keepDescendants, source) {\r\n    const groupsToRefresh = /* @__PURE__ */ new Map();\r\n    let updatedCount = 0;\r\n    this.selectedNodes.forEach((otherRowNode) => {\r\n      const isNodeToKeep = otherRowNode.id == rowNodeToKeepSelected.id;\r\n      const shouldClearDescendant = keepDescendants ? !isDescendantOf(rowNodeToKeepSelected, otherRowNode) : true;\r\n      if (shouldClearDescendant && !isNodeToKeep) {\r\n        const rowNode = this.selectedNodes.get(otherRowNode.id);\r\n        updatedCount += this.setNodesSelected({\r\n          nodes: [rowNode],\r\n          newValue: false,\r\n          clearSelection: false,\r\n          suppressFinishActions: true,\r\n          source\r\n        });\r\n        if (this.groupSelectsDescendants && otherRowNode.parent) {\r\n          groupsToRefresh.set(otherRowNode.parent.id, otherRowNode.parent);\r\n        }\r\n      }\r\n    });\r\n    groupsToRefresh.forEach((group) => {\r\n      const selected = this.calculateSelectedFromChildren(group);\r\n      this.selectRowNode(group, selected === null ? false : selected, void 0, source);\r\n    });\r\n    return updatedCount;\r\n  }\r\n  onRowSelected(event) {\r\n    const rowNode = event.node;\r\n    if (this.groupSelectsDescendants && rowNode.group) {\r\n      return;\r\n    }\r\n    if (rowNode.isSelected()) {\r\n      this.selectedNodes.set(rowNode.id, rowNode);\r\n    } else {\r\n      this.selectedNodes.delete(rowNode.id);\r\n    }\r\n  }\r\n  syncInRowNode(rowNode, oldNode) {\r\n    this.syncInOldRowNode(rowNode, oldNode);\r\n    this.syncInNewRowNode(rowNode);\r\n  }\r\n  createDaemonNode(rowNode) {\r\n    if (!rowNode.id) {\r\n      return void 0;\r\n    }\r\n    const oldNode = new RowNode(this.beans);\r\n    oldNode.id = rowNode.id;\r\n    oldNode.data = rowNode.data;\r\n    oldNode.__daemon = true;\r\n    oldNode.__selected = rowNode.__selected;\r\n    oldNode.level = rowNode.level;\r\n    return oldNode;\r\n  }\r\n  // if the id has changed for the node, then this means the rowNode\r\n  // is getting used for a different data item, which breaks\r\n  // our selectedNodes, as the node now is mapped by the old id\r\n  // which is inconsistent. so to keep the old node as selected,\r\n  // we swap in the clone (with the old id and old data). this means\r\n  // the oldNode is effectively a daemon we keep a reference to,\r\n  // so if client calls api.getSelectedNodes(), it gets the daemon\r\n  // in the result. when the client un-selects, the reference to the\r\n  // daemon is removed. the daemon, because it's an oldNode, is not\r\n  // used by the grid for rendering, it's a copy of what the node used\r\n  // to be like before the id was changed.\r\n  syncInOldRowNode(rowNode, oldNode) {\r\n    if (oldNode && rowNode.id !== oldNode.id) {\r\n      const oldNodeSelected = this.selectedNodes.get(oldNode.id) == rowNode;\r\n      if (oldNodeSelected) {\r\n        this.selectedNodes.set(oldNode.id, oldNode);\r\n      }\r\n    }\r\n  }\r\n  syncInNewRowNode(rowNode) {\r\n    if (this.selectedNodes.has(rowNode.id)) {\r\n      rowNode.__selected = true;\r\n      this.selectedNodes.set(rowNode.id, rowNode);\r\n    } else {\r\n      rowNode.__selected = false;\r\n    }\r\n  }\r\n  reset(source) {\r\n    const selectionCount = this.getSelectionCount();\r\n    this.resetNodes();\r\n    if (selectionCount) {\r\n      this.dispatchSelectionChanged(source);\r\n    }\r\n  }\r\n  resetNodes() {\r\n    this.selectedNodes.forEach((node) => {\r\n      this.selectRowNode(node, false);\r\n    });\r\n    this.selectedNodes.clear();\r\n  }\r\n  // returns a list of all nodes at 'best cost' - a feature to be used\r\n  // with groups / trees. if a group has all it's children selected,\r\n  // then the group appears in the result, but not the children.\r\n  // Designed for use with 'children' as the group selection type,\r\n  // where groups don't actually appear in the selection normally.\r\n  getBestCostNodeSelection() {\r\n    const { gos, rowModel } = this.beans;\r\n    if (!_isClientSideRowModel(gos, rowModel)) {\r\n      return;\r\n    }\r\n    const topLevelNodes = rowModel.getTopLevelNodes();\r\n    if (topLevelNodes === null) {\r\n      return;\r\n    }\r\n    const result = [];\r\n    function traverse(nodes) {\r\n      for (let i = 0, l = nodes.length; i < l; i++) {\r\n        const node = nodes[i];\r\n        if (node.isSelected()) {\r\n          result.push(node);\r\n        } else {\r\n          if (node.group && node.childrenAfterGroup) {\r\n            traverse(node.childrenAfterGroup);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    traverse(topLevelNodes);\r\n    return result;\r\n  }\r\n  isEmpty() {\r\n    return this.getSelectionCount() === 0;\r\n  }\r\n  deselectAllRowNodes({ source, selectAll: selectAll2 }) {\r\n    const rowModelClientSide = _isClientSideRowModel(this.gos);\r\n    let updatedNodes = false;\r\n    const callback = (rowNode) => {\r\n      const updated = this.selectRowNode(_normaliseSiblingRef(rowNode), false, void 0, source);\r\n      updatedNodes || (updatedNodes = updated);\r\n    };\r\n    if (selectAll2 === \"currentPage\" || selectAll2 === \"filtered\") {\r\n      if (!rowModelClientSide) {\r\n        _error(102);\r\n        return;\r\n      }\r\n      this.getNodesToSelect(selectAll2).forEach(callback);\r\n    } else {\r\n      this.selectedNodes.forEach(callback);\r\n      this.reset(source);\r\n    }\r\n    this.selectionCtx.selectAll = false;\r\n    if (rowModelClientSide && this.groupSelectsDescendants) {\r\n      const updated = this.updateGroupsFromChildrenSelections(source);\r\n      updatedNodes || (updatedNodes = updated);\r\n    }\r\n    if (updatedNodes) {\r\n      this.dispatchSelectionChanged(source);\r\n    }\r\n  }\r\n  getSelectedCounts(selectAll2) {\r\n    let selectedCount = 0;\r\n    let notSelectedCount = 0;\r\n    this.getNodesToSelect(selectAll2).forEach((node) => {\r\n      if (this.groupSelectsDescendants && node.group) {\r\n        return;\r\n      }\r\n      if (node.isSelected()) {\r\n        selectedCount++;\r\n      } else if (node.selectable) {\r\n        notSelectedCount++;\r\n      }\r\n    });\r\n    return { selectedCount, notSelectedCount };\r\n  }\r\n  getSelectAllState(selectAll2) {\r\n    const { selectedCount, notSelectedCount } = this.getSelectedCounts(selectAll2);\r\n    return _calculateSelectAllState(selectedCount, notSelectedCount) ?? null;\r\n  }\r\n  hasNodesToSelect(selectAll2) {\r\n    return this.getNodesToSelect(selectAll2).filter((node) => node.selectable).length > 0;\r\n  }\r\n  /**\r\n   * @param selectAll See `MultiRowSelectionOptions.selectAll`\r\n   * @returns all nodes including unselectable nodes which are the target of this selection attempt\r\n   */\r\n  getNodesToSelect(selectAll2) {\r\n    if (!this.canSelectAll()) {\r\n      return [];\r\n    }\r\n    const nodes = [];\r\n    const addToResult = (node) => nodes.push(node);\r\n    if (selectAll2 === \"currentPage\") {\r\n      this.forEachNodeOnPage((node) => {\r\n        if (!node.group) {\r\n          addToResult(node);\r\n          return;\r\n        }\r\n        if (!node.expanded && !node.footer) {\r\n          const recursivelyAddChildren = (child) => {\r\n            addToResult(child);\r\n            child.childrenAfterFilter?.forEach(recursivelyAddChildren);\r\n          };\r\n          recursivelyAddChildren(node);\r\n          return;\r\n        }\r\n        if (!this.groupSelectsDescendants) {\r\n          addToResult(node);\r\n        }\r\n      });\r\n      return nodes;\r\n    }\r\n    const clientSideRowModel = this.beans.rowModel;\r\n    if (selectAll2 === \"filtered\") {\r\n      clientSideRowModel.forEachNodeAfterFilter(addToResult);\r\n      return nodes;\r\n    }\r\n    clientSideRowModel.forEachNode(addToResult);\r\n    return nodes;\r\n  }\r\n  forEachNodeOnPage(callback) {\r\n    const { pageBounds, rowModel } = this.beans;\r\n    const firstRow = pageBounds.getFirstRow();\r\n    const lastRow = pageBounds.getLastRow();\r\n    for (let i = firstRow; i <= lastRow; i++) {\r\n      const node = rowModel.getRow(i);\r\n      if (node) {\r\n        callback(node);\r\n      }\r\n    }\r\n  }\r\n  selectAllRowNodes(params) {\r\n    const { gos, selectionCtx } = this;\r\n    if (!_isRowSelection(gos)) {\r\n      _warn(132);\r\n      return;\r\n    }\r\n    if (_isUsingNewRowSelectionAPI(gos) && !_isMultiRowSelection(gos)) {\r\n      _warn(130);\r\n      return;\r\n    }\r\n    if (!this.canSelectAll()) {\r\n      return;\r\n    }\r\n    const { source, selectAll: selectAll2 } = params;\r\n    let updatedNodes = false;\r\n    this.getNodesToSelect(selectAll2).forEach((rowNode) => {\r\n      const updated = this.selectRowNode(_normaliseSiblingRef(rowNode), true, void 0, source);\r\n      updatedNodes || (updatedNodes = updated);\r\n    });\r\n    selectionCtx.selectAll = true;\r\n    if (_isClientSideRowModel(gos) && this.groupSelectsDescendants) {\r\n      const updated = this.updateGroupsFromChildrenSelections(source);\r\n      updatedNodes || (updatedNodes = updated);\r\n    }\r\n    if (updatedNodes) {\r\n      this.dispatchSelectionChanged(source);\r\n    }\r\n  }\r\n  getSelectionState() {\r\n    return this.isEmpty() ? null : Array.from(this.selectedNodes.keys());\r\n  }\r\n  setSelectionState(state, source, clearSelection) {\r\n    if (!state) {\r\n      state = [];\r\n    }\r\n    if (!Array.isArray(state)) {\r\n      _error(103);\r\n      return;\r\n    }\r\n    const rowIds = new Set(state);\r\n    const nodes = [];\r\n    this.beans.rowModel.forEachNode((node) => {\r\n      if (rowIds.has(node.id)) {\r\n        nodes.push(node);\r\n      }\r\n    });\r\n    if (clearSelection) {\r\n      this.resetNodes();\r\n    }\r\n    this.setNodesSelected({\r\n      newValue: true,\r\n      nodes,\r\n      source\r\n    });\r\n  }\r\n  canSelectAll() {\r\n    const { gos } = this.beans;\r\n    if (!_isClientSideRowModel(gos)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  /**\r\n   * Updates the selectable state for a node by invoking isRowSelectable callback.\r\n   * If the node is not selectable, it will be deselected.\r\n   *\r\n   * Callers:\r\n   *  - property isRowSelectable changed\r\n   *  - after grouping / treeData via `updateSelectableAfterGrouping`\r\n   */\r\n  updateSelectable(changedPath) {\r\n    const { gos, rowModel } = this.beans;\r\n    if (!_isRowSelection(gos)) {\r\n      return;\r\n    }\r\n    const source = \"selectableChanged\";\r\n    const skipLeafNodes = changedPath !== void 0;\r\n    const isCSRMGroupSelectsDescendants = _isClientSideRowModel(gos) && this.groupSelectsDescendants;\r\n    const nodesToDeselect = [];\r\n    const nodeCallback = (node) => {\r\n      if (skipLeafNodes && !node.group) {\r\n        return;\r\n      }\r\n      if (isCSRMGroupSelectsDescendants && node.group) {\r\n        const hasSelectableChild = node.childrenAfterGroup?.some((rowNode) => rowNode.selectable) ?? false;\r\n        this.setRowSelectable(node, hasSelectableChild, true);\r\n        return;\r\n      }\r\n      const rowSelectable = this.updateRowSelectable(node, true);\r\n      if (!rowSelectable && node.isSelected()) {\r\n        nodesToDeselect.push(node);\r\n      }\r\n    };\r\n    if (isCSRMGroupSelectsDescendants) {\r\n      if (changedPath === void 0) {\r\n        const rootNode = rowModel.rootNode;\r\n        changedPath = rootNode ? new ChangedPath(false, rootNode) : void 0;\r\n      }\r\n      changedPath?.forEachChangedNodeDepthFirst(nodeCallback, !skipLeafNodes, !skipLeafNodes);\r\n    } else {\r\n      rowModel.forEachNode(nodeCallback);\r\n    }\r\n    if (nodesToDeselect.length) {\r\n      this.setNodesSelected({\r\n        nodes: nodesToDeselect,\r\n        newValue: false,\r\n        source\r\n      });\r\n    }\r\n    if (!skipLeafNodes && isCSRMGroupSelectsDescendants) {\r\n      this.updateGroupsFromChildrenSelections?.(source);\r\n    }\r\n  }\r\n  // only called by CSRM\r\n  updateSelectableAfterGrouping(changedPath) {\r\n    this.updateSelectable(changedPath);\r\n    if (this.groupSelectsDescendants) {\r\n      const selectionChanged = this.updateGroupsFromChildrenSelections?.(\"rowGroupChanged\", changedPath);\r\n      if (selectionChanged) {\r\n        this.dispatchSelectionChanged(\"rowGroupChanged\");\r\n      }\r\n    }\r\n  }\r\n  refreshMasterNodeState(node, e) {\r\n    if (!this.masterSelectsDetail)\r\n      return;\r\n    const detailApi = node.detailNode?.detailGridInfo?.api;\r\n    if (!detailApi)\r\n      return;\r\n    const isSelectAll = _isAllSelected(detailApi);\r\n    const current = node.isSelected();\r\n    if (current !== isSelectAll) {\r\n      const selectionChanged = this.selectRowNode(node, isSelectAll, e, \"masterDetail\");\r\n      if (selectionChanged) {\r\n        this.dispatchSelectionChanged(\"masterDetail\");\r\n      }\r\n    }\r\n    if (!isSelectAll) {\r\n      const detailSelected = this.detailSelection.get(node.id) ?? /* @__PURE__ */ new Set();\r\n      for (const n of detailApi.getSelectedNodes()) {\r\n        detailSelected.add(n.id);\r\n      }\r\n      this.detailSelection.set(node.id, detailSelected);\r\n    }\r\n  }\r\n  setDetailSelectionState(masterNode, detailGridOptions, detailApi) {\r\n    if (!this.masterSelectsDetail)\r\n      return;\r\n    if (!_isMultiRowSelection(detailGridOptions)) {\r\n      _warn(269);\r\n      return;\r\n    }\r\n    switch (masterNode.isSelected()) {\r\n      case true: {\r\n        detailApi.selectAll();\r\n        break;\r\n      }\r\n      case false: {\r\n        detailApi.deselectAll();\r\n        break;\r\n      }\r\n      case void 0: {\r\n        const selectedIds = this.detailSelection.get(masterNode.id);\r\n        if (selectedIds) {\r\n          const nodes = [];\r\n          for (const id of selectedIds) {\r\n            const n = detailApi.getRowNode(id);\r\n            if (n) {\r\n              nodes.push(n);\r\n            }\r\n          }\r\n          detailApi.setNodesSelected({ nodes, newValue: true, source: \"masterDetail\" });\r\n        }\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  dispatchSelectionChanged(source) {\r\n    this.eventSvc.dispatchEvent({\r\n      type: \"selectionChanged\",\r\n      source,\r\n      selectedNodes: this.getSelectedNodes(),\r\n      serverSideState: null\r\n    });\r\n  }\r\n};\r\nfunction _normaliseSiblingRef(node) {\r\n  return _isManualPinnedRow(node) ? node.pinnedSibling : node.footer ? node.sibling : node;\r\n}\r\nfunction _isAllSelected(api) {\r\n  let selectedCount = 0;\r\n  let notSelectedCount = 0;\r\n  api.forEachNode((node) => {\r\n    if (node.isSelected()) {\r\n      selectedCount++;\r\n    } else if (node.selectable) {\r\n      notSelectedCount++;\r\n    }\r\n  });\r\n  return _calculateSelectAllState(selectedCount, notSelectedCount);\r\n}\r\nfunction _calculateSelectAllState(selected, notSelected) {\r\n  if (selected === 0 && notSelected === 0) {\r\n    return false;\r\n  }\r\n  if (selected > 0 && notSelected > 0) {\r\n    return;\r\n  }\r\n  return selected > 0;\r\n}\r\nfunction isDescendantOf(root, child) {\r\n  let parent = child.parent;\r\n  while (parent) {\r\n    if (parent === root)\r\n      return true;\r\n    parent = parent.parent;\r\n  }\r\n  return false;\r\n}\r\n\r\n// packages/ag-grid-community/src/selection/rowSelectionModule.ts\r\nvar SharedRowSelectionModule = {\r\n  moduleName: \"SharedRowSelection\",\r\n  version: VERSION,\r\n  beans: [SelectionColService],\r\n  apiFunctions: {\r\n    setNodesSelected,\r\n    selectAll,\r\n    deselectAll,\r\n    selectAllFiltered,\r\n    deselectAllFiltered,\r\n    selectAllOnCurrentPage,\r\n    deselectAllOnCurrentPage,\r\n    getSelectedNodes,\r\n    getSelectedRows\r\n  }\r\n};\r\nvar RowSelectionModule = {\r\n  moduleName: \"RowSelection\",\r\n  version: VERSION,\r\n  rowModels: [\"clientSide\", \"infinite\", \"viewport\"],\r\n  beans: [SelectionService],\r\n  dependsOn: [SharedRowSelectionModule]\r\n};\r\n\r\n// packages/ag-grid-community/src/api/csrmSsrmSharedApi.ts\r\nfunction expandAll(beans) {\r\n  beans.expansionSvc?.expandAll(true);\r\n}\r\nfunction collapseAll(beans) {\r\n  beans.expansionSvc?.expandAll(false);\r\n}\r\nfunction onRowHeightChanged(beans) {\r\n  const clientSideRowModel = _getClientSideRowModel(beans);\r\n  const serverSideRowModel = _getServerSideRowModel(beans);\r\n  if (clientSideRowModel) {\r\n    clientSideRowModel.onRowHeightChanged();\r\n  } else if (serverSideRowModel) {\r\n    serverSideRowModel.onRowHeightChanged();\r\n  }\r\n}\r\n\r\n// packages/ag-grid-community/src/api/ssrmInfiniteSharedApi.ts\r\nfunction setRowCount(beans, rowCount, maxRowFound) {\r\n  const serverSideRowModel = _getServerSideRowModel(beans);\r\n  if (serverSideRowModel) {\r\n    if (beans.rowGroupColsSvc?.columns.length === 0) {\r\n      if (rowCount < 0) {\r\n        _error(238);\r\n        return;\r\n      }\r\n      serverSideRowModel.setRowCount(rowCount, maxRowFound);\r\n      return;\r\n    }\r\n    _error(28);\r\n    return;\r\n  }\r\n  const infiniteRowModel = _getInfiniteRowModel(beans);\r\n  if (infiniteRowModel) {\r\n    infiniteRowModel.setRowCount(rowCount, maxRowFound);\r\n    return;\r\n  }\r\n}\r\nfunction getCacheBlockState(beans) {\r\n  if (_isServerSideRowModel(beans.gos)) {\r\n    const ssrm = beans.rowModel;\r\n    return ssrm.getBlockStates();\r\n  }\r\n  return beans.rowNodeBlockLoader?.getBlockState() ?? {};\r\n}\r\nfunction isLastRowIndexKnown(beans) {\r\n  return beans.rowModel.isLastRowIndexKnown();\r\n}\r\n\r\n// packages/ag-grid-community/src/api/sharedApiModule.ts\r\nvar CsrmSsrmSharedApiModule = {\r\n  moduleName: \"CsrmSsrmSharedApi\",\r\n  version: VERSION,\r\n  apiFunctions: {\r\n    expandAll,\r\n    collapseAll,\r\n    onRowHeightChanged\r\n  }\r\n};\r\nvar SsrmInfiniteSharedApiModule = {\r\n  moduleName: \"SsrmInfiniteSharedApi\",\r\n  version: VERSION,\r\n  apiFunctions: {\r\n    setRowCount,\r\n    getCacheBlockState,\r\n    isLastRowIndexKnown\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/alignedGrids/alignedGridsService.ts\r\nvar AlignedGridsService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"alignedGridsSvc\";\r\n    // flag to mark if we are consuming. to avoid cyclic events (ie other grid firing back to master\r\n    // while processing a master event) we mark this if consuming an event, and if we are, then\r\n    // we don't fire back any events.\r\n    this.consuming = false;\r\n  }\r\n  getAlignedGridApis() {\r\n    let alignedGrids = this.gos.get(\"alignedGrids\") ?? [];\r\n    const isCallbackConfig = typeof alignedGrids === \"function\";\r\n    if (typeof alignedGrids === \"function\") {\r\n      alignedGrids = alignedGrids();\r\n    }\r\n    const apis = alignedGrids.map((alignedGrid) => {\r\n      if (!alignedGrid) {\r\n        _error(18);\r\n        if (!isCallbackConfig) {\r\n          _error(20);\r\n        }\r\n        return;\r\n      }\r\n      if (this.isGridApi(alignedGrid)) {\r\n        return alignedGrid;\r\n      }\r\n      const refOrComp = alignedGrid;\r\n      if (\"current\" in refOrComp) {\r\n        return refOrComp.current?.api;\r\n      }\r\n      if (!refOrComp.api) {\r\n        _error(19);\r\n      }\r\n      return refOrComp.api;\r\n    }).filter((api) => !!api && !api.isDestroyed());\r\n    return apis;\r\n  }\r\n  isGridApi(ref) {\r\n    return !!ref && !!ref.dispatchEvent;\r\n  }\r\n  postConstruct() {\r\n    const fireColumnEvent = this.fireColumnEvent.bind(this);\r\n    this.addManagedEventListeners({\r\n      columnMoved: fireColumnEvent,\r\n      columnVisible: fireColumnEvent,\r\n      columnPinned: fireColumnEvent,\r\n      columnGroupOpened: fireColumnEvent,\r\n      columnResized: fireColumnEvent,\r\n      bodyScroll: this.fireScrollEvent.bind(this),\r\n      alignedGridColumn: ({ event }) => this.onColumnEvent(event),\r\n      alignedGridScroll: ({ event }) => this.onScrollEvent(event)\r\n    });\r\n  }\r\n  // common logic across all the fire methods\r\n  fireEvent(event) {\r\n    if (this.consuming) {\r\n      return;\r\n    }\r\n    this.getAlignedGridApis().forEach((api) => {\r\n      if (api.isDestroyed()) {\r\n        return;\r\n      }\r\n      api.dispatchEvent(event);\r\n    });\r\n  }\r\n  // common logic across all consume methods. very little common logic, however extracting\r\n  // guarantees consistency across the methods.\r\n  onEvent(callback) {\r\n    this.consuming = true;\r\n    callback();\r\n    this.consuming = false;\r\n  }\r\n  fireColumnEvent(columnEvent) {\r\n    this.fireEvent({\r\n      type: \"alignedGridColumn\",\r\n      event: columnEvent\r\n    });\r\n  }\r\n  fireScrollEvent(scrollEvent) {\r\n    if (scrollEvent.direction !== \"horizontal\") {\r\n      return;\r\n    }\r\n    this.fireEvent({\r\n      type: \"alignedGridScroll\",\r\n      event: scrollEvent\r\n    });\r\n  }\r\n  onScrollEvent(event) {\r\n    this.onEvent(() => {\r\n      this.beans.ctrlsSvc.getScrollFeature().setHorizontalScrollPosition(event.left, true);\r\n    });\r\n  }\r\n  extractDataFromEvent(event, func) {\r\n    const result = [];\r\n    if (event.columns) {\r\n      event.columns.forEach((column) => {\r\n        result.push(func(column));\r\n      });\r\n    } else if (event.column) {\r\n      result.push(func(event.column));\r\n    }\r\n    return result;\r\n  }\r\n  getMasterColumns(event) {\r\n    return this.extractDataFromEvent(event, (col) => col);\r\n  }\r\n  getColumnIds(event) {\r\n    return this.extractDataFromEvent(event, (col) => col.getColId());\r\n  }\r\n  onColumnEvent(event) {\r\n    this.onEvent(() => {\r\n      switch (event.type) {\r\n        case \"columnMoved\":\r\n        case \"columnVisible\":\r\n        case \"columnPinned\":\r\n        case \"columnResized\": {\r\n          this.processColumnEvent(event);\r\n          break;\r\n        }\r\n        case \"columnGroupOpened\": {\r\n          this.processGroupOpenedEvent(event);\r\n          break;\r\n        }\r\n        case \"columnPivotChanged\":\r\n          _warn(21);\r\n          break;\r\n      }\r\n    });\r\n  }\r\n  processGroupOpenedEvent(groupOpenedEvent) {\r\n    const { colGroupSvc } = this.beans;\r\n    if (!colGroupSvc) {\r\n      return;\r\n    }\r\n    groupOpenedEvent.columnGroups.forEach((masterGroup) => {\r\n      let otherColumnGroup = null;\r\n      if (masterGroup) {\r\n        otherColumnGroup = colGroupSvc.getProvidedColGroup(masterGroup.getGroupId());\r\n      }\r\n      if (masterGroup && !otherColumnGroup) {\r\n        return;\r\n      }\r\n      colGroupSvc.setColumnGroupOpened(otherColumnGroup, masterGroup.isExpanded(), \"alignedGridChanged\");\r\n    });\r\n  }\r\n  processColumnEvent(colEvent) {\r\n    const masterColumn = colEvent.column;\r\n    let otherColumn = null;\r\n    const beans = this.beans;\r\n    const { colResize, ctrlsSvc, colModel } = beans;\r\n    if (masterColumn) {\r\n      otherColumn = colModel.getColDefCol(masterColumn.getColId());\r\n    }\r\n    if (masterColumn && !otherColumn) {\r\n      return;\r\n    }\r\n    const masterColumns = this.getMasterColumns(colEvent);\r\n    switch (colEvent.type) {\r\n      case \"columnMoved\":\r\n        {\r\n          const srcColState = colEvent.api.getColumnState();\r\n          const destColState = srcColState.map((s) => ({ colId: s.colId }));\r\n          _applyColumnState(beans, { state: destColState, applyOrder: true }, \"alignedGridChanged\");\r\n        }\r\n        break;\r\n      case \"columnVisible\":\r\n        {\r\n          const srcColState = colEvent.api.getColumnState();\r\n          const destColState = srcColState.map((s) => ({ colId: s.colId, hide: s.hide }));\r\n          _applyColumnState(beans, { state: destColState }, \"alignedGridChanged\");\r\n        }\r\n        break;\r\n      case \"columnPinned\":\r\n        {\r\n          const srcColState = colEvent.api.getColumnState();\r\n          const destColState = srcColState.map((s) => ({ colId: s.colId, pinned: s.pinned }));\r\n          _applyColumnState(beans, { state: destColState }, \"alignedGridChanged\");\r\n        }\r\n        break;\r\n      case \"columnResized\": {\r\n        const resizedEvent = colEvent;\r\n        const columnWidths = {};\r\n        masterColumns.forEach((column) => {\r\n          columnWidths[column.getId()] = { key: column.getColId(), newWidth: column.getActualWidth() };\r\n        });\r\n        resizedEvent.flexColumns?.forEach((col) => {\r\n          if (columnWidths[col.getId()]) {\r\n            delete columnWidths[col.getId()];\r\n          }\r\n        });\r\n        colResize?.setColumnWidths(\r\n          Object.values(columnWidths),\r\n          false,\r\n          resizedEvent.finished,\r\n          \"alignedGridChanged\"\r\n        );\r\n        break;\r\n      }\r\n    }\r\n    const gridBodyCon = ctrlsSvc.getGridBodyCtrl();\r\n    const isVerticalScrollShowing = gridBodyCon.isVerticalScrollShowing();\r\n    this.getAlignedGridApis().forEach((api) => {\r\n      api.setGridOption(\"alwaysShowVerticalScroll\", isVerticalScrollShowing);\r\n    });\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/alignedGrids/alignedGridsModule.ts\r\nvar AlignedGridsModule = {\r\n  moduleName: \"AlignedGrids\",\r\n  version: VERSION,\r\n  beans: [AlignedGridsService],\r\n  dependsOn: [ColumnApiModule]\r\n};\r\n\r\n// packages/ag-grid-community/src/clientSideRowModel/clientSideNodeManager.ts\r\nvar ClientSideNodeManager = class extends AbstractClientSideNodeManager {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"csrmNodeSvc\";\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/clientSideRowModel/changedRowNodes.ts\r\nvar ChangedRowNodes = class {\r\n  constructor() {\r\n    this.removals = /* @__PURE__ */ new Set();\r\n    this.updates = /* @__PURE__ */ new Set();\r\n    this.adds = /* @__PURE__ */ new Set();\r\n  }\r\n  /** Marks a row as removed. Order of operations is: remove, update, add */\r\n  remove(node) {\r\n    if (!this.adds.delete(node)) {\r\n      this.updates.delete(node);\r\n      this.removals.add(node);\r\n    }\r\n  }\r\n  /** Marks a row as updated. Order of operations is: remove, update, add */\r\n  update(node) {\r\n    if (!this.adds.has(node)) {\r\n      this.updates.add(node);\r\n    }\r\n  }\r\n  /** Marks a row as added. Order of operation is: remove, update, add */\r\n  add(node) {\r\n    this.adds.add(node);\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/clientSideRowModel/sortStage.ts\r\nfunction updateChildIndexes(rowNode) {\r\n  if (_missing(rowNode.childrenAfterSort)) {\r\n    return;\r\n  }\r\n  const listToSort = rowNode.childrenAfterSort;\r\n  for (let i = 0; i < listToSort.length; i++) {\r\n    const child = listToSort[i];\r\n    const firstChild = i === 0;\r\n    const lastChild = i === rowNode.childrenAfterSort.length - 1;\r\n    child.setFirstChild(firstChild);\r\n    if (child.lastChild !== lastChild) {\r\n      child.lastChild = lastChild;\r\n      child.dispatchRowEvent(\"lastChildChanged\");\r\n    }\r\n    if (child.childIndex !== i) {\r\n      child.childIndex = i;\r\n      child.dispatchRowEvent(\"childIndexChanged\");\r\n    }\r\n  }\r\n}\r\nfunction updateRowNodeAfterSort(rowNode) {\r\n  if (rowNode.sibling) {\r\n    rowNode.sibling.childrenAfterSort = rowNode.childrenAfterSort;\r\n  }\r\n  updateChildIndexes(rowNode);\r\n}\r\nvar SortStage = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"sortStage\";\r\n    this.refreshProps = /* @__PURE__ */ new Set([\"postSortRows\", \"groupDisplayType\", \"accentedSort\"]);\r\n    this.step = \"sort\";\r\n  }\r\n  execute(params) {\r\n    const beans = this.beans;\r\n    const sortOptions = beans.sortSvc.getSortOptions();\r\n    const sortActive = _exists(sortOptions) && sortOptions.length > 0;\r\n    const deltaSort = sortActive && !!params.changedRowNodes && // in time we can remove this check, so that delta sort is always\r\n    // on if transactions are present. it's off for now so that we can\r\n    // selectively turn it on and test it with some select users before\r\n    // rolling out to everyone.\r\n    this.gos.get(\"deltaSort\");\r\n    const sortContainsGroupColumns = sortOptions.some(({ column }) => {\r\n      const isSortingCoupled = _isColumnsSortingCoupledToGroup(beans.gos);\r\n      if (isSortingCoupled) {\r\n        return column.isPrimary() && column.isRowGroupActive();\r\n      }\r\n      return !!column.getColDef().showRowGroup;\r\n    });\r\n    this.sort(\r\n      beans,\r\n      sortOptions,\r\n      sortActive,\r\n      deltaSort,\r\n      params.changedRowNodes,\r\n      params.changedPath,\r\n      sortContainsGroupColumns\r\n    );\r\n  }\r\n  sort(beans, sortOptions, sortActive, useDeltaSort, changedRowNodes, changedPath, sortContainsGroupColumns) {\r\n    const { gos, colModel, rowGroupColsSvc, rowNodeSorter, rowRenderer, showRowGroupCols } = beans;\r\n    const groupMaintainOrder = gos.get(\"groupMaintainOrder\");\r\n    const groupColumnsPresent = colModel.getCols().some((c) => c.isRowGroupActive());\r\n    const isPivotMode = colModel.isPivotMode();\r\n    const postSortFunc = gos.getCallback(\"postSortRows\");\r\n    let hasAnyFirstChildChanged = false;\r\n    const callback = (rowNode) => {\r\n      const skipSortingPivotLeafs = isPivotMode && rowNode.leafGroup;\r\n      const skipSortingGroups = groupMaintainOrder && groupColumnsPresent && !rowNode.leafGroup && !sortContainsGroupColumns;\r\n      let newChildrenAfterSort;\r\n      if (skipSortingGroups) {\r\n        const nextGroup = rowGroupColsSvc?.columns?.[rowNode.level + 1];\r\n        const wasSortExplicitlyRemoved = nextGroup?.getSort() === null;\r\n        const childrenToBeSorted = rowNode.childrenAfterAggFilter.slice(0);\r\n        if (rowNode.childrenAfterSort && !wasSortExplicitlyRemoved) {\r\n          const indexedOrders = {};\r\n          rowNode.childrenAfterSort.forEach((node, idx) => {\r\n            indexedOrders[node.id] = idx;\r\n          });\r\n          childrenToBeSorted.sort(\r\n            (row1, row2) => (indexedOrders[row1.id] ?? 0) - (indexedOrders[row2.id] ?? 0)\r\n          );\r\n        }\r\n        newChildrenAfterSort = childrenToBeSorted;\r\n      } else if (!sortActive || skipSortingPivotLeafs) {\r\n        newChildrenAfterSort = rowNode.childrenAfterAggFilter.slice(0);\r\n      } else if (useDeltaSort && changedRowNodes) {\r\n        newChildrenAfterSort = doDeltaSort(rowNodeSorter, rowNode, changedRowNodes, changedPath, sortOptions);\r\n      } else {\r\n        newChildrenAfterSort = rowNodeSorter.doFullSort(rowNode.childrenAfterAggFilter, sortOptions);\r\n      }\r\n      hasAnyFirstChildChanged || (hasAnyFirstChildChanged = rowNode.childrenAfterSort?.[0] !== newChildrenAfterSort[0]);\r\n      rowNode.childrenAfterSort = newChildrenAfterSort;\r\n      updateRowNodeAfterSort(rowNode);\r\n      if (postSortFunc) {\r\n        const params = { nodes: rowNode.childrenAfterSort };\r\n        postSortFunc(params);\r\n      }\r\n    };\r\n    changedPath?.forEachChangedNodeDepthFirst(callback);\r\n    if (hasAnyFirstChildChanged && this.gos.get(\"groupHideOpenParents\")) {\r\n      const columns = showRowGroupCols?.getShowRowGroupCols();\r\n      if (columns?.length) {\r\n        rowRenderer.refreshCells({ columns, force: true });\r\n      }\r\n    }\r\n  }\r\n};\r\nfunction doDeltaSort(rowNodeSorter, rowNode, changedRowNodes, changedPath, sortOptions) {\r\n  const unsortedRows = rowNode.childrenAfterAggFilter;\r\n  const oldSortedRows = rowNode.childrenAfterSort;\r\n  if (!oldSortedRows) {\r\n    return rowNodeSorter.doFullSort(unsortedRows, sortOptions);\r\n  }\r\n  const untouchedRows = /* @__PURE__ */ new Set();\r\n  const touchedRows = [];\r\n  const { updates, adds } = changedRowNodes;\r\n  for (let i = 0, len = unsortedRows.length; i < len; ++i) {\r\n    const row = unsortedRows[i];\r\n    if (updates.has(row) || adds.has(row) || changedPath && !changedPath.canSkip(row)) {\r\n      touchedRows.push({\r\n        currentPos: touchedRows.length,\r\n        rowNode: row\r\n      });\r\n    } else {\r\n      untouchedRows.add(row.id);\r\n    }\r\n  }\r\n  const sortedUntouchedRows = oldSortedRows.filter((child) => untouchedRows.has(child.id)).map((rowNode2, currentPos) => ({ currentPos, rowNode: rowNode2 }));\r\n  touchedRows.sort((a, b) => rowNodeSorter.compareRowNodes(sortOptions, a, b));\r\n  return mergeSortedArrays(rowNodeSorter, sortOptions, touchedRows, sortedUntouchedRows);\r\n}\r\nfunction mergeSortedArrays(rowNodeSorter, sortOptions, arr1, arr2) {\r\n  const res = [];\r\n  let i = 0;\r\n  let j = 0;\r\n  const arr1Length = arr1.length;\r\n  const arr2Length = arr2.length;\r\n  while (i < arr1Length && j < arr2Length) {\r\n    const a = arr1[i];\r\n    const b = arr2[j];\r\n    const compareResult = rowNodeSorter.compareRowNodes(sortOptions, a, b);\r\n    let chosen;\r\n    if (compareResult < 0) {\r\n      chosen = a;\r\n      ++i;\r\n    } else {\r\n      chosen = b;\r\n      ++j;\r\n    }\r\n    res.push(chosen.rowNode);\r\n  }\r\n  while (i < arr1Length) {\r\n    res.push(arr1[i++].rowNode);\r\n  }\r\n  while (j < arr2Length) {\r\n    res.push(arr2[j++].rowNode);\r\n  }\r\n  return res;\r\n}\r\n\r\n// packages/ag-grid-community/src/clientSideRowModel/clientSideRowModel.ts\r\nvar ClientSideRowModel = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"rowModel\";\r\n    // top most node of the tree. the children are the user provided data.\r\n    this.rootNode = null;\r\n    this.rowsToDisplay = [];\r\n    /** Keep track if row data was updated. Important with suppressModelUpdateAfterUpdateTransaction and refreshModel api is called  */\r\n    this.rowDataUpdatedPending = false;\r\n    /** Has the start method been called */\r\n    this.started = false;\r\n    /**\r\n     * This is to prevent refresh model being called when it's already being called.\r\n     * E.g. the group stage can trigger initial state filter model to be applied. This fires onFilterChanged,\r\n     * which then triggers the listener here that calls refresh model again but at the filter stage\r\n     * (which is about to be run by the original call).\r\n     */\r\n    this.isRefreshingModel = false;\r\n    this.rowNodesCountReady = false;\r\n    this.rowCountReady = false;\r\n    this.onRowHeightChanged_debounced = _debounce(this, this.onRowHeightChanged.bind(this), 100);\r\n  }\r\n  wireBeans(beans) {\r\n    this.colModel = beans.colModel;\r\n    this.valueCache = beans.valueCache;\r\n    this.filterStage = beans.filterStage;\r\n    this.sortStage = beans.sortStage;\r\n    this.flattenStage = beans.flattenStage;\r\n    this.groupStage = beans.groupStage;\r\n    this.aggStage = beans.aggStage;\r\n    this.pivotStage = beans.pivotStage;\r\n    this.filterAggStage = beans.filterAggStage;\r\n  }\r\n  postConstruct() {\r\n    this.orderedStages = [\r\n      this.groupStage,\r\n      this.filterStage,\r\n      this.pivotStage,\r\n      this.aggStage,\r\n      this.sortStage,\r\n      this.filterAggStage,\r\n      this.flattenStage\r\n    ].filter((stage) => !!stage);\r\n    const refreshEverythingFunc = this.refreshModel.bind(this, { step: \"group\" });\r\n    const refreshEverythingAfterColsChangedFunc = this.refreshModel.bind(this, {\r\n      step: \"group\",\r\n      // after cols change, row grouping (the first stage) could of changed\r\n      afterColumnsChanged: true,\r\n      keepRenderedRows: true,\r\n      // we want animations cos sorting or filtering could be applied\r\n      animate: !this.gos.get(\"suppressAnimationFrame\")\r\n    });\r\n    this.addManagedEventListeners({\r\n      newColumnsLoaded: refreshEverythingAfterColsChangedFunc,\r\n      columnRowGroupChanged: refreshEverythingFunc,\r\n      columnValueChanged: this.onValueChanged.bind(this),\r\n      columnPivotChanged: this.refreshModel.bind(this, { step: \"pivot\" }),\r\n      filterChanged: this.onFilterChanged.bind(this),\r\n      sortChanged: this.onSortChanged.bind(this),\r\n      columnPivotModeChanged: refreshEverythingFunc,\r\n      gridStylesChanged: this.onGridStylesChanges.bind(this),\r\n      gridReady: this.onGridReady.bind(this)\r\n    });\r\n    this.addPropertyListeners();\r\n    this.rootNode = new RowNode(this.beans);\r\n    const nodeManager = this.getNewNodeManager();\r\n    this.nodeManager = nodeManager;\r\n    nodeManager.activate(this.rootNode);\r\n  }\r\n  getNewNodeManager() {\r\n    const { gos, beans } = this;\r\n    return _getGroupingApproach(gos) === \"treeNested\" && beans.csrmChildrenTreeNodeSvc || beans.csrmNodeSvc;\r\n  }\r\n  addPropertyListeners() {\r\n    const allProps = [\r\n      \"treeData\",\r\n      \"treeDataChildrenField\",\r\n      ...this.orderedStages.flatMap(({ refreshProps }) => [...refreshProps])\r\n    ];\r\n    this.addManagedPropertyListeners(allProps, (params) => {\r\n      const properties = params.changeSet?.properties;\r\n      if (properties) {\r\n        this.onPropChange(properties);\r\n      }\r\n    });\r\n    this.addManagedPropertyListener(\"rowData\", () => this.onPropChange([\"rowData\"]));\r\n    this.addManagedPropertyListener(\"rowHeight\", () => this.resetRowHeights());\r\n  }\r\n  start() {\r\n    this.started = true;\r\n    if (this.rowNodesCountReady) {\r\n      this.refreshModel({ step: \"group\", rowDataUpdated: true, newData: true });\r\n    } else {\r\n      this.setInitialData();\r\n    }\r\n  }\r\n  setInitialData() {\r\n    const rowData = this.gos.get(\"rowData\");\r\n    if (rowData) {\r\n      this.onPropChange([\"rowData\"]);\r\n    }\r\n  }\r\n  ensureRowHeightsValid(startPixel, endPixel, startLimitIndex, endLimitIndex) {\r\n    let atLeastOneChange;\r\n    let res = false;\r\n    do {\r\n      atLeastOneChange = false;\r\n      const rowAtStartPixel = this.getRowIndexAtPixel(startPixel);\r\n      const rowAtEndPixel = this.getRowIndexAtPixel(endPixel);\r\n      const firstRow = Math.max(rowAtStartPixel, startLimitIndex);\r\n      const lastRow = Math.min(rowAtEndPixel, endLimitIndex);\r\n      for (let rowIndex = firstRow; rowIndex <= lastRow; rowIndex++) {\r\n        const rowNode = this.getRow(rowIndex);\r\n        if (rowNode.rowHeightEstimated) {\r\n          const rowHeight = _getRowHeightForNode(this.beans, rowNode);\r\n          rowNode.setRowHeight(rowHeight.height);\r\n          atLeastOneChange = true;\r\n          res = true;\r\n        }\r\n      }\r\n      if (atLeastOneChange) {\r\n        this.setRowTopAndRowIndex();\r\n      }\r\n    } while (atLeastOneChange);\r\n    return res;\r\n  }\r\n  onPropChange(properties) {\r\n    if (!this.rootNode) {\r\n      return;\r\n    }\r\n    const gos = this.gos;\r\n    const changedProps = new Set(properties);\r\n    const params = {\r\n      step: \"nothing\",\r\n      changedProps\r\n    };\r\n    const rowDataChanged = changedProps.has(\"rowData\");\r\n    const oldNodeManager = this.nodeManager;\r\n    const nodeManager = this.getNewNodeManager();\r\n    const reset = oldNodeManager !== nodeManager || rowDataChanged && changedProps.has(\"treeData\") && gos.get(\"treeData\") || changedProps.has(\"treeDataChildrenField\") && gos.get(\"treeData\");\r\n    let newRowData;\r\n    if (reset || rowDataChanged) {\r\n      newRowData = gos.get(\"rowData\");\r\n      if (newRowData != null && !Array.isArray(newRowData)) {\r\n        newRowData = null;\r\n        _warn(1);\r\n      }\r\n    }\r\n    if (reset) {\r\n      if (!rowDataChanged) {\r\n        newRowData = oldNodeManager?.extractRowData() ?? newRowData;\r\n      }\r\n      if (oldNodeManager !== nodeManager) {\r\n        oldNodeManager?.deactivate();\r\n        this.nodeManager = nodeManager;\r\n      }\r\n      nodeManager.activate(this.rootNode);\r\n    }\r\n    if (newRowData) {\r\n      const immutable = !reset && !this.isEmpty() && newRowData.length > 0 && gos.exists(\"getRowId\") && // this property is a backwards compatibility property, for those who want\r\n      // the old behaviour of Row IDs but NOT Immutable Data.\r\n      !gos.get(\"resetRowDataOnUpdate\");\r\n      if (immutable) {\r\n        params.keepRenderedRows = true;\r\n        params.animate = !this.gos.get(\"suppressAnimationFrame\");\r\n        params.changedRowNodes = new ChangedRowNodes();\r\n        nodeManager.setImmutableRowData(params, newRowData);\r\n      } else {\r\n        params.rowDataUpdated = true;\r\n        params.newData = true;\r\n        const { selectionSvc, pinnedRowModel } = this.beans;\r\n        selectionSvc?.reset(\"rowDataChanged\");\r\n        if (pinnedRowModel?.isManual()) {\r\n          pinnedRowModel.reset();\r\n        }\r\n        this.rowNodesCountReady = true;\r\n        nodeManager.setNewRowData(newRowData);\r\n      }\r\n    }\r\n    if (params.rowDataUpdated) {\r\n      params.step = \"group\";\r\n    } else if (params.step === \"nothing\") {\r\n      for (const { refreshProps, step } of this.orderedStages) {\r\n        if (properties.some((prop) => refreshProps.has(prop))) {\r\n          params.step = step;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (params.step !== \"nothing\") {\r\n      this.refreshModel(params);\r\n    }\r\n  }\r\n  setRowTopAndRowIndex() {\r\n    const { beans, rowsToDisplay } = this;\r\n    const defaultRowHeight = beans.environment.getDefaultRowHeight();\r\n    let nextRowTop = 0;\r\n    const displayedRowsMapped = /* @__PURE__ */ new Set();\r\n    const allowEstimate = _isDomLayout(this.gos, \"normal\");\r\n    for (let i = 0, len = rowsToDisplay.length; i < len; ++i) {\r\n      const rowNode = rowsToDisplay[i];\r\n      if (rowNode.id != null) {\r\n        displayedRowsMapped.add(rowNode.id);\r\n      }\r\n      if (rowNode.rowHeight == null) {\r\n        const rowHeight = _getRowHeightForNode(beans, rowNode, allowEstimate, defaultRowHeight);\r\n        rowNode.setRowHeight(rowHeight.height, rowHeight.estimated);\r\n      }\r\n      rowNode.setRowTop(nextRowTop);\r\n      rowNode.setRowIndex(i);\r\n      nextRowTop += rowNode.rowHeight;\r\n    }\r\n    return displayedRowsMapped;\r\n  }\r\n  clearRowTopAndRowIndex(changedPath, displayedRowsMapped) {\r\n    const changedPathActive = changedPath.active;\r\n    const clearIfNotDisplayed = (rowNode) => {\r\n      if (rowNode && rowNode.id != null && !displayedRowsMapped.has(rowNode.id)) {\r\n        rowNode.clearRowTopAndRowIndex();\r\n      }\r\n    };\r\n    const recurse = (rowNode) => {\r\n      if (rowNode === null) {\r\n        return;\r\n      }\r\n      clearIfNotDisplayed(rowNode);\r\n      clearIfNotDisplayed(rowNode.detailNode);\r\n      clearIfNotDisplayed(rowNode.sibling);\r\n      if (rowNode.hasChildren()) {\r\n        if (rowNode.childrenAfterGroup) {\r\n          const isRootNode = rowNode.level == -1;\r\n          const skipChildren = changedPathActive && !isRootNode && !rowNode.expanded;\r\n          if (!skipChildren) {\r\n            rowNode.childrenAfterGroup.forEach(recurse);\r\n          }\r\n        }\r\n      }\r\n    };\r\n    recurse(this.rootNode);\r\n  }\r\n  isLastRowIndexKnown() {\r\n    return true;\r\n  }\r\n  getRowCount() {\r\n    if (this.rowsToDisplay) {\r\n      return this.rowsToDisplay.length;\r\n    }\r\n    return 0;\r\n  }\r\n  /**\r\n   * Returns the number of rows with level === 1\r\n   */\r\n  getTopLevelRowCount() {\r\n    const rootNode = this.rootNode;\r\n    if (!rootNode) {\r\n      return 0;\r\n    }\r\n    if (this.rowsToDisplay.length === 0) {\r\n      return 0;\r\n    }\r\n    const showingRootNode = this.rowsToDisplay && this.rowsToDisplay[0] === rootNode;\r\n    if (showingRootNode) {\r\n      return 1;\r\n    }\r\n    const filteredChildren = rootNode.childrenAfterSort;\r\n    const totalFooterInc = rootNode.sibling && rootNode.sibling.displayed ? 1 : 0;\r\n    return (filteredChildren ? filteredChildren.length : 0) + totalFooterInc;\r\n  }\r\n  /**\r\n   * Get the row display index by the top level index\r\n   * top level index is the index of rows with level === 1\r\n   */\r\n  getTopLevelRowDisplayedIndex(topLevelIndex) {\r\n    const { rootNode, rowsToDisplay } = this;\r\n    const showingRootNode = !rootNode || !rowsToDisplay.length || rowsToDisplay[0] === rootNode;\r\n    if (showingRootNode) {\r\n      return topLevelIndex;\r\n    }\r\n    const { childrenAfterSort } = rootNode;\r\n    const getDefaultIndex = (adjustedIndex) => {\r\n      let rowNode = childrenAfterSort[adjustedIndex];\r\n      if (this.gos.get(\"groupHideOpenParents\")) {\r\n        while (rowNode.expanded && rowNode.childrenAfterSort && rowNode.childrenAfterSort.length > 0) {\r\n          rowNode = rowNode.childrenAfterSort[0];\r\n        }\r\n      }\r\n      return rowNode.rowIndex;\r\n    };\r\n    const { footerSvc } = this.beans;\r\n    if (footerSvc) {\r\n      return footerSvc.getTopDisplayIndex(rowsToDisplay, topLevelIndex, childrenAfterSort, getDefaultIndex);\r\n    } else {\r\n      return getDefaultIndex(topLevelIndex);\r\n    }\r\n  }\r\n  /**\r\n   * The opposite of `getTopLevelRowDisplayedIndex`\r\n   */\r\n  getTopLevelIndexFromDisplayedIndex(displayedIndex) {\r\n    const { rootNode, rowsToDisplay } = this;\r\n    const showingRootNode = !rootNode || !rowsToDisplay.length || rowsToDisplay[0] === rootNode;\r\n    if (showingRootNode) {\r\n      return displayedIndex;\r\n    }\r\n    let node = this.getRow(displayedIndex);\r\n    if (node.footer) {\r\n      node = node.sibling;\r\n    }\r\n    while (node.parent && node.parent !== rootNode) {\r\n      node = node.parent;\r\n    }\r\n    const topLevelIndex = rootNode.childrenAfterSort?.findIndex((childNode) => childNode === node);\r\n    return topLevelIndex === -1 ? displayedIndex : topLevelIndex ?? displayedIndex;\r\n  }\r\n  getRowBounds(index) {\r\n    const rowNode = this.rowsToDisplay[index];\r\n    if (rowNode) {\r\n      return {\r\n        rowTop: rowNode.rowTop,\r\n        rowHeight: rowNode.rowHeight\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n  onRowGroupOpened() {\r\n    const animate = _isAnimateRows(this.gos);\r\n    this.refreshModel({ step: \"map\", keepRenderedRows: true, animate });\r\n  }\r\n  onFilterChanged(event) {\r\n    if (event.afterDataChange) {\r\n      return;\r\n    }\r\n    const animate = _isAnimateRows(this.gos);\r\n    const primaryOrQuickFilterChanged = event.columns.length === 0 || event.columns.some((col) => col.isPrimary());\r\n    const step = primaryOrQuickFilterChanged ? \"filter\" : \"filter_aggregates\";\r\n    this.refreshModel({ step, keepRenderedRows: true, animate });\r\n  }\r\n  onSortChanged() {\r\n    const animate = _isAnimateRows(this.gos);\r\n    this.refreshModel({\r\n      step: \"sort\",\r\n      keepRenderedRows: true,\r\n      animate\r\n    });\r\n  }\r\n  getType() {\r\n    return \"clientSide\";\r\n  }\r\n  onValueChanged() {\r\n    this.refreshModel({ step: this.colModel.isPivotActive() ? \"pivot\" : \"aggregate\" });\r\n  }\r\n  createChangePath(enabled) {\r\n    const changedPath = new ChangedPath(false, this.rootNode);\r\n    if (!enabled) {\r\n      changedPath.active = false;\r\n    }\r\n    return changedPath;\r\n  }\r\n  isSuppressModelUpdateAfterUpdateTransaction(params) {\r\n    if (!this.gos.get(\"suppressModelUpdateAfterUpdateTransaction\")) {\r\n      return false;\r\n    }\r\n    const { changedRowNodes, newData, rowDataUpdated } = params;\r\n    if (!changedRowNodes || newData || !rowDataUpdated) {\r\n      return false;\r\n    }\r\n    if (changedRowNodes.removals.size || changedRowNodes.adds.size) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  refreshModel(params) {\r\n    if (!this.rootNode) {\r\n      return;\r\n    }\r\n    const beans = this.beans;\r\n    let rowDataUpdated = !!params.rowDataUpdated;\r\n    const changedPath = params.changedPath ?? (params.changedPath = this.createChangePath(!params.newData && rowDataUpdated));\r\n    if (this.started && rowDataUpdated) {\r\n      this.eventSvc.dispatchEvent({ type: \"rowDataUpdated\" });\r\n    }\r\n    this.rowDataUpdatedPending || (this.rowDataUpdatedPending = rowDataUpdated);\r\n    if (!this.started || this.isRefreshingModel || this.colModel.changeEventsDispatching || this.isSuppressModelUpdateAfterUpdateTransaction(params)) {\r\n      return;\r\n    }\r\n    if (this.rowDataUpdatedPending) {\r\n      this.rowDataUpdatedPending = false;\r\n      params.rowDataUpdated = rowDataUpdated = true;\r\n    }\r\n    this.isRefreshingModel = true;\r\n    beans.masterDetailSvc?.refreshModel(params);\r\n    if (rowDataUpdated && params.step !== \"group\") {\r\n      beans.colFilter?.refreshModel();\r\n    }\r\n    switch (params.step) {\r\n      case \"group\": {\r\n        const groupingChanged = this.doRowGrouping(params);\r\n        if (groupingChanged || rowDataUpdated) {\r\n          beans.colFilter?.refreshModel();\r\n        }\r\n        if (!this.rowCountReady && this.rowNodesCountReady) {\r\n          this.rowCountReady = true;\r\n          this.eventSvc.dispatchEventOnce({ type: \"rowCountReady\" });\r\n        }\r\n      }\r\n      case \"filter\":\r\n        this.doFilter(changedPath);\r\n      case \"pivot\":\r\n        this.doPivot(changedPath);\r\n      case \"aggregate\":\r\n        this.doAggregate(changedPath);\r\n      case \"filter_aggregates\":\r\n        this.doFilterAggregates(changedPath);\r\n      case \"sort\":\r\n        this.doSort(params.changedRowNodes, changedPath);\r\n      case \"map\":\r\n        this.doRowsToDisplay();\r\n    }\r\n    const displayedNodesMapped = this.setRowTopAndRowIndex();\r\n    this.clearRowTopAndRowIndex(changedPath, displayedNodesMapped);\r\n    this.isRefreshingModel = false;\r\n    this.eventSvc.dispatchEvent({\r\n      type: \"modelUpdated\",\r\n      animate: params.animate,\r\n      keepRenderedRows: params.keepRenderedRows,\r\n      newData: params.newData,\r\n      newPage: false,\r\n      keepUndoRedoStack: params.keepUndoRedoStack\r\n    });\r\n  }\r\n  isEmpty() {\r\n    return !this.rootNode?.allLeafChildren?.length || !this.colModel?.ready;\r\n  }\r\n  isRowsToRender() {\r\n    return this.rowsToDisplay.length > 0;\r\n  }\r\n  getNodesInRangeForSelection(firstInRange, lastInRange) {\r\n    let started = false;\r\n    let finished = false;\r\n    const result = [];\r\n    const groupsSelectChildren = _getGroupSelectsDescendants(this.gos);\r\n    this.forEachNodeAfterFilterAndSort((rowNode) => {\r\n      if (finished) {\r\n        return;\r\n      }\r\n      if (started) {\r\n        if (rowNode === lastInRange || rowNode === firstInRange) {\r\n          finished = true;\r\n          if (rowNode.group && groupsSelectChildren) {\r\n            result.push(...rowNode.allLeafChildren);\r\n            return;\r\n          }\r\n        }\r\n      }\r\n      if (!started) {\r\n        if (rowNode !== lastInRange && rowNode !== firstInRange) {\r\n          return;\r\n        }\r\n        started = true;\r\n      }\r\n      const includeThisNode = !rowNode.group || !groupsSelectChildren;\r\n      if (includeThisNode) {\r\n        result.push(rowNode);\r\n        return;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  getTopLevelNodes() {\r\n    return this.rootNode?.childrenAfterGroup ?? null;\r\n  }\r\n  getRow(index) {\r\n    return this.rowsToDisplay[index];\r\n  }\r\n  isRowPresent(rowNode) {\r\n    return this.rowsToDisplay.indexOf(rowNode) >= 0;\r\n  }\r\n  getRowIndexAtPixel(pixelToMatch) {\r\n    const rowsToDisplay = this.rowsToDisplay;\r\n    if (this.isEmpty() || rowsToDisplay.length === 0) {\r\n      return -1;\r\n    }\r\n    let bottomPointer = 0;\r\n    let topPointer = rowsToDisplay.length - 1;\r\n    if (pixelToMatch <= 0) {\r\n      return 0;\r\n    }\r\n    const lastNode = _last(rowsToDisplay);\r\n    if (lastNode.rowTop <= pixelToMatch) {\r\n      return rowsToDisplay.length - 1;\r\n    }\r\n    let oldBottomPointer = -1;\r\n    let oldTopPointer = -1;\r\n    while (true) {\r\n      const midPointer = Math.floor((bottomPointer + topPointer) / 2);\r\n      const currentRowNode = rowsToDisplay[midPointer];\r\n      if (this.isRowInPixel(currentRowNode, pixelToMatch)) {\r\n        return midPointer;\r\n      }\r\n      if (currentRowNode.rowTop < pixelToMatch) {\r\n        bottomPointer = midPointer + 1;\r\n      } else if (currentRowNode.rowTop > pixelToMatch) {\r\n        topPointer = midPointer - 1;\r\n      }\r\n      const caughtInInfiniteLoop = oldBottomPointer === bottomPointer && oldTopPointer === topPointer;\r\n      if (caughtInInfiniteLoop) {\r\n        return midPointer;\r\n      }\r\n      oldBottomPointer = bottomPointer;\r\n      oldTopPointer = topPointer;\r\n    }\r\n  }\r\n  isRowInPixel(rowNode, pixelToMatch) {\r\n    const topPixel = rowNode.rowTop;\r\n    const bottomPixel = rowNode.rowTop + rowNode.rowHeight;\r\n    const pixelInRow = topPixel <= pixelToMatch && bottomPixel > pixelToMatch;\r\n    return pixelInRow;\r\n  }\r\n  forEachLeafNode(callback) {\r\n    this.rootNode?.allLeafChildren?.forEach((rowNode, index) => callback(rowNode, index));\r\n  }\r\n  forEachNode(callback, includeFooterNodes = false) {\r\n    this.depthFirstSearchRowNodes(callback, includeFooterNodes);\r\n  }\r\n  forEachDisplayedNode(callback) {\r\n    this.rowsToDisplay.forEach(callback);\r\n  }\r\n  forEachNodeAfterFilter(callback, includeFooterNodes = false) {\r\n    this.depthFirstSearchRowNodes(callback, includeFooterNodes, (node) => node.childrenAfterAggFilter);\r\n  }\r\n  forEachNodeAfterFilterAndSort(callback, includeFooterNodes = false) {\r\n    this.depthFirstSearchRowNodes(callback, includeFooterNodes, (node) => node.childrenAfterSort);\r\n  }\r\n  forEachPivotNode(callback, includeFooterNodes = false, afterSort = false) {\r\n    const { colModel, rowGroupColsSvc } = this.beans;\r\n    if (!colModel.isPivotMode()) {\r\n      return;\r\n    }\r\n    if (!rowGroupColsSvc?.columns.length) {\r\n      callback(this.rootNode, 0);\r\n      return;\r\n    }\r\n    const childrenField = afterSort ? \"childrenAfterSort\" : \"childrenAfterGroup\";\r\n    this.depthFirstSearchRowNodes(\r\n      callback,\r\n      includeFooterNodes,\r\n      (node) => !node.leafGroup ? node[childrenField] : null\r\n    );\r\n  }\r\n  /**\r\n   * Iterate through each node and all of its children\r\n   * @param callback the function to execute for each node\r\n   * @param includeFooterNodes whether to also iterate over footer nodes\r\n   * @param nodes the nodes to start iterating over\r\n   * @param getChildren a function to determine the recursion strategy\r\n   * @param startIndex the index to start from\r\n   * @returns the index ended at\r\n   */\r\n  depthFirstSearchRowNodes(callback, includeFooterNodes = false, getChildren = (node2) => node2.childrenAfterGroup, node = this.rootNode, startIndex = 0) {\r\n    let index = startIndex;\r\n    if (!node) {\r\n      return index;\r\n    }\r\n    const isRootNode = node === this.rootNode;\r\n    if (!isRootNode) {\r\n      callback(node, index++);\r\n    }\r\n    const { footerSvc } = this.beans;\r\n    if (node.hasChildren() && !node.footer) {\r\n      const children = getChildren(node);\r\n      if (children) {\r\n        index = footerSvc?.addTotalRows(index, node, callback, includeFooterNodes, isRootNode, \"top\") ?? index;\r\n        for (const node2 of children) {\r\n          index = this.depthFirstSearchRowNodes(callback, includeFooterNodes, getChildren, node2, index);\r\n        }\r\n        return footerSvc?.addTotalRows(index, node, callback, includeFooterNodes, isRootNode, \"bottom\") ?? index;\r\n      }\r\n    }\r\n    return index;\r\n  }\r\n  // it's possible to recompute the aggregate without doing the other parts\r\n  // + api.refreshClientSideRowModel('aggregate')\r\n  doAggregate(changedPath) {\r\n    const rootNode = this.rootNode;\r\n    if (rootNode) {\r\n      this.aggStage?.execute({ rowNode: rootNode, changedPath });\r\n    }\r\n  }\r\n  doFilterAggregates(changedPath) {\r\n    const rootNode = this.rootNode;\r\n    if (this.filterAggStage) {\r\n      this.filterAggStage.execute({ rowNode: rootNode, changedPath });\r\n    } else {\r\n      rootNode.childrenAfterAggFilter = rootNode.childrenAfterFilter;\r\n    }\r\n  }\r\n  doSort(changedRowNodes, changedPath) {\r\n    if (this.sortStage) {\r\n      this.sortStage.execute({\r\n        rowNode: this.rootNode,\r\n        changedRowNodes,\r\n        changedPath\r\n      });\r\n    } else {\r\n      changedPath.forEachChangedNodeDepthFirst((rowNode) => {\r\n        rowNode.childrenAfterSort = rowNode.childrenAfterAggFilter.slice(0);\r\n        updateRowNodeAfterSort(rowNode);\r\n      });\r\n    }\r\n  }\r\n  doRowGrouping(params) {\r\n    const rootNode = this.rootNode;\r\n    const groupStageExecuted = this.groupStage?.execute({\r\n      rowNode: rootNode,\r\n      changedRowNodes: params.changedRowNodes,\r\n      changedPath: params.changedPath,\r\n      rowNodesOrderChanged: !!params.rowNodesOrderChanged,\r\n      afterColumnsChanged: !!params.afterColumnsChanged\r\n    });\r\n    if (groupStageExecuted !== void 0) {\r\n      return groupStageExecuted;\r\n    }\r\n    const sibling = rootNode.sibling;\r\n    rootNode.childrenAfterGroup = rootNode.allLeafChildren;\r\n    if (sibling) {\r\n      sibling.childrenAfterGroup = rootNode.childrenAfterGroup;\r\n    }\r\n    rootNode.updateHasChildren();\r\n    return false;\r\n  }\r\n  doFilter(changedPath) {\r\n    if (this.filterStage) {\r\n      this.filterStage.execute({ rowNode: this.rootNode, changedPath });\r\n    } else {\r\n      changedPath.forEachChangedNodeDepthFirst((rowNode) => {\r\n        rowNode.childrenAfterFilter = rowNode.childrenAfterGroup;\r\n        updateRowNodeAfterFilter(rowNode);\r\n      }, true);\r\n    }\r\n  }\r\n  doPivot(changedPath) {\r\n    this.pivotStage?.execute({ rowNode: this.rootNode, changedPath });\r\n  }\r\n  getRowNode(id) {\r\n    const found = this.nodeManager.getRowNode(id);\r\n    if (typeof found === \"object\") {\r\n      return found;\r\n    }\r\n    const idIsGroup = typeof id == \"string\" && id.indexOf(ROW_ID_PREFIX_ROW_GROUP) === 0;\r\n    return idIsGroup ? this.groupStage?.getNode(id) : void 0;\r\n  }\r\n  batchUpdateRowData(rowDataTransaction, callback) {\r\n    if (this.applyAsyncTransactionsTimeout == null) {\r\n      this.rowDataTransactionBatch = [];\r\n      const waitMillis = this.gos.get(\"asyncTransactionWaitMillis\");\r\n      this.applyAsyncTransactionsTimeout = window.setTimeout(() => {\r\n        if (this.isAlive()) {\r\n          this.executeBatchUpdateRowData();\r\n        }\r\n      }, waitMillis);\r\n    }\r\n    this.rowDataTransactionBatch.push({ rowDataTransaction, callback });\r\n  }\r\n  flushAsyncTransactions() {\r\n    if (this.applyAsyncTransactionsTimeout != null) {\r\n      clearTimeout(this.applyAsyncTransactionsTimeout);\r\n      this.executeBatchUpdateRowData();\r\n    }\r\n  }\r\n  executeBatchUpdateRowData() {\r\n    this.valueCache?.onDataChanged();\r\n    const callbackFuncsBound = [];\r\n    const rowNodeTrans = [];\r\n    const changedRowNodes = new ChangedRowNodes();\r\n    let orderChanged = false;\r\n    this.rowDataTransactionBatch?.forEach((tranItem) => {\r\n      this.rowNodesCountReady = true;\r\n      const { rowNodeTransaction, rowsInserted } = this.nodeManager.updateRowData(\r\n        tranItem.rowDataTransaction,\r\n        changedRowNodes\r\n      );\r\n      if (rowsInserted) {\r\n        orderChanged = true;\r\n      }\r\n      rowNodeTrans.push(rowNodeTransaction);\r\n      if (tranItem.callback) {\r\n        callbackFuncsBound.push(tranItem.callback.bind(null, rowNodeTransaction));\r\n      }\r\n    });\r\n    this.commitTransactions(orderChanged, changedRowNodes);\r\n    if (callbackFuncsBound.length > 0) {\r\n      window.setTimeout(() => {\r\n        callbackFuncsBound.forEach((func) => func());\r\n      }, 0);\r\n    }\r\n    if (rowNodeTrans.length > 0) {\r\n      this.eventSvc.dispatchEvent({\r\n        type: \"asyncTransactionsFlushed\",\r\n        results: rowNodeTrans\r\n      });\r\n    }\r\n    this.rowDataTransactionBatch = null;\r\n    this.applyAsyncTransactionsTimeout = void 0;\r\n  }\r\n  /**\r\n   * Used to apply transaction changes.\r\n   * Called by gridApi & rowDragFeature\r\n   */\r\n  updateRowData(rowDataTran) {\r\n    this.valueCache?.onDataChanged();\r\n    this.rowNodesCountReady = true;\r\n    const changedRowNodes = new ChangedRowNodes();\r\n    const { rowNodeTransaction, rowsInserted } = this.nodeManager.updateRowData(rowDataTran, changedRowNodes);\r\n    this.commitTransactions(rowsInserted, changedRowNodes);\r\n    return rowNodeTransaction;\r\n  }\r\n  /**\r\n   * Common to:\r\n   * - executeBatchUpdateRowData (batch transactions)\r\n   * - updateRowData (single transaction)\r\n   * - setImmutableRowData (generated transaction)\r\n   *\r\n   * @param rowNodeTrans - the transactions to apply\r\n   * @param orderChanged - whether the order of the rows has changed, either via generated transaction or user provided addIndex\r\n   */\r\n  commitTransactions(rowNodesOrderChanged, changedRowNodes) {\r\n    this.refreshModel({\r\n      step: \"group\",\r\n      rowDataUpdated: true,\r\n      rowNodesOrderChanged,\r\n      keepRenderedRows: true,\r\n      animate: !this.gos.get(\"suppressAnimationFrame\"),\r\n      changedRowNodes,\r\n      changedPath: this.createChangePath(true)\r\n    });\r\n  }\r\n  doRowsToDisplay() {\r\n    const { flattenStage, rootNode } = this;\r\n    let rowsToDisplay;\r\n    if (flattenStage) {\r\n      rowsToDisplay = flattenStage.execute({ rowNode: rootNode });\r\n    } else {\r\n      rowsToDisplay = rootNode?.childrenAfterSort ?? [];\r\n      for (const row of rowsToDisplay) {\r\n        row.setUiLevel(0);\r\n      }\r\n    }\r\n    this.rowsToDisplay = rowsToDisplay;\r\n  }\r\n  onRowHeightChanged() {\r\n    this.refreshModel({\r\n      step: \"map\",\r\n      keepRenderedRows: true,\r\n      keepUndoRedoStack: true\r\n    });\r\n  }\r\n  resetRowHeights() {\r\n    const rootNode = this.rootNode;\r\n    if (!rootNode) {\r\n      return;\r\n    }\r\n    const atLeastOne = this.resetRowHeightsForAllRowNodes();\r\n    rootNode.setRowHeight(rootNode.rowHeight, true);\r\n    if (rootNode.sibling) {\r\n      rootNode.sibling.setRowHeight(rootNode.sibling.rowHeight, true);\r\n    }\r\n    if (atLeastOne) {\r\n      this.onRowHeightChanged();\r\n    }\r\n  }\r\n  resetRowHeightsForAllRowNodes() {\r\n    let atLeastOne = false;\r\n    this.forEachNode((rowNode) => {\r\n      rowNode.setRowHeight(rowNode.rowHeight, true);\r\n      const detailNode = rowNode.detailNode;\r\n      if (detailNode) {\r\n        detailNode.setRowHeight(detailNode.rowHeight, true);\r\n      }\r\n      if (rowNode.sibling) {\r\n        rowNode.sibling.setRowHeight(rowNode.sibling.rowHeight, true);\r\n      }\r\n      atLeastOne = true;\r\n    });\r\n    return atLeastOne;\r\n  }\r\n  onGridStylesChanges(e) {\r\n    if (e.rowHeightChanged) {\r\n      if (this.beans.rowAutoHeight?.active) {\r\n        return;\r\n      }\r\n      this.resetRowHeights();\r\n    }\r\n  }\r\n  onGridReady() {\r\n    if (!this.started) {\r\n      this.setInitialData();\r\n    }\r\n  }\r\n  isRowDataLoaded() {\r\n    return this.rowCountReady;\r\n  }\r\n  destroy() {\r\n    super.destroy();\r\n    this.started = false;\r\n    this.rootNode = null;\r\n    this.nodeManager = null;\r\n    this.rowDataTransactionBatch = null;\r\n    this.orderedStages = _EmptyArray;\r\n    this.rowsToDisplay = _EmptyArray;\r\n  }\r\n  /**\r\n   * @deprecated v33.1\r\n   */\r\n  onRowHeightChangedDebounced() {\r\n    this.onRowHeightChanged_debounced();\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/clientSideRowModel/clientSideRowModelApi.ts\r\nfunction onGroupExpandedOrCollapsed(beans) {\r\n  beans.expansionSvc?.onGroupExpandedOrCollapsed();\r\n}\r\nfunction refreshClientSideRowModel(beans, step) {\r\n  const clientSideRowModel = _getClientSideRowModel(beans);\r\n  if (clientSideRowModel) {\r\n    if (!step || step === \"everything\") {\r\n      step = \"group\";\r\n    }\r\n    clientSideRowModel.refreshModel({\r\n      step,\r\n      keepRenderedRows: true,\r\n      animate: !beans.gos.get(\"suppressAnimationFrame\")\r\n    });\r\n  }\r\n}\r\nfunction isRowDataEmpty(beans) {\r\n  return _getClientSideRowModel(beans)?.isEmpty() ?? true;\r\n}\r\nfunction forEachLeafNode(beans, callback) {\r\n  _getClientSideRowModel(beans)?.forEachLeafNode(callback);\r\n}\r\nfunction forEachNodeAfterFilter(beans, callback) {\r\n  _getClientSideRowModel(beans)?.forEachNodeAfterFilter(callback);\r\n}\r\nfunction forEachNodeAfterFilterAndSort(beans, callback) {\r\n  _getClientSideRowModel(beans)?.forEachNodeAfterFilterAndSort(callback);\r\n}\r\nfunction resetRowHeights(beans) {\r\n  if (beans.rowAutoHeight?.active) {\r\n    _warn(3);\r\n    return;\r\n  }\r\n  _getClientSideRowModel(beans)?.resetRowHeights();\r\n}\r\nfunction applyTransaction(beans, rowDataTransaction) {\r\n  return beans.frameworkOverrides.wrapIncoming(\r\n    () => _getClientSideRowModel(beans)?.updateRowData(rowDataTransaction)\r\n  );\r\n}\r\nfunction applyTransactionAsync(beans, rowDataTransaction, callback) {\r\n  beans.frameworkOverrides.wrapIncoming(\r\n    () => _getClientSideRowModel(beans)?.batchUpdateRowData(rowDataTransaction, callback)\r\n  );\r\n}\r\nfunction flushAsyncTransactions(beans) {\r\n  beans.frameworkOverrides.wrapIncoming(() => _getClientSideRowModel(beans)?.flushAsyncTransactions());\r\n}\r\nfunction getBestCostNodeSelection(beans) {\r\n  return beans.selectionSvc?.getBestCostNodeSelection();\r\n}\r\n\r\n// packages/ag-grid-community/src/clientSideRowModel/clientSideRowModelModule.ts\r\nvar ClientSideRowModelModule = {\r\n  moduleName: \"ClientSideRowModel\",\r\n  version: VERSION,\r\n  rowModels: [\"clientSide\"],\r\n  beans: [ClientSideNodeManager, ClientSideRowModel, SortStage],\r\n  dependsOn: [SortModule]\r\n};\r\nvar ClientSideRowModelApiModule = {\r\n  moduleName: \"ClientSideRowModelApi\",\r\n  version: VERSION,\r\n  apiFunctions: {\r\n    onGroupExpandedOrCollapsed,\r\n    refreshClientSideRowModel,\r\n    isRowDataEmpty,\r\n    forEachLeafNode,\r\n    forEachNodeAfterFilter,\r\n    forEachNodeAfterFilterAndSort,\r\n    resetRowHeights,\r\n    applyTransaction,\r\n    applyTransactionAsync,\r\n    flushAsyncTransactions,\r\n    getBestCostNodeSelection\r\n  },\r\n  dependsOn: [CsrmSsrmSharedApiModule]\r\n};\r\n\r\n// packages/ag-grid-community/src/export/gridSerializer.ts\r\nvar GridSerializer = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"gridSerializer\";\r\n  }\r\n  wireBeans(beans) {\r\n    this.visibleCols = beans.visibleCols;\r\n    this.colModel = beans.colModel;\r\n    this.rowModel = beans.rowModel;\r\n    this.pinnedRowModel = beans.pinnedRowModel;\r\n  }\r\n  serialize(gridSerializingSession, params = {}) {\r\n    const { allColumns, columnKeys, skipRowGroups, exportRowNumbers } = params;\r\n    const columnsToExport = this.getColumnsToExport({\r\n      allColumns,\r\n      skipRowGroups,\r\n      columnKeys,\r\n      exportRowNumbers\r\n    });\r\n    return [\r\n      // first pass, put in the header names of the cols\r\n      this.prepareSession(columnsToExport),\r\n      this.prependContent(params),\r\n      this.exportColumnGroups(params, columnsToExport),\r\n      this.exportHeaders(params, columnsToExport),\r\n      this.processPinnedTopRows(params, columnsToExport),\r\n      this.processRows(params, columnsToExport),\r\n      this.processPinnedBottomRows(params, columnsToExport),\r\n      this.appendContent(params)\r\n    ].reduce((composed, f) => f(composed), gridSerializingSession).parse();\r\n  }\r\n  processRow(gridSerializingSession, params, columnsToExport, node) {\r\n    const rowSkipper = params.shouldRowBeSkipped || (() => false);\r\n    const isClipboardExport = params.rowPositions != null;\r\n    const isExplicitExportSelection = isClipboardExport || !!params.onlySelected;\r\n    const hideOpenParents = this.gos.get(\"groupHideOpenParents\") && !isExplicitExportSelection;\r\n    const isLeafNode = this.colModel.isPivotMode() ? node.leafGroup : !node.group;\r\n    const isFooter = !!node.footer;\r\n    const shouldSkipCurrentGroup = node.allChildrenCount === 1 && node.childrenAfterGroup?.length === 1 && _canSkipShowingRowGroup(this.gos, node);\r\n    if (!isLeafNode && !isFooter && (params.skipRowGroups || shouldSkipCurrentGroup || hideOpenParents) || params.onlySelected && !node.isSelected() || params.skipPinnedTop && node.rowPinned === \"top\" || params.skipPinnedBottom && node.rowPinned === \"bottom\" || node.stub) {\r\n      return;\r\n    }\r\n    const nodeIsRootNode = node.level === -1;\r\n    if (nodeIsRootNode && !isLeafNode && !isFooter) {\r\n      return;\r\n    }\r\n    const shouldRowBeSkipped = rowSkipper(_addGridCommonParams(this.gos, { node }));\r\n    if (shouldRowBeSkipped) {\r\n      return;\r\n    }\r\n    const rowAccumulator = gridSerializingSession.onNewBodyRow(node);\r\n    columnsToExport.forEach((column, index) => {\r\n      rowAccumulator.onColumn(column, index, node);\r\n    });\r\n    if (params.getCustomContentBelowRow) {\r\n      const content = params.getCustomContentBelowRow(_addGridCommonParams(this.gos, { node }));\r\n      if (content) {\r\n        gridSerializingSession.addCustomContent(content);\r\n      }\r\n    }\r\n  }\r\n  appendContent(params) {\r\n    return (gridSerializingSession) => {\r\n      const appendContent = params.appendContent;\r\n      if (appendContent) {\r\n        gridSerializingSession.addCustomContent(appendContent);\r\n      }\r\n      return gridSerializingSession;\r\n    };\r\n  }\r\n  prependContent(params) {\r\n    return (gridSerializingSession) => {\r\n      const prependContent = params.prependContent;\r\n      if (prependContent) {\r\n        gridSerializingSession.addCustomContent(prependContent);\r\n      }\r\n      return gridSerializingSession;\r\n    };\r\n  }\r\n  prepareSession(columnsToExport) {\r\n    return (gridSerializingSession) => {\r\n      gridSerializingSession.prepare(columnsToExport);\r\n      return gridSerializingSession;\r\n    };\r\n  }\r\n  exportColumnGroups(params, columnsToExport) {\r\n    return (gridSerializingSession) => {\r\n      if (!params.skipColumnGroupHeaders) {\r\n        const idCreator = new GroupInstanceIdCreator();\r\n        const { colGroupSvc } = this.beans;\r\n        const displayedGroups = colGroupSvc ? colGroupSvc.createColumnGroups({\r\n          columns: columnsToExport,\r\n          idCreator,\r\n          pinned: null,\r\n          isStandaloneStructure: true\r\n        }) : columnsToExport;\r\n        this.recursivelyAddHeaderGroups(\r\n          displayedGroups,\r\n          gridSerializingSession,\r\n          params.processGroupHeaderCallback\r\n        );\r\n      }\r\n      return gridSerializingSession;\r\n    };\r\n  }\r\n  exportHeaders(params, columnsToExport) {\r\n    return (gridSerializingSession) => {\r\n      if (!params.skipColumnHeaders) {\r\n        const gridRowIterator = gridSerializingSession.onNewHeaderRow();\r\n        columnsToExport.forEach((column, index) => {\r\n          gridRowIterator.onColumn(column, index, void 0);\r\n        });\r\n      }\r\n      return gridSerializingSession;\r\n    };\r\n  }\r\n  processPinnedTopRows(params, columnsToExport) {\r\n    return (gridSerializingSession) => {\r\n      const processRow = this.processRow.bind(this, gridSerializingSession, params, columnsToExport);\r\n      if (params.rowPositions) {\r\n        params.rowPositions.filter((position) => position.rowPinned === \"top\").sort((a, b) => a.rowIndex - b.rowIndex).map((position) => this.pinnedRowModel?.getPinnedTopRow(position.rowIndex)).forEach(processRow);\r\n      } else if (!this.pinnedRowModel?.isManual()) {\r\n        this.pinnedRowModel?.forEachPinnedRow(\"top\", processRow);\r\n      }\r\n      return gridSerializingSession;\r\n    };\r\n  }\r\n  processRows(params, columnsToExport) {\r\n    return (gridSerializingSession) => {\r\n      const rowModel = this.rowModel;\r\n      const usingCsrm = _isClientSideRowModel(this.gos, rowModel);\r\n      const usingSsrm = _isServerSideRowModel(this.gos, rowModel);\r\n      const onlySelectedNonStandardModel = !usingCsrm && params.onlySelected;\r\n      const processRow = this.processRow.bind(this, gridSerializingSession, params, columnsToExport);\r\n      const { exportedRows = \"filteredAndSorted\" } = params;\r\n      if (params.rowPositions) {\r\n        params.rowPositions.filter((position) => position.rowPinned == null).sort((a, b) => a.rowIndex - b.rowIndex).map((position) => rowModel.getRow(position.rowIndex)).forEach(processRow);\r\n        return gridSerializingSession;\r\n      }\r\n      if (this.colModel.isPivotMode()) {\r\n        if (usingCsrm) {\r\n          rowModel.forEachPivotNode(processRow, true, exportedRows === \"filteredAndSorted\");\r\n        } else if (usingSsrm) {\r\n          rowModel.forEachNodeAfterFilterAndSort(processRow, true);\r\n        } else {\r\n          rowModel.forEachNode(processRow);\r\n        }\r\n        return gridSerializingSession;\r\n      }\r\n      if (params.onlySelectedAllPages || onlySelectedNonStandardModel) {\r\n        const selectedNodes = this.beans.selectionSvc?.getSelectedNodes() ?? [];\r\n        this.replicateSortedOrder(selectedNodes);\r\n        selectedNodes.forEach(processRow);\r\n      } else {\r\n        if (exportedRows === \"all\") {\r\n          rowModel.forEachNode(processRow);\r\n        } else if (usingCsrm || usingSsrm) {\r\n          rowModel.forEachNodeAfterFilterAndSort(processRow, true);\r\n        } else {\r\n          rowModel.forEachNode(processRow);\r\n        }\r\n      }\r\n      return gridSerializingSession;\r\n    };\r\n  }\r\n  replicateSortedOrder(rows) {\r\n    const { sortSvc, rowNodeSorter } = this.beans;\r\n    if (!sortSvc || !rowNodeSorter) {\r\n      return;\r\n    }\r\n    const sortOptions = sortSvc.getSortOptions();\r\n    const compareNodes = (rowA, rowB) => {\r\n      if (rowA.rowIndex != null && rowB.rowIndex != null) {\r\n        return rowA.rowIndex - rowB.rowIndex;\r\n      }\r\n      if (rowA.level === rowB.level) {\r\n        if (rowA.parent?.id === rowB.parent?.id) {\r\n          return rowNodeSorter.compareRowNodes(\r\n            sortOptions,\r\n            {\r\n              rowNode: rowA,\r\n              currentPos: rowA.rowIndex ?? -1\r\n            },\r\n            {\r\n              rowNode: rowB,\r\n              currentPos: rowB.rowIndex ?? -1\r\n            }\r\n          );\r\n        }\r\n        return compareNodes(rowA.parent, rowB.parent);\r\n      }\r\n      if (rowA.level > rowB.level) {\r\n        return compareNodes(rowA.parent, rowB);\r\n      }\r\n      return compareNodes(rowA, rowB.parent);\r\n    };\r\n    rows.sort(compareNodes);\r\n  }\r\n  processPinnedBottomRows(params, columnsToExport) {\r\n    return (gridSerializingSession) => {\r\n      const processRow = this.processRow.bind(this, gridSerializingSession, params, columnsToExport);\r\n      if (params.rowPositions) {\r\n        params.rowPositions.filter((position) => position.rowPinned === \"bottom\").sort((a, b) => a.rowIndex - b.rowIndex).map((position) => this.pinnedRowModel?.getPinnedBottomRow(position.rowIndex)).forEach(processRow);\r\n      } else if (!this.pinnedRowModel?.isManual()) {\r\n        this.pinnedRowModel?.forEachPinnedRow(\"bottom\", processRow);\r\n      }\r\n      return gridSerializingSession;\r\n    };\r\n  }\r\n  getColumnsToExport(params) {\r\n    const { allColumns = false, skipRowGroups = false, exportRowNumbers = false, columnKeys } = params;\r\n    const { colModel, gos, visibleCols } = this;\r\n    const isPivotMode = colModel.isPivotMode();\r\n    const filterSpecialColumns = (col) => {\r\n      if (isColumnSelectionCol(col)) {\r\n        return false;\r\n      }\r\n      return !isRowNumberCol(col) || exportRowNumbers;\r\n    };\r\n    if (columnKeys && columnKeys.length) {\r\n      return colModel.getColsForKeys(columnKeys).filter(filterSpecialColumns);\r\n    }\r\n    const isTreeData = gos.get(\"treeData\");\r\n    let columnsToExport = [];\r\n    if (allColumns && !isPivotMode) {\r\n      columnsToExport = colModel.getCols();\r\n    } else {\r\n      columnsToExport = visibleCols.allCols;\r\n    }\r\n    columnsToExport = columnsToExport.filter(\r\n      (column) => filterSpecialColumns(column) && (skipRowGroups && !isTreeData ? !isColumnGroupAutoCol(column) : true)\r\n    );\r\n    return columnsToExport;\r\n  }\r\n  recursivelyAddHeaderGroups(displayedGroups, gridSerializingSession, processGroupHeaderCallback) {\r\n    const directChildrenHeaderGroups = [];\r\n    displayedGroups.forEach((columnGroupChild) => {\r\n      const columnGroup = columnGroupChild;\r\n      if (!columnGroup.getChildren) {\r\n        return;\r\n      }\r\n      columnGroup.getChildren().forEach((it) => directChildrenHeaderGroups.push(it));\r\n    });\r\n    if (displayedGroups.length > 0 && isColumnGroup(displayedGroups[0])) {\r\n      this.doAddHeaderHeader(gridSerializingSession, displayedGroups, processGroupHeaderCallback);\r\n    }\r\n    if (directChildrenHeaderGroups && directChildrenHeaderGroups.length > 0) {\r\n      this.recursivelyAddHeaderGroups(\r\n        directChildrenHeaderGroups,\r\n        gridSerializingSession,\r\n        processGroupHeaderCallback\r\n      );\r\n    }\r\n  }\r\n  doAddHeaderHeader(gridSerializingSession, displayedGroups, processGroupHeaderCallback) {\r\n    const gridRowIterator = gridSerializingSession.onNewHeaderGroupingRow();\r\n    let columnIndex = 0;\r\n    displayedGroups.forEach((columnGroupChild) => {\r\n      const columnGroup = columnGroupChild;\r\n      let name;\r\n      if (processGroupHeaderCallback) {\r\n        name = processGroupHeaderCallback(\r\n          _addGridCommonParams(this.gos, {\r\n            columnGroup\r\n          })\r\n        );\r\n      } else {\r\n        name = this.beans.colNames.getDisplayNameForColumnGroup(columnGroup, \"header\");\r\n      }\r\n      const collapsibleGroupRanges = columnGroup.getLeafColumns().reduce((collapsibleGroups, currentColumn, currentIdx, arr) => {\r\n        let lastGroup = _last(collapsibleGroups);\r\n        const groupShow = currentColumn.getColumnGroupShow() === \"open\";\r\n        if (!groupShow) {\r\n          if (lastGroup && lastGroup[1] == null) {\r\n            lastGroup[1] = currentIdx - 1;\r\n          }\r\n        } else if (!lastGroup || lastGroup[1] != null) {\r\n          lastGroup = [currentIdx];\r\n          collapsibleGroups.push(lastGroup);\r\n        }\r\n        if (currentIdx === arr.length - 1 && lastGroup && lastGroup[1] == null) {\r\n          lastGroup[1] = currentIdx;\r\n        }\r\n        return collapsibleGroups;\r\n      }, []);\r\n      gridRowIterator.onColumn(\r\n        columnGroup,\r\n        name || \"\",\r\n        columnIndex++,\r\n        columnGroup.getLeafColumns().length - 1,\r\n        collapsibleGroupRanges\r\n      );\r\n    });\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/export/exportModule.ts\r\nvar SharedExportModule = {\r\n  moduleName: \"SharedExport\",\r\n  version: VERSION,\r\n  beans: [GridSerializer]\r\n};\r\n\r\n// packages/ag-grid-community/src/csvExport/csvSerializingSession.ts\r\nvar LINE_SEPARATOR = \"\\r\\n\";\r\nvar CsvSerializingSession = class extends BaseGridSerializingSession {\r\n  constructor(config) {\r\n    super(config);\r\n    this.config = config;\r\n    this.isFirstLine = true;\r\n    this.result = \"\";\r\n    const { suppressQuotes, columnSeparator } = config;\r\n    this.suppressQuotes = suppressQuotes;\r\n    this.columnSeparator = columnSeparator;\r\n  }\r\n  addCustomContent(content) {\r\n    if (!content) {\r\n      return;\r\n    }\r\n    if (typeof content === \"string\") {\r\n      if (!/^\\s*\\n/.test(content)) {\r\n        this.beginNewLine();\r\n      }\r\n      content = content.replace(/\\r?\\n/g, LINE_SEPARATOR);\r\n      this.result += content;\r\n    } else {\r\n      content.forEach((row) => {\r\n        this.beginNewLine();\r\n        row.forEach((cell, index) => {\r\n          if (index !== 0) {\r\n            this.result += this.columnSeparator;\r\n          }\r\n          this.result += this.putInQuotes(cell.data.value || \"\");\r\n          if (cell.mergeAcross) {\r\n            this.appendEmptyCells(cell.mergeAcross);\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n  onNewHeaderGroupingRow() {\r\n    this.beginNewLine();\r\n    return {\r\n      onColumn: this.onNewHeaderGroupingRowColumn.bind(this)\r\n    };\r\n  }\r\n  onNewHeaderGroupingRowColumn(columnGroup, header, index, span) {\r\n    if (index != 0) {\r\n      this.result += this.columnSeparator;\r\n    }\r\n    this.result += this.putInQuotes(header);\r\n    this.appendEmptyCells(span);\r\n  }\r\n  appendEmptyCells(count) {\r\n    for (let i = 1; i <= count; i++) {\r\n      this.result += this.columnSeparator + this.putInQuotes(\"\");\r\n    }\r\n  }\r\n  onNewHeaderRow() {\r\n    this.beginNewLine();\r\n    return {\r\n      onColumn: this.onNewHeaderRowColumn.bind(this)\r\n    };\r\n  }\r\n  onNewHeaderRowColumn(column, index) {\r\n    if (index != 0) {\r\n      this.result += this.columnSeparator;\r\n    }\r\n    this.result += this.putInQuotes(this.extractHeaderValue(column));\r\n  }\r\n  onNewBodyRow() {\r\n    this.beginNewLine();\r\n    return {\r\n      onColumn: this.onNewBodyRowColumn.bind(this)\r\n    };\r\n  }\r\n  onNewBodyRowColumn(column, index, node) {\r\n    if (index != 0) {\r\n      this.result += this.columnSeparator;\r\n    }\r\n    const rowCellValue = this.extractRowCellValue(column, index, index, \"csv\", node);\r\n    this.result += this.putInQuotes(rowCellValue.valueFormatted ?? rowCellValue.value);\r\n  }\r\n  putInQuotes(value) {\r\n    if (this.suppressQuotes) {\r\n      return value;\r\n    }\r\n    if (value === null || value === void 0) {\r\n      return '\"\"';\r\n    }\r\n    let stringValue;\r\n    if (typeof value === \"string\") {\r\n      stringValue = value;\r\n    } else if (typeof value.toString === \"function\") {\r\n      stringValue = value.toString();\r\n    } else {\r\n      _warn(53);\r\n      stringValue = \"\";\r\n    }\r\n    const valueEscaped = stringValue.replace(/\"/g, '\"\"');\r\n    return '\"' + valueEscaped + '\"';\r\n  }\r\n  parse() {\r\n    return this.result;\r\n  }\r\n  beginNewLine() {\r\n    if (!this.isFirstLine) {\r\n      this.result += LINE_SEPARATOR;\r\n    }\r\n    this.isFirstLine = false;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/csvExport/csvCreator.ts\r\nvar CsvCreator = class extends BaseCreator {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"csvCreator\";\r\n  }\r\n  wireBeans(beans) {\r\n    this.colModel = beans.colModel;\r\n    this.colNames = beans.colNames;\r\n    this.rowGroupColsSvc = beans.rowGroupColsSvc;\r\n    this.valueSvc = beans.valueSvc;\r\n  }\r\n  getMergedParams(params) {\r\n    const baseParams5 = this.gos.get(\"defaultCsvExportParams\");\r\n    return Object.assign({}, baseParams5, params);\r\n  }\r\n  export(userParams) {\r\n    if (this.isExportSuppressed()) {\r\n      _warn(51);\r\n      return;\r\n    }\r\n    const mergedParams = this.getMergedParams(userParams);\r\n    const data = this.getData(mergedParams);\r\n    const packagedFile = new Blob([\"\\uFEFF\", data], { type: \"text/plain\" });\r\n    const fileName = typeof mergedParams.fileName === \"function\" ? mergedParams.fileName(_addGridCommonParams(this.gos, {})) : mergedParams.fileName;\r\n    _downloadFile(this.getFileName(fileName), packagedFile);\r\n  }\r\n  exportDataAsCsv(params) {\r\n    this.export(params);\r\n  }\r\n  getDataAsCsv(params, skipDefaultParams = false) {\r\n    const mergedParams = skipDefaultParams ? Object.assign({}, params) : this.getMergedParams(params);\r\n    return this.getData(mergedParams);\r\n  }\r\n  getDefaultFileExtension() {\r\n    return \"csv\";\r\n  }\r\n  createSerializingSession(params) {\r\n    const { colModel, colNames, rowGroupColsSvc, valueSvc, gos } = this;\r\n    const {\r\n      processCellCallback,\r\n      processHeaderCallback,\r\n      processGroupHeaderCallback,\r\n      processRowGroupCallback,\r\n      suppressQuotes,\r\n      columnSeparator\r\n    } = params;\r\n    return new CsvSerializingSession({\r\n      colModel,\r\n      colNames,\r\n      valueSvc,\r\n      gos,\r\n      processCellCallback: processCellCallback || void 0,\r\n      processHeaderCallback: processHeaderCallback || void 0,\r\n      processGroupHeaderCallback: processGroupHeaderCallback || void 0,\r\n      processRowGroupCallback: processRowGroupCallback || void 0,\r\n      suppressQuotes: suppressQuotes || false,\r\n      columnSeparator: columnSeparator || \",\",\r\n      rowGroupColsSvc\r\n    });\r\n  }\r\n  isExportSuppressed() {\r\n    return this.gos.get(\"suppressCsvExport\");\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/csvExport/csvExportApi.ts\r\nfunction getDataAsCsv(beans, params) {\r\n  return beans.csvCreator?.getDataAsCsv(params);\r\n}\r\nfunction exportDataAsCsv(beans, params) {\r\n  beans.csvCreator?.exportDataAsCsv(params);\r\n}\r\n\r\n// packages/ag-grid-community/src/csvExport/csvExportModule.ts\r\nvar CsvExportModule = {\r\n  moduleName: \"CsvExport\",\r\n  version: VERSION,\r\n  beans: [CsvCreator],\r\n  apiFunctions: {\r\n    getDataAsCsv,\r\n    exportDataAsCsv\r\n  },\r\n  dependsOn: [SharedExportModule]\r\n};\r\n\r\n// packages/ag-grid-community/src/infiniteRowModel/infiniteBlock.ts\r\nvar InfiniteBlock = class extends BeanStub {\r\n  constructor(id, parentCache, params) {\r\n    super();\r\n    this.id = id;\r\n    this.parentCache = parentCache;\r\n    this.params = params;\r\n    this.state = \"needsLoading\";\r\n    this.version = 0;\r\n    this.startRow = id * params.blockSize;\r\n    this.endRow = this.startRow + params.blockSize;\r\n  }\r\n  load() {\r\n    this.state = \"loading\";\r\n    this.loadFromDatasource();\r\n  }\r\n  setStateWaitingToLoad() {\r\n    this.version++;\r\n    this.state = \"needsLoading\";\r\n  }\r\n  pageLoadFailed(version) {\r\n    const requestMostRecentAndLive = this.isRequestMostRecentAndLive(version);\r\n    if (requestMostRecentAndLive) {\r\n      this.state = \"failed\";\r\n    }\r\n    this.dispatchLocalEvent({ type: \"loadComplete\" });\r\n  }\r\n  pageLoaded(version, rows, lastRow) {\r\n    this.successCommon(version, { rowData: rows, rowCount: lastRow });\r\n  }\r\n  isRequestMostRecentAndLive(version) {\r\n    const thisIsMostRecentRequest = version === this.version;\r\n    const weAreNotDestroyed = this.isAlive();\r\n    return thisIsMostRecentRequest && weAreNotDestroyed;\r\n  }\r\n  successCommon(version, params) {\r\n    this.dispatchLocalEvent({ type: \"loadComplete\" });\r\n    const requestMostRecentAndLive = this.isRequestMostRecentAndLive(version);\r\n    if (requestMostRecentAndLive) {\r\n      this.state = \"loaded\";\r\n      this.processServerResult(params);\r\n    }\r\n  }\r\n  postConstruct() {\r\n    this.rowNodes = [];\r\n    const {\r\n      params: { blockSize, rowHeight },\r\n      startRow,\r\n      beans,\r\n      rowNodes\r\n    } = this;\r\n    for (let i = 0; i < blockSize; i++) {\r\n      const rowIndex = startRow + i;\r\n      const rowNode = new RowNode(beans);\r\n      rowNode.setRowHeight(rowHeight);\r\n      rowNode.uiLevel = 0;\r\n      rowNode.setRowIndex(rowIndex);\r\n      rowNode.setRowTop(rowHeight * rowIndex);\r\n      rowNodes.push(rowNode);\r\n    }\r\n  }\r\n  getBlockStateJson() {\r\n    const { id, startRow, endRow, state: pageStatus } = this;\r\n    return {\r\n      id: \"\" + id,\r\n      state: {\r\n        blockNumber: id,\r\n        startRow,\r\n        endRow,\r\n        pageStatus\r\n      }\r\n    };\r\n  }\r\n  setDataAndId(rowNode, data, index) {\r\n    if (_exists(data)) {\r\n      rowNode.setDataAndId(data, index.toString());\r\n    } else {\r\n      rowNode.setDataAndId(void 0, void 0);\r\n    }\r\n  }\r\n  loadFromDatasource() {\r\n    const params = this.createLoadParams();\r\n    if (_missing(this.params.datasource.getRows)) {\r\n      _warn(90);\r\n      return;\r\n    }\r\n    window.setTimeout(() => {\r\n      this.params.datasource.getRows(params);\r\n    }, 0);\r\n  }\r\n  createLoadParams() {\r\n    const {\r\n      startRow,\r\n      endRow,\r\n      version,\r\n      params: { sortModel, filterModel },\r\n      gos\r\n    } = this;\r\n    const params = {\r\n      startRow,\r\n      endRow,\r\n      successCallback: this.pageLoaded.bind(this, version),\r\n      failCallback: this.pageLoadFailed.bind(this, version),\r\n      sortModel,\r\n      filterModel,\r\n      context: _addGridCommonParams(gos, {}).context\r\n    };\r\n    return params;\r\n  }\r\n  forEachNode(callback, sequence, rowCount) {\r\n    this.rowNodes.forEach((rowNode, index) => {\r\n      const rowIndex = this.startRow + index;\r\n      if (rowIndex < rowCount) {\r\n        callback(rowNode, sequence.value++);\r\n      }\r\n    });\r\n  }\r\n  getRow(rowIndex, dontTouchLastAccessed = false) {\r\n    if (!dontTouchLastAccessed) {\r\n      this.lastAccessed = this.params.lastAccessedSequence.value++;\r\n    }\r\n    const localIndex = rowIndex - this.startRow;\r\n    return this.rowNodes[localIndex];\r\n  }\r\n  processServerResult(params) {\r\n    const { rowNodes, beans } = this;\r\n    rowNodes.forEach((rowNode, index) => {\r\n      const data = params.rowData ? params.rowData[index] : void 0;\r\n      if (!rowNode.id && rowNode.alreadyRendered && data) {\r\n        rowNodes[index] = new RowNode(beans);\r\n        rowNodes[index].setRowIndex(rowNode.rowIndex);\r\n        rowNodes[index].setRowTop(rowNode.rowTop);\r\n        rowNodes[index].setRowHeight(rowNode.rowHeight);\r\n        rowNode.clearRowTopAndRowIndex();\r\n      }\r\n      this.setDataAndId(rowNodes[index], data, this.startRow + index);\r\n    });\r\n    const finalRowCount = params.rowCount != null && params.rowCount >= 0 ? params.rowCount : void 0;\r\n    this.parentCache.pageLoaded(this, finalRowCount);\r\n  }\r\n  destroy() {\r\n    this.rowNodes.forEach((rowNode) => {\r\n      rowNode.clearRowTopAndRowIndex();\r\n    });\r\n    super.destroy();\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/infiniteRowModel/infiniteCache.ts\r\nvar MAX_EMPTY_BLOCKS_TO_KEEP = 2;\r\nvar InfiniteCache = class extends BeanStub {\r\n  constructor(params) {\r\n    super();\r\n    this.params = params;\r\n    this.lastRowIndexKnown = false;\r\n    this.blocks = {};\r\n    this.blockCount = 0;\r\n    this.rowCount = params.initialRowCount;\r\n  }\r\n  // the rowRenderer will not pass dontCreatePage, meaning when rendering the grid,\r\n  // it will want new pages in the cache as it asks for rows. only when we are inserting /\r\n  // removing rows via the api is dontCreatePage set, where we move rows between the pages.\r\n  getRow(rowIndex, dontCreatePage = false) {\r\n    const blockId = Math.floor(rowIndex / this.params.blockSize);\r\n    let block = this.blocks[blockId];\r\n    if (!block) {\r\n      if (dontCreatePage) {\r\n        return void 0;\r\n      }\r\n      block = this.createBlock(blockId);\r\n    }\r\n    return block.getRow(rowIndex);\r\n  }\r\n  createBlock(blockNumber) {\r\n    const params = this.params;\r\n    const newBlock = this.createBean(new InfiniteBlock(blockNumber, this, params));\r\n    this.blocks[newBlock.id] = newBlock;\r\n    this.blockCount++;\r\n    this.purgeBlocksIfNeeded(newBlock);\r\n    params.rowNodeBlockLoader.addBlock(newBlock);\r\n    return newBlock;\r\n  }\r\n  // we have this on infinite row model only, not server side row model,\r\n  // because for server side, it would leave the children in inconsistent\r\n  // state - eg if a node had children, but after the refresh it had data\r\n  // for a different row, then the children would be with the wrong row node.\r\n  refreshCache() {\r\n    const nothingToRefresh = this.blockCount == 0;\r\n    if (nothingToRefresh) {\r\n      this.purgeCache();\r\n      return;\r\n    }\r\n    this.getBlocksInOrder().forEach((block) => block.setStateWaitingToLoad());\r\n    this.params.rowNodeBlockLoader.checkBlockToLoad();\r\n  }\r\n  destroy() {\r\n    this.getBlocksInOrder().forEach((block) => this.destroyBlock(block));\r\n    super.destroy();\r\n  }\r\n  getRowCount() {\r\n    return this.rowCount;\r\n  }\r\n  isLastRowIndexKnown() {\r\n    return this.lastRowIndexKnown;\r\n  }\r\n  // block calls this, when page loaded\r\n  pageLoaded(block, lastRow) {\r\n    if (!this.isAlive()) {\r\n      return;\r\n    }\r\n    _logIfDebug(this.gos, `InfiniteCache - onPageLoaded: page = ${block.id}, lastRow = ${lastRow}`);\r\n    this.checkRowCount(block, lastRow);\r\n    this.onCacheUpdated();\r\n  }\r\n  purgeBlocksIfNeeded(blockToExclude) {\r\n    const blocksForPurging = this.getBlocksInOrder().filter((b) => b != blockToExclude);\r\n    const lastAccessedComparator = (a, b) => b.lastAccessed - a.lastAccessed;\r\n    blocksForPurging.sort(lastAccessedComparator);\r\n    const maxBlocksProvided = this.params.maxBlocksInCache > 0;\r\n    const blocksToKeep = maxBlocksProvided ? this.params.maxBlocksInCache - 1 : null;\r\n    const emptyBlocksToKeep = MAX_EMPTY_BLOCKS_TO_KEEP - 1;\r\n    blocksForPurging.forEach((block, index) => {\r\n      const purgeBecauseBlockEmpty = block.state === \"needsLoading\" && index >= emptyBlocksToKeep;\r\n      const purgeBecauseCacheFull = maxBlocksProvided ? index >= blocksToKeep : false;\r\n      if (purgeBecauseBlockEmpty || purgeBecauseCacheFull) {\r\n        if (this.isBlockCurrentlyDisplayed(block)) {\r\n          return;\r\n        }\r\n        if (this.isBlockFocused(block)) {\r\n          return;\r\n        }\r\n        this.removeBlockFromCache(block);\r\n      }\r\n    });\r\n  }\r\n  isBlockFocused(block) {\r\n    const focusedCell = this.beans.focusSvc.getFocusCellToUseAfterRefresh();\r\n    if (!focusedCell) {\r\n      return false;\r\n    }\r\n    if (focusedCell.rowPinned != null) {\r\n      return false;\r\n    }\r\n    const { startRow, endRow } = block;\r\n    const hasFocus = focusedCell.rowIndex >= startRow && focusedCell.rowIndex < endRow;\r\n    return hasFocus;\r\n  }\r\n  isBlockCurrentlyDisplayed(block) {\r\n    const { startRow, endRow } = block;\r\n    return this.beans.rowRenderer.isRangeInRenderedViewport(startRow, endRow - 1);\r\n  }\r\n  removeBlockFromCache(blockToRemove) {\r\n    if (!blockToRemove) {\r\n      return;\r\n    }\r\n    this.destroyBlock(blockToRemove);\r\n  }\r\n  checkRowCount(block, lastRow) {\r\n    if (typeof lastRow === \"number\" && lastRow >= 0) {\r\n      this.rowCount = lastRow;\r\n      this.lastRowIndexKnown = true;\r\n    } else if (!this.lastRowIndexKnown) {\r\n      const { blockSize, overflowSize } = this.params;\r\n      const lastRowIndex = (block.id + 1) * blockSize;\r\n      const lastRowIndexPlusOverflow = lastRowIndex + overflowSize;\r\n      if (this.rowCount < lastRowIndexPlusOverflow) {\r\n        this.rowCount = lastRowIndexPlusOverflow;\r\n      }\r\n    }\r\n  }\r\n  setRowCount(rowCount, lastRowIndexKnown) {\r\n    this.rowCount = rowCount;\r\n    if (_exists(lastRowIndexKnown)) {\r\n      this.lastRowIndexKnown = lastRowIndexKnown;\r\n    }\r\n    if (!this.lastRowIndexKnown) {\r\n      if (this.rowCount % this.params.blockSize === 0) {\r\n        this.rowCount++;\r\n      }\r\n    }\r\n    this.onCacheUpdated();\r\n  }\r\n  forEachNodeDeep(callback) {\r\n    const sequence = { value: 0 };\r\n    this.getBlocksInOrder().forEach((block) => block.forEachNode(callback, sequence, this.rowCount));\r\n  }\r\n  getBlocksInOrder() {\r\n    const blockComparator = (a, b) => a.id - b.id;\r\n    const blocks = Object.values(this.blocks).sort(blockComparator);\r\n    return blocks;\r\n  }\r\n  destroyBlock(block) {\r\n    delete this.blocks[block.id];\r\n    this.destroyBean(block);\r\n    this.blockCount--;\r\n    this.params.rowNodeBlockLoader.removeBlock(block);\r\n  }\r\n  // gets called 1) row count changed 2) cache purged 3) items inserted\r\n  onCacheUpdated() {\r\n    if (this.isAlive()) {\r\n      this.destroyAllBlocksPastVirtualRowCount();\r\n      this.eventSvc.dispatchEvent({\r\n        type: \"storeUpdated\"\r\n      });\r\n    }\r\n  }\r\n  destroyAllBlocksPastVirtualRowCount() {\r\n    const blocksToDestroy = [];\r\n    this.getBlocksInOrder().forEach((block) => {\r\n      const startRow = block.id * this.params.blockSize;\r\n      if (startRow >= this.rowCount) {\r\n        blocksToDestroy.push(block);\r\n      }\r\n    });\r\n    if (blocksToDestroy.length > 0) {\r\n      blocksToDestroy.forEach((block) => this.destroyBlock(block));\r\n    }\r\n  }\r\n  purgeCache() {\r\n    this.getBlocksInOrder().forEach((block) => this.removeBlockFromCache(block));\r\n    this.lastRowIndexKnown = false;\r\n    if (this.rowCount === 0) {\r\n      this.rowCount = this.params.initialRowCount;\r\n    }\r\n    this.onCacheUpdated();\r\n  }\r\n  getRowNodesInRange(firstInRange, lastInRange) {\r\n    const result = [];\r\n    let lastBlockId = -1;\r\n    let inActiveRange = false;\r\n    const numberSequence = { value: 0 };\r\n    let foundGapInSelection = false;\r\n    this.getBlocksInOrder().forEach((block) => {\r\n      if (foundGapInSelection) {\r\n        return;\r\n      }\r\n      if (inActiveRange && lastBlockId + 1 !== block.id) {\r\n        foundGapInSelection = true;\r\n        return;\r\n      }\r\n      lastBlockId = block.id;\r\n      block.forEachNode(\r\n        (rowNode) => {\r\n          const hitFirstOrLast = rowNode === firstInRange || rowNode === lastInRange;\r\n          if (inActiveRange || hitFirstOrLast) {\r\n            result.push(rowNode);\r\n          }\r\n          if (hitFirstOrLast) {\r\n            inActiveRange = !inActiveRange;\r\n          }\r\n        },\r\n        numberSequence,\r\n        this.rowCount\r\n      );\r\n    });\r\n    const invalidRange = foundGapInSelection || inActiveRange;\r\n    return invalidRange ? [] : result;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/infiniteRowModel/infiniteRowModel.ts\r\nvar InfiniteRowModel = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"rowModel\";\r\n  }\r\n  getRowBounds(index) {\r\n    return {\r\n      rowHeight: this.rowHeight,\r\n      rowTop: this.rowHeight * index\r\n    };\r\n  }\r\n  // we don't implement as lazy row heights is not supported in this row model\r\n  ensureRowHeightsValid() {\r\n    return false;\r\n  }\r\n  postConstruct() {\r\n    if (this.gos.get(\"rowModelType\") !== \"infinite\") {\r\n      return;\r\n    }\r\n    this.rowHeight = _getRowHeightAsNumber(this.beans);\r\n    this.addEventListeners();\r\n    this.addDestroyFunc(() => this.destroyCache());\r\n  }\r\n  start() {\r\n    this.setDatasource(this.gos.get(\"datasource\"));\r\n  }\r\n  destroy() {\r\n    this.destroyDatasource();\r\n    super.destroy();\r\n  }\r\n  destroyDatasource() {\r\n    if (this.datasource) {\r\n      this.destroyBean(this.datasource);\r\n      this.beans.rowRenderer.datasourceChanged();\r\n      this.datasource = null;\r\n    }\r\n  }\r\n  addEventListeners() {\r\n    this.addManagedEventListeners({\r\n      filterChanged: this.reset.bind(this),\r\n      sortChanged: this.reset.bind(this),\r\n      newColumnsLoaded: this.onColumnEverything.bind(this),\r\n      storeUpdated: this.dispatchModelUpdatedEvent.bind(this)\r\n    });\r\n    this.addManagedPropertyListener(\"datasource\", () => this.setDatasource(this.gos.get(\"datasource\")));\r\n    this.addManagedPropertyListener(\"cacheBlockSize\", () => this.resetCache());\r\n    this.addManagedPropertyListener(\"rowHeight\", () => {\r\n      this.rowHeight = _getRowHeightAsNumber(this.beans);\r\n      this.cacheParams.rowHeight = this.rowHeight;\r\n      this.updateRowHeights();\r\n    });\r\n  }\r\n  onColumnEverything() {\r\n    let resetRequired;\r\n    if (this.cacheParams) {\r\n      resetRequired = !_jsonEquals(this.cacheParams.sortModel, this.beans.sortSvc?.getSortModel() ?? []);\r\n    } else {\r\n      resetRequired = true;\r\n    }\r\n    if (resetRequired) {\r\n      this.reset();\r\n    }\r\n  }\r\n  getType() {\r\n    return \"infinite\";\r\n  }\r\n  setDatasource(datasource) {\r\n    this.destroyDatasource();\r\n    this.datasource = datasource;\r\n    if (datasource) {\r\n      this.reset();\r\n    }\r\n  }\r\n  isEmpty() {\r\n    return !this.infiniteCache;\r\n  }\r\n  isRowsToRender() {\r\n    return !!this.infiniteCache;\r\n  }\r\n  getNodesInRangeForSelection(firstInRange, lastInRange) {\r\n    return this.infiniteCache?.getRowNodesInRange(firstInRange, lastInRange) ?? [];\r\n  }\r\n  reset() {\r\n    if (!this.datasource) {\r\n      return;\r\n    }\r\n    const getRowIdFunc = _getRowIdCallback(this.gos);\r\n    const userGeneratingIds = getRowIdFunc != null;\r\n    if (!userGeneratingIds) {\r\n      this.beans.selectionSvc?.reset(\"rowDataChanged\");\r\n    }\r\n    this.resetCache();\r\n  }\r\n  dispatchModelUpdatedEvent() {\r\n    this.eventSvc.dispatchEvent({\r\n      type: \"modelUpdated\",\r\n      // not sure if these should all be false - noticed if after implementing,\r\n      // maybe they should be true?\r\n      newPage: false,\r\n      newPageSize: false,\r\n      newData: false,\r\n      keepRenderedRows: true,\r\n      animate: false\r\n    });\r\n  }\r\n  resetCache() {\r\n    this.destroyCache();\r\n    const beans = this.beans;\r\n    const { filterManager, sortSvc, rowNodeBlockLoader, eventSvc, gos } = beans;\r\n    this.cacheParams = {\r\n      // the user provided datasource\r\n      datasource: this.datasource,\r\n      // sort and filter model\r\n      filterModel: filterManager?.getFilterModel() ?? {},\r\n      sortModel: sortSvc?.getSortModel() ?? [],\r\n      rowNodeBlockLoader,\r\n      // properties - this way we take a snapshot of them, so if user changes any, they will be\r\n      // used next time we create a new cache, which is generally after a filter or sort change,\r\n      // or a new datasource is set\r\n      initialRowCount: gos.get(\"infiniteInitialRowCount\"),\r\n      maxBlocksInCache: gos.get(\"maxBlocksInCache\"),\r\n      rowHeight: _getRowHeightAsNumber(beans),\r\n      // if user doesn't provide overflow, we use default overflow of 1, so user can scroll past\r\n      // the current page and request first row of next page\r\n      overflowSize: gos.get(\"cacheOverflowSize\"),\r\n      // page size needs to be 1 or greater. having it at 1 would be silly, as you would be hitting the\r\n      // server for one page at a time. so the default if not specified is 100.\r\n      blockSize: gos.get(\"cacheBlockSize\"),\r\n      // the cache could create this, however it is also used by the pages, so handy to create it\r\n      // here as the settings are also passed to the pages\r\n      lastAccessedSequence: { value: 0 }\r\n    };\r\n    this.infiniteCache = this.createBean(new InfiniteCache(this.cacheParams));\r\n    eventSvc.dispatchEventOnce({\r\n      type: \"rowCountReady\"\r\n    });\r\n    this.dispatchModelUpdatedEvent();\r\n  }\r\n  updateRowHeights() {\r\n    this.forEachNode((node) => {\r\n      node.setRowHeight(this.rowHeight);\r\n      node.setRowTop(this.rowHeight * node.rowIndex);\r\n    });\r\n    this.dispatchModelUpdatedEvent();\r\n  }\r\n  destroyCache() {\r\n    this.infiniteCache = this.destroyBean(this.infiniteCache);\r\n  }\r\n  getRow(rowIndex) {\r\n    const infiniteCache = this.infiniteCache;\r\n    if (!infiniteCache) {\r\n      return void 0;\r\n    }\r\n    if (rowIndex >= infiniteCache.getRowCount()) {\r\n      return void 0;\r\n    }\r\n    return infiniteCache.getRow(rowIndex);\r\n  }\r\n  getRowNode(id) {\r\n    let result;\r\n    this.forEachNode((rowNode) => {\r\n      if (rowNode.id === id) {\r\n        result = rowNode;\r\n      }\r\n    });\r\n    return result;\r\n  }\r\n  forEachNode(callback) {\r\n    this.infiniteCache?.forEachNodeDeep(callback);\r\n  }\r\n  getTopLevelRowCount() {\r\n    return this.getRowCount();\r\n  }\r\n  getTopLevelRowDisplayedIndex(topLevelIndex) {\r\n    return topLevelIndex;\r\n  }\r\n  getRowIndexAtPixel(pixel) {\r\n    if (this.rowHeight !== 0) {\r\n      const rowIndexForPixel = Math.floor(pixel / this.rowHeight);\r\n      const lastRowIndex = this.getRowCount() - 1;\r\n      if (rowIndexForPixel > lastRowIndex) {\r\n        return lastRowIndex;\r\n      }\r\n      return rowIndexForPixel;\r\n    }\r\n    return 0;\r\n  }\r\n  getRowCount() {\r\n    return this.infiniteCache ? this.infiniteCache.getRowCount() : 0;\r\n  }\r\n  isRowPresent(rowNode) {\r\n    return !!this.getRowNode(rowNode.id);\r\n  }\r\n  refreshCache() {\r\n    this.infiniteCache?.refreshCache();\r\n  }\r\n  purgeCache() {\r\n    this.infiniteCache?.purgeCache();\r\n  }\r\n  // for iRowModel\r\n  isLastRowIndexKnown() {\r\n    return this.infiniteCache?.isLastRowIndexKnown() ?? false;\r\n  }\r\n  setRowCount(rowCount, lastRowIndexKnown) {\r\n    this.infiniteCache?.setRowCount(rowCount, lastRowIndexKnown);\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/infiniteRowModel/infiniteRowModelApi.ts\r\nfunction refreshInfiniteCache(beans) {\r\n  _getInfiniteRowModel(beans)?.refreshCache();\r\n}\r\nfunction purgeInfiniteCache(beans) {\r\n  _getInfiniteRowModel(beans)?.purgeCache();\r\n}\r\nfunction getInfiniteRowCount(beans) {\r\n  return _getInfiniteRowModel(beans)?.getRowCount();\r\n}\r\n\r\n// packages/ag-grid-community/src/infiniteRowModel/rowNodeBlockLoader.ts\r\nvar RowNodeBlockLoader = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"rowNodeBlockLoader\";\r\n    this.activeBlockLoadsCount = 0;\r\n    this.blocks = [];\r\n    this.active = true;\r\n  }\r\n  postConstruct() {\r\n    this.maxConcurrentRequests = _getMaxConcurrentDatasourceRequests(this.gos);\r\n    const blockLoadDebounceMillis = this.gos.get(\"blockLoadDebounceMillis\");\r\n    if (blockLoadDebounceMillis && blockLoadDebounceMillis > 0) {\r\n      this.checkBlockToLoadDebounce = _debounce(\r\n        this,\r\n        this.performCheckBlocksToLoad.bind(this),\r\n        blockLoadDebounceMillis\r\n      );\r\n    }\r\n  }\r\n  addBlock(block) {\r\n    this.blocks.push(block);\r\n    block.addEventListener(\"loadComplete\", this.loadComplete.bind(this));\r\n    this.checkBlockToLoad();\r\n  }\r\n  removeBlock(block) {\r\n    _removeFromArray(this.blocks, block);\r\n  }\r\n  destroy() {\r\n    super.destroy();\r\n    this.active = false;\r\n  }\r\n  loadComplete() {\r\n    this.activeBlockLoadsCount--;\r\n    this.checkBlockToLoad();\r\n  }\r\n  checkBlockToLoad() {\r\n    if (this.checkBlockToLoadDebounce) {\r\n      this.checkBlockToLoadDebounce();\r\n    } else {\r\n      this.performCheckBlocksToLoad();\r\n    }\r\n  }\r\n  performCheckBlocksToLoad() {\r\n    if (!this.active) {\r\n      return;\r\n    }\r\n    this.printCacheStatus();\r\n    if (this.maxConcurrentRequests != null && this.activeBlockLoadsCount >= this.maxConcurrentRequests) {\r\n      _logIfDebug(this.gos, `RowNodeBlockLoader - checkBlockToLoad: max loads exceeded`);\r\n      return;\r\n    }\r\n    const loadAvailability = this.maxConcurrentRequests != null ? this.maxConcurrentRequests - this.activeBlockLoadsCount : 1;\r\n    const blocksToLoad = this.blocks.filter((block) => block.state === \"needsLoading\").slice(0, loadAvailability);\r\n    this.activeBlockLoadsCount += blocksToLoad.length;\r\n    blocksToLoad.forEach((block) => block.load());\r\n    this.printCacheStatus();\r\n  }\r\n  getBlockState() {\r\n    const result = {};\r\n    this.blocks.forEach((block) => {\r\n      const { id, state } = block.getBlockStateJson();\r\n      result[id] = state;\r\n    });\r\n    return result;\r\n  }\r\n  printCacheStatus() {\r\n    _logIfDebug(\r\n      this.gos,\r\n      `RowNodeBlockLoader - printCacheStatus: activePageLoadsCount = ${this.activeBlockLoadsCount}, blocks = ${JSON.stringify(this.getBlockState())}`\r\n    );\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/infiniteRowModel/infiniteRowModelModule.ts\r\nvar InfiniteRowModelCoreModule = {\r\n  moduleName: \"InfiniteRowModelCore\",\r\n  version: VERSION,\r\n  rowModels: [\"infinite\"],\r\n  beans: [InfiniteRowModel, RowNodeBlockLoader]\r\n};\r\nvar InfiniteRowModelModule = {\r\n  moduleName: \"InfiniteRowModel\",\r\n  version: VERSION,\r\n  apiFunctions: {\r\n    refreshInfiniteCache,\r\n    purgeInfiniteCache,\r\n    getInfiniteRowCount\r\n  },\r\n  dependsOn: [InfiniteRowModelCoreModule, SsrmInfiniteSharedApiModule]\r\n};\r\n\r\n// packages/ag-grid-community/src/rendering/cellRenderers/animateShowChangeCellRenderer.ts\r\nvar ARROW_UP = \"\\u2191\";\r\nvar ARROW_DOWN = \"\\u2193\";\r\nvar AnimateShowChangeCellRendererElement = {\r\n  tag: \"span\",\r\n  children: [\r\n    { tag: \"span\", ref: \"eDelta\", cls: \"ag-value-change-delta\" },\r\n    { tag: \"span\", ref: \"eValue\", cls: \"ag-value-change-value\" }\r\n  ]\r\n};\r\nvar AnimateShowChangeCellRenderer = class extends Component {\r\n  constructor() {\r\n    super(AnimateShowChangeCellRendererElement);\r\n    this.eValue = RefPlaceholder;\r\n    this.eDelta = RefPlaceholder;\r\n    this.refreshCount = 0;\r\n  }\r\n  init(params) {\r\n    this.refresh(params, true);\r\n  }\r\n  showDelta(params, delta) {\r\n    const absDelta = Math.abs(delta);\r\n    const valueFormatted = params.formatValue(absDelta);\r\n    const valueToUse = _exists(valueFormatted) ? valueFormatted : absDelta;\r\n    const deltaUp = delta >= 0;\r\n    const eDelta = this.eDelta;\r\n    if (deltaUp) {\r\n      eDelta.textContent = ARROW_UP + valueToUse;\r\n    } else {\r\n      eDelta.textContent = ARROW_DOWN + valueToUse;\r\n    }\r\n    eDelta.classList.toggle(\"ag-value-change-delta-up\", deltaUp);\r\n    eDelta.classList.toggle(\"ag-value-change-delta-down\", !deltaUp);\r\n  }\r\n  setTimerToRemoveDelta() {\r\n    this.refreshCount++;\r\n    const refreshCountCopy = this.refreshCount;\r\n    this.beans.frameworkOverrides.wrapIncoming(() => {\r\n      window.setTimeout(() => {\r\n        if (refreshCountCopy === this.refreshCount) {\r\n          this.hideDeltaValue();\r\n        }\r\n      }, 2e3);\r\n    });\r\n  }\r\n  hideDeltaValue() {\r\n    this.eValue.classList.remove(\"ag-value-change-value-highlight\");\r\n    _clearElement(this.eDelta);\r\n  }\r\n  refresh(params, isInitialRender = false) {\r\n    const { value, valueFormatted } = params;\r\n    const { eValue, lastValue, beans } = this;\r\n    if (value === lastValue) {\r\n      return false;\r\n    }\r\n    if (_exists(valueFormatted)) {\r\n      eValue.textContent = valueFormatted;\r\n    } else if (_exists(value)) {\r\n      eValue.textContent = value;\r\n    } else {\r\n      _clearElement(eValue);\r\n    }\r\n    if (beans.filterManager?.isSuppressFlashingCellsBecauseFiltering()) {\r\n      return false;\r\n    }\r\n    const numericValue = value && typeof value === \"object\" && \"toNumber\" in value ? value.toNumber() : value;\r\n    const numericLastValue = lastValue && typeof lastValue === \"object\" && \"toNumber\" in lastValue ? lastValue.toNumber() : lastValue;\r\n    if (numericValue === numericLastValue) {\r\n      return false;\r\n    }\r\n    if (typeof numericValue === \"number\" && typeof numericLastValue === \"number\") {\r\n      const delta = numericValue - numericLastValue;\r\n      this.showDelta(params, delta);\r\n    }\r\n    if (lastValue) {\r\n      eValue.classList.add(\"ag-value-change-value-highlight\");\r\n    }\r\n    if (!isInitialRender) {\r\n      this.setTimerToRemoveDelta();\r\n    }\r\n    this.lastValue = value;\r\n    return true;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/rendering/cellRenderers/animateSlideCellRenderer.css-GENERATED.ts\r\nvar animateSlideCellRendererCSS = (\r\n  /*css*/\r\n  `.ag-value-slide-out{opacity:1}:where(.ag-ltr) .ag-value-slide-out{margin-right:5px;transition:opacity 3s,margin-right 3s}:where(.ag-rtl) .ag-value-slide-out{margin-left:5px;transition:opacity 3s,margin-left 3s}:where(.ag-ltr,.ag-rtl) .ag-value-slide-out{transition-timing-function:linear}.ag-value-slide-out-end{opacity:0}:where(.ag-ltr) .ag-value-slide-out-end{margin-right:10px}:where(.ag-rtl) .ag-value-slide-out-end{margin-left:10px}`\r\n);\r\n\r\n// packages/ag-grid-community/src/rendering/cellRenderers/animateSlideCellRenderer.ts\r\nvar AnimateSlideCellRendererElement = {\r\n  tag: \"span\",\r\n  children: [{ tag: \"span\", ref: \"eCurrent\", cls: \"ag-value-slide-current\" }]\r\n};\r\nvar AnimateSlideCellRenderer = class extends Component {\r\n  constructor() {\r\n    super(AnimateSlideCellRendererElement);\r\n    this.eCurrent = RefPlaceholder;\r\n    this.refreshCount = 0;\r\n    this.registerCSS(animateSlideCellRendererCSS);\r\n  }\r\n  init(params) {\r\n    this.refresh(params, true);\r\n  }\r\n  addSlideAnimation() {\r\n    this.refreshCount++;\r\n    const refreshCountCopy = this.refreshCount;\r\n    if (this.ePrevious) {\r\n      this.getGui().removeChild(this.ePrevious);\r\n    }\r\n    const { beans, eCurrent } = this;\r\n    const prevElement = _createElement({ tag: \"span\", cls: \"ag-value-slide-previous ag-value-slide-out\" });\r\n    this.ePrevious = prevElement;\r\n    prevElement.textContent = eCurrent.textContent;\r\n    this.getGui().insertBefore(prevElement, eCurrent);\r\n    beans.frameworkOverrides.wrapIncoming(() => {\r\n      window.setTimeout(() => {\r\n        if (refreshCountCopy !== this.refreshCount) {\r\n          return;\r\n        }\r\n        this.ePrevious.classList.add(\"ag-value-slide-out-end\");\r\n      }, 50);\r\n      window.setTimeout(() => {\r\n        if (refreshCountCopy !== this.refreshCount) {\r\n          return;\r\n        }\r\n        this.getGui().removeChild(this.ePrevious);\r\n        this.ePrevious = null;\r\n      }, 3e3);\r\n    });\r\n  }\r\n  refresh(params, isInitialRender = false) {\r\n    let value = params.value;\r\n    if (_missing(value)) {\r\n      value = \"\";\r\n    }\r\n    if (value === this.lastValue) {\r\n      return false;\r\n    }\r\n    if (this.beans.filterManager?.isSuppressFlashingCellsBecauseFiltering()) {\r\n      return false;\r\n    }\r\n    if (!isInitialRender) {\r\n      this.addSlideAnimation();\r\n    }\r\n    this.lastValue = value;\r\n    const eCurrent = this.eCurrent;\r\n    if (_exists(params.valueFormatted)) {\r\n      eCurrent.textContent = params.valueFormatted;\r\n    } else if (_exists(params.value)) {\r\n      eCurrent.textContent = value;\r\n    } else {\r\n      _clearElement(eCurrent);\r\n    }\r\n    return true;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/rendering/cell/cellFlashService.ts\r\nvar CellFlashService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"cellFlashSvc\";\r\n    this.nextAnimationTime = null;\r\n    this.nextAnimationCycle = null;\r\n    this.animations = {\r\n      highlight: /* @__PURE__ */ new Map(),\r\n      \"data-changed\": /* @__PURE__ */ new Map()\r\n    };\r\n  }\r\n  animateCell(cellCtrl, cssName, flashDuration = this.beans.gos.get(\"cellFlashDuration\"), fadeDuration = this.beans.gos.get(\"cellFadeDuration\")) {\r\n    const animations = this.animations[cssName];\r\n    animations.delete(cellCtrl);\r\n    const time = Date.now();\r\n    const flashEndTime = time + flashDuration;\r\n    const fadeEndTime = time + flashDuration + fadeDuration;\r\n    const animState = {\r\n      phase: \"flash\",\r\n      flashEndTime,\r\n      fadeEndTime\r\n    };\r\n    animations.set(cellCtrl, animState);\r\n    const cssBase = `ag-cell-${cssName}`;\r\n    const cssAnimation = `${cssBase}-animation`;\r\n    const {\r\n      comp,\r\n      eGui: { style }\r\n    } = cellCtrl;\r\n    comp.toggleCss(cssBase, true);\r\n    comp.toggleCss(cssAnimation, false);\r\n    style.removeProperty(\"transition\");\r\n    style.removeProperty(\"transition-delay\");\r\n    if (this.nextAnimationTime && flashEndTime + 15 < this.nextAnimationTime) {\r\n      clearTimeout(this.nextAnimationCycle);\r\n      this.nextAnimationCycle = null;\r\n      this.nextAnimationTime = null;\r\n    }\r\n    if (!this.nextAnimationCycle) {\r\n      this.beans.frameworkOverrides.wrapIncoming(() => {\r\n        this.nextAnimationCycle = setTimeout(this.advanceAnimations.bind(this), flashDuration);\r\n      });\r\n      this.nextAnimationTime = flashEndTime;\r\n    }\r\n  }\r\n  advanceAnimations() {\r\n    const time = Date.now();\r\n    let nextAnimationTime = null;\r\n    for (const cssName of Object.keys(this.animations)) {\r\n      const animations = this.animations[cssName];\r\n      const cssBase = `ag-cell-${cssName}`;\r\n      const cssAnimation = `${cssBase}-animation`;\r\n      for (const [cell, animState] of animations) {\r\n        if (!cell.isAlive() || !cell.comp) {\r\n          animations.delete(cell);\r\n          continue;\r\n        }\r\n        const { phase, flashEndTime, fadeEndTime } = animState;\r\n        const nextActionableTime = phase === \"flash\" ? flashEndTime : fadeEndTime;\r\n        const requiresAction = time + 15 >= nextActionableTime;\r\n        if (!requiresAction) {\r\n          nextAnimationTime = Math.min(nextActionableTime, nextAnimationTime ?? Infinity);\r\n          continue;\r\n        }\r\n        const {\r\n          comp,\r\n          eGui: { style }\r\n        } = cell;\r\n        switch (phase) {\r\n          case \"flash\":\r\n            comp.toggleCss(cssBase, false);\r\n            comp.toggleCss(cssAnimation, true);\r\n            style.transition = `background-color ${fadeEndTime - flashEndTime}ms`;\r\n            style.transitionDelay = `${flashEndTime - time}ms`;\r\n            nextAnimationTime = Math.min(fadeEndTime, nextAnimationTime ?? Infinity);\r\n            animState.phase = \"fade\";\r\n            break;\r\n          case \"fade\":\r\n            comp.toggleCss(cssBase, false);\r\n            comp.toggleCss(cssAnimation, false);\r\n            style.removeProperty(\"transition\");\r\n            style.removeProperty(\"transition-delay\");\r\n            animations.delete(cell);\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (nextAnimationTime == null) {\r\n      this.nextAnimationTime = null;\r\n      this.nextAnimationCycle = null;\r\n    } else if (nextAnimationTime) {\r\n      this.nextAnimationCycle = setTimeout(this.advanceAnimations.bind(this), nextAnimationTime - time);\r\n      this.nextAnimationTime = nextAnimationTime;\r\n    }\r\n  }\r\n  onFlashCells(cellCtrl, event) {\r\n    if (!cellCtrl.comp) {\r\n      return;\r\n    }\r\n    const cellId = _createCellId(cellCtrl.cellPosition);\r\n    const shouldFlash = event.cells[cellId];\r\n    if (shouldFlash) {\r\n      this.animateCell(cellCtrl, \"highlight\");\r\n    }\r\n  }\r\n  flashCell(cellCtrl, delays) {\r\n    this.animateCell(cellCtrl, \"data-changed\", delays?.flashDuration, delays?.fadeDuration);\r\n  }\r\n  destroy() {\r\n    for (const cssName of Object.keys(this.animations)) {\r\n      const animations = this.animations[cssName];\r\n      animations.clear();\r\n    }\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/rendering/cell/highlightChangesApi.ts\r\nfunction flashCells(beans, params = {}) {\r\n  const { cellFlashSvc } = beans;\r\n  if (!cellFlashSvc) {\r\n    return;\r\n  }\r\n  beans.frameworkOverrides.wrapIncoming(() => {\r\n    beans.rowRenderer.getCellCtrls(params.rowNodes, params.columns).forEach((cellCtrl) => cellFlashSvc.flashCell(cellCtrl, params));\r\n  });\r\n}\r\n\r\n// packages/ag-grid-community/src/rendering/cell/highlightChangesModule.ts\r\nvar HighlightChangesModule = {\r\n  moduleName: \"HighlightChanges\",\r\n  version: VERSION,\r\n  beans: [CellFlashService],\r\n  userComponents: {\r\n    agAnimateShowChangeCellRenderer: AnimateShowChangeCellRenderer,\r\n    agAnimateSlideCellRenderer: AnimateSlideCellRenderer\r\n  },\r\n  apiFunctions: {\r\n    flashCells\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/misc/state/stateApi.ts\r\nfunction getState(beans) {\r\n  return beans.stateSvc?.getState() ?? {};\r\n}\r\nfunction setState(beans, state, propertiesToIgnore) {\r\n  return beans.stateSvc?.setState(state, propertiesToIgnore);\r\n}\r\n\r\n// packages/ag-grid-community/src/misc/state/stateModelMigration.ts\r\nfunction migrateGridStateModel(state) {\r\n  state = { ...state };\r\n  if (!state.version) {\r\n    state.version = \"32.1.0\";\r\n  }\r\n  switch (state.version) {\r\n    case \"32.1.0\":\r\n      state = migrateV32_1(state);\r\n  }\r\n  state.version = VERSION;\r\n  return state;\r\n}\r\nfunction migrateV32_1(state) {\r\n  state.cellSelection = jsonGet(state, \"rangeSelection\");\r\n  return state;\r\n}\r\nfunction jsonGet(json, key) {\r\n  if (json && typeof json === \"object\") {\r\n    return json[key];\r\n  }\r\n}\r\n\r\n// packages/ag-grid-community/src/misc/state/stateService.ts\r\nvar StateService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"stateSvc\";\r\n    this.updateRowGroupExpansionStateTimer = 0;\r\n    this.suppressEvents = true;\r\n    this.queuedUpdateSources = /* @__PURE__ */ new Set();\r\n    this.dispatchStateUpdateEventDebounced = _debounce(this, () => this.dispatchQueuedStateUpdateEvents(), 0);\r\n    // If user is doing a manual expand all node by node, we don't want to process one at a time.\r\n    // EVENT_ROW_GROUP_OPENED is already async, so no impact of making the state async here.\r\n    this.onRowGroupOpenedDebounced = _debounce(\r\n      this,\r\n      () => {\r\n        this.updateCachedState(\"rowGroupExpansion\", this.getRowGroupExpansionState());\r\n      },\r\n      0\r\n    );\r\n    // similar to row expansion, want to debounce. However, selection is synchronous, so need to mark as stale in case `getState` is called.\r\n    this.onRowSelectedDebounced = _debounce(\r\n      this,\r\n      () => {\r\n        this.staleStateKeys.delete(\"rowSelection\");\r\n        this.updateCachedState(\"rowSelection\", this.getRowSelectionState());\r\n      },\r\n      0\r\n    );\r\n    this.staleStateKeys = /* @__PURE__ */ new Set();\r\n  }\r\n  postConstruct() {\r\n    this.isClientSideRowModel = _isClientSideRowModel(this.gos);\r\n    const initialState = migrateGridStateModel(this.gos.get(\"initialState\") ?? {});\r\n    const partialColumnState = initialState.partialColumnState;\r\n    delete initialState.partialColumnState;\r\n    this.cachedState = initialState;\r\n    const suppressEventsAndDispatchInitEvent = this.suppressEventsAndDispatchInitEvent.bind(this);\r\n    this.beans.ctrlsSvc.whenReady(\r\n      this,\r\n      () => suppressEventsAndDispatchInitEvent(() => this.setupStateOnGridReady(initialState))\r\n    );\r\n    const [newColumnsLoadedDestroyFunc, rowCountReadyDestroyFunc, firstDataRenderedDestroyFunc] = this.addManagedEventListeners({\r\n      newColumnsLoaded: ({ source }) => {\r\n        if (source === \"gridInitializing\") {\r\n          newColumnsLoadedDestroyFunc();\r\n          suppressEventsAndDispatchInitEvent(\r\n            () => this.setupStateOnColumnsInitialised(initialState, !!partialColumnState)\r\n          );\r\n        }\r\n      },\r\n      rowCountReady: () => {\r\n        rowCountReadyDestroyFunc?.();\r\n        suppressEventsAndDispatchInitEvent(() => this.setupStateOnRowCountReady(initialState));\r\n      },\r\n      firstDataRendered: () => {\r\n        firstDataRenderedDestroyFunc?.();\r\n        suppressEventsAndDispatchInitEvent(() => this.setupStateOnFirstDataRendered(initialState));\r\n      }\r\n    });\r\n  }\r\n  destroy() {\r\n    super.destroy();\r\n    clearTimeout(this.updateRowGroupExpansionStateTimer);\r\n    this.queuedUpdateSources.clear();\r\n  }\r\n  getState() {\r\n    if (this.staleStateKeys.size) {\r\n      this.refreshStaleState();\r\n    }\r\n    return this.cachedState;\r\n  }\r\n  setState(providedState, propertiesToIgnore) {\r\n    const state = migrateGridStateModel(providedState);\r\n    delete state.partialColumnState;\r\n    this.cachedState = state;\r\n    this.startSuppressEvents();\r\n    const source = \"api\";\r\n    const ignoreSet = propertiesToIgnore ? new Set(propertiesToIgnore) : void 0;\r\n    this.setGridReadyState(state, source, ignoreSet);\r\n    this.setColumnsInitialisedState(state, source, false, ignoreSet);\r\n    this.setRowCountState(state, source, ignoreSet);\r\n    setTimeout(() => {\r\n      if (this.isAlive()) {\r\n        this.setFirstDataRenderedState(state, source, ignoreSet);\r\n      }\r\n      this.stopSuppressEvents(source);\r\n    });\r\n  }\r\n  setGridReadyState(state, source, ignoreSet) {\r\n    if (source === \"api\" && !ignoreSet?.has(\"sideBar\")) {\r\n      this.beans.sideBar?.comp?.setState(state.sideBar);\r\n    }\r\n    this.updateCachedState(\"sideBar\", this.getSideBarState());\r\n  }\r\n  setupStateOnGridReady(initialState) {\r\n    this.setGridReadyState(initialState, \"gridInitializing\");\r\n    const stateUpdater = () => this.updateCachedState(\"sideBar\", this.getSideBarState());\r\n    this.addManagedEventListeners({\r\n      toolPanelVisibleChanged: stateUpdater,\r\n      sideBarUpdated: stateUpdater\r\n    });\r\n  }\r\n  updateColumnAndGroupState() {\r\n    this.updateColumnState([\r\n      \"aggregation\",\r\n      \"columnOrder\",\r\n      \"columnPinning\",\r\n      \"columnSizing\",\r\n      \"columnVisibility\",\r\n      \"pivot\",\r\n      \"rowGroup\",\r\n      \"sort\"\r\n    ]);\r\n    this.updateCachedState(\"columnGroup\", this.getColumnGroupState());\r\n  }\r\n  setColumnsInitialisedState(state, source, partialColumnState, ignoreSet) {\r\n    this.setColumnState(state, source, partialColumnState, ignoreSet);\r\n    this.setColumnGroupState(state, source, ignoreSet);\r\n    this.updateColumnAndGroupState();\r\n  }\r\n  setupStateOnColumnsInitialised(initialState, partialColumnState) {\r\n    this.setColumnsInitialisedState(initialState, \"gridInitializing\", partialColumnState);\r\n    const onUpdate = (state) => () => this.updateColumnState([state]);\r\n    this.addManagedEventListeners({\r\n      columnValueChanged: onUpdate(\"aggregation\"),\r\n      columnMoved: onUpdate(\"columnOrder\"),\r\n      columnPinned: onUpdate(\"columnPinning\"),\r\n      columnResized: onUpdate(\"columnSizing\"),\r\n      columnVisible: onUpdate(\"columnVisibility\"),\r\n      columnPivotChanged: onUpdate(\"pivot\"),\r\n      columnPivotModeChanged: onUpdate(\"pivot\"),\r\n      columnRowGroupChanged: onUpdate(\"rowGroup\"),\r\n      sortChanged: onUpdate(\"sort\"),\r\n      newColumnsLoaded: this.updateColumnAndGroupState.bind(this),\r\n      columnGroupOpened: () => this.updateCachedState(\"columnGroup\", this.getColumnGroupState())\r\n    });\r\n  }\r\n  setRowCountState(state, source, ignoreSet) {\r\n    const {\r\n      filter: filterState,\r\n      rowGroupExpansion: rowGroupExpansionState,\r\n      rowSelection: rowSelectionState,\r\n      pagination: paginationState\r\n    } = state;\r\n    const shouldSetState = (prop, propState) => !ignoreSet?.has(prop) && (propState || source === \"api\");\r\n    if (shouldSetState(\"filter\", filterState)) {\r\n      this.setFilterState(filterState);\r\n    }\r\n    if (shouldSetState(\"rowGroupExpansion\", rowGroupExpansionState)) {\r\n      this.setRowGroupExpansionState(rowGroupExpansionState, source);\r\n    }\r\n    if (shouldSetState(\"rowSelection\", rowSelectionState)) {\r\n      this.setRowSelectionState(rowSelectionState, source);\r\n    }\r\n    if (shouldSetState(\"pagination\", paginationState)) {\r\n      this.setPaginationState(paginationState, source);\r\n    }\r\n    const updateCachedState = this.updateCachedState.bind(this);\r\n    updateCachedState(\"filter\", this.getFilterState());\r\n    updateCachedState(\"rowGroupExpansion\", this.getRowGroupExpansionState());\r\n    updateCachedState(\"rowSelection\", this.getRowSelectionState());\r\n    updateCachedState(\"pagination\", this.getPaginationState());\r\n  }\r\n  setupStateOnRowCountReady(initialState) {\r\n    this.setRowCountState(initialState, \"gridInitializing\");\r\n    const updateCachedState = this.updateCachedState.bind(this);\r\n    const updateRowGroupExpansionState = () => {\r\n      this.updateRowGroupExpansionStateTimer = 0;\r\n      updateCachedState(\"rowGroupExpansion\", this.getRowGroupExpansionState());\r\n    };\r\n    const updateFilterState = () => updateCachedState(\"filter\", this.getFilterState());\r\n    const { gos, colFilter } = this.beans;\r\n    this.addManagedEventListeners({\r\n      filterChanged: updateFilterState,\r\n      rowGroupOpened: () => this.onRowGroupOpenedDebounced(),\r\n      expandOrCollapseAll: updateRowGroupExpansionState,\r\n      // `groupDefaultExpanded`/`isGroupOpenByDefault` updates expansion state without an expansion event\r\n      columnRowGroupChanged: updateRowGroupExpansionState,\r\n      rowDataUpdated: () => {\r\n        if (gos.get(\"groupDefaultExpanded\") !== 0 || gos.get(\"isGroupOpenByDefault\")) {\r\n          this.updateRowGroupExpansionStateTimer || (this.updateRowGroupExpansionStateTimer = setTimeout(updateRowGroupExpansionState));\r\n        }\r\n      },\r\n      selectionChanged: () => {\r\n        this.staleStateKeys.add(\"rowSelection\");\r\n        this.onRowSelectedDebounced();\r\n      },\r\n      paginationChanged: (event) => {\r\n        if (event.newPage || event.newPageSize) {\r\n          updateCachedState(\"pagination\", this.getPaginationState());\r\n        }\r\n      }\r\n    });\r\n    if (colFilter) {\r\n      this.addManagedListeners(colFilter, {\r\n        filterStateChanged: updateFilterState\r\n      });\r\n    }\r\n  }\r\n  setFirstDataRenderedState(state, source, ignoreSet) {\r\n    const {\r\n      scroll: scrollState,\r\n      cellSelection: cellSelectionState,\r\n      focusedCell: focusedCellState,\r\n      columnOrder: columnOrderState,\r\n      rowPinning\r\n    } = state;\r\n    const shouldSetState = (prop, propState) => !ignoreSet?.has(prop) && (propState || source === \"api\");\r\n    if (shouldSetState(\"focusedCell\", focusedCellState)) {\r\n      this.setFocusedCellState(focusedCellState);\r\n    }\r\n    if (shouldSetState(\"cellSelection\", cellSelectionState)) {\r\n      this.setCellSelectionState(cellSelectionState);\r\n    }\r\n    if (shouldSetState(\"scroll\", scrollState)) {\r\n      this.setScrollState(scrollState);\r\n    }\r\n    if (shouldSetState(\"rowPinning\", rowPinning)) {\r\n      this.setRowPinningState(rowPinning);\r\n    }\r\n    this.setColumnPivotState(!!columnOrderState?.orderedColIds, source);\r\n    const updateCachedState = this.updateCachedState.bind(this);\r\n    updateCachedState(\"sideBar\", this.getSideBarState());\r\n    updateCachedState(\"focusedCell\", this.getFocusedCellState());\r\n    const cellSelection = this.getRangeSelectionState();\r\n    updateCachedState(\"rangeSelection\", cellSelection);\r\n    updateCachedState(\"cellSelection\", cellSelection);\r\n    updateCachedState(\"scroll\", this.getScrollState());\r\n  }\r\n  setupStateOnFirstDataRendered(initialState) {\r\n    this.setFirstDataRenderedState(initialState, \"gridInitializing\");\r\n    const updateCachedState = this.updateCachedState.bind(this);\r\n    this.addManagedEventListeners({\r\n      cellFocused: () => updateCachedState(\"focusedCell\", this.getFocusedCellState()),\r\n      cellSelectionChanged: (event) => {\r\n        if (event.finished) {\r\n          const cellSelection = this.getRangeSelectionState();\r\n          updateCachedState(\"rangeSelection\", cellSelection);\r\n          updateCachedState(\"cellSelection\", cellSelection);\r\n        }\r\n      },\r\n      bodyScrollEnd: () => updateCachedState(\"scroll\", this.getScrollState()),\r\n      pinnedRowsChanged: () => updateCachedState(\"rowPinning\", this.getRowPinningState())\r\n    });\r\n  }\r\n  getColumnState() {\r\n    const beans = this.beans;\r\n    return convertColumnState(_getColumnState(beans), beans.colModel.isPivotMode());\r\n  }\r\n  setColumnState(state, source, partialColumnState, ignoreSet) {\r\n    const {\r\n      sort: sortState,\r\n      rowGroup: groupState,\r\n      aggregation: aggregationState,\r\n      pivot: pivotState,\r\n      columnPinning: columnPinningState,\r\n      columnVisibility: columnVisibilityState,\r\n      columnSizing: columnSizingState,\r\n      columnOrder: columnOrderState\r\n    } = state;\r\n    const shouldSetState = (prop, propState) => !ignoreSet?.has(prop) && (propState || source === \"api\");\r\n    const columnStateMap = {};\r\n    const getColumnState2 = (colId) => {\r\n      let columnState = columnStateMap[colId];\r\n      if (columnState) {\r\n        return columnState;\r\n      }\r\n      columnState = { colId };\r\n      columnStateMap[colId] = columnState;\r\n      return columnState;\r\n    };\r\n    const defaultState = {};\r\n    const shouldSetSortState = shouldSetState(\"sort\", sortState);\r\n    if (shouldSetSortState) {\r\n      sortState?.sortModel.forEach(({ colId, sort }, sortIndex) => {\r\n        const columnState = getColumnState2(colId);\r\n        columnState.sort = sort;\r\n        columnState.sortIndex = sortIndex;\r\n      });\r\n    }\r\n    if (shouldSetSortState || !partialColumnState) {\r\n      defaultState.sort = null;\r\n      defaultState.sortIndex = null;\r\n    }\r\n    const shouldSetGroupState = shouldSetState(\"rowGroup\", groupState);\r\n    if (shouldSetGroupState) {\r\n      groupState?.groupColIds.forEach((colId, rowGroupIndex) => {\r\n        const columnState = getColumnState2(colId);\r\n        columnState.rowGroup = true;\r\n        columnState.rowGroupIndex = rowGroupIndex;\r\n      });\r\n    }\r\n    if (shouldSetGroupState || !partialColumnState) {\r\n      defaultState.rowGroup = null;\r\n      defaultState.rowGroupIndex = null;\r\n    }\r\n    const shouldSetAggregationState = shouldSetState(\"aggregation\", aggregationState);\r\n    if (shouldSetAggregationState) {\r\n      aggregationState?.aggregationModel.forEach(({ colId, aggFunc }) => {\r\n        getColumnState2(colId).aggFunc = aggFunc;\r\n      });\r\n    }\r\n    if (shouldSetAggregationState || !partialColumnState) {\r\n      defaultState.aggFunc = null;\r\n    }\r\n    const shouldSetPivotState = shouldSetState(\"pivot\", pivotState);\r\n    if (shouldSetPivotState) {\r\n      pivotState?.pivotColIds.forEach((colId, pivotIndex) => {\r\n        const columnState = getColumnState2(colId);\r\n        columnState.pivot = true;\r\n        columnState.pivotIndex = pivotIndex;\r\n      });\r\n      this.gos.updateGridOptions({\r\n        options: { pivotMode: !!pivotState?.pivotMode },\r\n        source\r\n      });\r\n    }\r\n    if (shouldSetPivotState || !partialColumnState) {\r\n      defaultState.pivot = null;\r\n      defaultState.pivotIndex = null;\r\n    }\r\n    const shouldSetColumnPinningState = shouldSetState(\"columnPinning\", columnPinningState);\r\n    if (shouldSetColumnPinningState) {\r\n      columnPinningState?.leftColIds.forEach((colId) => {\r\n        getColumnState2(colId).pinned = \"left\";\r\n      });\r\n      columnPinningState?.rightColIds.forEach((colId) => {\r\n        getColumnState2(colId).pinned = \"right\";\r\n      });\r\n    }\r\n    if (shouldSetColumnPinningState || !partialColumnState) {\r\n      defaultState.pinned = null;\r\n    }\r\n    const shouldSetColumnVisibilityState = shouldSetState(\"columnVisibility\", columnVisibilityState);\r\n    if (shouldSetColumnVisibilityState) {\r\n      columnVisibilityState?.hiddenColIds.forEach((colId) => {\r\n        getColumnState2(colId).hide = true;\r\n      });\r\n    }\r\n    if (shouldSetColumnVisibilityState || !partialColumnState) {\r\n      defaultState.hide = null;\r\n    }\r\n    const shouldSetColumnSizingState = shouldSetState(\"columnSizing\", columnSizingState);\r\n    if (shouldSetColumnSizingState) {\r\n      columnSizingState?.columnSizingModel.forEach(({ colId, flex, width }) => {\r\n        const columnState = getColumnState2(colId);\r\n        columnState.flex = flex ?? null;\r\n        columnState.width = width;\r\n      });\r\n    }\r\n    if (shouldSetColumnSizingState || !partialColumnState) {\r\n      defaultState.flex = null;\r\n    }\r\n    const columns = columnOrderState?.orderedColIds;\r\n    const applyOrder = !!columns?.length && !ignoreSet?.has(\"columnOrder\");\r\n    const columnStates = applyOrder ? columns.map((colId) => getColumnState2(colId)) : Object.values(columnStateMap);\r\n    if (columnStates.length) {\r\n      this.columnStates = columnStates;\r\n      _applyColumnState(\r\n        this.beans,\r\n        {\r\n          state: columnStates,\r\n          applyOrder,\r\n          defaultState\r\n        },\r\n        source\r\n      );\r\n    }\r\n  }\r\n  setColumnPivotState(applyOrder, source) {\r\n    const columnStates = this.columnStates;\r\n    this.columnStates = void 0;\r\n    const columnGroupStates = this.columnGroupStates;\r\n    this.columnGroupStates = void 0;\r\n    const beans = this.beans;\r\n    const { pivotResultCols, colGroupSvc } = beans;\r\n    if (!pivotResultCols?.isPivotResultColsPresent()) {\r\n      return;\r\n    }\r\n    if (columnStates) {\r\n      const secondaryColumnStates = [];\r\n      for (const columnState of columnStates) {\r\n        if (pivotResultCols.getPivotResultCol(columnState.colId)) {\r\n          secondaryColumnStates.push(columnState);\r\n        }\r\n      }\r\n      _applyColumnState(\r\n        beans,\r\n        {\r\n          state: secondaryColumnStates,\r\n          applyOrder\r\n        },\r\n        source\r\n      );\r\n    }\r\n    if (columnGroupStates) {\r\n      colGroupSvc?.setColumnGroupState(columnGroupStates, source);\r\n    }\r\n  }\r\n  getColumnGroupState() {\r\n    const colGroupSvc = this.beans.colGroupSvc;\r\n    if (!colGroupSvc) {\r\n      return void 0;\r\n    }\r\n    const columnGroupState = colGroupSvc.getColumnGroupState();\r\n    return _convertColumnGroupState(columnGroupState);\r\n  }\r\n  setColumnGroupState(state, source, ignoreSet) {\r\n    const colGroupSvc = this.beans.colGroupSvc;\r\n    if (!colGroupSvc || ignoreSet?.has(\"columnGroup\") || source !== \"api\" && !Object.prototype.hasOwnProperty.call(state, \"columnGroup\")) {\r\n      return;\r\n    }\r\n    const openColumnGroups = new Set(state.columnGroup?.openColumnGroupIds);\r\n    const existingColumnGroupState = colGroupSvc.getColumnGroupState();\r\n    const stateItems = existingColumnGroupState.map(({ groupId }) => {\r\n      const open = openColumnGroups.has(groupId);\r\n      if (open) {\r\n        openColumnGroups.delete(groupId);\r\n      }\r\n      return {\r\n        groupId,\r\n        open\r\n      };\r\n    });\r\n    openColumnGroups.forEach((groupId) => {\r\n      stateItems.push({\r\n        groupId,\r\n        open: true\r\n      });\r\n    });\r\n    if (stateItems.length) {\r\n      this.columnGroupStates = stateItems;\r\n    }\r\n    colGroupSvc.setColumnGroupState(stateItems, source);\r\n  }\r\n  getFilterState() {\r\n    const filterManager = this.beans.filterManager;\r\n    let filterModel = filterManager?.getFilterModel();\r\n    if (filterModel && Object.keys(filterModel).length === 0) {\r\n      filterModel = void 0;\r\n    }\r\n    const columnFilterState = filterManager?.getFilterState();\r\n    const advancedFilterModel = filterManager?.getAdvFilterModel() ?? void 0;\r\n    return filterModel || advancedFilterModel || columnFilterState ? { filterModel, columnFilterState, advancedFilterModel } : void 0;\r\n  }\r\n  setFilterState(filterState) {\r\n    const filterManager = this.beans.filterManager;\r\n    const { filterModel, columnFilterState, advancedFilterModel } = filterState ?? {\r\n      filterModel: null,\r\n      columnFilterState: null,\r\n      advancedFilterModel: null\r\n    };\r\n    if (filterModel !== void 0 || columnFilterState !== void 0) {\r\n      filterManager?.setFilterState(filterModel ?? null, columnFilterState ?? null, \"columnFilter\");\r\n    }\r\n    if (advancedFilterModel !== void 0) {\r\n      filterManager?.setAdvFilterModel(advancedFilterModel ?? null, \"advancedFilter\");\r\n    }\r\n  }\r\n  getRangeSelectionState() {\r\n    const cellRanges = this.beans.rangeSvc?.getCellRanges().map((cellRange) => {\r\n      const { id, type, startRow, endRow, columns, startColumn } = cellRange;\r\n      return {\r\n        id,\r\n        type,\r\n        startRow,\r\n        endRow,\r\n        colIds: columns.map((column) => column.getColId()),\r\n        startColId: startColumn.getColId()\r\n      };\r\n    });\r\n    return cellRanges?.length ? { cellRanges } : void 0;\r\n  }\r\n  setCellSelectionState(cellSelectionState) {\r\n    const { gos, rangeSvc, colModel, visibleCols } = this.beans;\r\n    if (!_isCellSelectionEnabled(gos) || !rangeSvc) {\r\n      return;\r\n    }\r\n    const cellRanges = [];\r\n    cellSelectionState?.cellRanges.forEach((cellRange) => {\r\n      const columns = [];\r\n      cellRange.colIds.forEach((colId) => {\r\n        const column = colModel.getCol(colId);\r\n        if (column) {\r\n          columns.push(column);\r\n        }\r\n      });\r\n      if (!columns.length) {\r\n        return;\r\n      }\r\n      let startColumn = colModel.getCol(cellRange.startColId);\r\n      if (!startColumn) {\r\n        const allColumns = visibleCols.allCols;\r\n        const columnSet = new Set(columns);\r\n        startColumn = allColumns.find((column) => columnSet.has(column));\r\n      }\r\n      cellRanges.push({\r\n        ...cellRange,\r\n        columns,\r\n        startColumn\r\n      });\r\n    });\r\n    rangeSvc.setCellRanges(cellRanges);\r\n  }\r\n  getScrollState() {\r\n    if (!this.isClientSideRowModel) {\r\n      return void 0;\r\n    }\r\n    const scrollFeature = this.beans.ctrlsSvc.getScrollFeature();\r\n    const { left } = scrollFeature?.getHScrollPosition() ?? { left: 0 };\r\n    const { top } = scrollFeature?.getVScrollPosition() ?? { top: 0 };\r\n    return top || left ? {\r\n      top,\r\n      left\r\n    } : void 0;\r\n  }\r\n  setScrollState(scrollState) {\r\n    if (!this.isClientSideRowModel) {\r\n      return;\r\n    }\r\n    const { top, left } = scrollState ?? { top: 0, left: 0 };\r\n    const { frameworkOverrides, rowRenderer, animationFrameSvc, ctrlsSvc } = this.beans;\r\n    frameworkOverrides.wrapIncoming(() => {\r\n      ctrlsSvc.get(\"center\").setCenterViewportScrollLeft(left);\r\n      ctrlsSvc.getScrollFeature()?.setVerticalScrollPosition(top);\r\n      rowRenderer.redraw({ afterScroll: true });\r\n      animationFrameSvc?.flushAllFrames();\r\n    });\r\n  }\r\n  getSideBarState() {\r\n    return this.beans.sideBar?.comp?.getState();\r\n  }\r\n  getFocusedCellState() {\r\n    if (!this.isClientSideRowModel) {\r\n      return void 0;\r\n    }\r\n    const focusedCell = this.beans.focusSvc.getFocusedCell();\r\n    if (focusedCell) {\r\n      const { column, rowIndex, rowPinned } = focusedCell;\r\n      return {\r\n        colId: column.getColId(),\r\n        rowIndex,\r\n        rowPinned\r\n      };\r\n    }\r\n    return void 0;\r\n  }\r\n  setFocusedCellState(focusedCellState) {\r\n    if (!this.isClientSideRowModel) {\r\n      return;\r\n    }\r\n    const { focusSvc, colModel } = this.beans;\r\n    if (!focusedCellState) {\r\n      focusSvc.clearFocusedCell();\r\n      return;\r\n    }\r\n    const { colId, rowIndex, rowPinned } = focusedCellState;\r\n    focusSvc.setFocusedCell({\r\n      column: colModel.getCol(colId),\r\n      rowIndex,\r\n      rowPinned,\r\n      forceBrowserFocus: true,\r\n      preventScrollOnBrowserFocus: true\r\n    });\r\n  }\r\n  getPaginationState() {\r\n    const { pagination, gos } = this.beans;\r\n    if (!pagination) {\r\n      return void 0;\r\n    }\r\n    const page = pagination.getCurrentPage();\r\n    const pageSize = !gos.get(\"paginationAutoPageSize\") ? pagination.getPageSize() : void 0;\r\n    if (!page && !pageSize) {\r\n      return;\r\n    }\r\n    return { page, pageSize };\r\n  }\r\n  setPaginationState(paginationState, source) {\r\n    const { pagination, gos } = this.beans;\r\n    if (!pagination) {\r\n      return;\r\n    }\r\n    const { pageSize, page } = paginationState ?? { page: 0, pageSize: gos.get(\"paginationPageSize\") };\r\n    const isInit = source === \"gridInitializing\";\r\n    if (pageSize && !gos.get(\"paginationAutoPageSize\")) {\r\n      pagination.setPageSize(pageSize, isInit ? \"initialState\" : \"pageSizeSelector\");\r\n    }\r\n    if (typeof page === \"number\") {\r\n      if (isInit) {\r\n        pagination.setPage(page);\r\n      } else {\r\n        pagination.goToPage(page);\r\n      }\r\n    }\r\n  }\r\n  getRowSelectionState() {\r\n    const selectionSvc = this.beans.selectionSvc;\r\n    if (!selectionSvc) {\r\n      return void 0;\r\n    }\r\n    const selectionState = selectionSvc.getSelectionState();\r\n    const noSelections = !selectionState || !Array.isArray(selectionState) && (selectionState.selectAll === false || selectionState.selectAllChildren === false) && !selectionState?.toggledNodes?.length;\r\n    return noSelections ? void 0 : selectionState;\r\n  }\r\n  setRowSelectionState(rowSelectionState, source) {\r\n    this.beans.selectionSvc?.setSelectionState(rowSelectionState, source, source === \"api\");\r\n  }\r\n  getRowGroupExpansionState() {\r\n    const { expansionSvc, rowModel } = this.beans;\r\n    if (!expansionSvc) {\r\n      return void 0;\r\n    }\r\n    const expandedRowGroups = [];\r\n    rowModel.forEachNode(({ expanded, id }) => {\r\n      if (expanded && id) {\r\n        expandedRowGroups.push(id);\r\n      }\r\n    });\r\n    return expandedRowGroups.length ? {\r\n      expandedRowGroupIds: expandedRowGroups\r\n    } : void 0;\r\n  }\r\n  getRowPinningState() {\r\n    return this.beans.pinnedRowModel?.getPinnedState();\r\n  }\r\n  setRowPinningState(state) {\r\n    const pinnedRowModel = this.beans.pinnedRowModel;\r\n    if (state) {\r\n      pinnedRowModel?.setPinnedState(state);\r\n    } else {\r\n      pinnedRowModel?.reset();\r\n    }\r\n  }\r\n  setRowGroupExpansionState(rowGroupExpansionState, source) {\r\n    const expansionSvc = this.beans.expansionSvc;\r\n    if (!expansionSvc) {\r\n      return;\r\n    }\r\n    const rowGroupIdsToExpand = rowGroupExpansionState?.expandedRowGroupIds ?? [];\r\n    let rowGroupIdsToCollapse;\r\n    if (source === \"api\") {\r\n      const oldExpandedRowGroupIds = this.getRowGroupExpansionState()?.expandedRowGroupIds;\r\n      if (oldExpandedRowGroupIds?.length) {\r\n        const oldExpandedRowGroupIdsSet = new Set(oldExpandedRowGroupIds);\r\n        for (const id of rowGroupIdsToExpand) {\r\n          oldExpandedRowGroupIdsSet.delete(id);\r\n        }\r\n        rowGroupIdsToCollapse = Array.from(oldExpandedRowGroupIdsSet);\r\n      }\r\n    }\r\n    expansionSvc.expandRows(rowGroupIdsToExpand, rowGroupIdsToCollapse);\r\n  }\r\n  updateColumnState(features) {\r\n    const newColumnState = this.getColumnState();\r\n    let hasChanged = false;\r\n    const cachedState = this.cachedState;\r\n    for (const key of Object.keys(newColumnState)) {\r\n      const value = newColumnState[key];\r\n      if (!_jsonEquals(value, cachedState[key])) {\r\n        hasChanged = true;\r\n      }\r\n    }\r\n    this.cachedState = {\r\n      ...cachedState,\r\n      ...newColumnState\r\n    };\r\n    if (hasChanged) {\r\n      this.dispatchStateUpdateEvent(features);\r\n    }\r\n  }\r\n  updateCachedState(key, value) {\r\n    const existingValue = this.cachedState[key];\r\n    this.setCachedStateValue(key, value);\r\n    if (!_jsonEquals(value, existingValue)) {\r\n      this.dispatchStateUpdateEvent([key]);\r\n    }\r\n  }\r\n  setCachedStateValue(key, value) {\r\n    this.cachedState = {\r\n      ...this.cachedState,\r\n      [key]: value\r\n    };\r\n  }\r\n  refreshStaleState() {\r\n    const staleStateKeys = this.staleStateKeys;\r\n    staleStateKeys.forEach((key) => {\r\n      switch (key) {\r\n        case \"rowSelection\":\r\n          this.setCachedStateValue(key, this.getRowSelectionState());\r\n          break;\r\n      }\r\n    });\r\n    staleStateKeys.clear();\r\n  }\r\n  dispatchStateUpdateEvent(sources) {\r\n    if (this.suppressEvents) {\r\n      return;\r\n    }\r\n    sources.forEach((source) => this.queuedUpdateSources.add(source));\r\n    this.dispatchStateUpdateEventDebounced();\r\n  }\r\n  dispatchQueuedStateUpdateEvents() {\r\n    const queuedUpdateSources = this.queuedUpdateSources;\r\n    const sources = Array.from(queuedUpdateSources);\r\n    queuedUpdateSources.clear();\r\n    this.eventSvc.dispatchEvent({\r\n      type: \"stateUpdated\",\r\n      sources,\r\n      state: this.cachedState\r\n    });\r\n  }\r\n  startSuppressEvents() {\r\n    this.suppressEvents = true;\r\n    this.beans.colAnimation?.setSuppressAnimation(true);\r\n  }\r\n  stopSuppressEvents(source) {\r\n    setTimeout(() => {\r\n      this.suppressEvents = false;\r\n      this.queuedUpdateSources.clear();\r\n      if (!this.isAlive()) {\r\n        return;\r\n      }\r\n      this.beans.colAnimation?.setSuppressAnimation(false);\r\n      this.dispatchStateUpdateEvent([source]);\r\n    });\r\n  }\r\n  suppressEventsAndDispatchInitEvent(updateFunc) {\r\n    this.startSuppressEvents();\r\n    updateFunc();\r\n    this.stopSuppressEvents(\"gridInitializing\");\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/misc/state/stateModule.ts\r\nvar GridStateModule = {\r\n  moduleName: \"GridState\",\r\n  version: VERSION,\r\n  beans: [StateService],\r\n  apiFunctions: {\r\n    getState,\r\n    setState\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/pagination/paginationApi.ts\r\nfunction paginationIsLastPageFound(beans) {\r\n  return beans.rowModel.isLastRowIndexKnown();\r\n}\r\nfunction paginationGetPageSize(beans) {\r\n  return beans.pagination?.getPageSize() ?? 100;\r\n}\r\nfunction paginationGetCurrentPage(beans) {\r\n  return beans.pagination?.getCurrentPage() ?? 0;\r\n}\r\nfunction paginationGetTotalPages(beans) {\r\n  return beans.pagination?.getTotalPages() ?? 1;\r\n}\r\nfunction paginationGetRowCount(beans) {\r\n  return beans.pagination ? beans.pagination.getMasterRowCount() : beans.rowModel.getRowCount();\r\n}\r\nfunction paginationGoToNextPage(beans) {\r\n  beans.pagination?.goToNextPage();\r\n}\r\nfunction paginationGoToPreviousPage(beans) {\r\n  beans.pagination?.goToPreviousPage();\r\n}\r\nfunction paginationGoToFirstPage(beans) {\r\n  beans.pagination?.goToFirstPage();\r\n}\r\nfunction paginationGoToLastPage(beans) {\r\n  beans.pagination?.goToLastPage();\r\n}\r\nfunction paginationGoToPage(beans, page) {\r\n  beans.pagination?.goToPage(page);\r\n}\r\n\r\n// packages/ag-grid-community/src/pagination/paginationAutoPageSizeService.ts\r\nvar PaginationAutoPageSizeService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"paginationAutoPageSizeSvc\";\r\n  }\r\n  postConstruct() {\r\n    this.beans.ctrlsSvc.whenReady(this, (p) => {\r\n      this.centerRowsCtrl = p.center;\r\n      const listener = this.checkPageSize.bind(this);\r\n      this.addManagedEventListeners({\r\n        bodyHeightChanged: listener,\r\n        scrollVisibilityChanged: listener\r\n      });\r\n      this.addManagedPropertyListener(\"paginationAutoPageSize\", this.onPaginationAutoSizeChanged.bind(this));\r\n      this.checkPageSize();\r\n    });\r\n  }\r\n  notActive() {\r\n    return !this.gos.get(\"paginationAutoPageSize\") || this.centerRowsCtrl == null;\r\n  }\r\n  onPaginationAutoSizeChanged() {\r\n    if (this.notActive()) {\r\n      this.beans.pagination.unsetAutoCalculatedPageSize();\r\n    } else {\r\n      this.checkPageSize();\r\n    }\r\n  }\r\n  checkPageSize() {\r\n    if (this.notActive()) {\r\n      return;\r\n    }\r\n    const bodyHeight = this.centerRowsCtrl.viewportSizeFeature.getBodyHeight();\r\n    if (bodyHeight > 0) {\r\n      const beans = this.beans;\r\n      const update = () => {\r\n        const rowHeight = Math.max(_getRowHeightAsNumber(beans), 1);\r\n        const newPageSize = Math.floor(bodyHeight / rowHeight);\r\n        beans.pagination.setPageSize(newPageSize, \"autoCalculated\");\r\n      };\r\n      if (!this.isBodyRendered) {\r\n        update();\r\n        this.isBodyRendered = true;\r\n      } else {\r\n        _debounce(this, update, 50)();\r\n      }\r\n    } else {\r\n      this.isBodyRendered = false;\r\n    }\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/pagination/pageSizeSelector/pageSizeSelectorComp.ts\r\nvar paginationPageSizeSelector = \"paginationPageSizeSelector\";\r\nvar PageSizeSelectorCompElement = { tag: \"span\", cls: \"ag-paging-page-size\" };\r\nvar PageSizeSelectorComp = class extends Component {\r\n  constructor() {\r\n    super(PageSizeSelectorCompElement);\r\n    this.hasEmptyOption = false;\r\n    this.handlePageSizeItemSelected = () => {\r\n      if (!this.selectPageSizeComp) {\r\n        return;\r\n      }\r\n      const newValue = this.selectPageSizeComp.getValue();\r\n      if (!newValue) {\r\n        return;\r\n      }\r\n      const paginationPageSize = Number(newValue);\r\n      if (isNaN(paginationPageSize) || paginationPageSize < 1 || paginationPageSize === this.pagination.getPageSize()) {\r\n        return;\r\n      }\r\n      this.pagination.setPageSize(paginationPageSize, \"pageSizeSelector\");\r\n      if (this.hasEmptyOption) {\r\n        this.toggleSelectDisplay(true);\r\n      }\r\n      this.selectPageSizeComp.getFocusableElement().focus();\r\n    };\r\n  }\r\n  wireBeans(beans) {\r\n    this.pagination = beans.pagination;\r\n  }\r\n  postConstruct() {\r\n    this.addManagedPropertyListener(paginationPageSizeSelector, () => {\r\n      this.onPageSizeSelectorValuesChange();\r\n    });\r\n    this.addManagedEventListeners({ paginationChanged: (event) => this.handlePaginationChanged(event) });\r\n  }\r\n  handlePaginationChanged(paginationChangedEvent) {\r\n    if (!this.selectPageSizeComp || !paginationChangedEvent?.newPageSize) {\r\n      return;\r\n    }\r\n    const paginationPageSize = this.pagination.getPageSize();\r\n    if (this.getPageSizeSelectorValues().includes(paginationPageSize)) {\r\n      this.selectPageSizeComp.setValue(paginationPageSize.toString());\r\n    } else {\r\n      if (this.hasEmptyOption) {\r\n        this.selectPageSizeComp.setValue(\"\");\r\n      } else {\r\n        this.toggleSelectDisplay(true);\r\n      }\r\n    }\r\n  }\r\n  toggleSelectDisplay(show) {\r\n    if (this.selectPageSizeComp && !show) {\r\n      this.reset();\r\n    }\r\n    if (!show) {\r\n      return;\r\n    }\r\n    this.reloadPageSizesSelector();\r\n    if (!this.selectPageSizeComp) {\r\n      return;\r\n    }\r\n  }\r\n  reset() {\r\n    _clearElement(this.getGui());\r\n    if (!this.selectPageSizeComp) {\r\n      return;\r\n    }\r\n    this.selectPageSizeComp = this.destroyBean(this.selectPageSizeComp);\r\n  }\r\n  onPageSizeSelectorValuesChange() {\r\n    if (!this.selectPageSizeComp) {\r\n      return;\r\n    }\r\n    if (this.shouldShowPageSizeSelector()) {\r\n      this.reloadPageSizesSelector();\r\n    }\r\n  }\r\n  shouldShowPageSizeSelector() {\r\n    return this.gos.get(\"pagination\") && !this.gos.get(\"suppressPaginationPanel\") && !this.gos.get(\"paginationAutoPageSize\") && this.gos.get(paginationPageSizeSelector) !== false;\r\n  }\r\n  reloadPageSizesSelector() {\r\n    const pageSizeOptions = this.getPageSizeSelectorValues();\r\n    const paginationPageSizeOption = this.pagination.getPageSize();\r\n    const shouldAddAndSelectEmptyOption = !paginationPageSizeOption || !pageSizeOptions.includes(paginationPageSizeOption);\r\n    if (shouldAddAndSelectEmptyOption) {\r\n      const pageSizeSet = this.gos.exists(\"paginationPageSize\");\r\n      const pageSizesSet = this.gos.get(paginationPageSizeSelector) !== true;\r\n      _warn(94, { pageSizeSet, pageSizesSet, pageSizeOptions, paginationPageSizeOption });\r\n      if (!pageSizesSet) {\r\n        _warn(95, { paginationPageSizeOption, paginationPageSizeSelector });\r\n      }\r\n      pageSizeOptions.unshift(\"\");\r\n    }\r\n    const value = String(shouldAddAndSelectEmptyOption ? \"\" : paginationPageSizeOption);\r\n    if (this.selectPageSizeComp) {\r\n      if (!_areEqual(this.pageSizeOptions, pageSizeOptions)) {\r\n        this.selectPageSizeComp.clearOptions().addOptions(this.createPageSizeSelectOptions(pageSizeOptions));\r\n        this.pageSizeOptions = pageSizeOptions;\r\n      }\r\n      this.selectPageSizeComp.setValue(value, true);\r\n    } else {\r\n      this.createPageSizeSelectorComp(pageSizeOptions, value);\r\n    }\r\n    this.hasEmptyOption = shouldAddAndSelectEmptyOption;\r\n  }\r\n  createPageSizeSelectOptions(pageSizeOptions) {\r\n    return pageSizeOptions.map((value) => ({\r\n      value: String(value)\r\n    }));\r\n  }\r\n  createPageSizeSelectorComp(pageSizeOptions, value) {\r\n    const localeTextFunc = this.getLocaleTextFunc();\r\n    const localisedLabel = localeTextFunc(\"pageSizeSelectorLabel\", \"Page Size:\");\r\n    const localisedAriaLabel = localeTextFunc(\"ariaPageSizeSelectorLabel\", \"Page Size\");\r\n    this.selectPageSizeComp = this.createManagedBean(new AgSelect()).addOptions(this.createPageSizeSelectOptions(pageSizeOptions)).setValue(value).setAriaLabel(localisedAriaLabel).setLabel(localisedLabel).onValueChange(() => this.handlePageSizeItemSelected());\r\n    this.appendChild(this.selectPageSizeComp);\r\n  }\r\n  getPageSizeSelectorValues() {\r\n    const defaultValues = [20, 50, 100];\r\n    const paginationPageSizeSelectorValues = this.gos.get(paginationPageSizeSelector);\r\n    if (!Array.isArray(paginationPageSizeSelectorValues) || !paginationPageSizeSelectorValues?.length) {\r\n      return defaultValues;\r\n    }\r\n    return [...paginationPageSizeSelectorValues].sort((a, b) => a - b);\r\n  }\r\n  destroy() {\r\n    this.toggleSelectDisplay(false);\r\n    super.destroy();\r\n  }\r\n};\r\nvar PageSizeSelectorSelector = {\r\n  selector: \"AG-PAGE-SIZE-SELECTOR\",\r\n  component: PageSizeSelectorComp\r\n};\r\n\r\n// packages/ag-grid-community/src/pagination/paginationComp.css-GENERATED.ts\r\nvar paginationCompCSS = (\r\n  /*css*/\r\n  `.ag-paging-panel{align-items:center;border-top:var(--ag-footer-row-border);display:flex;gap:calc(var(--ag-spacing)*4);height:var(--ag-pagination-panel-height);justify-content:flex-end;padding:0 var(--ag-cell-horizontal-padding)}:where(.ag-paging-page-size) .ag-wrapper{min-width:50px}.ag-paging-page-summary-panel{align-items:center;display:flex;gap:var(--ag-cell-widget-spacing);.ag-disabled &{pointer-events:none}}.ag-paging-button{cursor:pointer;position:relative;&.ag-disabled{cursor:default;opacity:.5}}.ag-paging-number,.ag-paging-row-summary-panel-number{font-weight:500}`\r\n);\r\n\r\n// packages/ag-grid-community/src/pagination/paginationComp.ts\r\nvar PaginationComp = class extends TabGuardComp {\r\n  constructor() {\r\n    super();\r\n    this.btFirst = RefPlaceholder;\r\n    this.btPrevious = RefPlaceholder;\r\n    this.btNext = RefPlaceholder;\r\n    this.btLast = RefPlaceholder;\r\n    this.lbRecordCount = RefPlaceholder;\r\n    this.lbFirstRowOnPage = RefPlaceholder;\r\n    this.lbLastRowOnPage = RefPlaceholder;\r\n    this.lbCurrent = RefPlaceholder;\r\n    this.lbTotal = RefPlaceholder;\r\n    this.pageSizeComp = RefPlaceholder;\r\n    this.previousAndFirstButtonsDisabled = false;\r\n    this.nextButtonDisabled = false;\r\n    this.lastButtonDisabled = false;\r\n    this.areListenersSetup = false;\r\n    this.allowFocusInnerElement = false;\r\n    this.registerCSS(paginationCompCSS);\r\n  }\r\n  wireBeans(beans) {\r\n    this.rowModel = beans.rowModel;\r\n    this.pagination = beans.pagination;\r\n    this.ariaAnnounce = beans.ariaAnnounce;\r\n  }\r\n  postConstruct() {\r\n    const isRtl = this.gos.get(\"enableRtl\");\r\n    this.setTemplate(this.getTemplate(), [PageSizeSelectorSelector]);\r\n    const { btFirst, btPrevious, btNext, btLast } = this;\r\n    this.activateTabIndex([btFirst, btPrevious, btNext, btLast]);\r\n    btFirst.insertAdjacentElement(\"afterbegin\", _createIconNoSpan(isRtl ? \"last\" : \"first\", this.beans));\r\n    btPrevious.insertAdjacentElement(\"afterbegin\", _createIconNoSpan(isRtl ? \"next\" : \"previous\", this.beans));\r\n    btNext.insertAdjacentElement(\"afterbegin\", _createIconNoSpan(isRtl ? \"previous\" : \"next\", this.beans));\r\n    btLast.insertAdjacentElement(\"afterbegin\", _createIconNoSpan(isRtl ? \"first\" : \"last\", this.beans));\r\n    this.addManagedPropertyListener(\"pagination\", this.onPaginationChanged.bind(this));\r\n    this.addManagedPropertyListener(\"suppressPaginationPanel\", this.onPaginationChanged.bind(this));\r\n    this.addManagedPropertyListeners(\r\n      [\"paginationPageSizeSelector\", \"paginationAutoPageSize\", \"suppressPaginationPanel\"],\r\n      () => this.onPageSizeRelatedOptionsChange()\r\n    );\r\n    this.pageSizeComp.toggleSelectDisplay(this.pageSizeComp.shouldShowPageSizeSelector());\r\n    this.initialiseTabGuard({\r\n      // prevent tab guard default logic\r\n      onTabKeyDown: () => {\r\n      },\r\n      focusInnerElement: (fromBottom) => {\r\n        if (this.allowFocusInnerElement) {\r\n          return this.tabGuardFeature.getTabGuardCtrl().focusInnerElement(fromBottom);\r\n        } else {\r\n          return _focusGridInnerElement(this.beans, fromBottom);\r\n        }\r\n      },\r\n      forceFocusOutWhenTabGuardsAreEmpty: true\r\n    });\r\n    this.onPaginationChanged();\r\n  }\r\n  setAllowFocus(allowFocus) {\r\n    this.allowFocusInnerElement = allowFocus;\r\n  }\r\n  onPaginationChanged() {\r\n    const isPaging = this.gos.get(\"pagination\");\r\n    const paginationPanelEnabled = isPaging && !this.gos.get(\"suppressPaginationPanel\");\r\n    this.setDisplayed(paginationPanelEnabled);\r\n    if (!paginationPanelEnabled) {\r\n      return;\r\n    }\r\n    this.setupListeners();\r\n    this.enableOrDisableButtons();\r\n    this.updateLabels();\r\n    this.onPageSizeRelatedOptionsChange();\r\n  }\r\n  onPageSizeRelatedOptionsChange() {\r\n    this.pageSizeComp.toggleSelectDisplay(this.pageSizeComp.shouldShowPageSizeSelector());\r\n  }\r\n  setupListeners() {\r\n    if (!this.areListenersSetup) {\r\n      this.addManagedEventListeners({ paginationChanged: this.onPaginationChanged.bind(this) });\r\n      [\r\n        { el: this.btFirst, fn: this.onBtFirst.bind(this) },\r\n        { el: this.btPrevious, fn: this.onBtPrevious.bind(this) },\r\n        { el: this.btNext, fn: this.onBtNext.bind(this) },\r\n        { el: this.btLast, fn: this.onBtLast.bind(this) }\r\n      ].forEach((item) => {\r\n        const { el, fn } = item;\r\n        this.addManagedListeners(el, {\r\n          click: fn,\r\n          keydown: (e) => {\r\n            if (e.key === KeyCode.ENTER || e.key === KeyCode.SPACE) {\r\n              e.preventDefault();\r\n              fn();\r\n            }\r\n          }\r\n        });\r\n      });\r\n      _addFocusableContainerListener(this.beans, this, this.getGui());\r\n      this.areListenersSetup = true;\r\n    }\r\n  }\r\n  onBtFirst() {\r\n    if (!this.previousAndFirstButtonsDisabled) {\r\n      this.pagination.goToFirstPage();\r\n    }\r\n  }\r\n  formatNumber(value) {\r\n    const userFunc = this.gos.getCallback(\"paginationNumberFormatter\");\r\n    if (userFunc) {\r\n      const params = { value };\r\n      return userFunc(params);\r\n    }\r\n    return _formatNumberCommas(value, this.getLocaleTextFunc.bind(this));\r\n  }\r\n  getTemplate() {\r\n    const localeTextFunc = this.getLocaleTextFunc();\r\n    const idPrefix = `ag-${this.getCompId()}`;\r\n    return {\r\n      tag: \"div\",\r\n      cls: \"ag-paging-panel ag-unselectable\",\r\n      attrs: { id: `${idPrefix}` },\r\n      children: [\r\n        {\r\n          tag: \"ag-page-size-selector\",\r\n          ref: \"pageSizeComp\"\r\n        },\r\n        {\r\n          tag: \"span\",\r\n          cls: \"ag-paging-row-summary-panel\",\r\n          children: [\r\n            {\r\n              tag: \"span\",\r\n              ref: \"lbFirstRowOnPage\",\r\n              cls: \"ag-paging-row-summary-panel-number\",\r\n              attrs: { id: `${idPrefix}-first-row` }\r\n            },\r\n            { tag: \"span\", attrs: { id: `${idPrefix}-to` }, children: localeTextFunc(\"to\", \"to\") },\r\n            {\r\n              tag: \"span\",\r\n              ref: \"lbLastRowOnPage\",\r\n              cls: \"ag-paging-row-summary-panel-number\",\r\n              attrs: { id: `${idPrefix}-last-row` }\r\n            },\r\n            { tag: \"span\", attrs: { id: `${idPrefix}-of` }, children: localeTextFunc(\"of\", \"of\") },\r\n            {\r\n              tag: \"span\",\r\n              ref: \"lbRecordCount\",\r\n              cls: \"ag-paging-row-summary-panel-number\",\r\n              attrs: { id: `${idPrefix}-row-count` }\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          tag: \"span\",\r\n          cls: \"ag-paging-page-summary-panel\",\r\n          role: \"presentation\",\r\n          children: [\r\n            {\r\n              tag: \"div\",\r\n              ref: \"btFirst\",\r\n              cls: \"ag-button ag-paging-button\",\r\n              role: \"button\",\r\n              attrs: { \"aria-label\": localeTextFunc(\"firstPage\", \"First Page\") }\r\n            },\r\n            {\r\n              tag: \"div\",\r\n              ref: \"btPrevious\",\r\n              cls: \"ag-button ag-paging-button\",\r\n              role: \"button\",\r\n              attrs: { \"aria-label\": localeTextFunc(\"previousPage\", \"Previous Page\") }\r\n            },\r\n            {\r\n              tag: \"span\",\r\n              cls: \"ag-paging-description\",\r\n              children: [\r\n                {\r\n                  tag: \"span\",\r\n                  attrs: {\r\n                    id: `${idPrefix}-start-page`\r\n                  },\r\n                  children: localeTextFunc(\"page\", \"Page\")\r\n                },\r\n                {\r\n                  tag: \"span\",\r\n                  ref: \"lbCurrent\",\r\n                  cls: \"ag-paging-number\",\r\n                  attrs: { id: `${idPrefix}-start-page-number` }\r\n                },\r\n                {\r\n                  tag: \"span\",\r\n                  attrs: {\r\n                    id: `${idPrefix}-of-page`\r\n                  },\r\n                  children: localeTextFunc(\"of\", \"of\")\r\n                },\r\n                {\r\n                  tag: \"span\",\r\n                  ref: \"lbTotal\",\r\n                  cls: \"ag-paging-number\",\r\n                  attrs: { id: `${idPrefix}-of-page-number` }\r\n                }\r\n              ]\r\n            },\r\n            {\r\n              tag: \"div\",\r\n              ref: \"btNext\",\r\n              cls: \"ag-button ag-paging-button\",\r\n              role: \"button\",\r\n              attrs: { \"aria-label\": localeTextFunc(\"nextPage\", \"Next Page\") }\r\n            },\r\n            {\r\n              tag: \"div\",\r\n              ref: \"btLast\",\r\n              cls: \"ag-button ag-paging-button\",\r\n              role: \"button\",\r\n              attrs: { \"aria-label\": localeTextFunc(\"lastPage\", \"Last Page\") }\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  onBtNext() {\r\n    if (!this.nextButtonDisabled) {\r\n      this.pagination.goToNextPage();\r\n    }\r\n  }\r\n  onBtPrevious() {\r\n    if (!this.previousAndFirstButtonsDisabled) {\r\n      this.pagination.goToPreviousPage();\r\n    }\r\n  }\r\n  onBtLast() {\r\n    if (!this.lastButtonDisabled) {\r\n      this.pagination.goToLastPage();\r\n    }\r\n  }\r\n  enableOrDisableButtons() {\r\n    const currentPage = this.pagination.getCurrentPage();\r\n    const maxRowFound = this.rowModel.isLastRowIndexKnown();\r\n    const totalPages = this.pagination.getTotalPages();\r\n    this.previousAndFirstButtonsDisabled = currentPage === 0;\r\n    this.toggleButtonDisabled(this.btFirst, this.previousAndFirstButtonsDisabled);\r\n    this.toggleButtonDisabled(this.btPrevious, this.previousAndFirstButtonsDisabled);\r\n    const zeroPagesToDisplay = this.isZeroPagesToDisplay();\r\n    const onLastPage = currentPage === totalPages - 1;\r\n    this.nextButtonDisabled = onLastPage || zeroPagesToDisplay;\r\n    this.lastButtonDisabled = !maxRowFound || zeroPagesToDisplay || currentPage === totalPages - 1;\r\n    this.toggleButtonDisabled(this.btNext, this.nextButtonDisabled);\r\n    this.toggleButtonDisabled(this.btLast, this.lastButtonDisabled);\r\n  }\r\n  toggleButtonDisabled(button, disabled) {\r\n    _setAriaDisabled(button, disabled);\r\n    button.classList.toggle(\"ag-disabled\", disabled);\r\n  }\r\n  isZeroPagesToDisplay() {\r\n    const maxRowFound = this.rowModel.isLastRowIndexKnown();\r\n    const totalPages = this.pagination.getTotalPages();\r\n    return maxRowFound && totalPages === 0;\r\n  }\r\n  updateLabels() {\r\n    const lastPageFound = this.rowModel.isLastRowIndexKnown();\r\n    const totalPages = this.pagination.getTotalPages();\r\n    const masterRowCount = this.pagination.getMasterRowCount();\r\n    const rowCount = lastPageFound ? masterRowCount : null;\r\n    const currentPage = this.pagination.getCurrentPage();\r\n    const pageSize = this.pagination.getPageSize();\r\n    let startRow;\r\n    let endRow;\r\n    if (this.isZeroPagesToDisplay()) {\r\n      startRow = endRow = 0;\r\n    } else {\r\n      startRow = pageSize * currentPage + 1;\r\n      endRow = startRow + pageSize - 1;\r\n      if (lastPageFound && endRow > rowCount) {\r\n        endRow = rowCount;\r\n      }\r\n    }\r\n    const theoreticalEndRow = startRow + pageSize - 1;\r\n    const isLoadingPageSize = !lastPageFound && masterRowCount < theoreticalEndRow;\r\n    const lbFirstRowOnPage = this.formatNumber(startRow);\r\n    this.lbFirstRowOnPage.textContent = lbFirstRowOnPage;\r\n    let lbLastRowOnPage;\r\n    const localeTextFunc = this.getLocaleTextFunc();\r\n    if (isLoadingPageSize) {\r\n      lbLastRowOnPage = localeTextFunc(\"pageLastRowUnknown\", \"?\");\r\n    } else {\r\n      lbLastRowOnPage = this.formatNumber(endRow);\r\n    }\r\n    this.lbLastRowOnPage.textContent = lbLastRowOnPage;\r\n    const pagesExist = totalPages > 0;\r\n    const toDisplay = pagesExist ? currentPage + 1 : 0;\r\n    const lbCurrent = this.formatNumber(toDisplay);\r\n    this.lbCurrent.textContent = lbCurrent;\r\n    let lbTotal;\r\n    let lbRecordCount;\r\n    if (lastPageFound) {\r\n      lbTotal = this.formatNumber(totalPages);\r\n      lbRecordCount = this.formatNumber(rowCount);\r\n    } else {\r\n      const moreText = localeTextFunc(\"more\", \"more\");\r\n      lbTotal = moreText;\r\n      lbRecordCount = moreText;\r\n    }\r\n    this.lbTotal.textContent = lbTotal;\r\n    this.lbRecordCount.textContent = lbRecordCount;\r\n    this.announceAriaStatus(lbFirstRowOnPage, lbLastRowOnPage, lbRecordCount, lbCurrent, lbTotal);\r\n  }\r\n  announceAriaStatus(lbFirstRowOnPage, lbLastRowOnPage, lbRecordCount, lbCurrent, lbTotal) {\r\n    const localeTextFunc = this.getLocaleTextFunc();\r\n    const strPage = localeTextFunc(\"page\", \"Page\");\r\n    const strTo = localeTextFunc(\"to\", \"to\");\r\n    const strOf = localeTextFunc(\"of\", \"of\");\r\n    const ariaRowStatus = `${lbFirstRowOnPage} ${strTo} ${lbLastRowOnPage} ${strOf} ${lbRecordCount}`;\r\n    const ariaPageStatus = `${strPage} ${lbCurrent} ${strOf} ${lbTotal}`;\r\n    if (ariaRowStatus !== this.ariaRowStatus) {\r\n      this.ariaRowStatus = ariaRowStatus;\r\n      this.ariaAnnounce?.announceValue(ariaRowStatus, \"paginationRow\");\r\n    }\r\n    if (ariaPageStatus !== this.ariaPageStatus) {\r\n      this.ariaPageStatus = ariaPageStatus;\r\n      this.ariaAnnounce?.announceValue(ariaPageStatus, \"paginationPage\");\r\n    }\r\n  }\r\n};\r\nvar PaginationSelector = {\r\n  selector: \"AG-PAGINATION\",\r\n  component: PaginationComp\r\n};\r\n\r\n// packages/ag-grid-community/src/pagination/paginationService.ts\r\nvar PaginationService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"pagination\";\r\n    this.currentPage = 0;\r\n    this.topDisplayedRowIndex = 0;\r\n    this.bottomDisplayedRowIndex = 0;\r\n    this.masterRowCount = 0;\r\n  }\r\n  postConstruct() {\r\n    const gos = this.gos;\r\n    this.active = gos.get(\"pagination\");\r\n    this.pageSizeFromGridOptions = gos.get(\"paginationPageSize\");\r\n    this.paginateChildRows = this.isPaginateChildRows();\r\n    this.addManagedPropertyListener(\"pagination\", this.onPaginationGridOptionChanged.bind(this));\r\n    this.addManagedPropertyListener(\"paginationPageSize\", this.onPageSizeGridOptionChanged.bind(this));\r\n  }\r\n  getPaginationSelector() {\r\n    return PaginationSelector;\r\n  }\r\n  isPaginateChildRows() {\r\n    const gos = this.gos;\r\n    const shouldPaginate = gos.get(\"groupHideParentOfSingleChild\") || // following two properties deprecated v32.3.0\r\n    gos.get(\"groupRemoveSingleChildren\") || gos.get(\"groupRemoveLowestSingleChildren\");\r\n    if (shouldPaginate) {\r\n      return true;\r\n    }\r\n    return gos.get(\"paginateChildRows\");\r\n  }\r\n  onPaginationGridOptionChanged() {\r\n    this.active = this.gos.get(\"pagination\");\r\n    this.calculatePages();\r\n    this.dispatchPaginationChangedEvent({ keepRenderedRows: true });\r\n  }\r\n  onPageSizeGridOptionChanged() {\r\n    this.setPageSize(this.gos.get(\"paginationPageSize\"), \"gridOptions\");\r\n  }\r\n  goToPage(page) {\r\n    const currentPage = this.currentPage;\r\n    if (!this.active || currentPage === page || typeof currentPage !== \"number\") {\r\n      return;\r\n    }\r\n    const { editSvc } = this.beans;\r\n    if (editSvc?.isEditing()) {\r\n      if (editSvc.isBatchEditing()) {\r\n        editSvc.cleanupEditors();\r\n      } else {\r\n        editSvc.stopEditing(void 0, { source: \"api\" });\r\n      }\r\n    }\r\n    this.currentPage = page;\r\n    this.calculatePages();\r\n    this.dispatchPaginationChangedEvent({ newPage: true });\r\n  }\r\n  goToPageWithIndex(index) {\r\n    if (!this.active) {\r\n      return;\r\n    }\r\n    let adjustedIndex = index;\r\n    if (!this.paginateChildRows) {\r\n      adjustedIndex = this.beans.rowModel.getTopLevelIndexFromDisplayedIndex?.(index) ?? index;\r\n    }\r\n    this.goToPage(Math.floor(adjustedIndex / this.pageSize));\r\n  }\r\n  isRowInPage(rowIndex) {\r\n    if (!this.active) {\r\n      return true;\r\n    }\r\n    return rowIndex >= this.topDisplayedRowIndex && rowIndex <= this.bottomDisplayedRowIndex;\r\n  }\r\n  getCurrentPage() {\r\n    return this.currentPage;\r\n  }\r\n  goToNextPage() {\r\n    this.goToPage(this.currentPage + 1);\r\n  }\r\n  goToPreviousPage() {\r\n    this.goToPage(this.currentPage - 1);\r\n  }\r\n  goToFirstPage() {\r\n    this.goToPage(0);\r\n  }\r\n  goToLastPage() {\r\n    const rowCount = this.beans.rowModel.getRowCount();\r\n    const lastPage = Math.floor(rowCount / this.pageSize);\r\n    this.goToPage(lastPage);\r\n  }\r\n  getPageSize() {\r\n    return this.pageSize;\r\n  }\r\n  getTotalPages() {\r\n    return this.totalPages;\r\n  }\r\n  /** This is only for state setting before data has been loaded */\r\n  setPage(page) {\r\n    this.currentPage = page;\r\n  }\r\n  get pageSize() {\r\n    if (_exists(this.pageSizeAutoCalculated) && this.gos.get(\"paginationAutoPageSize\")) {\r\n      return this.pageSizeAutoCalculated;\r\n    }\r\n    if (_exists(this.pageSizeFromPageSizeSelector)) {\r\n      return this.pageSizeFromPageSizeSelector;\r\n    }\r\n    if (_exists(this.pageSizeFromInitialState)) {\r\n      return this.pageSizeFromInitialState;\r\n    }\r\n    if (_exists(this.pageSizeFromGridOptions)) {\r\n      return this.pageSizeFromGridOptions;\r\n    }\r\n    return this.defaultPageSize;\r\n  }\r\n  calculatePages() {\r\n    if (this.active) {\r\n      if (this.paginateChildRows) {\r\n        this.calculatePagesAllRows();\r\n      } else {\r\n        this.calculatePagesMasterRowsOnly();\r\n      }\r\n    } else {\r\n      this.calculatedPagesNotActive();\r\n    }\r\n    this.beans.pageBounds.calculateBounds(this.topDisplayedRowIndex, this.bottomDisplayedRowIndex);\r\n  }\r\n  unsetAutoCalculatedPageSize() {\r\n    if (this.pageSizeAutoCalculated === void 0) {\r\n      return;\r\n    }\r\n    const oldPageSize = this.pageSizeAutoCalculated;\r\n    this.pageSizeAutoCalculated = void 0;\r\n    if (this.pageSize === oldPageSize) {\r\n      return;\r\n    }\r\n    this.calculatePages();\r\n    this.dispatchPaginationChangedEvent({ newPageSize: true });\r\n  }\r\n  setPageSize(size, source) {\r\n    const currentSize = this.pageSize;\r\n    switch (source) {\r\n      case \"autoCalculated\":\r\n        this.pageSizeAutoCalculated = size;\r\n        break;\r\n      case \"pageSizeSelector\":\r\n        this.pageSizeFromPageSizeSelector = size;\r\n        if (this.currentPage !== 0) {\r\n          this.goToFirstPage();\r\n        }\r\n        break;\r\n      case \"initialState\":\r\n        this.pageSizeFromInitialState = size;\r\n        break;\r\n      case \"gridOptions\":\r\n        this.pageSizeFromGridOptions = size;\r\n        this.pageSizeFromInitialState = void 0;\r\n        this.pageSizeFromPageSizeSelector = void 0;\r\n        if (this.currentPage !== 0) {\r\n          this.goToFirstPage();\r\n        }\r\n        break;\r\n    }\r\n    if (currentSize !== this.pageSize) {\r\n      this.calculatePages();\r\n      this.dispatchPaginationChangedEvent({ newPageSize: true, keepRenderedRows: true });\r\n    }\r\n  }\r\n  setZeroRows() {\r\n    this.masterRowCount = 0;\r\n    this.topDisplayedRowIndex = 0;\r\n    this.bottomDisplayedRowIndex = -1;\r\n    this.currentPage = 0;\r\n    this.totalPages = 0;\r\n  }\r\n  adjustCurrentPageIfInvalid() {\r\n    const totalPages = this.totalPages;\r\n    if (this.currentPage >= totalPages) {\r\n      this.currentPage = totalPages - 1;\r\n    }\r\n    const currentPage = this.currentPage;\r\n    if (!isFinite(currentPage) || isNaN(currentPage) || currentPage < 0) {\r\n      this.currentPage = 0;\r\n    }\r\n  }\r\n  calculatePagesMasterRowsOnly() {\r\n    const rowModel = this.beans.rowModel;\r\n    const masterRowCount = rowModel.getTopLevelRowCount();\r\n    this.masterRowCount = masterRowCount;\r\n    if (masterRowCount <= 0) {\r\n      this.setZeroRows();\r\n      return;\r\n    }\r\n    const pageSize = this.pageSize;\r\n    const masterLastRowIndex = masterRowCount - 1;\r\n    this.totalPages = Math.floor(masterLastRowIndex / pageSize) + 1;\r\n    this.adjustCurrentPageIfInvalid();\r\n    const currentPage = this.currentPage;\r\n    const masterPageStartIndex = pageSize * currentPage;\r\n    let masterPageEndIndex = pageSize * (currentPage + 1) - 1;\r\n    if (masterPageEndIndex > masterLastRowIndex) {\r\n      masterPageEndIndex = masterLastRowIndex;\r\n    }\r\n    this.topDisplayedRowIndex = rowModel.getTopLevelRowDisplayedIndex(masterPageStartIndex);\r\n    if (masterPageEndIndex === masterLastRowIndex) {\r\n      this.bottomDisplayedRowIndex = rowModel.getRowCount() - 1;\r\n    } else {\r\n      const firstIndexNotToShow = rowModel.getTopLevelRowDisplayedIndex(masterPageEndIndex + 1);\r\n      this.bottomDisplayedRowIndex = firstIndexNotToShow - 1;\r\n    }\r\n  }\r\n  getMasterRowCount() {\r\n    return this.masterRowCount;\r\n  }\r\n  calculatePagesAllRows() {\r\n    const masterRowCount = this.beans.rowModel.getRowCount();\r\n    this.masterRowCount = masterRowCount;\r\n    if (masterRowCount === 0) {\r\n      this.setZeroRows();\r\n      return;\r\n    }\r\n    const { pageSize, currentPage } = this;\r\n    const maxRowIndex = masterRowCount - 1;\r\n    this.totalPages = Math.floor(maxRowIndex / pageSize) + 1;\r\n    this.adjustCurrentPageIfInvalid();\r\n    this.topDisplayedRowIndex = pageSize * currentPage;\r\n    this.bottomDisplayedRowIndex = pageSize * (currentPage + 1) - 1;\r\n    if (this.bottomDisplayedRowIndex > maxRowIndex) {\r\n      this.bottomDisplayedRowIndex = maxRowIndex;\r\n    }\r\n  }\r\n  calculatedPagesNotActive() {\r\n    this.setPageSize(void 0, \"autoCalculated\");\r\n    this.totalPages = 1;\r\n    this.currentPage = 0;\r\n    this.topDisplayedRowIndex = 0;\r\n    this.bottomDisplayedRowIndex = this.beans.rowModel.getRowCount() - 1;\r\n  }\r\n  dispatchPaginationChangedEvent(params) {\r\n    const { keepRenderedRows = false, newPage = false, newPageSize = false } = params;\r\n    this.eventSvc.dispatchEvent({\r\n      type: \"paginationChanged\",\r\n      animate: false,\r\n      newData: false,\r\n      newPage,\r\n      newPageSize,\r\n      keepRenderedRows\r\n    });\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/pagination/paginationModule.ts\r\nvar PaginationModule = {\r\n  moduleName: \"Pagination\",\r\n  version: VERSION,\r\n  beans: [PaginationService, PaginationAutoPageSizeService],\r\n  icons: {\r\n    // \"go to first\" button in pagination controls\r\n    first: \"first\",\r\n    // \"go to previous\" button in pagination controls\r\n    previous: \"previous\",\r\n    // \"go to next\" button in pagination controls\r\n    next: \"next\",\r\n    // \"go to last\" button in pagination controls\r\n    last: \"last\"\r\n  },\r\n  apiFunctions: {\r\n    paginationIsLastPageFound,\r\n    paginationGetPageSize,\r\n    paginationGetCurrentPage,\r\n    paginationGetTotalPages,\r\n    paginationGetRowCount,\r\n    paginationGoToNextPage,\r\n    paginationGoToPreviousPage,\r\n    paginationGoToFirstPage,\r\n    paginationGoToLastPage,\r\n    paginationGoToPage\r\n  },\r\n  dependsOn: [PopupModule]\r\n};\r\n\r\n// packages/ag-grid-community/src/api/rowApi.ts\r\nfunction redrawRows(beans, params = {}) {\r\n  const rowNodes = params ? params.rowNodes : void 0;\r\n  beans.frameworkOverrides.wrapIncoming(() => beans.rowRenderer.redrawRows(rowNodes));\r\n}\r\nfunction setRowNodeExpanded(beans, rowNode, expanded, expandParents, forceSync) {\r\n  if (rowNode) {\r\n    if (expandParents && rowNode.parent && rowNode.parent.level !== -1) {\r\n      setRowNodeExpanded(beans, rowNode.parent, expanded, expandParents, forceSync);\r\n    }\r\n    rowNode.setExpanded(expanded, void 0, forceSync);\r\n  }\r\n}\r\nfunction getRowNode(beans, id) {\r\n  return beans.rowModel.getRowNode(id);\r\n}\r\nfunction addRenderedRowListener(beans, eventName, rowIndex, callback) {\r\n  beans.rowRenderer.addRenderedRowListener(eventName, rowIndex, callback);\r\n}\r\nfunction getRenderedNodes(beans) {\r\n  return beans.rowRenderer.getRenderedNodes();\r\n}\r\nfunction forEachNode(beans, callback, includeFooterNodes) {\r\n  beans.rowModel.forEachNode(callback, includeFooterNodes);\r\n}\r\nfunction getFirstDisplayedRowIndex(beans) {\r\n  return beans.rowRenderer.firstRenderedRow;\r\n}\r\nfunction getLastDisplayedRowIndex(beans) {\r\n  return beans.rowRenderer.lastRenderedRow;\r\n}\r\nfunction getDisplayedRowAtIndex(beans, index) {\r\n  return beans.rowModel.getRow(index);\r\n}\r\nfunction getDisplayedRowCount(beans) {\r\n  return beans.rowModel.getRowCount();\r\n}\r\n\r\n// packages/ag-grid-community/src/api/apiModule.ts\r\nvar RowApiModule = {\r\n  moduleName: \"RowApi\",\r\n  version: VERSION,\r\n  apiFunctions: {\r\n    redrawRows,\r\n    setRowNodeExpanded,\r\n    getRowNode,\r\n    addRenderedRowListener,\r\n    getRenderedNodes,\r\n    forEachNode,\r\n    getFirstDisplayedRowIndex,\r\n    getLastDisplayedRowIndex,\r\n    getDisplayedRowAtIndex,\r\n    getDisplayedRowCount\r\n  }\r\n};\r\nvar ScrollApiModule = {\r\n  moduleName: \"ScrollApi\",\r\n  version: VERSION,\r\n  apiFunctions: {\r\n    getVerticalPixelRange,\r\n    getHorizontalPixelRange,\r\n    ensureColumnVisible,\r\n    ensureIndexVisible,\r\n    ensureNodeVisible\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/rendering/renderApi.ts\r\nfunction setGridAriaProperty(beans, property, value) {\r\n  if (!property) {\r\n    return;\r\n  }\r\n  const eGrid = beans.ctrlsSvc.getGridBodyCtrl().eGridBody;\r\n  const ariaProperty = `aria-${property}`;\r\n  if (value === null) {\r\n    eGrid.removeAttribute(ariaProperty);\r\n  } else {\r\n    eGrid.setAttribute(ariaProperty, value);\r\n  }\r\n}\r\nfunction refreshCells(beans, params = {}) {\r\n  beans.frameworkOverrides.wrapIncoming(() => beans.rowRenderer.refreshCells(params));\r\n}\r\nfunction refreshHeader(beans) {\r\n  beans.frameworkOverrides.wrapIncoming(\r\n    () => beans.ctrlsSvc.getHeaderRowContainerCtrls().forEach((c) => c.refresh())\r\n  );\r\n}\r\nfunction isAnimationFrameQueueEmpty(beans) {\r\n  return beans.animationFrameSvc?.isQueueEmpty() ?? true;\r\n}\r\nfunction flushAllAnimationFrames(beans) {\r\n  beans.animationFrameSvc?.flushAllFrames();\r\n}\r\nfunction getSizesForCurrentTheme(beans) {\r\n  return {\r\n    rowHeight: _getRowHeightAsNumber(beans),\r\n    headerHeight: getHeaderHeight(beans)\r\n  };\r\n}\r\nfunction getCellRendererInstances(beans, params = {}) {\r\n  const cellRenderers = [];\r\n  beans.rowRenderer.getCellCtrls(params.rowNodes, params.columns).forEach((cellCtrl) => {\r\n    const cellRenderer = cellCtrl.getCellRenderer();\r\n    if (cellRenderer != null) {\r\n      cellRenderers.push(_unwrapUserComp(cellRenderer));\r\n    }\r\n  });\r\n  if (params.columns?.length) {\r\n    return cellRenderers;\r\n  }\r\n  const fullWidthRenderers = [];\r\n  const rowIdMap = mapRowNodes(params.rowNodes);\r\n  beans.rowRenderer.getAllRowCtrls().forEach((rowCtrl) => {\r\n    if (rowIdMap && !isRowInMap(rowCtrl.rowNode, rowIdMap)) {\r\n      return;\r\n    }\r\n    if (!rowCtrl.isFullWidth()) {\r\n      return;\r\n    }\r\n    const renderers = rowCtrl.getFullWidthCellRenderers();\r\n    for (let i = 0; i < renderers.length; i++) {\r\n      const renderer = renderers[i];\r\n      if (renderer != null) {\r\n        fullWidthRenderers.push(_unwrapUserComp(renderer));\r\n      }\r\n    }\r\n  });\r\n  return [...fullWidthRenderers, ...cellRenderers];\r\n}\r\n\r\n// packages/ag-grid-community/src/rendering/renderModule.ts\r\nvar RenderApiModule = {\r\n  moduleName: \"RenderApi\",\r\n  version: VERSION,\r\n  apiFunctions: {\r\n    setGridAriaProperty,\r\n    refreshCells,\r\n    refreshHeader,\r\n    isAnimationFrameQueueEmpty,\r\n    flushAllAnimationFrames,\r\n    getSizesForCurrentTheme,\r\n    getCellRendererInstances\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/columnAutosize/columnAutosizeApi.ts\r\nfunction sizeColumnsToFit(beans, paramsOrGridWidth) {\r\n  if (typeof paramsOrGridWidth === \"number\") {\r\n    beans.colAutosize?.sizeColumnsToFit(paramsOrGridWidth, \"api\");\r\n  } else {\r\n    beans.colAutosize?.sizeColumnsToFitGridBody(paramsOrGridWidth);\r\n  }\r\n}\r\nfunction autoSizeColumns({ colAutosize, visibleCols }, keysOrParams, skipHeader) {\r\n  if (Array.isArray(keysOrParams)) {\r\n    colAutosize?.autoSizeCols({ colKeys: keysOrParams, skipHeader, source: \"api\" });\r\n  } else {\r\n    colAutosize?.autoSizeCols({\r\n      colKeys: keysOrParams.colIds ?? visibleCols.allCols,\r\n      skipHeader: keysOrParams.skipHeader,\r\n      defaultMaxWidth: keysOrParams.defaultMaxWidth,\r\n      defaultMinWidth: keysOrParams.defaultMinWidth,\r\n      columnLimits: keysOrParams.columnLimits,\r\n      source: \"api\"\r\n    });\r\n  }\r\n}\r\nfunction autoSizeAllColumns(beans, paramsOrSkipHeader) {\r\n  if (paramsOrSkipHeader && typeof paramsOrSkipHeader === \"object\") {\r\n    autoSizeColumns(beans, paramsOrSkipHeader);\r\n  } else {\r\n    beans.colAutosize?.autoSizeAllColumns({ source: \"api\", skipHeader: paramsOrSkipHeader });\r\n  }\r\n}\r\n\r\n// packages/ag-grid-community/src/columnAutosize/columnAutosizeService.ts\r\nvar ColumnAutosizeService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"colAutosize\";\r\n    this.timesDelayed = 0;\r\n    // when we're waiting for cell data types to be inferred, we need to defer column resizing\r\n    this.shouldQueueResizeOperations = false;\r\n    this.resizeOperationQueue = [];\r\n  }\r\n  postConstruct() {\r\n    this.addManagedEventListeners({ firstDataRendered: () => this.onFirstDataRendered() });\r\n  }\r\n  autoSizeCols(params) {\r\n    if (this.shouldQueueResizeOperations) {\r\n      this.pushResizeOperation(() => this.autoSizeCols(params));\r\n      return;\r\n    }\r\n    const {\r\n      colKeys,\r\n      skipHeader,\r\n      skipHeaderGroups,\r\n      stopAtGroup,\r\n      defaultMaxWidth,\r\n      defaultMinWidth,\r\n      columnLimits = [],\r\n      source = \"api\"\r\n    } = params;\r\n    const { animationFrameSvc, renderStatus, colModel, autoWidthCalc, visibleCols } = this.beans;\r\n    animationFrameSvc?.flushAllFrames();\r\n    if (this.timesDelayed < 5 && renderStatus && !renderStatus.areHeaderCellsRendered()) {\r\n      this.timesDelayed++;\r\n      setTimeout(() => {\r\n        if (this.isAlive()) {\r\n          this.autoSizeCols(params);\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    this.timesDelayed = 0;\r\n    const columnsAutoSized = [];\r\n    let changesThisTimeAround = -1;\r\n    const columnLimitsIndex = Object.fromEntries(\r\n      columnLimits.map(({ colId, maxWidth, minWidth }) => [colId, { maxWidth, minWidth }])\r\n    );\r\n    const shouldSkipHeader = skipHeader != null ? skipHeader : this.gos.get(\"skipHeaderOnAutoSize\");\r\n    const shouldSkipHeaderGroups = skipHeaderGroups != null ? skipHeaderGroups : shouldSkipHeader;\r\n    while (changesThisTimeAround !== 0) {\r\n      changesThisTimeAround = 0;\r\n      const updatedColumns = [];\r\n      colKeys.forEach((key) => {\r\n        if (!key || isSpecialCol(key)) {\r\n          return;\r\n        }\r\n        const column = colModel.getCol(key);\r\n        if (!column) {\r\n          return;\r\n        }\r\n        if (columnsAutoSized.indexOf(column) >= 0) {\r\n          return;\r\n        }\r\n        const preferredWidth = autoWidthCalc.getPreferredWidthForColumn(column, shouldSkipHeader);\r\n        if (preferredWidth > 0) {\r\n          const columnLimit = columnLimitsIndex[column.colId] ?? {};\r\n          columnLimit.minWidth ?? (columnLimit.minWidth = defaultMinWidth);\r\n          columnLimit.maxWidth ?? (columnLimit.maxWidth = defaultMaxWidth);\r\n          const newWidth = normaliseColumnWidth(column, preferredWidth, columnLimit);\r\n          column.setActualWidth(newWidth, source);\r\n          columnsAutoSized.push(column);\r\n          changesThisTimeAround++;\r\n        }\r\n        updatedColumns.push(column);\r\n      });\r\n      if (!updatedColumns.length) {\r\n        continue;\r\n      }\r\n      visibleCols.refresh(source);\r\n    }\r\n    if (!shouldSkipHeaderGroups) {\r\n      this.autoSizeColumnGroupsByColumns(colKeys, source, stopAtGroup);\r\n    }\r\n    dispatchColumnResizedEvent(this.eventSvc, columnsAutoSized, true, \"autosizeColumns\");\r\n  }\r\n  autoSizeColumn(key, source, skipHeader) {\r\n    if (key) {\r\n      this.autoSizeCols({ colKeys: [key], skipHeader, skipHeaderGroups: true, source });\r\n    }\r\n  }\r\n  autoSizeColumnGroupsByColumns(keys, source, stopAtGroup) {\r\n    const { colModel, ctrlsSvc } = this.beans;\r\n    const columnGroups = /* @__PURE__ */ new Set();\r\n    const columns = colModel.getColsForKeys(keys);\r\n    columns.forEach((col) => {\r\n      let parent = col.getParent();\r\n      while (parent && parent != stopAtGroup) {\r\n        if (!parent.isPadding()) {\r\n          columnGroups.add(parent);\r\n        }\r\n        parent = parent.getParent();\r\n      }\r\n    });\r\n    let headerGroupCtrl;\r\n    const resizedColumns = [];\r\n    for (const columnGroup of columnGroups) {\r\n      for (const headerContainerCtrl of ctrlsSvc.getHeaderRowContainerCtrls()) {\r\n        headerGroupCtrl = headerContainerCtrl.getHeaderCtrlForColumn(columnGroup);\r\n        if (headerGroupCtrl) {\r\n          break;\r\n        }\r\n      }\r\n      if (headerGroupCtrl) {\r\n        headerGroupCtrl.resizeLeafColumnsToFit(source);\r\n      }\r\n    }\r\n    return resizedColumns;\r\n  }\r\n  autoSizeAllColumns(params) {\r\n    if (this.shouldQueueResizeOperations) {\r\n      this.pushResizeOperation(() => this.autoSizeAllColumns(params));\r\n      return;\r\n    }\r\n    const allDisplayedColumns = this.beans.visibleCols.allCols;\r\n    this.autoSizeCols({ colKeys: allDisplayedColumns, ...params });\r\n  }\r\n  addColumnAutosize(element, column) {\r\n    const skipHeaderOnAutoSize = this.gos.get(\"skipHeaderOnAutoSize\");\r\n    const autoSizeColListener = () => {\r\n      this.autoSizeColumn(column, \"uiColumnResized\", skipHeaderOnAutoSize);\r\n    };\r\n    element.addEventListener(\"dblclick\", autoSizeColListener);\r\n    const touchListener = new TouchListener(element);\r\n    touchListener.addEventListener(\"doubleTap\", autoSizeColListener);\r\n    return () => {\r\n      element.removeEventListener(\"dblclick\", autoSizeColListener);\r\n      touchListener.removeEventListener(\"doubleTap\", autoSizeColListener);\r\n      touchListener.destroy();\r\n    };\r\n  }\r\n  addColumnGroupResize(element, columnGroup, callback) {\r\n    const skipHeaderOnAutoSize = this.gos.get(\"skipHeaderOnAutoSize\");\r\n    const listener = () => {\r\n      const keys = [];\r\n      const leafCols = columnGroup.getDisplayedLeafColumns();\r\n      leafCols.forEach((column) => {\r\n        if (!column.getColDef().suppressAutoSize) {\r\n          keys.push(column.getColId());\r\n        }\r\n      });\r\n      if (keys.length > 0) {\r\n        this.autoSizeCols({\r\n          colKeys: keys,\r\n          skipHeader: skipHeaderOnAutoSize,\r\n          stopAtGroup: columnGroup,\r\n          source: \"uiColumnResized\"\r\n        });\r\n      }\r\n      callback();\r\n    };\r\n    element.addEventListener(\"dblclick\", listener);\r\n    return () => element.removeEventListener(\"dblclick\", listener);\r\n  }\r\n  // method will call itself if no available width. this covers if the grid\r\n  // isn't visible, but is just about to be visible.\r\n  sizeColumnsToFitGridBody(params, nextTimeout) {\r\n    if (!this.isAlive()) {\r\n      return;\r\n    }\r\n    const { ctrlsSvc, scrollVisibleSvc } = this.beans;\r\n    const gridBodyCtrl = ctrlsSvc.getGridBodyCtrl();\r\n    const removeScrollWidth = gridBodyCtrl.isVerticalScrollShowing();\r\n    const scrollWidthToRemove = removeScrollWidth ? scrollVisibleSvc.getScrollbarWidth() : 0;\r\n    const bodyViewportWidth = _getInnerWidth(gridBodyCtrl.eGridBody);\r\n    const availableWidth = bodyViewportWidth - scrollWidthToRemove;\r\n    if (availableWidth > 0) {\r\n      this.sizeColumnsToFit(availableWidth, \"sizeColumnsToFit\", false, params);\r\n      return;\r\n    }\r\n    if (nextTimeout === void 0) {\r\n      window.setTimeout(() => {\r\n        this.sizeColumnsToFitGridBody(params, 100);\r\n      }, 0);\r\n    } else if (nextTimeout === 100) {\r\n      window.setTimeout(() => {\r\n        this.sizeColumnsToFitGridBody(params, 500);\r\n      }, 100);\r\n    } else if (nextTimeout === 500) {\r\n      window.setTimeout(() => {\r\n        this.sizeColumnsToFitGridBody(params, -1);\r\n      }, 500);\r\n    } else {\r\n      _warn(29);\r\n    }\r\n  }\r\n  // called from api\r\n  sizeColumnsToFit(gridWidth, source = \"sizeColumnsToFit\", silent, params) {\r\n    if (this.shouldQueueResizeOperations) {\r\n      this.pushResizeOperation(() => this.sizeColumnsToFit(gridWidth, source, silent, params));\r\n      return;\r\n    }\r\n    const limitsMap = {};\r\n    if (params) {\r\n      params?.columnLimits?.forEach(({ key, ...dimensions }) => {\r\n        limitsMap[typeof key === \"string\" ? key : key.getColId()] = dimensions;\r\n      });\r\n    }\r\n    const allDisplayedColumns = this.beans.visibleCols.allCols;\r\n    if (gridWidth <= 0 || !allDisplayedColumns.length) {\r\n      return;\r\n    }\r\n    const doColumnsAlreadyFit = gridWidth === getWidthOfColsInList(allDisplayedColumns);\r\n    if (doColumnsAlreadyFit) {\r\n      const doAllColumnsSatisfyConstraints = allDisplayedColumns.every((column) => {\r\n        if (column.colDef.suppressSizeToFit) {\r\n          return true;\r\n        }\r\n        const widthOverride = limitsMap?.[column.getId()];\r\n        const minWidth = widthOverride?.minWidth ?? params?.defaultMinWidth;\r\n        const maxWidth = widthOverride?.maxWidth ?? params?.defaultMaxWidth;\r\n        const colWidth = column.getActualWidth();\r\n        return (minWidth == null || colWidth >= minWidth) && (maxWidth == null || colWidth <= maxWidth);\r\n      });\r\n      if (doAllColumnsSatisfyConstraints) {\r\n        return;\r\n      }\r\n    }\r\n    const colsToSpread = [];\r\n    const colsToNotSpread = [];\r\n    allDisplayedColumns.forEach((column) => {\r\n      if (column.getColDef().suppressSizeToFit === true) {\r\n        colsToNotSpread.push(column);\r\n      } else {\r\n        colsToSpread.push(column);\r\n      }\r\n    });\r\n    const colsToDispatchEventFor = colsToSpread.slice(0);\r\n    let finishedResizing = false;\r\n    const moveToNotSpread = (column) => {\r\n      _removeFromArray(colsToSpread, column);\r\n      colsToNotSpread.push(column);\r\n    };\r\n    colsToSpread.forEach((column) => {\r\n      column.resetActualWidth(source);\r\n      const widthOverride = limitsMap?.[column.getId()];\r\n      const minOverride = widthOverride?.minWidth ?? params?.defaultMinWidth;\r\n      const maxOverride = widthOverride?.maxWidth ?? params?.defaultMaxWidth;\r\n      const colWidth = column.getActualWidth();\r\n      if (typeof minOverride === \"number\" && colWidth < minOverride) {\r\n        column.setActualWidth(minOverride, source, true);\r\n      } else if (typeof maxOverride === \"number\" && colWidth > maxOverride) {\r\n        column.setActualWidth(maxOverride, source, true);\r\n      }\r\n    });\r\n    while (!finishedResizing) {\r\n      finishedResizing = true;\r\n      const availablePixels = gridWidth - getWidthOfColsInList(colsToNotSpread);\r\n      if (availablePixels <= 0) {\r\n        colsToSpread.forEach((column) => {\r\n          const widthOverride = limitsMap?.[column.getId()]?.minWidth ?? params?.defaultMinWidth;\r\n          if (typeof widthOverride === \"number\") {\r\n            column.setActualWidth(widthOverride, source, true);\r\n            return;\r\n          }\r\n          column.setActualWidth(column.minWidth, source);\r\n        });\r\n      } else {\r\n        const scale = availablePixels / getWidthOfColsInList(colsToSpread);\r\n        let pixelsForLastCol = availablePixels;\r\n        for (let i = colsToSpread.length - 1; i >= 0; i--) {\r\n          const column = colsToSpread[i];\r\n          const widthOverride = limitsMap?.[column.getId()];\r\n          const minOverride = widthOverride?.minWidth ?? params?.defaultMinWidth;\r\n          const maxOverride = widthOverride?.maxWidth ?? params?.defaultMaxWidth;\r\n          const colMinWidth = column.getMinWidth();\r\n          const colMaxWidth = column.getMaxWidth();\r\n          const minWidth = typeof minOverride === \"number\" && minOverride > colMinWidth ? minOverride : colMinWidth;\r\n          const maxWidth = typeof maxOverride === \"number\" && maxOverride < colMaxWidth ? maxOverride : colMaxWidth;\r\n          let newWidth = Math.round(column.getActualWidth() * scale);\r\n          if (newWidth < minWidth) {\r\n            newWidth = minWidth;\r\n            moveToNotSpread(column);\r\n            finishedResizing = false;\r\n          } else if (newWidth > maxWidth) {\r\n            newWidth = maxWidth;\r\n            moveToNotSpread(column);\r\n            finishedResizing = false;\r\n          } else if (i === 0) {\r\n            newWidth = pixelsForLastCol;\r\n          }\r\n          column.setActualWidth(newWidth, source, true);\r\n          pixelsForLastCol -= newWidth;\r\n        }\r\n      }\r\n    }\r\n    colsToDispatchEventFor.forEach((col) => {\r\n      col.fireColumnWidthChangedEvent(source);\r\n    });\r\n    const visibleCols = this.beans.visibleCols;\r\n    visibleCols.setLeftValues(source);\r\n    visibleCols.updateBodyWidths();\r\n    if (silent) {\r\n      return;\r\n    }\r\n    dispatchColumnResizedEvent(this.eventSvc, colsToDispatchEventFor, true, source);\r\n  }\r\n  applyAutosizeStrategy() {\r\n    const autoSizeStrategy = this.gos.get(\"autoSizeStrategy\");\r\n    if (!autoSizeStrategy) {\r\n      return;\r\n    }\r\n    const { type } = autoSizeStrategy;\r\n    setTimeout(() => {\r\n      if (type === \"fitGridWidth\") {\r\n        const { columnLimits: propColumnLimits, defaultMinWidth, defaultMaxWidth } = autoSizeStrategy;\r\n        const columnLimits = propColumnLimits?.map(({ colId: key, minWidth, maxWidth }) => ({\r\n          key,\r\n          minWidth,\r\n          maxWidth\r\n        }));\r\n        this.sizeColumnsToFitGridBody({\r\n          defaultMinWidth,\r\n          defaultMaxWidth,\r\n          columnLimits\r\n        });\r\n      } else if (type === \"fitProvidedWidth\") {\r\n        this.sizeColumnsToFit(autoSizeStrategy.width, \"sizeColumnsToFit\");\r\n      }\r\n    });\r\n  }\r\n  onFirstDataRendered() {\r\n    const autoSizeStrategy = this.gos.get(\"autoSizeStrategy\");\r\n    if (autoSizeStrategy?.type !== \"fitCellContents\") {\r\n      return;\r\n    }\r\n    const { colIds: columns, skipHeader, defaultMaxWidth, defaultMinWidth, columnLimits } = autoSizeStrategy;\r\n    setTimeout(() => {\r\n      const params = {\r\n        skipHeader,\r\n        source: \"autosizeColumns\",\r\n        defaultMaxWidth,\r\n        defaultMinWidth,\r\n        columnLimits\r\n      };\r\n      if (columns) {\r\n        this.autoSizeCols({ colKeys: columns, ...params });\r\n      } else {\r\n        this.autoSizeAllColumns(params);\r\n      }\r\n    });\r\n  }\r\n  processResizeOperations() {\r\n    this.shouldQueueResizeOperations = false;\r\n    this.resizeOperationQueue.forEach((resizeOperation) => resizeOperation());\r\n    this.resizeOperationQueue = [];\r\n  }\r\n  pushResizeOperation(func) {\r\n    this.resizeOperationQueue.push(func);\r\n  }\r\n  destroy() {\r\n    this.resizeOperationQueue.length = 0;\r\n    super.destroy();\r\n  }\r\n};\r\nfunction normaliseColumnWidth(column, newWidth, limits = {}) {\r\n  const minWidth = limits.minWidth ?? column.getMinWidth();\r\n  if (newWidth < minWidth) {\r\n    newWidth = minWidth;\r\n  }\r\n  const maxWidth = limits.maxWidth ?? column.getMaxWidth();\r\n  if (newWidth > maxWidth) {\r\n    newWidth = maxWidth;\r\n  }\r\n  return newWidth;\r\n}\r\n\r\n// packages/ag-grid-community/src/columnAutosize/columnAutosizeModule.ts\r\nvar ColumnAutoSizeModule = {\r\n  moduleName: \"ColumnAutoSize\",\r\n  version: VERSION,\r\n  beans: [ColumnAutosizeService],\r\n  apiFunctions: {\r\n    sizeColumnsToFit,\r\n    autoSizeColumns,\r\n    autoSizeAllColumns\r\n  },\r\n  dependsOn: [AutoWidthModule]\r\n};\r\n\r\n// packages/ag-grid-community/src/pinnedRowModel/manualPinnedRow.css-GENERATED.ts\r\nvar manualPinnedRowCSS = (\r\n  /*css*/\r\n  `.ag-row-pinned-source{background-color:var(--ag-pinned-source-row-background-color);color:var(--ag-pinned-source-row-text-color);font-weight:var(--ag-pinned-source-row-font-weight)}.ag-row-pinned-manual{background-color:var(--ag-pinned-row-background-color);color:var(--ag-pinned-row-text-color);font-weight:var(--ag-pinned-row-font-weight)}`\r\n);\r\n\r\n// packages/ag-grid-community/src/pinnedRowModel/pinnedRowApi.ts\r\nfunction getPinnedTopRowCount(beans) {\r\n  return beans.pinnedRowModel?.getPinnedTopRowCount() ?? 0;\r\n}\r\nfunction getPinnedBottomRowCount(beans) {\r\n  return beans.pinnedRowModel?.getPinnedBottomRowCount() ?? 0;\r\n}\r\nfunction getPinnedTopRow(beans, index) {\r\n  return beans.pinnedRowModel?.getPinnedTopRow(index);\r\n}\r\nfunction getPinnedBottomRow(beans, index) {\r\n  return beans.pinnedRowModel?.getPinnedBottomRow(index);\r\n}\r\nfunction forEachPinnedRow(beans, floating, callback) {\r\n  return beans.pinnedRowModel?.forEachPinnedRow(floating, callback);\r\n}\r\n\r\n// packages/ag-grid-community/src/pinnedRowModel/pinnedRowModule.ts\r\nvar PinnedRowModule = {\r\n  moduleName: \"PinnedRow\",\r\n  version: VERSION,\r\n  beans: [PinnedRowModel],\r\n  css: [manualPinnedRowCSS],\r\n  apiFunctions: {\r\n    getPinnedTopRowCount,\r\n    getPinnedBottomRowCount,\r\n    getPinnedTopRow,\r\n    getPinnedBottomRow,\r\n    forEachPinnedRow\r\n  },\r\n  icons: {\r\n    rowPin: \"pin\",\r\n    rowPinTop: \"pinned-top\",\r\n    rowPinBottom: \"pinned-bottom\",\r\n    rowUnpin: \"un-pin\"\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/rendering/spanning/spannedCellCtrl.ts\r\nvar SpannedCellCtrl = class extends CellCtrl {\r\n  constructor(cellSpan, rowCtrl, beans) {\r\n    super(cellSpan.col, cellSpan.firstNode, beans, rowCtrl);\r\n    this.cellSpan = cellSpan;\r\n    this.SPANNED_CELL_CSS_CLASS = \"ag-spanned-cell\";\r\n  }\r\n  setComp(comp, eCell, eWrapper, eCellWrapper, printLayout, startEditing, compBean) {\r\n    this.eWrapper = eWrapper;\r\n    super.setComp(comp, eCell, eWrapper, eCellWrapper, printLayout, startEditing, compBean);\r\n    this.setAriaRowSpan();\r\n    this.refreshAriaRowIndex();\r\n  }\r\n  isCellSpanning() {\r\n    return true;\r\n  }\r\n  getCellSpan() {\r\n    return this.cellSpan;\r\n  }\r\n  /**\r\n   * When cell is spanning, ensure row index is also available on the cell\r\n   */\r\n  refreshAriaRowIndex() {\r\n    if (this.rowNode.rowIndex == null) {\r\n      return;\r\n    }\r\n    _setAriaRowIndex(this.eGui, this.rowNode.rowIndex);\r\n  }\r\n  /**\r\n   * When cell is spanning, ensure row index is also available on the cell\r\n   */\r\n  setAriaRowSpan() {\r\n    _setAriaRowSpan(this.eGui, this.cellSpan.spannedNodes.size);\r\n  }\r\n  // not ideal, for tabbing need to force the focused position\r\n  setFocusedCellPosition(cellPos) {\r\n    this.focusedCellPosition = cellPos;\r\n  }\r\n  getFocusedCellPosition() {\r\n    return this.focusedCellPosition ?? this.cellPosition;\r\n  }\r\n  checkCellFocused() {\r\n    const focusedCell = this.beans.focusSvc.getFocusedCell();\r\n    return !!focusedCell && this.cellSpan.doesSpanContain(focusedCell);\r\n  }\r\n  applyStaticCssClasses() {\r\n    super.applyStaticCssClasses();\r\n    this.comp.toggleCss(this.SPANNED_CELL_CSS_CLASS, true);\r\n  }\r\n  onCellFocused(event) {\r\n    const { beans } = this;\r\n    if (_isCellFocusSuppressed(beans)) {\r\n      this.focusedCellPosition = void 0;\r\n      return;\r\n    }\r\n    const cellFocused = this.isCellFocused();\r\n    if (!cellFocused) {\r\n      this.focusedCellPosition = void 0;\r\n    }\r\n    if (event && cellFocused) {\r\n      this.focusedCellPosition = {\r\n        rowIndex: event.rowIndex,\r\n        rowPinned: event.rowPinned,\r\n        column: event.column\r\n        // fix\r\n      };\r\n    }\r\n    super.onCellFocused(event);\r\n  }\r\n  getRootElement() {\r\n    return this.eWrapper;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/rendering/spanning/spannedRowCtrl.ts\r\nvar SpannedRowCtrl = class extends RowCtrl {\r\n  onRowIndexChanged() {\r\n    super.onRowIndexChanged();\r\n    this.getAllCellCtrls().forEach((c) => c.refreshAriaRowIndex());\r\n  }\r\n  getInitialRowClasses(_rowContainerType) {\r\n    return [\"ag-spanned-row\"];\r\n  }\r\n  getNewCellCtrl(col) {\r\n    const cellSpan = this.beans.rowSpanSvc?.getCellSpan(col, this.rowNode);\r\n    if (!cellSpan) {\r\n      return;\r\n    }\r\n    const firstRowOfSpan = cellSpan.firstNode !== this.rowNode;\r\n    if (firstRowOfSpan) {\r\n      return;\r\n    }\r\n    return new SpannedCellCtrl(cellSpan, this, this.beans);\r\n  }\r\n  isCorrectCtrlForSpan(cell) {\r\n    const cellSpan = this.beans.rowSpanSvc?.getCellSpan(cell.column, this.rowNode);\r\n    if (!cellSpan) {\r\n      return false;\r\n    }\r\n    const firstRowOfSpan = cellSpan.firstNode !== this.rowNode;\r\n    if (firstRowOfSpan) {\r\n      return false;\r\n    }\r\n    return cell.getCellSpan() === cellSpan;\r\n  }\r\n  /**\r\n   * Below overrides are explicitly disabling styling and other unwanted behaviours for spannedRowCtrl\r\n   */\r\n  // row height should be 0 in spanned row - they're only included for purpose of aria\r\n  onRowHeightChanged() {\r\n  }\r\n  // no styling spanned rows\r\n  refreshFirstAndLastRowStyles() {\r\n  }\r\n  // no hover functionality for spanned rows\r\n  addHoverFunctionality() {\r\n  }\r\n  resetHoveredStatus() {\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/rendering/spanning/spannedRowRenderer.ts\r\nvar SpannedRowRenderer = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"spannedRowRenderer\";\r\n    this.topCtrls = /* @__PURE__ */ new Map();\r\n    this.bottomCtrls = /* @__PURE__ */ new Map();\r\n    this.centerCtrls = /* @__PURE__ */ new Map();\r\n  }\r\n  postConstruct() {\r\n    this.addManagedEventListeners({\r\n      displayedRowsChanged: this.createAllCtrls.bind(this)\r\n    });\r\n  }\r\n  createAllCtrls() {\r\n    this.createCtrls(\"top\");\r\n    this.createCtrls(\"bottom\");\r\n    this.createCtrls(\"center\");\r\n  }\r\n  /**\r\n   * When displayed rows or cols change, the spanned cell ctrls need to update\r\n   */\r\n  createCtrls(ctrlsKey) {\r\n    const { rowSpanSvc } = this.beans;\r\n    const ctrlsName = `${ctrlsKey}Ctrls`;\r\n    const previousCtrls = this[ctrlsName];\r\n    const previousCtrlsSize = previousCtrls.size;\r\n    const rowCtrls = this.getAllRelevantRowControls(ctrlsKey);\r\n    const newRowCtrls = /* @__PURE__ */ new Map();\r\n    let hasNewSpans = false;\r\n    for (const ctrl of rowCtrls) {\r\n      if (!ctrl.isAlive()) {\r\n        continue;\r\n      }\r\n      rowSpanSvc?.forEachSpannedColumn(ctrl.rowNode, (col, cellSpan) => {\r\n        if (newRowCtrls.has(cellSpan.firstNode)) {\r\n          return;\r\n        }\r\n        const existingCtrl = previousCtrls.get(cellSpan.firstNode);\r\n        if (existingCtrl) {\r\n          newRowCtrls.set(cellSpan.firstNode, existingCtrl);\r\n          previousCtrls.delete(cellSpan.firstNode);\r\n          return;\r\n        }\r\n        hasNewSpans = true;\r\n        const newCtrl = new SpannedRowCtrl(cellSpan.firstNode, this.beans, false, false, false);\r\n        newRowCtrls.set(cellSpan.firstNode, newCtrl);\r\n      });\r\n    }\r\n    this[ctrlsName] = newRowCtrls;\r\n    const sameCount = newRowCtrls.size === previousCtrlsSize;\r\n    if (!hasNewSpans && sameCount)\r\n      return;\r\n    for (const oldCtrl of previousCtrls.values()) {\r\n      oldCtrl.destroyFirstPass(true);\r\n      oldCtrl.destroySecondPass();\r\n    }\r\n    this.dispatchLocalEvent({\r\n      type: `spannedRowsUpdated`,\r\n      ctrlsKey\r\n    });\r\n  }\r\n  // cannot use getAllRowCtrls as it returns this services row ctrls.\r\n  getAllRelevantRowControls(ctrlsKey) {\r\n    const { rowRenderer } = this.beans;\r\n    switch (ctrlsKey) {\r\n      case \"top\":\r\n        return rowRenderer.topRowCtrls;\r\n      case \"bottom\":\r\n        return rowRenderer.bottomRowCtrls;\r\n      case \"center\":\r\n        return rowRenderer.allRowCtrls;\r\n    }\r\n  }\r\n  getCellByPosition(cellPosition) {\r\n    const { rowSpanSvc } = this.beans;\r\n    const cellSpan = rowSpanSvc?.getCellSpanByPosition(cellPosition);\r\n    if (!cellSpan) {\r\n      return void 0;\r\n    }\r\n    const ctrlsName = `${_normalisePinnedValue(cellPosition.rowPinned)}Ctrls`;\r\n    const ctrl = this[ctrlsName].get(cellSpan.firstNode);\r\n    if (!ctrl) {\r\n      return void 0;\r\n    }\r\n    return ctrl.getAllCellCtrls().find((cellCtrl) => cellCtrl.column === cellPosition.column);\r\n  }\r\n  getCtrls(container) {\r\n    const ctrlsName = `${container}Ctrls`;\r\n    return [...this[ctrlsName].values()];\r\n  }\r\n  destroyRowCtrls(container) {\r\n    const ctrlsName = `${container}Ctrls`;\r\n    for (const ctrl of this[ctrlsName].values()) {\r\n      ctrl.destroyFirstPass(true);\r\n      ctrl.destroySecondPass();\r\n    }\r\n    this[ctrlsName] = /* @__PURE__ */ new Map();\r\n  }\r\n  destroy() {\r\n    super.destroy();\r\n    this.destroyRowCtrls(\"top\");\r\n    this.destroyRowCtrls(\"bottom\");\r\n    this.destroyRowCtrls(\"center\");\r\n  }\r\n};\r\nvar _normalisePinnedValue = (pinned) => {\r\n  return pinned ?? \"center\";\r\n};\r\n\r\n// packages/ag-grid-community/src/rendering/spanning/rowSpanCache.ts\r\nvar CellSpan = class {\r\n  constructor(col, firstNode) {\r\n    this.col = col;\r\n    this.firstNode = firstNode;\r\n    // used for distinguishing between types\r\n    this.cellSpan = true;\r\n    this.spannedNodes = /* @__PURE__ */ new Set();\r\n    this.addSpannedNode(firstNode);\r\n  }\r\n  /**\r\n   * Reset the span leaving only the head.\r\n   * Head is used as a comparison as this is the row used to render this cell\r\n   * Even if the row data changes, the cell will properly reflect the correct value.\r\n   */\r\n  reset() {\r\n    this.spannedNodes.clear();\r\n    this.addSpannedNode(this.firstNode);\r\n  }\r\n  addSpannedNode(node) {\r\n    this.spannedNodes.add(node);\r\n    this.lastNode = node;\r\n  }\r\n  getLastNode() {\r\n    return this.lastNode;\r\n  }\r\n  getCellHeight() {\r\n    return this.lastNode.rowTop + this.lastNode.rowHeight - this.firstNode.rowTop - 1;\r\n  }\r\n  doesSpanContain(cellPosition) {\r\n    if (cellPosition.column !== this.col) {\r\n      return false;\r\n    }\r\n    if (cellPosition.rowPinned != this.firstNode.rowPinned) {\r\n      return false;\r\n    }\r\n    return this.firstNode.rowIndex <= cellPosition.rowIndex && cellPosition.rowIndex <= this.lastNode.rowIndex;\r\n  }\r\n  /**\r\n   * Gets the auto height value for last node in the spanned cell.\r\n   * The first node is used to store the auto height for the cell, but the additional height for this cell\r\n   * needs applied to the last row in the span.\r\n   */\r\n  getLastNodeAutoHeight() {\r\n    const autoHeight = this.firstNode.__autoHeights?.[this.col.getColId()];\r\n    if (autoHeight == null) {\r\n      return void 0;\r\n    }\r\n    let allButLastHeights = 0;\r\n    this.spannedNodes.forEach((node) => {\r\n      if (node === this.lastNode)\r\n        return;\r\n      allButLastHeights += node.rowHeight;\r\n    });\r\n    return autoHeight - allButLastHeights;\r\n  }\r\n};\r\nvar RowSpanCache = class extends BeanStub {\r\n  constructor(column) {\r\n    super();\r\n    this.column = column;\r\n  }\r\n  buildCache(pinned) {\r\n    const {\r\n      column,\r\n      beans: { gos, pinnedRowModel, rowModel, valueSvc, pagination }\r\n    } = this;\r\n    const { colDef } = column;\r\n    const oldMap = this[`${pinned}ValueNodeMap`];\r\n    const newMap = /* @__PURE__ */ new Map();\r\n    const isFullWidthCellFunc = gos.getCallback(\"isFullWidthRow\");\r\n    const equalsFnc = colDef.equals;\r\n    const customCompare = colDef.spanRows;\r\n    const isCustomCompare = typeof customCompare === \"function\";\r\n    let lastNode = null;\r\n    let spanData = null;\r\n    let lastValue;\r\n    const setNewHead = (node, value) => {\r\n      lastNode = node;\r\n      spanData = null;\r\n      lastValue = value;\r\n    };\r\n    const checkNodeForCache = (node) => {\r\n      const doesNodeSupportSpanning = !node.isExpandable() && !node.group && !node.detail && (isFullWidthCellFunc ? !isFullWidthCellFunc({ rowNode: node }) : true);\r\n      if (node.rowIndex == null || !doesNodeSupportSpanning) {\r\n        setNewHead(null, null);\r\n        return;\r\n      }\r\n      if (lastNode == null || node.level !== lastNode.level || // no span across groups\r\n      node.footer || spanData && node.rowIndex - 1 !== spanData?.getLastNode().rowIndex) {\r\n        setNewHead(node, valueSvc.getValue(column, node));\r\n        return;\r\n      }\r\n      const value = valueSvc.getValue(column, node);\r\n      if (isCustomCompare) {\r\n        const params = _addGridCommonParams(gos, {\r\n          valueA: lastValue,\r\n          nodeA: lastNode,\r\n          valueB: value,\r\n          nodeB: node,\r\n          column,\r\n          colDef\r\n        });\r\n        if (!customCompare(params)) {\r\n          setNewHead(node, value);\r\n          return;\r\n        }\r\n      } else {\r\n        if (equalsFnc ? !equalsFnc(lastValue, value) : lastValue !== value) {\r\n          setNewHead(node, value);\r\n          return;\r\n        }\r\n      }\r\n      if (!spanData) {\r\n        const oldSpan = oldMap?.get(lastNode);\r\n        if (oldSpan?.firstNode === lastNode) {\r\n          oldSpan.reset();\r\n          spanData = oldSpan;\r\n        } else {\r\n          spanData = new CellSpan(column, lastNode);\r\n        }\r\n        newMap.set(lastNode, spanData);\r\n      }\r\n      spanData.addSpannedNode(node);\r\n      newMap.set(node, spanData);\r\n    };\r\n    switch (pinned) {\r\n      case \"center\":\r\n        rowModel.forEachDisplayedNode?.((node) => {\r\n          const isNodeInPage = !pagination || pagination.isRowInPage(node.rowIndex);\r\n          if (!isNodeInPage) {\r\n            return;\r\n          }\r\n          checkNodeForCache(node);\r\n        });\r\n        break;\r\n      case \"top\":\r\n        pinnedRowModel?.forEachPinnedRow(\"top\", checkNodeForCache);\r\n        break;\r\n      case \"bottom\":\r\n        pinnedRowModel?.forEachPinnedRow(\"bottom\", checkNodeForCache);\r\n        break;\r\n    }\r\n    this[`${pinned}ValueNodeMap`] = newMap;\r\n  }\r\n  isCellSpanning(node) {\r\n    return !!this.getCellSpan(node);\r\n  }\r\n  getCellSpan(node) {\r\n    const map = this[`${_normalisePinnedValue(node.rowPinned)}ValueNodeMap`];\r\n    return map.get(node);\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/rendering/spanning/rowSpanService.ts\r\nvar RowSpanService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"rowSpanSvc\";\r\n    this.spanningColumns = /* @__PURE__ */ new Map();\r\n    // debounced to allow spannedRowRenderer to run first, removing any old spanned rows\r\n    this.debouncePinnedEvent = _debounce(this, this.dispatchCellsUpdatedEvent.bind(this, true), 0);\r\n    this.debounceModelEvent = _debounce(this, this.dispatchCellsUpdatedEvent.bind(this, false), 0);\r\n    this.pinnedTimeout = null;\r\n    this.modelTimeout = null;\r\n  }\r\n  postConstruct() {\r\n    const onRowDataUpdated = this.onRowDataUpdated.bind(this);\r\n    const buildPinnedCaches = this.buildPinnedCaches.bind(this);\r\n    this.addManagedEventListeners({\r\n      paginationChanged: this.buildModelCaches.bind(this),\r\n      pinnedRowDataChanged: buildPinnedCaches,\r\n      pinnedRowsChanged: buildPinnedCaches,\r\n      rowNodeDataChanged: onRowDataUpdated,\r\n      cellValueChanged: onRowDataUpdated\r\n    });\r\n  }\r\n  /**\r\n   * When a new column is created with spanning (or spanning changes for a column)\r\n   * @param column column that is now spanning\r\n   */\r\n  register(column) {\r\n    const { gos } = this.beans;\r\n    if (!gos.get(\"enableCellSpan\")) {\r\n      return;\r\n    }\r\n    if (this.spanningColumns.has(column)) {\r\n      return;\r\n    }\r\n    const cache = this.createManagedBean(new RowSpanCache(column));\r\n    this.spanningColumns.set(column, cache);\r\n    cache.buildCache(\"top\");\r\n    cache.buildCache(\"bottom\");\r\n    cache.buildCache(\"center\");\r\n    this.debouncePinnedEvent();\r\n    this.debounceModelEvent();\r\n  }\r\n  dispatchCellsUpdatedEvent(pinned) {\r\n    this.dispatchLocalEvent({ type: \"spannedCellsUpdated\", pinned });\r\n  }\r\n  /**\r\n   * When a new column is destroyed with spanning (or spanning changes for a column)\r\n   * @param column column that is now spanning\r\n   */\r\n  deregister(column) {\r\n    this.spanningColumns.delete(column);\r\n  }\r\n  // called when data changes, as this could be a hot path it's debounced\r\n  // it uses timeouts instead of debounce so that it can be cancelled by `modelUpdated`\r\n  // which is expected to run immediately (to exec before the rowRenderer)\r\n  onRowDataUpdated({ node }) {\r\n    const { spannedRowRenderer } = this.beans;\r\n    if (node.rowPinned) {\r\n      if (this.pinnedTimeout != null) {\r\n        return;\r\n      }\r\n      this.pinnedTimeout = window.setTimeout(() => {\r\n        this.pinnedTimeout = null;\r\n        this.buildPinnedCaches();\r\n        spannedRowRenderer?.createCtrls(\"top\");\r\n        spannedRowRenderer?.createCtrls(\"bottom\");\r\n      }, 0);\r\n      return;\r\n    }\r\n    if (this.modelTimeout != null) {\r\n      return;\r\n    }\r\n    this.modelTimeout = window.setTimeout(() => {\r\n      this.modelTimeout = null;\r\n      this.buildModelCaches();\r\n      spannedRowRenderer?.createCtrls(\"center\");\r\n    }, 0);\r\n  }\r\n  buildModelCaches() {\r\n    if (this.modelTimeout != null) {\r\n      clearTimeout(this.modelTimeout);\r\n    }\r\n    this.spanningColumns.forEach((cache) => cache.buildCache(\"center\"));\r\n    this.debounceModelEvent();\r\n  }\r\n  buildPinnedCaches() {\r\n    if (this.pinnedTimeout != null) {\r\n      clearTimeout(this.pinnedTimeout);\r\n    }\r\n    this.spanningColumns.forEach((cache) => {\r\n      cache.buildCache(\"top\");\r\n      cache.buildCache(\"bottom\");\r\n    });\r\n    this.debouncePinnedEvent();\r\n  }\r\n  isCellSpanning(col, rowNode) {\r\n    const cache = this.spanningColumns.get(col);\r\n    if (!cache) {\r\n      return false;\r\n    }\r\n    return cache.isCellSpanning(rowNode);\r\n  }\r\n  getCellSpanByPosition(position) {\r\n    const { pinnedRowModel, rowModel } = this.beans;\r\n    const col = position.column;\r\n    const index = position.rowIndex;\r\n    const cache = this.spanningColumns.get(col);\r\n    if (!cache) {\r\n      return void 0;\r\n    }\r\n    let node;\r\n    switch (position.rowPinned) {\r\n      case \"top\":\r\n        node = pinnedRowModel?.getPinnedTopRow(index);\r\n        break;\r\n      case \"bottom\":\r\n        node = pinnedRowModel?.getPinnedBottomRow(index);\r\n        break;\r\n      default:\r\n        node = rowModel.getRow(index);\r\n    }\r\n    if (!node) {\r\n      return void 0;\r\n    }\r\n    return cache.getCellSpan(node);\r\n  }\r\n  getCellStart(position) {\r\n    const span = this.getCellSpanByPosition(position);\r\n    if (!span) {\r\n      return position;\r\n    }\r\n    return { ...position, rowIndex: span.firstNode.rowIndex };\r\n  }\r\n  getCellEnd(position) {\r\n    const span = this.getCellSpanByPosition(position);\r\n    if (!span) {\r\n      return position;\r\n    }\r\n    return { ...position, rowIndex: span.getLastNode().rowIndex };\r\n  }\r\n  /**\r\n   * Look-up a spanned cell given a col and node as position indicators\r\n   *\r\n   * @param col a column to lookup a span at this position\r\n   * @param rowNode a node that may be spanned at this position\r\n   * @returns the CellSpan object if one exists\r\n   */\r\n  getCellSpan(col, rowNode) {\r\n    const cache = this.spanningColumns.get(col);\r\n    if (!cache) {\r\n      return void 0;\r\n    }\r\n    return cache.getCellSpan(rowNode);\r\n  }\r\n  forEachSpannedColumn(rowNode, callback) {\r\n    for (const [col, cache] of this.spanningColumns) {\r\n      if (cache.isCellSpanning(rowNode)) {\r\n        const spanningNode = cache.getCellSpan(rowNode);\r\n        callback(col, spanningNode);\r\n      }\r\n    }\r\n  }\r\n  destroy() {\r\n    super.destroy();\r\n    this.spanningColumns.clear();\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/rendering/spanning/cellSpanModule.ts\r\nvar CellSpanModule = {\r\n  moduleName: \"CellSpan\",\r\n  version: VERSION,\r\n  beans: [RowSpanService, SpannedRowRenderer]\r\n};\r\n\r\n// packages/ag-grid-community/src/styling/cellCustomStyleFeature.ts\r\nvar CellCustomStyleFeature = class extends BeanStub {\r\n  constructor(cellCtrl, beans) {\r\n    super();\r\n    this.cellCtrl = cellCtrl;\r\n    this.staticClasses = [];\r\n    this.beans = beans;\r\n    this.column = cellCtrl.column;\r\n  }\r\n  setComp(comp) {\r\n    this.cellComp = comp;\r\n    this.applyUserStyles();\r\n    this.applyCellClassRules();\r\n    this.applyClassesFromColDef();\r\n  }\r\n  applyCellClassRules() {\r\n    const { column, cellComp } = this;\r\n    const colDef = column.colDef;\r\n    const cellClassRules = colDef.cellClassRules;\r\n    const cellClassParams = this.getCellClassParams(column, colDef);\r\n    processClassRules(\r\n      this.beans.expressionSvc,\r\n      // if current was previous, skip\r\n      cellClassRules === this.cellClassRules ? void 0 : this.cellClassRules,\r\n      cellClassRules,\r\n      cellClassParams,\r\n      (className) => cellComp.toggleCss(className, true),\r\n      (className) => cellComp.toggleCss(className, false)\r\n    );\r\n    this.cellClassRules = cellClassRules;\r\n  }\r\n  applyUserStyles() {\r\n    const column = this.column;\r\n    const colDef = column.colDef;\r\n    const cellStyle = colDef.cellStyle;\r\n    if (!cellStyle) {\r\n      return;\r\n    }\r\n    let styles;\r\n    if (typeof cellStyle === \"function\") {\r\n      const cellStyleParams = this.getCellClassParams(column, colDef);\r\n      styles = cellStyle(cellStyleParams);\r\n    } else {\r\n      styles = cellStyle;\r\n    }\r\n    if (styles) {\r\n      this.cellComp.setUserStyles(styles);\r\n    }\r\n  }\r\n  applyClassesFromColDef() {\r\n    const { column, cellComp } = this;\r\n    const colDef = column.colDef;\r\n    const cellClassParams = this.getCellClassParams(column, colDef);\r\n    this.staticClasses.forEach((className) => cellComp.toggleCss(className, false));\r\n    const newStaticClasses = this.beans.cellStyles.getStaticCellClasses(colDef, cellClassParams);\r\n    this.staticClasses = newStaticClasses;\r\n    newStaticClasses.forEach((className) => cellComp.toggleCss(className, true));\r\n  }\r\n  getCellClassParams(column, colDef) {\r\n    const { value, rowNode } = this.cellCtrl;\r\n    return _addGridCommonParams(this.beans.gos, {\r\n      value,\r\n      data: rowNode.data,\r\n      node: rowNode,\r\n      colDef,\r\n      column,\r\n      rowIndex: rowNode.rowIndex\r\n    });\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/styling/cellStyleService.ts\r\nvar CellStyleService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"cellStyles\";\r\n  }\r\n  processAllCellClasses(colDef, params, onApplicableClass, onNotApplicableClass) {\r\n    processClassRules(\r\n      this.beans.expressionSvc,\r\n      void 0,\r\n      colDef.cellClassRules,\r\n      params,\r\n      onApplicableClass,\r\n      onNotApplicableClass\r\n    );\r\n    this.processStaticCellClasses(colDef, params, onApplicableClass);\r\n  }\r\n  getStaticCellClasses(colDef, params) {\r\n    const { cellClass } = colDef;\r\n    if (!cellClass) {\r\n      return [];\r\n    }\r\n    let classOrClasses;\r\n    if (typeof cellClass === \"function\") {\r\n      const cellClassFunc = cellClass;\r\n      classOrClasses = cellClassFunc(params);\r\n    } else {\r\n      classOrClasses = cellClass;\r\n    }\r\n    if (typeof classOrClasses === \"string\") {\r\n      classOrClasses = [classOrClasses];\r\n    }\r\n    return classOrClasses || [];\r\n  }\r\n  createCellCustomStyleFeature(ctrl, beans) {\r\n    return new CellCustomStyleFeature(ctrl, beans);\r\n  }\r\n  processStaticCellClasses(colDef, params, onApplicableClass) {\r\n    const classOrClasses = this.getStaticCellClasses(colDef, params);\r\n    classOrClasses.forEach((cssClassItem) => {\r\n      onApplicableClass(cssClassItem);\r\n    });\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/styling/stylingModule.ts\r\nvar CellStyleModule = {\r\n  moduleName: \"CellStyle\",\r\n  version: VERSION,\r\n  beans: [CellStyleService]\r\n};\r\nvar RowStyleModule = {\r\n  moduleName: \"RowStyle\",\r\n  version: VERSION,\r\n  beans: [RowStyleService]\r\n};\r\n\r\n// packages/ag-grid-community/src/columns/columnHover/columnHoverApi.ts\r\nfunction isColumnHovered(beans, column) {\r\n  return !!beans.colHover?.isHovered(column);\r\n}\r\n\r\n// packages/ag-grid-community/src/columns/columnHover/hoverFeature.ts\r\nvar HoverFeature = class extends BeanStub {\r\n  constructor(columns, element) {\r\n    super();\r\n    this.columns = columns;\r\n    this.element = element;\r\n    this.destroyManagedListeners = [];\r\n    this.enableFeature = (enabled) => {\r\n      const { beans, gos, element, columns } = this;\r\n      const colHover = beans.colHover;\r\n      const active = enabled ?? !!gos.get(\"columnHoverHighlight\");\r\n      if (active) {\r\n        this.destroyManagedListeners = this.addManagedElementListeners(element, {\r\n          mouseover: colHover.setMouseOver.bind(colHover, columns),\r\n          mouseout: colHover.clearMouseOver.bind(colHover)\r\n        });\r\n      } else {\r\n        this.destroyManagedListeners.forEach((fn) => fn());\r\n        this.destroyManagedListeners = [];\r\n      }\r\n    };\r\n  }\r\n  postConstruct() {\r\n    this.addManagedPropertyListener(\"columnHoverHighlight\", ({ currentValue }) => {\r\n      this.enableFeature(currentValue);\r\n    });\r\n    this.enableFeature();\r\n  }\r\n  destroy() {\r\n    super.destroy();\r\n    this.destroyManagedListeners = null;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/columns/columnHover/columnHoverService.ts\r\nvar CSS_COLUMN_HOVER = \"ag-column-hover\";\r\nvar ColumnHoverService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"colHover\";\r\n  }\r\n  postConstruct() {\r\n    this.addManagedPropertyListener(\"columnHoverHighlight\", ({ currentValue }) => {\r\n      if (!currentValue) {\r\n        this.clearMouseOver();\r\n      }\r\n    });\r\n  }\r\n  setMouseOver(columns) {\r\n    this.updateState(columns);\r\n  }\r\n  clearMouseOver() {\r\n    this.updateState(null);\r\n  }\r\n  isHovered(column) {\r\n    if (!this.gos.get(\"columnHoverHighlight\")) {\r\n      return false;\r\n    }\r\n    const selectedColumns = this.selectedColumns;\r\n    return !!selectedColumns && selectedColumns.indexOf(column) >= 0;\r\n  }\r\n  addHeaderColumnHoverListener(compBean, comp, column) {\r\n    const listener = () => {\r\n      const isHovered = this.isHovered(column);\r\n      comp.toggleCss(\"ag-column-hover\", isHovered);\r\n    };\r\n    compBean.addManagedEventListeners({ columnHoverChanged: listener });\r\n    listener();\r\n  }\r\n  onCellColumnHover(column, cellComp) {\r\n    if (!cellComp) {\r\n      return;\r\n    }\r\n    const isHovered = this.isHovered(column);\r\n    cellComp.toggleCss(CSS_COLUMN_HOVER, isHovered);\r\n  }\r\n  addHeaderFilterColumnHoverListener(compBean, comp, column, eGui) {\r\n    this.createHoverFeature(compBean, [column], eGui);\r\n    const listener = () => {\r\n      const hovered = this.isHovered(column);\r\n      comp.toggleCss(\"ag-column-hover\", hovered);\r\n    };\r\n    compBean.addManagedEventListeners({ columnHoverChanged: listener });\r\n    listener();\r\n  }\r\n  createHoverFeature(compBean, columns, eGui) {\r\n    compBean.createManagedBean(new HoverFeature(columns, eGui));\r\n  }\r\n  updateState(columns) {\r\n    this.selectedColumns = columns;\r\n    this.eventSvc.dispatchEvent({\r\n      type: \"columnHoverChanged\"\r\n    });\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/columns/columnHover/columnHoverModule.ts\r\nvar ColumnHoverModule = {\r\n  moduleName: \"ColumnHover\",\r\n  version: VERSION,\r\n  beans: [ColumnHoverService],\r\n  apiFunctions: {\r\n    isColumnHovered\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/misc/apiEvents/apiEventService.ts\r\nvar ApiEventService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"apiEventSvc\";\r\n    this.syncListeners = /* @__PURE__ */ new Map();\r\n    this.asyncListeners = /* @__PURE__ */ new Map();\r\n    this.syncGlobalListeners = /* @__PURE__ */ new Set();\r\n    this.globalListenerPairs = /* @__PURE__ */ new Map();\r\n  }\r\n  postConstruct() {\r\n    this.wrapSvc = this.beans.frameworkOverrides.createGlobalEventListenerWrapper?.();\r\n  }\r\n  addEventListener(eventType, userListener) {\r\n    const listener = this.wrapSvc?.wrap(eventType, userListener) ?? userListener;\r\n    const async = !ALWAYS_SYNC_GLOBAL_EVENTS.has(eventType);\r\n    const listeners = async ? this.asyncListeners : this.syncListeners;\r\n    if (!listeners.has(eventType)) {\r\n      listeners.set(eventType, /* @__PURE__ */ new Set());\r\n    }\r\n    listeners.get(eventType).add(listener);\r\n    this.eventSvc.addEventListener(eventType, listener, async);\r\n  }\r\n  removeEventListener(eventType, userListener) {\r\n    const listener = this.wrapSvc?.unwrap(eventType, userListener) ?? userListener;\r\n    const asyncListeners = this.asyncListeners.get(eventType);\r\n    const hasAsync = !!asyncListeners?.delete(listener);\r\n    if (!hasAsync) {\r\n      this.syncListeners.get(eventType)?.delete(listener);\r\n    }\r\n    this.eventSvc.removeEventListener(eventType, listener, hasAsync);\r\n  }\r\n  addGlobalListener(userListener) {\r\n    const listener = this.wrapSvc?.wrapGlobal(userListener) ?? userListener;\r\n    const syncListener = (eventType, event) => {\r\n      if (ALWAYS_SYNC_GLOBAL_EVENTS.has(eventType)) {\r\n        listener(eventType, event);\r\n      }\r\n    };\r\n    const asyncListener = (eventType, event) => {\r\n      if (!ALWAYS_SYNC_GLOBAL_EVENTS.has(eventType)) {\r\n        listener(eventType, event);\r\n      }\r\n    };\r\n    this.globalListenerPairs.set(userListener, { syncListener, asyncListener });\r\n    const eventSvc = this.eventSvc;\r\n    eventSvc.addGlobalListener(syncListener, false);\r\n    eventSvc.addGlobalListener(asyncListener, true);\r\n  }\r\n  removeGlobalListener(userListener) {\r\n    const { eventSvc, wrapSvc, globalListenerPairs } = this;\r\n    const listener = wrapSvc?.unwrapGlobal(userListener) ?? userListener;\r\n    const hasAsync = globalListenerPairs.has(listener);\r\n    if (hasAsync) {\r\n      const { syncListener, asyncListener } = globalListenerPairs.get(listener);\r\n      eventSvc.removeGlobalListener(syncListener, false);\r\n      eventSvc.removeGlobalListener(asyncListener, true);\r\n      globalListenerPairs.delete(userListener);\r\n    } else {\r\n      this.syncGlobalListeners.delete(listener);\r\n      eventSvc.removeGlobalListener(listener, false);\r\n    }\r\n  }\r\n  destroyEventListeners(map, async) {\r\n    map.forEach((listeners, eventType) => {\r\n      listeners.forEach((listener) => this.eventSvc.removeEventListener(eventType, listener, async));\r\n      listeners.clear();\r\n    });\r\n    map.clear();\r\n  }\r\n  destroyGlobalListeners(set, async) {\r\n    set.forEach((listener) => this.eventSvc.removeGlobalListener(listener, async));\r\n    set.clear();\r\n  }\r\n  destroy() {\r\n    super.destroy();\r\n    this.destroyEventListeners(this.syncListeners, false);\r\n    this.destroyEventListeners(this.asyncListeners, true);\r\n    this.destroyGlobalListeners(this.syncGlobalListeners, false);\r\n    const { globalListenerPairs, eventSvc } = this;\r\n    globalListenerPairs.forEach(({ syncListener, asyncListener }) => {\r\n      eventSvc.removeGlobalListener(syncListener, false);\r\n      eventSvc.removeGlobalListener(asyncListener, true);\r\n    });\r\n    globalListenerPairs.clear();\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/misc/apiEvents/eventApi.ts\r\nfunction addEventListener(beans, eventType, listener) {\r\n  beans.apiEventSvc?.addEventListener(eventType, listener);\r\n}\r\nfunction removeEventListener(beans, eventType, listener) {\r\n  beans.apiEventSvc?.removeEventListener(eventType, listener);\r\n}\r\nfunction addGlobalListener(beans, listener) {\r\n  beans.apiEventSvc?.addGlobalListener(listener);\r\n}\r\nfunction removeGlobalListener(beans, listener) {\r\n  beans.apiEventSvc?.removeGlobalListener(listener);\r\n}\r\n\r\n// packages/ag-grid-community/src/misc/apiEvents/apiEventModule.ts\r\nvar EventApiModule = {\r\n  moduleName: \"EventApi\",\r\n  version: VERSION,\r\n  apiFunctions: {\r\n    addEventListener,\r\n    addGlobalListener,\r\n    removeEventListener,\r\n    removeGlobalListener\r\n  },\r\n  beans: [ApiEventService]\r\n};\r\n\r\n// packages/ag-grid-community/src/misc/locale/localeModule.ts\r\nvar LocaleModule = {\r\n  moduleName: \"Locale\",\r\n  version: VERSION,\r\n  beans: [LocaleService]\r\n};\r\n\r\n// packages/ag-grid-community/src/rendering/row/rowAutoHeightService.ts\r\nvar RowAutoHeightService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"rowAutoHeight\";\r\n    this.wasEverActive = false;\r\n    this._debouncedCalculateRowHeights = _debounce(this, this.calculateRowHeights.bind(this), 1);\r\n  }\r\n  /**\r\n   * If row height has been active, request a refresh of the row heights.\r\n   */\r\n  requestCheckAutoHeight() {\r\n    if (!this.wasEverActive) {\r\n      return;\r\n    }\r\n    this._debouncedCalculateRowHeights();\r\n  }\r\n  calculateRowHeights() {\r\n    const { visibleCols, rowModel, rowSpanSvc, pinnedRowModel } = this.beans;\r\n    const displayedAutoHeightCols = visibleCols.autoHeightCols;\r\n    let anyNodeChanged = false;\r\n    const updateDisplayedRowHeights = (row) => {\r\n      const autoHeights = row.__autoHeights;\r\n      let newRowHeight = _getRowHeightForNode(this.beans, row).height;\r\n      for (const col of displayedAutoHeightCols) {\r\n        let cellHeight = autoHeights?.[col.getColId()];\r\n        const spannedCell = rowSpanSvc?.getCellSpan(col, row);\r\n        if (spannedCell) {\r\n          if (spannedCell.getLastNode() !== row) {\r\n            continue;\r\n          }\r\n          cellHeight = rowSpanSvc?.getCellSpan(col, row)?.getLastNodeAutoHeight();\r\n          if (!cellHeight) {\r\n            return;\r\n          }\r\n        }\r\n        if (cellHeight == null) {\r\n          if (this.colSpanSkipCell(col, row)) {\r\n            continue;\r\n          }\r\n          return;\r\n        }\r\n        newRowHeight = Math.max(cellHeight, newRowHeight);\r\n      }\r\n      if (newRowHeight !== row.rowHeight) {\r\n        row.setRowHeight(newRowHeight);\r\n        anyNodeChanged = true;\r\n      }\r\n    };\r\n    pinnedRowModel?.forEachPinnedRow?.(\"top\", updateDisplayedRowHeights);\r\n    pinnedRowModel?.forEachPinnedRow?.(\"bottom\", updateDisplayedRowHeights);\r\n    rowModel.forEachDisplayedNode?.(updateDisplayedRowHeights);\r\n    if (anyNodeChanged) {\r\n      rowModel.onRowHeightChanged?.();\r\n    }\r\n  }\r\n  /**\r\n   * Set the cell height into the row node, and request a refresh of the row heights if there's been a change.\r\n   * @param rowNode the node to set the auto height on\r\n   * @param cellHeight the height to set, undefined if the cell has just been destroyed\r\n   * @param column the column of the cell\r\n   */\r\n  setRowAutoHeight(rowNode, cellHeight, column) {\r\n    rowNode.__autoHeights ?? (rowNode.__autoHeights = {});\r\n    if (cellHeight == void 0) {\r\n      delete rowNode.__autoHeights[column.getId()];\r\n      return;\r\n    }\r\n    const previousCellHeight = rowNode.__autoHeights[column.getId()];\r\n    rowNode.__autoHeights[column.getId()] = cellHeight;\r\n    if (previousCellHeight !== cellHeight) {\r\n      this.requestCheckAutoHeight();\r\n    }\r\n  }\r\n  /**\r\n   * If using col span, then cells which have been spanned over do not need an auto height value\r\n   * @param col the column of the cell\r\n   * @param node the node of the cell\r\n   * @returns whether the row needs auto height value for that column\r\n   */\r\n  colSpanSkipCell(col, node) {\r\n    const { colModel, colViewport, visibleCols } = this.beans;\r\n    if (!colModel.colSpanActive) {\r\n      return false;\r\n    }\r\n    let activeColsForRow = [];\r\n    switch (col.getPinned()) {\r\n      case \"left\":\r\n        activeColsForRow = visibleCols.getLeftColsForRow(node);\r\n        break;\r\n      case \"right\":\r\n        activeColsForRow = visibleCols.getRightColsForRow(node);\r\n        break;\r\n      case null:\r\n        activeColsForRow = colViewport.getColsWithinViewport(node);\r\n        break;\r\n    }\r\n    return !activeColsForRow.includes(col);\r\n  }\r\n  /**\r\n   * If required, sets up observers to continuously measure changes in the cell height.\r\n   * @param cellCtrl the cellCtrl of the cell\r\n   * @param eCellWrapper the HTMLElement to track the height of\r\n   * @param compBean the component bean to add the destroy/cleanup function to\r\n   * @returns whether or not auto height has been set up on this cell\r\n   */\r\n  setupCellAutoHeight(cellCtrl, eCellWrapper, compBean) {\r\n    if (!cellCtrl.column.isAutoHeight() || !eCellWrapper) {\r\n      return false;\r\n    }\r\n    this.wasEverActive = true;\r\n    const eParentCell = eCellWrapper.parentElement;\r\n    const { rowNode, column } = cellCtrl;\r\n    const beans = this.beans;\r\n    const measureHeight = (timesCalled) => {\r\n      if (this.beans.editSvc?.isEditing(cellCtrl)) {\r\n        return;\r\n      }\r\n      if (!cellCtrl.isAlive() || !compBean.isAlive()) {\r\n        return;\r\n      }\r\n      const { paddingTop, paddingBottom, borderBottomWidth, borderTopWidth } = _getElementSize(eParentCell);\r\n      const extraHeight = paddingTop + paddingBottom + borderBottomWidth + borderTopWidth;\r\n      const wrapperHeight = eCellWrapper.offsetHeight;\r\n      const autoHeight = wrapperHeight + extraHeight;\r\n      if (timesCalled < 5) {\r\n        const doc = _getDocument(beans);\r\n        const notYetInDom = !doc || !doc.contains(eCellWrapper);\r\n        const possiblyNoContentYet = autoHeight == 0;\r\n        if (notYetInDom || possiblyNoContentYet) {\r\n          window.setTimeout(() => measureHeight(timesCalled + 1), 0);\r\n          return;\r\n        }\r\n      }\r\n      this.setRowAutoHeight(rowNode, autoHeight, column);\r\n    };\r\n    const listener = () => measureHeight(0);\r\n    listener();\r\n    const destroyResizeObserver = _observeResize(beans, eCellWrapper, listener);\r\n    compBean.addDestroyFunc(() => {\r\n      destroyResizeObserver();\r\n      this.setRowAutoHeight(rowNode, void 0, column);\r\n    });\r\n    return true;\r\n  }\r\n  setAutoHeightActive(cols) {\r\n    this.active = cols.list.some((col) => col.isVisible() && col.isAutoHeight());\r\n  }\r\n  /**\r\n   * Determines if the row auto height service has cells to grow.\r\n   * @returns true if all of the rendered rows are at least as tall as their rendered cells.\r\n   */\r\n  areRowsMeasured() {\r\n    if (!this.active) {\r\n      return true;\r\n    }\r\n    const rowCtrls = this.beans.rowRenderer.getAllRowCtrls();\r\n    let renderedAutoHeightCols = null;\r\n    for (const { rowNode } of rowCtrls) {\r\n      if (!renderedAutoHeightCols || this.beans.colModel.colSpanActive) {\r\n        const renderedCols = this.beans.colViewport.getColsWithinViewport(rowNode);\r\n        renderedAutoHeightCols = renderedCols.filter((col) => col.isAutoHeight());\r\n      }\r\n      if (renderedAutoHeightCols.length === 0) {\r\n        continue;\r\n      }\r\n      if (!rowNode.__autoHeights) {\r\n        return false;\r\n      }\r\n      for (const col of renderedAutoHeightCols) {\r\n        const cellHeight = rowNode.__autoHeights[col.getColId()];\r\n        if (!cellHeight || rowNode.rowHeight < cellHeight) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/rendering/row/rowAutoHeightModule.ts\r\nvar RowAutoHeightModule = {\r\n  moduleName: \"RowAutoHeight\",\r\n  version: VERSION,\r\n  beans: [RowAutoHeightService]\r\n};\r\n\r\n// packages/ag-grid-community/src/allCommunityModule.ts\r\nvar AllCommunityModule = {\r\n  moduleName: \"AllCommunity\",\r\n  version: VERSION,\r\n  dependsOn: [\r\n    ClientSideRowModelModule,\r\n    CsvExportModule,\r\n    InfiniteRowModelModule,\r\n    ValidationModule,\r\n    TextEditorModule,\r\n    NumberEditorModule,\r\n    DateEditorModule,\r\n    CheckboxEditorModule,\r\n    SelectEditorModule,\r\n    LargeTextEditorModule,\r\n    CustomEditorModule,\r\n    UndoRedoEditModule,\r\n    TextFilterModule,\r\n    NumberFilterModule,\r\n    DateFilterModule,\r\n    CustomFilterModule,\r\n    QuickFilterModule,\r\n    ExternalFilterModule,\r\n    GridStateModule,\r\n    AlignedGridsModule,\r\n    PaginationModule,\r\n    ColumnApiModule,\r\n    RowApiModule,\r\n    ScrollApiModule,\r\n    RenderApiModule,\r\n    ColumnAutoSizeModule,\r\n    RowDragModule,\r\n    PinnedRowModule,\r\n    RowSelectionModule,\r\n    ValueCacheModule,\r\n    CellStyleModule,\r\n    ColumnHoverModule,\r\n    RowStyleModule,\r\n    EventApiModule,\r\n    CellApiModule,\r\n    HighlightChangesModule,\r\n    TooltipModule,\r\n    LocaleModule,\r\n    RowAutoHeightModule,\r\n    DragAndDropModule,\r\n    ClientSideRowModelApiModule,\r\n    CellSpanModule\r\n  ]\r\n};\r\n\r\n// packages/ag-grid-community/src/testing/testIdUtils.ts\r\nfunction formatTestId(name, attributes = {}) {\r\n  const params = Object.keys(attributes).map((k) => {\r\n    const v = attributes[k];\r\n    return v != null ? `${k}=${v}` : null;\r\n  }).filter(Boolean).join(\";\");\r\n  return [name, params].filter((s) => s.length > 0).join(\":\");\r\n}\r\nvar agTestIdFor = {\r\n  grid(gridId) {\r\n    return formatTestId(\"ag-grid-root\", { gridId });\r\n  },\r\n  /** Headers */\r\n  headerGroupCell(colId) {\r\n    return formatTestId(\"ag-header-group-cell\", { colId });\r\n  },\r\n  headerCell(colId) {\r\n    return formatTestId(\"ag-header-cell\", { colId });\r\n  },\r\n  headerCheckbox(colId) {\r\n    return formatTestId(\"ag-header-selection-checkbox\", { colId });\r\n  },\r\n  headerFilterButton(colId) {\r\n    return formatTestId(\"ag-header-cell-filter-button\", { colId });\r\n  },\r\n  floatingFilterButton(colId) {\r\n    return formatTestId(\"ag-floating-filter-button\", { colId });\r\n  },\r\n  headerCellMenuButton(colId) {\r\n    return formatTestId(\"ag-header-cell-menu-button\", { colId });\r\n  },\r\n  headerResizeHandle(colId) {\r\n    return formatTestId(\"ag-header-cell-resize\", { colId });\r\n  },\r\n  /** Column Filters */\r\n  filterInstancePickerDisplay(spec) {\r\n    return formatTestId(\r\n      `ag-${spec.source}-picker-display`,\r\n      spec.source === \"filter-toolpanel\" ? { label: spec.colLabel } : { colId: spec.colId }\r\n    );\r\n  },\r\n  numberFilterInstanceInput(spec) {\r\n    return formatTestId(\r\n      `ag-${spec.source}-number-input`,\r\n      spec.source === \"filter-toolpanel\" ? { label: spec.colLabel } : { colId: spec.colId }\r\n    );\r\n  },\r\n  textFilterInstanceInput(spec) {\r\n    return formatTestId(\r\n      `ag-${spec.source}-text-input`,\r\n      spec.source === \"filter-toolpanel\" ? { label: spec.colLabel } : { colId: spec.colId }\r\n    );\r\n  },\r\n  dateFilterInstanceInput(spec) {\r\n    return formatTestId(\r\n      `ag-${spec.source}-date-input`,\r\n      spec.source === \"filter-toolpanel\" ? { label: spec.colLabel } : { colId: spec.colId }\r\n    );\r\n  },\r\n  setFilterInstanceMiniFilterInput(spec) {\r\n    return formatTestId(\r\n      `ag-${spec.source}-set-filter-mini-filter-input`,\r\n      spec.source === \"filter-toolpanel\" ? { label: spec.colLabel } : { colId: spec.colId }\r\n    );\r\n  },\r\n  setFilterInstanceItem(spec, itemLabel) {\r\n    return formatTestId(\r\n      `ag-${spec.source}-set-filter-item`,\r\n      spec.source === \"filter-toolpanel\" ? { colLabel: spec.colLabel, itemLabel } : { colId: spec.colId, itemLabel }\r\n    );\r\n  },\r\n  setFilterApplyPanelButton(spec, buttonLabel) {\r\n    return formatTestId(\r\n      `ag-${spec.source}-set-filter-apply-panel-button`,\r\n      spec.source === \"filter-toolpanel\" ? { colLabel: spec.colLabel, buttonLabel } : { colId: spec.colId, buttonLabel }\r\n    );\r\n  },\r\n  filterConditionRadioButton(spec, buttonLabel) {\r\n    return formatTestId(\r\n      `ag-${spec.source}-filter-condition-radio-button`,\r\n      spec.source === \"filter-toolpanel\" ? { colLabel: spec.colLabel, buttonLabel } : { colId: spec.colId, buttonLabel }\r\n    );\r\n  },\r\n  /** Advanced Filter */\r\n  advancedFilterInput() {\r\n    return formatTestId(\"ag-advanced-filter-input\");\r\n  },\r\n  advancedFilterButton(label) {\r\n    return formatTestId(\"ag-advanced-filter-button\", { label });\r\n  },\r\n  advancedFilterBuilderButton() {\r\n    return formatTestId(\"ag-advanced-filter-builder-button\");\r\n  },\r\n  advancedFilterPanelMaximiseButton() {\r\n    return formatTestId(\"ag-advanced-filter-builder-panel-maximise\");\r\n  },\r\n  advancedFilterPanelCloseButton() {\r\n    return formatTestId(\"ag-advanced-filter-builder-panel-close\");\r\n  },\r\n  advancedFilterPill(label) {\r\n    return formatTestId(\"ag-advanced-filter-builder-pill\", { label });\r\n  },\r\n  advancedFilterBuilderAddItemButton() {\r\n    return formatTestId(\"ag-advanced-filter-builder-add-item-button\");\r\n  },\r\n  /** Rows */\r\n  rowNode(rowId) {\r\n    return formatTestId(\"ag-row\", { [\"row-id\"]: rowId });\r\n  },\r\n  /** Cells */\r\n  cell(rowId, colId) {\r\n    return formatTestId(\"ag-cell\", { [\"row-id\"]: rowId, colId });\r\n  },\r\n  autoGroupCell(rowId) {\r\n    return agTestIdFor.cell(rowId, GROUP_AUTO_COLUMN_ID);\r\n  },\r\n  checkbox(rowId, colId) {\r\n    return formatTestId(\"ag-selection-checkbox\", { [\"row-id\"]: rowId, colId });\r\n  },\r\n  selectionColumnCheckbox(rowId) {\r\n    return agTestIdFor.checkbox(rowId, SELECTION_COLUMN_ID);\r\n  },\r\n  autoGroupColumnCheckbox(rowId) {\r\n    return agTestIdFor.checkbox(rowId, GROUP_AUTO_COLUMN_ID);\r\n  },\r\n  dragHandle(rowId, colId) {\r\n    return formatTestId(\"ag-drag-handle\", { [\"row-id\"]: rowId, colId });\r\n  },\r\n  groupContracted(rowId, colId) {\r\n    return formatTestId(\"ag-group-contracted\", { [\"row-id\"]: rowId, colId });\r\n  },\r\n  groupExpanded(rowId, colId) {\r\n    return formatTestId(\"ag-group-expanded\", { [\"row-id\"]: rowId, colId });\r\n  },\r\n  autoGroupContracted(rowId) {\r\n    return agTestIdFor.groupContracted(rowId, GROUP_AUTO_COLUMN_ID);\r\n  },\r\n  autoGroupExpanded(rowId) {\r\n    return agTestIdFor.groupExpanded(rowId, GROUP_AUTO_COLUMN_ID);\r\n  },\r\n  rowNumber(rowId) {\r\n    return agTestIdFor.cell(rowId, ROW_NUMBERS_COLUMN_ID);\r\n  },\r\n  /** Menu */\r\n  menu() {\r\n    return formatTestId(\"ag-menu\");\r\n  },\r\n  menuOption(option) {\r\n    return formatTestId(\"ag-menu-option\", { [\"option\"]: option });\r\n  },\r\n  /** SideBar */\r\n  sideBar() {\r\n    return formatTestId(\"ag-side-bar\");\r\n  },\r\n  sideBarButton(label) {\r\n    return formatTestId(\"ag-side-button\", { label });\r\n  },\r\n  /** Column Tool Panel */\r\n  columnToolPanel() {\r\n    return formatTestId(\"ag-column-panel\");\r\n  },\r\n  pivotModeSelect() {\r\n    return formatTestId(\"ag-pivot-mode-select\");\r\n  },\r\n  columnPanelSelectHeaderCheckbox() {\r\n    return formatTestId(\"ag-column-panel-select-header-checkbox\");\r\n  },\r\n  columnPanelSelectHeaderFilter() {\r\n    return formatTestId(\"ag-column-panel-select-header-filter\");\r\n  },\r\n  columnSelectListItemGroupClosedIcon(label) {\r\n    return formatTestId(\"ag-column-select-list-item-group-closed-icon\", { label });\r\n  },\r\n  columnSelectListItemCheckbox(label) {\r\n    return formatTestId(\"ag-column-select-list-item-checkbox\", { label });\r\n  },\r\n  columnSelectListItemDragHandle(label) {\r\n    return formatTestId(\"ag-column-select-list-item-drag-handle\", { label });\r\n  },\r\n  columnDropCellDragHandle(source, area, label) {\r\n    return formatTestId(\"ag-column-drop-cell-drag-handle\", { source, area, label });\r\n  },\r\n  columnDropCellCancelButton(source, area, label) {\r\n    return formatTestId(\"ag-column-drop-cell-cancel\", { source, area, label });\r\n  },\r\n  columnDropArea(source, name) {\r\n    return formatTestId(\"ag-column-drop-area\", { source, name });\r\n  },\r\n  /** Filter Tool Panel (New) */\r\n  filterToolPanel() {\r\n    return formatTestId(\"ag-filter-panel\");\r\n  },\r\n  filterToolPanelAddFilterButton() {\r\n    return formatTestId(\"ag-filter-panel-add-filter-button\");\r\n  },\r\n  filterToolPanelFilterTypeSelector(colLabel) {\r\n    return formatTestId(\"ag-filter-panel-filter-type-selector\", { colLabel });\r\n  },\r\n  /** Filter Tool Panel (Old) */\r\n  filterToolPanelSearchInput() {\r\n    return formatTestId(\"ag-filter-toolpanel-search-input\");\r\n  },\r\n  filterToolPanelGroup(title) {\r\n    return formatTestId(\"ag-filter-toolpanel-group\", { title });\r\n  },\r\n  filterToolPanelGroupCollapsedIcon(title) {\r\n    return formatTestId(\"ag-filter-toolpanel-group-collapsed-icon\", { title });\r\n  },\r\n  /** Status Bar */\r\n  statusBarTotalAndFilteredRowCount() {\r\n    return formatTestId(\"ag-status-bar-total-and-filtered-row-count\");\r\n  },\r\n  statusBarTotalRowCount() {\r\n    return formatTestId(\"ag-status-bar-total-row-count\");\r\n  },\r\n  statusBarFilteredRowCount() {\r\n    return formatTestId(\"ag-status-bar-filtered-row-count\");\r\n  },\r\n  statusBarSelectedRowCount() {\r\n    return formatTestId(\"ag-status-bar-selected-row-count\");\r\n  },\r\n  statusBarAggregations() {\r\n    return formatTestId(\"ag-status-bar-aggregations\");\r\n  },\r\n  /** Pagination */\r\n  paginationPanelSizePickerDisplay(value) {\r\n    return formatTestId(\"ag-pagination-page-size-picker-field-display\", { value });\r\n  },\r\n  paginationPanelFirstRowOnPage(value) {\r\n    return formatTestId(\"ag-paging-row-summary-panel-first-row-on-page\", { value });\r\n  },\r\n  paginationPanelLastRowOnPage(value) {\r\n    return formatTestId(\"ag-paging-row-summary-panel-last-row-on-page\", { value });\r\n  },\r\n  paginationPanelRecordCount(value) {\r\n    return formatTestId(\"ag-paging-row-summary-panel-record-count\", { value });\r\n  },\r\n  paginationSummaryPanelButton(label) {\r\n    return formatTestId(\"ag-paging-page-summary-panel-btn\", { label });\r\n  },\r\n  paginationSummaryPanelCurrentPage(value) {\r\n    return formatTestId(\"ag-paging-page-summary-panel-current-page\", { value });\r\n  },\r\n  paginationSummaryPanelTotalPage(value) {\r\n    return formatTestId(\"ag-paging-page-summary-panel-total-page\", { value });\r\n  },\r\n  /** Fill Handle */\r\n  fillHandle() {\r\n    return formatTestId(\"ag-fill-handle\");\r\n  },\r\n  /** Column Chooser */\r\n  columnChooserCloseButton() {\r\n    return formatTestId(\"ag-column-chooser-close-button\");\r\n  },\r\n  columnChooserSearchBarCheckbox() {\r\n    return formatTestId(\"ag-column-chooser-header-checkbox\");\r\n  },\r\n  columnChooserSearchBarFilter() {\r\n    return formatTestId(\"ag-column-chooser-searchbar-filter\");\r\n  },\r\n  columnChooserListItemGroupClosedIcon(label) {\r\n    return formatTestId(\"ag-column-chooser-list-item-group-closed-icon\", { label });\r\n  },\r\n  columnChooserListItemCheckbox(label) {\r\n    return formatTestId(\"ag-column-chooser-list-item-checkbox\", { label });\r\n  },\r\n  columnChooserListItemDragHandle(label) {\r\n    return formatTestId(\"ag-column-chooser-list-item-drag-handle\", { label });\r\n  },\r\n  /** Overlay */\r\n  overlay() {\r\n    return formatTestId(\"ag-overlay\");\r\n  }\r\n};\r\nvar wrapAgTestIdFor = (fn) => {\r\n  const locators = {};\r\n  const keys = Object.keys(agTestIdFor);\r\n  keys.forEach((k) => {\r\n    locators[k] = (...args) => {\r\n      return fn(agTestIdFor[k](...args));\r\n    };\r\n  });\r\n  return locators;\r\n};\r\n\r\n// packages/ag-grid-community/src/testing/testIdService.ts\r\nvar TEST_ID_ATTR = \"data-testid\";\r\nfunction setTestId(element, testId) {\r\n  element?.setAttribute(TEST_ID_ATTR, testId);\r\n}\r\nfunction setTestIdAttribute(attr) {\r\n  TEST_ID_ATTR = attr;\r\n}\r\nvar TestIdService = class extends BeanStub {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.beanName = \"testIdSvc\";\r\n  }\r\n  postConstruct() {\r\n    const setup = _debounce(this, () => this.setupAllTestIds(), 0);\r\n    this.addManagedEventListeners({\r\n      firstDataRendered: setup,\r\n      displayedRowsChanged: setup,\r\n      displayedColumnsChanged: setup,\r\n      displayedColumnsWidthChanged: setup,\r\n      columnMenuVisibleChanged: setup,\r\n      contextMenuVisibleChanged: setup,\r\n      advancedFilterBuilderVisibleChanged: setup,\r\n      fieldPickerValueSelected: setup,\r\n      modelUpdated: setup,\r\n      sideBarUpdated: setup,\r\n      pinnedHeightChanged: setup,\r\n      gridReady: setup,\r\n      overlayExclusiveChanged: setup,\r\n      rowGroupOpened: setup,\r\n      scrollVisibilityChanged: setup,\r\n      gridSizeChanged: setup,\r\n      filterOpened: setup,\r\n      filterChanged: setup,\r\n      cellSelectionChanged: setup\r\n    });\r\n  }\r\n  setupAllTestIds() {\r\n    const root = _getRootNode(this.beans);\r\n    const gridId = getGridId(this.beans);\r\n    const gridWrapper = root.querySelector(`[grid-id=\"${gridId}\"]`);\r\n    setTestId(gridWrapper, agTestIdFor.grid(gridId));\r\n    root.querySelectorAll(\".ag-header-group-cell\").forEach((groupCell) => {\r\n      setTestId(groupCell, agTestIdFor.headerGroupCell(groupCell.getAttribute(\"col-id\")));\r\n    });\r\n    root.querySelectorAll(\".ag-header-cell\").forEach((cell) => {\r\n      const colId = cell.getAttribute(\"col-id\");\r\n      setTestId(cell, agTestIdFor.headerCell(colId));\r\n      setTestId(cell.querySelector(\".ag-header-cell-filter-button\"), agTestIdFor.headerFilterButton(colId));\r\n      setTestId(cell.querySelector(\".ag-header-cell-menu-button\"), agTestIdFor.headerCellMenuButton(colId));\r\n      setTestId(cell.querySelector(\".ag-header-cell-resize\"), agTestIdFor.headerResizeHandle(colId));\r\n      setTestId(cell.querySelector(\".ag-checkbox input[type=checkbox]\"), agTestIdFor.headerCheckbox(colId));\r\n      setTestId(cell.querySelector(\".ag-floating-filter-button button\"), agTestIdFor.floatingFilterButton(colId));\r\n      this.setupFilterInstance(cell.querySelector(\".ag-floating-filter-body\"), {\r\n        source: \"floating-filter\",\r\n        colId\r\n      });\r\n    });\r\n    const filterMenu = root.querySelector(\".ag-filter-menu\");\r\n    this.setupFilterInstance(filterMenu, { source: \"column-filter\" });\r\n    setTestId(root.querySelector(\".ag-advanced-filter input[type=text]\"), agTestIdFor.advancedFilterInput());\r\n    root.querySelectorAll(\".ag-advanced-filter-buttons button\").forEach((button) => {\r\n      setTestId(button, agTestIdFor.advancedFilterButton(button.textContent));\r\n    });\r\n    setTestId(\r\n      root.querySelector(\"button.ag-advanced-filter-builder-button\"),\r\n      agTestIdFor.advancedFilterBuilderButton()\r\n    );\r\n    root.querySelectorAll('.ag-panel[aria-label=\"Advanced Filter\"] .ag-panel-title-bar-button').forEach(\r\n      (button, i) => {\r\n        setTestId(\r\n          button,\r\n          i === 0 ? agTestIdFor.advancedFilterPanelMaximiseButton() : agTestIdFor.advancedFilterPanelCloseButton()\r\n        );\r\n      }\r\n    );\r\n    root.querySelectorAll('.ag-panel[aria-lable=\"Advanced Filter\"] .ag-advanced-filter-builder-pill').forEach(\r\n      (pill) => {\r\n        setTestId(\r\n          pill,\r\n          agTestIdFor.advancedFilterPill(pill.querySelector(\".ag-picker-field-display\")?.textContent)\r\n        );\r\n      }\r\n    );\r\n    setTestId(\r\n      root.querySelector('.ag-panel[aria-label=\"Advanced Filter\"] .ag-advanced-filter-builder-item-button'),\r\n      agTestIdFor.advancedFilterBuilderAddItemButton()\r\n    );\r\n    root.querySelectorAll(\".ag-row\").forEach((row) => {\r\n      const rowId = row.getAttribute(\"row-id\");\r\n      setTestId(row, agTestIdFor.rowNode(rowId));\r\n      row.querySelectorAll(\".ag-cell\").forEach((cell) => {\r\n        const colId = cell.getAttribute(\"col-id\");\r\n        setTestId(cell, agTestIdFor.cell(rowId, colId));\r\n        setTestId(\r\n          cell.querySelector(\".ag-selection-checkbox input[type=checkbox]\"),\r\n          agTestIdFor.checkbox(rowId, colId)\r\n        );\r\n        setTestId(cell.querySelector(\".ag-drag-handle\"), agTestIdFor.dragHandle(rowId, colId));\r\n        setTestId(cell.querySelector(\".ag-group-contracted\"), agTestIdFor.groupContracted(rowId, colId));\r\n        setTestId(cell.querySelector(\".ag-group-expanded\"), agTestIdFor.groupExpanded(rowId, colId));\r\n      });\r\n    });\r\n    root.querySelectorAll(\".ag-menu-list\").forEach((menu) => {\r\n      setTestId(menu, agTestIdFor.menu());\r\n      menu.querySelectorAll(\".ag-menu-option\").forEach((option) => {\r\n        setTestId(option, agTestIdFor.menuOption(option.querySelector(\".ag-menu-option-text\")?.textContent));\r\n      });\r\n    });\r\n    root.querySelectorAll(\".ag-side-bar\").forEach((sideBar) => {\r\n      setTestId(sideBar, agTestIdFor.sideBar());\r\n      sideBar.querySelectorAll(\".ag-side-button button\").forEach((button) => {\r\n        setTestId(\r\n          button,\r\n          agTestIdFor.sideBarButton(button.querySelector(\".ag-side-button-label\")?.textContent)\r\n        );\r\n      });\r\n      sideBar.querySelectorAll(\".ag-column-panel\").forEach((panel) => {\r\n        setTestId(panel, agTestIdFor.columnToolPanel());\r\n        setTestId(\r\n          panel.querySelector(\".ag-pivot-mode-select input[type=checkbox]\"),\r\n          agTestIdFor.pivotModeSelect()\r\n        );\r\n        setTestId(\r\n          panel.querySelector(\".ag-column-select-header-checkbox input[type=checkbox]\"),\r\n          agTestIdFor.columnPanelSelectHeaderCheckbox()\r\n        );\r\n        setTestId(\r\n          panel.querySelector(\".ag-column-select-header-filter-wrapper input[type=text]\"),\r\n          agTestIdFor.columnPanelSelectHeaderFilter()\r\n        );\r\n        panel.querySelectorAll(\".ag-column-select-list\").forEach((list) => {\r\n          list.querySelectorAll(\".ag-column-select-virtual-list-item\").forEach((item) => {\r\n            const label = item.getAttribute(\"aria-label\");\r\n            setTestId(\r\n              item.querySelector(\".ag-column-group-closed-icon\"),\r\n              agTestIdFor.columnSelectListItemGroupClosedIcon(label)\r\n            );\r\n            setTestId(\r\n              item.querySelector(\".ag-column-select-checkbox input[type=checkbox]\"),\r\n              agTestIdFor.columnSelectListItemCheckbox(label)\r\n            );\r\n            setTestId(\r\n              item.querySelector(\".ag-drag-handle\"),\r\n              agTestIdFor.columnSelectListItemDragHandle(label)\r\n            );\r\n          });\r\n        });\r\n        this.setupColumnDropArea(panel, \"toolbar\");\r\n      });\r\n      sideBar.querySelectorAll(\".ag-filter-panel\").forEach((panel) => {\r\n        setTestId(panel, agTestIdFor.filterToolPanel());\r\n        setTestId(\r\n          panel.querySelector(\"button.ag-filter-add-button\"),\r\n          agTestIdFor.filterToolPanelAddFilterButton()\r\n        );\r\n        panel.querySelectorAll(\".ag-filter-card\").forEach((filterCard) => {\r\n          const colLabel = filterCard.querySelector(\".ag-filter-card-title\")?.textContent;\r\n          const typeSelector = filterCard.querySelector(\".ag-filter-type-select\");\r\n          setTestId(typeSelector, agTestIdFor.filterToolPanelFilterTypeSelector(colLabel));\r\n          filterCard.querySelectorAll(\".ag-filter\").forEach(\r\n            (filter) => this.setupFilterInstance(filter, { source: \"filter-toolpanel\", colLabel })\r\n          );\r\n        });\r\n      });\r\n      sideBar.querySelectorAll(\".ag-filter-toolpanel\").forEach((panel) => {\r\n        setTestId(\r\n          panel.querySelector(\".ag-filter-toolpanel-search-input input[type=text]\"),\r\n          agTestIdFor.filterToolPanelSearchInput()\r\n        );\r\n        panel.querySelectorAll(\".ag-filter-toolpanel-group\").forEach((group) => {\r\n          const title = group.querySelector(\".ag-filter-toolpanel-group-title\")?.textContent;\r\n          setTestId(group, agTestIdFor.filterToolPanelGroup(title));\r\n          setTestId(\r\n            group.querySelector(\".ag-filter-toolpanel-group-title-bar-icon .ag-icon-tree-closed\"),\r\n            agTestIdFor.filterToolPanelGroupCollapsedIcon(title)\r\n          );\r\n          const filterRoot = group.querySelector(\".ag-filter-toolpanel-instance-filter\");\r\n          if (filterRoot) {\r\n            this.setupFilterInstance(filterRoot, { source: \"filter-toolpanel\", colLabel: title });\r\n          }\r\n        });\r\n      });\r\n    });\r\n    setTestId(\r\n      root.querySelector(\".ag-status-bar .ag-status-panel-total-and-filtered-row-count\"),\r\n      agTestIdFor.statusBarTotalAndFilteredRowCount()\r\n    );\r\n    setTestId(\r\n      root.querySelector(\".ag-status-bar .ag-status-panel-total-row-count\"),\r\n      agTestIdFor.statusBarTotalRowCount()\r\n    );\r\n    setTestId(\r\n      root.querySelector(\".ag-status-bar .ag-status-panel-filtered-row-count\"),\r\n      agTestIdFor.statusBarFilteredRowCount()\r\n    );\r\n    setTestId(\r\n      root.querySelector(\".ag-status-bar .ag-status-panel-selected-row-count\"),\r\n      agTestIdFor.statusBarSelectedRowCount()\r\n    );\r\n    setTestId(\r\n      root.querySelector(\".ag-status-bar .ag-status-panel-filtered-row-count\"),\r\n      agTestIdFor.statusBarAggregations()\r\n    );\r\n    root.querySelectorAll(\".ag-paging-panel\").forEach((pagingPanel) => {\r\n      setTestId(\r\n        pagingPanel.querySelector(\".ag-paging-page-size .ag-picker-field-display\"),\r\n        agTestIdFor.paginationPanelSizePickerDisplay(\r\n          pagingPanel.querySelector(\".ag-paging-page-size .ag-picker-field-display\")?.textContent\r\n        )\r\n      );\r\n      pagingPanel.querySelectorAll(\".ag-paging-row-summary-panel-number\").forEach((panelNumber) => {\r\n        const dataRef = panelNumber.getAttribute(\"data-ref\");\r\n        switch (dataRef) {\r\n          case \"lbFirstRowOnPage\":\r\n            setTestId(panelNumber, agTestIdFor.paginationPanelFirstRowOnPage(panelNumber.textContent));\r\n            break;\r\n          case \"lbLastRowOnPage\":\r\n            setTestId(panelNumber, agTestIdFor.paginationPanelLastRowOnPage(panelNumber.textContent));\r\n            break;\r\n          case \"lbRecordCount\":\r\n            setTestId(panelNumber, agTestIdFor.paginationPanelRecordCount(panelNumber.textContent));\r\n            break;\r\n        }\r\n      });\r\n      pagingPanel.querySelectorAll(\".ag-paging-page-summary-panel .ag-button\").forEach((pagingButton) => {\r\n        setTestId(\r\n          pagingButton,\r\n          agTestIdFor.paginationSummaryPanelButton(pagingButton.getAttribute(\"aria-label\")?.toLowerCase())\r\n        );\r\n      });\r\n      pagingPanel.querySelectorAll(\".ag-paging-page-summary-panel .ag-paging-number\").forEach((pagingNumber) => {\r\n        const dataRef = pagingNumber.getAttribute(\"data-ref\");\r\n        switch (dataRef) {\r\n          case \"lbCurrent\":\r\n            setTestId(\r\n              pagingNumber,\r\n              agTestIdFor.paginationSummaryPanelCurrentPage(pagingNumber.textContent)\r\n            );\r\n            break;\r\n          case \"lbTotal\":\r\n            setTestId(pagingNumber, agTestIdFor.paginationSummaryPanelTotalPage(pagingNumber.textContent));\r\n            break;\r\n        }\r\n      });\r\n    });\r\n    setTestId(root.querySelector(\".ag-fill-handle\"), agTestIdFor.fillHandle());\r\n    root.querySelectorAll('.ag-panel[aria-label=\"Choose Columns\"]').forEach((panel) => {\r\n      setTestId(panel.querySelector(\".ag-panel-title-bar-button-icon\"), agTestIdFor.columnChooserCloseButton());\r\n      setTestId(\r\n        panel.querySelector('.ag-column-select-header-checkbox input[type=\"checkbox\"]'),\r\n        agTestIdFor.columnChooserSearchBarCheckbox()\r\n      );\r\n      setTestId(\r\n        panel.querySelector('.ag-column-select-header-filter-wrapper input[type=\"text\"]'),\r\n        agTestIdFor.columnChooserSearchBarFilter()\r\n      );\r\n      panel.querySelectorAll(\".ag-column-select-list\").forEach((list) => {\r\n        list.querySelectorAll(\".ag-column-select-virtual-list-item\").forEach((item) => {\r\n          const label = item.getAttribute(\"aria-label\");\r\n          setTestId(\r\n            item.querySelector(\".ag-column-group-closed-icon\"),\r\n            agTestIdFor.columnChooserListItemGroupClosedIcon(label)\r\n          );\r\n          setTestId(\r\n            item.querySelector(\".ag-column-select-checkbox input[type=checkbox]\"),\r\n            agTestIdFor.columnChooserListItemCheckbox(label)\r\n          );\r\n          setTestId(\r\n            item.querySelector(\".ag-drag-handle\"),\r\n            agTestIdFor.columnChooserListItemDragHandle(label)\r\n          );\r\n        });\r\n      });\r\n    });\r\n    setTestId(root.querySelector(\".ag-overlay-wrapper\"), agTestIdFor.overlay());\r\n    this.setupColumnDropArea(root, \"panel\");\r\n  }\r\n  setupFilterInstance(filterRoot, spec) {\r\n    if (!filterRoot) {\r\n      return;\r\n    }\r\n    filterRoot.querySelectorAll(\".ag-filter-select .ag-picker-field-display\").forEach((fieldDisplay) => {\r\n      setTestId(fieldDisplay, agTestIdFor.filterInstancePickerDisplay(spec));\r\n    });\r\n    const numberInput = filterRoot.querySelector('.ag-filter-body input[type=\"number\"]');\r\n    setTestId(numberInput, agTestIdFor.numberFilterInstanceInput(spec));\r\n    const textInput = filterRoot.querySelector('.ag-filter-body input[type=\"text\"]');\r\n    setTestId(textInput, agTestIdFor.textFilterInstanceInput(spec));\r\n    const dateInput = filterRoot.querySelector('.ag-filter-body input[type=\"date\"]');\r\n    setTestId(dateInput, agTestIdFor.dateFilterInstanceInput(spec));\r\n    const setMiniFilterInput = filterRoot.querySelector('.ag-mini-filter input[type=\"text\"]');\r\n    setTestId(setMiniFilterInput, agTestIdFor.setFilterInstanceMiniFilterInput(spec));\r\n    filterRoot.querySelectorAll(\".ag-set-filter-list .ag-set-filter-item\").forEach((item) => {\r\n      const label = item.querySelector(\".ag-checkbox-label\")?.textContent;\r\n      const checkbox = item.querySelector('input[type=\"checkbox\"]');\r\n      setTestId(checkbox, agTestIdFor.setFilterInstanceItem(spec, label));\r\n    });\r\n    filterRoot.querySelectorAll(\".ag-filter-apply-panel button\").forEach((button) => {\r\n      setTestId(button, agTestIdFor.setFilterApplyPanelButton(spec, button.textContent));\r\n    });\r\n    filterRoot.querySelectorAll(\".ag-filter-condition .ag-radio-button\").forEach((radioButton) => {\r\n      const label = radioButton.querySelector(\".ag-radio-button-label\")?.textContent;\r\n      setTestId(\r\n        radioButton.querySelector(\"input[type=radio]\"),\r\n        agTestIdFor.filterConditionRadioButton(spec, label)\r\n      );\r\n    });\r\n  }\r\n  setupColumnDropArea(root, source) {\r\n    root.querySelectorAll(\".ag-column-drop\").forEach((columnDrop) => {\r\n      const dropAreaName = columnDrop.querySelector(\".ag-column-drop-list\")?.getAttribute(\"aria-label\");\r\n      setTestId(\r\n        columnDrop.querySelector(\".ag-column-drop-empty-message\"),\r\n        agTestIdFor.columnDropArea(source, dropAreaName)\r\n      );\r\n      columnDrop.querySelectorAll(\".ag-column-drop-cell\").forEach((columnDropCell) => {\r\n        const label = columnDropCell.querySelector(\".ag-column-drop-cell-text\")?.textContent;\r\n        setTestId(\r\n          columnDropCell.querySelector(\".ag-drag-handle\"),\r\n          agTestIdFor.columnDropCellDragHandle(source, dropAreaName, label)\r\n        );\r\n        setTestId(\r\n          columnDropCell.querySelector(\".ag-column-drop-cell-button .ag-icon-cancel\"),\r\n          agTestIdFor.columnDropCellCancelButton(source, dropAreaName, label)\r\n        );\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// packages/ag-grid-community/src/testing/testingModule.ts\r\nvar TestingModule = {\r\n  moduleName: \"Testing\",\r\n  version: VERSION,\r\n  beans: [TestIdService]\r\n};\r\nfunction setupAgTestIds({ testIdAttribute } = {}) {\r\n  if (testIdAttribute) {\r\n    setTestIdAttribute(testIdAttribute);\r\n  }\r\n  ModuleRegistry.registerModules([TestingModule]);\r\n}\r\nexport {\r\n  ALWAYS_SYNC_GLOBAL_EVENTS,\r\n  AbstractClientSideNodeManager,\r\n  AgAbstractCellEditor,\r\n  AgAbstractInputField,\r\n  AgAbstractLabel,\r\n  AgCheckbox,\r\n  AgCheckboxSelector,\r\n  AgColumn,\r\n  AgColumnGroup,\r\n  AgFilterButtonSelector,\r\n  AgInputDateField,\r\n  AgInputNumberField,\r\n  AgInputNumberFieldSelector,\r\n  AgInputTextArea,\r\n  AgInputTextField,\r\n  AgInputTextFieldSelector,\r\n  AgPickerField,\r\n  AgPromise,\r\n  AgProvidedColumnGroup,\r\n  AgRadioButton,\r\n  AgSelect,\r\n  AgSelectSelector,\r\n  AgToggleButton,\r\n  AgToggleButtonSelector,\r\n  AlignedGridsModule,\r\n  AllCommunityModule,\r\n  AutoScrollService,\r\n  BaseColsService,\r\n  BaseComponentWrapper,\r\n  BaseCreator,\r\n  BaseGridSerializingSession,\r\n  BaseSelectionService,\r\n  BeanStub,\r\n  CellApiModule,\r\n  CellRangeType,\r\n  CellSpanModule,\r\n  CellStyleModule,\r\n  ChangedPath,\r\n  CheckboxEditorModule,\r\n  ClientSideRowModelApiModule,\r\n  ClientSideRowModelModule,\r\n  ColumnApiModule,\r\n  ColumnAutoSizeModule,\r\n  ColumnHoverModule,\r\n  ColumnKeyCreator,\r\n  Component,\r\n  CssClassManager,\r\n  CsvExportModule,\r\n  CustomEditorModule,\r\n  CustomFilterModule,\r\n  DateEditorModule,\r\n  DateFilterModule,\r\n  Direction,\r\n  DragAndDropModule,\r\n  DragSourceType,\r\n  EventApiModule,\r\n  ExternalFilterModule,\r\n  FakeHScrollComp,\r\n  FakeVScrollComp,\r\n  FilterButtonComp,\r\n  FilterComp,\r\n  FilterWrapperComp,\r\n  GROUP_AUTO_COLUMN_ID,\r\n  GridBodyCtrl,\r\n  GridCoreCreator,\r\n  GridCtrl,\r\n  GridHeaderCtrl,\r\n  GridStateModule,\r\n  GroupInstanceIdCreator,\r\n  HeaderRowContainerCtrl,\r\n  HighlightChangesModule,\r\n  InfiniteRowModelModule,\r\n  KeyCode,\r\n  LargeTextEditorModule,\r\n  LocalEventService,\r\n  LocaleModule,\r\n  LocaleService,\r\n  ManagedFocusFeature,\r\n  ModuleRegistry,\r\n  NumberEditorModule,\r\n  NumberFilterModule,\r\n  PaginationModule,\r\n  PinnedRowModel,\r\n  PinnedRowModule,\r\n  PopupComponent,\r\n  PositionableFeature,\r\n  ProvidedFilter,\r\n  QuickFilterModule,\r\n  ROW_NUMBERS_COLUMN_ID,\r\n  RefPlaceholder,\r\n  RenderApiModule,\r\n  RowApiModule,\r\n  RowAutoHeightModule,\r\n  RowContainerCtrl,\r\n  RowDragModule,\r\n  RowNode,\r\n  RowSelectionModule,\r\n  RowStyleModule,\r\n  SELECTION_COLUMN_ID,\r\n  ScrollApiModule,\r\n  SelectEditorModule,\r\n  ServerSideTransactionResultStatus,\r\n  TabGuardClassNames,\r\n  TabGuardComp,\r\n  TabGuardCtrl,\r\n  TabGuardFeature,\r\n  TextEditorModule,\r\n  TextFilterModule,\r\n  TooltipFeature,\r\n  TooltipModule,\r\n  TouchListener,\r\n  UndoRedoEditModule,\r\n  ValidationModule,\r\n  ValueCacheModule,\r\n  VanillaFrameworkOverrides,\r\n  _BOOLEAN_MIXED_GRID_OPTIONS,\r\n  ColumnFilterModule as _ColumnFilterModule,\r\n  ColumnGroupModule as _ColumnGroupModule,\r\n  ColumnMoveModule as _ColumnMoveModule,\r\n  CsrmSsrmSharedApiModule as _CsrmSsrmSharedApiModule,\r\n  DragModule as _DragModule,\r\n  EditCoreModule as _EditCoreModule,\r\n  _EmptyArray,\r\n  EmptyBean as _EmptyBean,\r\n  FOCUS_MANAGED_CLASS as _FOCUS_MANAGED_CLASS,\r\n  FilterCoreModule as _FilterCoreModule,\r\n  FilterValueModule as _FilterValueModule,\r\n  _GET_ALL_EVENTS,\r\n  _GET_ALL_GRID_OPTIONS,\r\n  HeaderComp as _HeaderComp,\r\n  HorizontalResizeModule as _HorizontalResizeModule,\r\n  KeyboardNavigationModule as _KeyboardNavigationModule,\r\n  _PUBLIC_EVENTS,\r\n  _PUBLIC_EVENT_HANDLERS_MAP,\r\n  PopupModule as _PopupModule,\r\n  ROW_ID_PREFIX_BOTTOM_PINNED as _ROW_ID_PREFIX_BOTTOM_PINNED,\r\n  ROW_ID_PREFIX_ROW_GROUP as _ROW_ID_PREFIX_ROW_GROUP,\r\n  ROW_ID_PREFIX_TOP_PINNED as _ROW_ID_PREFIX_TOP_PINNED,\r\n  SharedDragAndDropModule as _SharedDragAndDropModule,\r\n  SharedExportModule as _SharedExportModule,\r\n  SharedMenuModule as _SharedMenuModule,\r\n  SharedRowSelectionModule as _SharedRowSelectionModule,\r\n  SortModule as _SortModule,\r\n  SsrmInfiniteSharedApiModule as _SsrmInfiniteSharedApiModule,\r\n  _addColumnDefaultAndTypes,\r\n  _addFocusableContainerListener,\r\n  _addGridCommonParams,\r\n  _anchorElementToMouseMoveEvent,\r\n  _applyColumnState,\r\n  _areCellsEqual,\r\n  _areColIdsEqual,\r\n  _areEqual,\r\n  _asThemeImpl,\r\n  _batchCall,\r\n  _canSkipShowingRowGroup,\r\n  _clearElement,\r\n  _columnsMatch,\r\n  _combineAttributesAndGridOptions,\r\n  _convertColumnEventSourceType,\r\n  _createCellId,\r\n  _createColumnTree,\r\n  _createColumnTreeWithIds,\r\n  _createElement,\r\n  _createGlobalRowEvent,\r\n  _createIcon,\r\n  _createIconNoSpan,\r\n  _createRowNodeSibling,\r\n  _debounce,\r\n  _defaultComparator,\r\n  _destroyColumnTree,\r\n  _doOnce,\r\n  _downloadFile,\r\n  _errMsg,\r\n  _error,\r\n  _escapeString,\r\n  _exists,\r\n  _findFocusableElements,\r\n  _findNextFocusableElement,\r\n  _findTabbableParent,\r\n  _flatten,\r\n  _focusGridInnerElement,\r\n  _focusInto,\r\n  _focusNextGridCoreContainer,\r\n  _formatNumberCommas,\r\n  _fuzzySuggestions,\r\n  _getAbsoluteHeight,\r\n  _getAbsoluteWidth,\r\n  _getActiveDomElement,\r\n  _getAriaPosInSet,\r\n  _getCallbackForEvent,\r\n  _getCellByPosition,\r\n  _getCellCtrlForEventTarget,\r\n  _getCellPositionForEvent,\r\n  _getCellRendererDetails,\r\n  _getCheckboxLocation,\r\n  _getCheckboxes,\r\n  _getClientSideRowModel,\r\n  _getColumnState,\r\n  _getColumnsFromTree,\r\n  _getDateParts,\r\n  _getDefaultFloatingFilterType,\r\n  _getDefaultSimpleFilter,\r\n  _getDocument,\r\n  _getEditorRendererDetails,\r\n  _getFillHandle,\r\n  _getFilterDetails,\r\n  _getFilterModel,\r\n  _getFilterParamsForDataType,\r\n  _getFloatingFilterCompDetails,\r\n  getFloatingFiltersHeight as _getFloatingFiltersHeight,\r\n  _getGlobalGridOption,\r\n  _getGrandTotalRow,\r\n  _getGridOption,\r\n  _getGridRegisteredModules,\r\n  _getGroupAggFiltering,\r\n  _getGroupSelection,\r\n  _getGroupSelectsDescendants,\r\n  _getGroupTotalRowCallback,\r\n  _getGroupingApproach,\r\n  _getHeaderCheckbox,\r\n  _getHeaderClassesFromColDef,\r\n  getHeaderRowCount as _getHeaderRowCount,\r\n  _getInnerCellRendererDetails,\r\n  _getInnerHeight,\r\n  _getInnerWidth,\r\n  _getIsRowSelectable,\r\n  _getLastRow,\r\n  _getLocaleTextFunc,\r\n  _getMaxConcurrentDatasourceRequests,\r\n  _getNormalisedMousePosition,\r\n  _getPageBody,\r\n  _getRootNode,\r\n  _getRowAbove,\r\n  _getRowBelow,\r\n  _getRowContainerClass,\r\n  _getRowContainerOptions,\r\n  _getRowHeightAsNumber,\r\n  _getRowHeightForNode,\r\n  _getRowIdCallback,\r\n  _getRowNode,\r\n  _getRowSelectionMode,\r\n  _getRowSpanContainerClass,\r\n  _getRowViewportClass,\r\n  _getServerSideRowModel,\r\n  _getShouldDisplayTooltip,\r\n  _getSuppressMultiRanges,\r\n  _getToolPanelClassesFromColDef,\r\n  _interpretAsRightClick,\r\n  _isAnimateRows,\r\n  _isCellSelectionEnabled,\r\n  _isClientSideRowModel,\r\n  _isColumnMenuAnchoringEnabled,\r\n  _isColumnsSortingCoupledToGroup,\r\n  _isDomLayout,\r\n  _isElementInEventPath,\r\n  _isElementOverflowingCallback,\r\n  _isEventFromPrintableCharacter,\r\n  _isFullWidthGroupRow,\r\n  _isGetRowHeightFunction,\r\n  _isGroupMultiAutoColumn,\r\n  _isGroupRowsSticky,\r\n  _isGroupUseEntireRow,\r\n  _isIOSUserAgent,\r\n  _isKeyboardMode,\r\n  _isLegacyMenuEnabled,\r\n  _isMultiRowSelection,\r\n  _isNodeOrElement,\r\n  _isNothingFocused,\r\n  _isPromise,\r\n  _isRowBefore,\r\n  _isRowSelection,\r\n  _isSameRow,\r\n  _isServerSideRowModel,\r\n  _isSetFilterByDefault,\r\n  _isShowTooltipWhenTruncated,\r\n  _isStopPropagationForAgGrid,\r\n  _isUseApplyButton,\r\n  _isUsingNewCellSelectionAPI,\r\n  _isUsingNewRowSelectionAPI,\r\n  _isVisible,\r\n  _jsonEquals,\r\n  _last,\r\n  _loadTemplate,\r\n  _makeNull,\r\n  _mergeDeep,\r\n  _missing,\r\n  _observeResize,\r\n  _parseDateTimeFromString,\r\n  _preInitErrMsg,\r\n  _preserveRangesWhile,\r\n  _processOnChange,\r\n  _radioCssClass,\r\n  _refreshFilterUi,\r\n  _refreshHandlerAndUi,\r\n  _registerModule,\r\n  _removeAriaExpanded,\r\n  _removeAriaSort,\r\n  _removeFromArray,\r\n  _removeFromParent,\r\n  _requestAnimationFrame,\r\n  _resetColumnState,\r\n  _selectAllCells,\r\n  _serialiseDate,\r\n  _setAriaActiveDescendant,\r\n  _setAriaChecked,\r\n  _setAriaColCount,\r\n  _setAriaColIndex,\r\n  _setAriaColSpan,\r\n  _setAriaControls,\r\n  _setAriaControlsAndLabel,\r\n  _setAriaDescribedBy,\r\n  _setAriaDisabled,\r\n  _setAriaExpanded,\r\n  _setAriaHasPopup,\r\n  _setAriaHidden,\r\n  _setAriaInvalid,\r\n  _setAriaLabel,\r\n  _setAriaLabelledBy,\r\n  _setAriaLevel,\r\n  _setAriaPosInSet,\r\n  _setAriaRole,\r\n  _setAriaRowCount,\r\n  _setAriaRowIndex,\r\n  _setAriaSelected,\r\n  _setAriaSetSize,\r\n  _setAriaSort,\r\n  _setColMenuVisible,\r\n  _setDisabled,\r\n  _setDisplayed,\r\n  _setFixedWidth,\r\n  _setUmd,\r\n  _setVisible,\r\n  _shouldUpdateColVisibilityAfterGroup,\r\n  _stopPropagationForAgGrid,\r\n  _toString,\r\n  _toStringOrNull,\r\n  _translate,\r\n  translateForFilter as _translateForFilter,\r\n  _unwrapUserComp,\r\n  _updateColsMap,\r\n  _updateColumnState,\r\n  _updateFilterModel,\r\n  _waitUntil,\r\n  _warn,\r\n  _warnOnce,\r\n  agTestIdFor,\r\n  buttonStyleAlpine,\r\n  buttonStyleBalham,\r\n  buttonStyleBase,\r\n  buttonStyleQuartz,\r\n  checkboxStyleDefault,\r\n  colorSchemeDark,\r\n  colorSchemeDarkBlue,\r\n  colorSchemeDarkWarm,\r\n  colorSchemeLight,\r\n  colorSchemeLightCold,\r\n  colorSchemeLightWarm,\r\n  colorSchemeVariable,\r\n  columnDropStyleBordered,\r\n  columnDropStylePlain,\r\n  convertColumnGroupState,\r\n  convertColumnState,\r\n  createGrid,\r\n  createPart,\r\n  createTheme,\r\n  getGridApi,\r\n  getGridElement,\r\n  iconOverrides,\r\n  iconSetAlpine,\r\n  iconSetMaterial,\r\n  iconSetQuartz,\r\n  iconSetQuartzBold,\r\n  iconSetQuartzLight,\r\n  iconSetQuartzRegular,\r\n  inputStyleBase,\r\n  inputStyleBordered,\r\n  inputStyleUnderlined,\r\n  isColumn,\r\n  isColumnGroup,\r\n  isColumnGroupAutoCol,\r\n  isColumnSelectionCol,\r\n  isCombinedFilterModel,\r\n  isProvidedColumnGroup,\r\n  isRowNumberCol,\r\n  isSpecialCol,\r\n  provideGlobalGridOptions,\r\n  setupAgTestIds,\r\n  styleMaterial,\r\n  tabStyleAlpine,\r\n  tabStyleBase,\r\n  tabStyleMaterial,\r\n  tabStyleQuartz,\r\n  tabStyleRolodex,\r\n  themeAlpine,\r\n  themeBalham,\r\n  themeMaterial,\r\n  themeQuartz,\r\n  wrapAgTestIdFor\r\n};\r\n"],
  "mappings": "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CA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AACA,IAAI,qBAAqB;AAAA,EACvB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AACA,IAAI,uBAAuB;AAAA,EACzB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AACA,IAAI,qBAAqB,CAAC,SAAS,cAAc;AACjD,IAAI,8BAA8B;AAAA,EAChC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AACA,IAAI,wBAAwB;AAAA,EAC1B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AA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",
  "names": ["_GlobalGridOptions", "element", "columns"]
}
